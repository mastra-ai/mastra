// @ts-nocheck
export type TPaths = {
  '/ad_accounts': {
    get: {
      summary: 'List ad accounts';
      description: 'Get a list of the ad_accounts that the "operation user_account" has access to.\n- This includes ad_accounts they own and ad_accounts that are owned by others who have granted them <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>.';
      tags: ['ad_accounts'];
      operationId: 'ad_accounts/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_include_shared_accounts';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'Ad accounts';
                        items: {
                          $ref: '#/components/schemas/AdAccount';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
    post: {
      summary: 'Create ad account';
      description: 'Create a new ad account. Different ad accounts can support different currencies, payment methods, etc.\nAn ad account is needed to create campaigns, ad groups, and ads; other accounts (your employees or partners) can be assigned business access and appropriate roles to access an ad account. <p/>\nYou can set up up to 50 ad accounts per user. (The user must have a business account to create an ad account.) <p/>\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/create-an-advertiser-account">Create an advertiser account</a>.';
      tags: ['ad_accounts'];
      operationId: 'ad_accounts/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdAccountCreateRequest';
            };
          };
        };
        description: 'Ad account to create.';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccount';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
    };
  };
  '/ad_accounts/{ad_account_id}': {
    get: {
      summary: 'Get ad account';
      description: 'Get an ad account';
      operationId: 'ad_accounts/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccount';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['ad_accounts'];
    };
  };
  '/ad_accounts/{ad_account_id}/ad_groups': {
    get: {
      summary: 'List ad groups';
      description: 'List ad groups based on provided campaign IDs or ad group IDs.(campaign_ids or ad_group_ids). <p/>\n<strong>Note:</strong><p/>\nProvide only campaign_id or ad_group_id. Do not provide both.';
      operationId: 'ad_groups/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_campaign_ids';
        },
        {
          $ref: '#/components/parameters/query_ad_group_ids';
        },
        {
          $ref: '#/components/parameters/query_entity_statuses';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_order';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_translate_interests_to_names';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/AdGroupResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account group parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account group parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_groups'];
    };
    post: {
      summary: 'Create ad groups';
      description: "Create multiple new ad groups. All ads in a given ad group will have the same budget, bid, run dates, targeting, and placement (search, browse, other). For more information, <a href=\"https://help.pinterest.com/en/business/article/campaign-structure\" target=\"_blank\"> click here</a>.</p>\n<strong>Note:</strong>\n- 'bid_in_micro_currency' and 'budget_in_micro_currency' should be expressed in microcurrency amounts based on the currency field set in the advertiser's profile.<p/>\n<p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p>\n<p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’s profile.</p>\n <p><strong>Equivalency equations</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>$1 = 1,000,000 microdollars</li>\n  <li>1 microdollar = $0.000001 </li>\n</ul>\n<p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>\n  <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li>\n</ul>\n- Ad groups belong to ad campaigns. Some types of campaigns (e.g. budget optimization) have limits on the number of ad groups they can hold. If you exceed those limits, you will get an error message.\n- Start and end time cannot be set for ad groups that belong to CBO campaigns. Currently, campaigns with the following objective types: TRAFFIC, AWARENESS, WEB_CONVERSIONS, and CATALOG_SALES will default to CBO.";
      operationId: 'ad_groups/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/AdGroupCreateRequest';
              };
              maxItems: 30;
              minItems: 1;
              type: 'array';
            };
          };
        };
        description: 'List of ad groups to create, size limit [1, 30].';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdGroupArrayResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['ad_groups'];
    };
    patch: {
      summary: 'Update ad groups';
      description: 'Update multiple existing ad groups.';
      operationId: 'ad_groups/update';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/AdGroupUpdateRequest';
              };
              maxItems: 30;
              minItems: 1;
              type: 'array';
            };
          };
        };
        description: 'List of ad groups to update, size limit [1, 30].';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdGroupArrayResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['ad_groups'];
    };
  };
  '/ad_accounts/{ad_account_id}/ad_groups/analytics': {
    get: {
      summary: 'Get ad group analytics';
      description: 'Get analytics for the specified ad groups in the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.';
      operationId: 'ad_groups/analytics';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_ad_group_ids_required';
        },
        {
          $ref: '#/components/parameters/query_columns';
        },
        {
          $ref: '#/components/parameters/query_granularity';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdGroupsAnalyticsResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account group analytics parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account group analytics parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_groups'];
    };
  };
  '/ad_accounts/{ad_account_id}/ad_groups/targeting_analytics': {
    get: {
      summary: 'Get targeting analytics for ad groups';
      description: 'Get targeting analytics for one or more ad groups.\nFor the requested ad group(s) and metrics, the response will include the requested metric information\n(e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. "age_bucket") for applicable values (e.g. "45-49"). <p/>\n- The token\'s user_account must either be the Owner of the specified ad account, or have one\nof the necessary roles granted to them via\n<a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.';
      operationId: 'ad_groups_targeting_analytics/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_ad_group_ids_required';
        },
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_targeting_types';
        },
        {
          $ref: '#/components/parameters/query_columns';
        },
        {
          $ref: '#/components/parameters/query_granularity';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time';
        },
        {
          $ref: '#/components/parameters/query_attribution_types';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MetricsResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_groups'];
    };
  };
  '/ad_accounts/{ad_account_id}/ad_groups/audience_sizing': {
    post: {
      summary: 'Get audience sizing';
      description: 'Get potential audience size for an ad group with given targeting criteria. \nPotential audience size estimates the number of people you may be able to reach per month with your campaign. \nIt is based on historical advertising data and the targeting criteria you select.\nIt does not guarantee results or take into account factors such as bid, budget, schedule, seasonality or product experiments.';
      operationId: 'ad_groups/audience_sizing';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdGroupAudienceSizingRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdGroupAudienceSizingResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad group audience sizing parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad group audience sizing parameters.';
              };
            };
          };
        };
        '403': {
          description: 'No access to requested audience list or product group.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: "You don't have access to the requested audience list or product group.";
              };
            };
          };
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['ad_groups'];
    };
  };
  '/ad_accounts/{ad_account_id}/ad_groups/{ad_group_id}': {
    get: {
      summary: 'Get ad group';
      description: 'Get a specific ad given the ad ID. If your pin is rejected, rejected_reasons will\ncontain additional information from the Ad Review process.\nFor more information about our policies and rejection reasons see the <a href="https://www.pinterest.com/_/_/policy/advertising-guidelines/" target="_blank">Pinterest advertising standards</a>.';
      operationId: 'ad_groups/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_ad_group_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdGroupResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['ad_groups'];
    };
  };
  '/ad_accounts/{ad_account_id}/ad_previews': {
    post: {
      summary: 'Create ad preview with pin or image';
      description: 'Create an ad preview given an ad account ID and either an existing organic pin ID or the URL for an image to be used to create the Pin and the ad. <p/>\nIf you are creating a preview from an existing Pin, that Pin must be promotable: that is, it must have a clickthrough link and meet other requirements. (See <a href="https://help.pinterest.com/en/business/article/promoted-pins-overview" target="_blank">Ads Overview</a>.) <p/>\nYou can view the returned preview URL on a webpage or iframe for 7 days, after which the URL expires. Collection ads are not currently supported ad preview.';
      tags: ['ads'];
      operationId: 'ad_previews/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Create ad preview with pin or image.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdPreviewRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'Successful ad preview creation.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdPreviewURLResponse';
              };
            };
          };
        };
        '400': {
          description: 'Invalid Pin parameters response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidPinUrl: {
                  value: {
                    code: 1;
                    message: 'Whoops! It looks like you entered an invalid URL. Try creating a Pin again with a valid URL.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/ad_accounts/{ad_account_id}/ads': {
    get: {
      summary: 'List ads';
      description: 'List ads that meet the filters provided:\n  - Listed campaign ids or ad group ids or ad ids\n  - Listed entity statuses <p/>\nIf no filter is provided, all ads in the ad account are returned. <p/>\n<strong>Note:</strong><p/>\nProvide only campaign_id or ad_group_id or ad_id. Do not provide more than one type. <p/>\nReview status is provided for each ad; if review_status is REJECTED, the rejected_reasons field will contain additional information.\nFor more, see <a href="https://policy.pinterest.com/en/advertising-guidelines">Pinterest advertising standards</a>.';
      operationId: 'ads/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_campaign_ids';
        },
        {
          $ref: '#/components/parameters/query_ad_group_ids';
        },
        {
          $ref: '#/components/parameters/query_ad_ids';
        },
        {
          $ref: '#/components/parameters/query_entity_statuses';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_order';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/AdResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account ads parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account ads parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ads'];
    };
    post: {
      description: 'Create multiple new ads. Request must contain ad_group_id, creative_type, and the source Pin pin_id.';
      operationId: 'ads/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/AdCreateRequest';
              };
              maxItems: 30;
              minItems: 1;
              type: 'array';
            };
          };
        };
        description: 'List of ads to create, size limit [1, 30].';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdArrayResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Create ads';
      tags: ['ads'];
    };
    patch: {
      description: 'Update multiple existing ads';
      operationId: 'ads/update';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/AdUpdateRequest';
              };
              maxItems: 30;
              minItems: 1;
              type: 'array';
            };
          };
        };
        description: 'List of ads to update, size limit [1, 30]';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdArrayResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Update ads';
      tags: ['ads'];
    };
  };
  '/ad_accounts/{ad_account_id}/ads/analytics': {
    get: {
      summary: 'Get ad analytics';
      description: 'Get analytics for the specified ads in the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- The request must contain either ad_ids or both campaign_ids and pin_ids.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.';
      operationId: 'ads/analytics';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_ad_ids';
        },
        {
          $ref: '#/components/parameters/query_columns';
        },
        {
          $ref: '#/components/parameters/query_granularity';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time';
        },
        {
          name: 'pin_ids';
          description: 'List of Pin IDs.';
          in: 'query';
          required: false;
          schema: {
            type: 'array';
            items: {
              type: 'string';
              pattern: '^\\d+$';
            };
            minItems: 1;
            maxItems: 100;
          };
        },
        {
          $ref: '#/components/parameters/query_campaign_ids';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdsAnalyticsResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account ads analytics parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account ads analytics parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ads'];
    };
  };
  '/ad_accounts/{ad_account_id}/ads_credit/discounts': {
    get: {
      summary: 'Get ads credit discounts';
      description: "Returns the list of discounts applied to the account.\n\n<strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>";
      operationId: 'ads_credits_discounts/get';
      security: [
        {
          pinterest_oauth2: ['ads:read', 'billing:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      tags: ['billing'];
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/AdsCreditDiscountsResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/ad_accounts/{ad_account_id}/ads_credit/redeem': {
    post: {
      summary: 'Redeem ad credits';
      description: "Redeem ads credit on behalf of the ad account id and apply it towards billing.\n\n<strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>";
      tags: ['billing'];
      operationId: 'ads_credit/redeem';
      security: [
        {
          pinterest_oauth2: ['ads:write', 'billing:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Redeem ad credits request.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdsCreditRedeemRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'Successfully redeemed ad credits.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdsCreditRedeemResponse';
              };
            };
          };
        };
        '400': {
          description: 'Error thrown when unable to redeem offer code.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                ValidationError: {
                  value: {
                    code: 15;
                    message: 'Unable to redeem offer code. Try again later.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/ad_accounts/{ad_account_id}/ads/targeting_analytics': {
    get: {
      summary: 'Get targeting analytics for ads';
      description: 'Get targeting analytics for one or more ads. For the requested ad(s) and metrics,\nthe response will include the requested metric information (e.g. SPEND_IN_DOLLAR) for the requested target type\n(e.g. "age_bucket") for applicable values (e.g. "45-49"). <p/>\n- The token\'s user_account must either be the Owner of the specified ad account, or have one\nof the necessary roles granted to them via\n<a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.';
      operationId: 'ad_targeting_analytics/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_ad_ids_required';
        },
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_ad_targeting_types';
        },
        {
          $ref: '#/components/parameters/query_columns';
        },
        {
          $ref: '#/components/parameters/query_granularity';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time';
        },
        {
          $ref: '#/components/parameters/query_attribution_types';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MetricsResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['ads'];
    };
  };
  '/ad_accounts/{ad_account_id}/ads/{ad_id}': {
    get: {
      summary: 'Get ad';
      description: 'Get a specific ad given the ad ID. If your pin is rejected, rejected_reasons will\ncontain additional information from the Ad Review process.\nFor more information about our policies and rejection reasons see the <a href="https://www.pinterest.com/_/_/policy/advertising-guidelines/" target="_blank">Pinterest advertising standards</a>.';
      operationId: 'ads/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_ad_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['ads'];
    };
  };
  '/ad_accounts/{ad_account_id}/analytics': {
    get: {
      summary: 'Get ad account analytics';
      description: 'Get analytics for the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time.';
      operationId: 'ad_account/analytics';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_columns';
        },
        {
          $ref: '#/components/parameters/query_granularity';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccountAnalyticsResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account analytics parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account analytics parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_accounts'];
    };
  };
  '/ad_accounts/{ad_account_id}/audience_insights': {
    get: {
      summary: 'Get audience insights';
      description: 'Get Audience Insights for an ad account. The response will return insights for 3 types of audiences: the\nad account\'s engaged audience on Pinterest, the ad account\'s total audience on Pinterest and Pinterest\'s\ntotal audience.<p/>\n<a href="https://help.pinterest.com/en/business/article/audience-insights" target="_blank">Learn more about Audience Insights</a>.';
      operationId: 'audience_insights/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_audience_insight_type';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AudienceInsightsResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['audience_insights'];
    };
  };
  '/ad_accounts/{ad_account_id}/audiences': {
    get: {
      summary: 'List audiences';
      description: 'Get list of audiences for the ad account.';
      operationId: 'audiences/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          description: 'The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID.\nFor received audiences, it is sorted by sharing event time.\nNote that higher-value IDs are associated with more-recently added items.';
          in: 'query';
          name: 'order';
          required: false;
          schema: {
            type: 'string';
            example: 'ASCENDING';
            enum: ['ASCENDING', 'DESCENDING'];
          };
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          description: 'Filter audiences by ownership type.';
          in: 'query';
          name: 'ownership_type';
          required: false;
          example: 'OWNED';
          schema: {
            type: 'string';
            default: 'OWNED';
            enum: ['OWNED', 'RECEIVED'];
          };
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/Audience';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account audience parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account audience parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['audiences'];
    };
    post: {
      description: 'Create an audience you can use in targeting for specific ad groups. Targeting combines customer information with\nthe ways users interact with Pinterest to help you reach specific groups of users; you can include or exclude\nspecific audience_ids when you create an ad group. <p/>\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/audience-targeting" target="_blank">Audience targeting</a>.';
      operationId: 'audiences/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AudienceCreateRequest';
            };
          };
        };
        description: 'List of ads to create, size limit [1, 30]';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Audience';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Create audience';
      tags: ['audiences'];
    };
  };
  '/ad_accounts/{ad_account_id}/audiences/{audience_id}': {
    get: {
      summary: 'Get audience';
      description: 'Get a specific audience given the audience ID.';
      operationId: 'audiences/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_audience_id';
        },
      ];
      responses: {
        '200': {
          description: 'Success';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Audience';
              };
            };
          };
        };
        '404': {
          description: 'Audience not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['audiences'];
    };
    patch: {
      summary: 'Update audience';
      description: 'Update (edit or remove) an existing targeting audience.';
      operationId: 'audiences/update';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_audience_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AudienceUpdateRequest';
            };
          };
        };
        description: 'The audience to be updated.';
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Audience';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['audiences'];
    };
  };
  '/ad_accounts/{ad_account_id}/audiences/custom': {
    post: {
      summary: 'Create custom audience';
      description: 'Create a custom audience and find the audiences you want your ads to reach.';
      operationId: 'audiences/create_custom';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Custom audience to create.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AudienceCreateCustomRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'Success';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Audience';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['audiences'];
    };
  };
  '/ad_accounts/{ad_account_id}/audiences/shared/accounts': {
    get: {
      summary: 'List accounts with access to an audience owned by an ad account';
      description: 'List all ad accounts and/or businesses that have access to a specific audience. The audience must be owned by the requesting ad account.';
      operationId: 'ad_accounts_audiences_shared_accounts/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_audience_id';
        },
        {
          $ref: '#/components/parameters/query_account_type';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          description: 'Success';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/SharedAudienceAccount';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        '400': {
          description: 'Invalid ad account audiences shared accounts parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account audiences shared accounts parameters.';
              };
            };
          };
        };
        '404': {
          description: 'Shared accounts not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['audience_sharing'];
    };
  };
  '/ad_accounts/{ad_account_id}/audiences/ad_accounts/shared': {
    patch: {
      summary: 'Update audience sharing between ad accounts';
      description: "From an ad account, share a specific audience with another ad account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient ad account(s) must be in the same <a href='https://help.pinterest.com/en/business/article/create-and-manage-accounts'>Pinterest Business Hierarchy</a> as the business owner of the ad account.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.";
      operationId: 'update_ad_account_to_ad_account_shared_audience';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/SharedAudience';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SharedAudienceResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account id.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account id';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['audience_sharing'];
    };
  };
  '/ad_accounts/{ad_account_id}/audiences/businesses/shared': {
    patch: {
      summary: 'Update audience sharing from an ad account to businesses';
      description: "From an ad account, share a specific audience with a business account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient business account must be in the same business hierarchy as the business owner of the ad account.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.";
      operationId: 'update_ad_account_to_business_shared_audience';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BusinessSharedAudience';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BusinessSharedAudienceResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account id.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account id';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['audience_sharing'];
    };
  };
  '/ad_accounts/{ad_account_id}/bid_floor': {
    post: {
      description: 'List bid floors for your campaign configuration. Bid floors are given in microcurrency values based on the currency in the bid floor specification. <p/>\n<p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p>\n<p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’ s profile.</p>\n<p><strong>Equivalency equations</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>$1 = 1,000,000 microdollars</li>\n  <li>1 microdollar = $0.000001 </li>\n</ul>\n<p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>\n  <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li>\n </ul>\nFor more on bid floors see <a class="reference external" href="https://help.pinterest.com/en/business/article/set-your-bid"> Set your bid</a>.';
      operationId: 'ad_groups_bid_floor/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BidFloorRequest';
            };
          };
        };
        description: 'Parameters to get bid_floor info';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BidFloor';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Get bid floors';
      tags: ['ad_groups'];
    };
  };
  '/ad_accounts/{ad_account_id}/billing_profiles': {
    get: {
      summary: 'Get billing profiles';
      description: "Get billing profiles in the advertiser account.\n\n<strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>";
      operationId: 'billing_profiles/get';
      security: [
        {
          pinterest_oauth2: ['ads:read', 'billing:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      tags: ['billing'];
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          description: 'Return active billing profiles, if false return all billing profiles.';
          in: 'query';
          name: 'is_active';
          required: true;
          schema: {
            type: 'boolean';
          };
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/BillingProfilesResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/ad_accounts/{ad_account_id}/bulk/download': {
    post: {
      summary: 'Get advertiser entities in bulk';
      description: 'Create an asynchronous report that may include information on campaigns, ad groups, product groups, ads,\nand/or keywords; can filter by campaigns. Though the entities may be active, archived, or paused,\nonly active entities will return data.';
      operationId: 'bulk_download/create';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BulkDownloadRequest';
            };
          };
        };
        description: 'Parameters to get ad entities in bulk';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BulkDownloadResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['bulk'];
    };
  };
  '/ad_accounts/{ad_account_id}/bulk/upsert': {
    post: {
      description: 'Either create or update any combination of campaigns, ad groups, product groups, ads, or keywords.\nNote that this request will be processed asynchronously; the response will include a <code>request_id</code>\nthat can be used to obtain the status of the request.';
      operationId: 'bulk_upsert/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BulkUpsertRequest';
            };
          };
        };
        description: 'Parameters to get create/update ad entities in bulk';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BulkUpsertResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Create/update ad entities in bulk';
      tags: ['bulk'];
    };
  };
  '/ad_accounts/{ad_account_id}/bulk/{bulk_request_id}': {
    get: {
      description: 'Get the status of a bulk request by <code>request_id</code>, along with a download URL that will allow you to download the\nnew or updated entity data (campaigns, ad groups, product groups, ads, or keywords).';
      operationId: 'bulk_request/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_bulk_request_id';
        },
        {
          $ref: '#/components/parameters/include_details';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BulkUpsertStatusResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Download advertiser entities in bulk';
      tags: ['bulk'];
    };
  };
  '/ad_accounts/{ad_account_id}/campaigns': {
    get: {
      summary: 'List campaigns';
      description: 'Get a list of the campaigns in the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.';
      operationId: 'campaigns/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_campaign_ids';
        },
        {
          $ref: '#/components/parameters/query_entity_statuses';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_order';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/CampaignResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account campaign parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account campaign parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['campaigns'];
    };
    post: {
      summary: 'Create campaigns';
      description: "Create multiple new campaigns. Every campaign has its own campaign_id and houses one or more ad groups, which contain one or more ads.\nFor more, see <a href=\"https://help.pinterest.com/en/business/article/set-up-your-campaign/\">Set up your campaign</a>. <p/>\n<strong>Note:</strong>\n- The values for 'lifetime_spend_cap' and 'daily_spend_cap' are microcurrency amounts based on the currency field set in the advertiser's profile. (e.g. USD) <p/>\n<p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p>\n<p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’s profile.</p>\n <p><strong>Equivalency equations</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>$1 = 1,000,000 microdollars</li>\n  <li>1 microdollar = $0.000001 </li>\n</ul>\n<p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>\n  <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li>\n</ul>";
      tags: ['campaigns'];
      operationId: 'campaigns/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Array of campaigns.';
        required: true;
        content: {
          'application/json': {
            schema: {
              type: 'array';
              maxItems: 30;
              minItems: 1;
              items: {
                $ref: '#/components/schemas/CampaignCreateRequest';
              };
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CampaignCreateResponse';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
    patch: {
      summary: 'Update campaigns';
      description: "Update multiple ad campaigns based on campaign_ids. <p/>\n<strong>Note:</strong><p/>\n - <p>The values for 'lifetime_spend_cap' and 'daily_spend_cap' are microcurrency amounts based on the currency field set in the advertiser's profile. (e.g. USD) <p/>\n<p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p>\n<p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’ s profile.</p>\n<p><strong>Equivalency equations</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>$1 = 1,000,000 microdollars</li>\n  <li>1 microdollar = $0.000001 </li>\n</ul>\n<p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>\n  <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li>\n</ul>";
      tags: ['campaigns'];
      operationId: 'campaigns/update';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Array of campaigns.';
        required: true;
        content: {
          'application/json': {
            schema: {
              type: 'array';
              maxItems: 30;
              minItems: 1;
              items: {
                $ref: '#/components/schemas/CampaignUpdateRequest';
              };
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CampaignUpdateResponse';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/ad_accounts/{ad_account_id}/campaigns/analytics': {
    get: {
      summary: 'Get campaign analytics';
      description: 'Get analytics for the specified campaigns in the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.';
      operationId: 'campaigns/analytics';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_campaign_ids_required';
        },
        {
          $ref: '#/components/parameters/query_columns';
        },
        {
          $ref: '#/components/parameters/query_granularity';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CampaignsAnalyticsResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account campaign analytics parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account campaign analytics parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['campaigns'];
    };
  };
  '/ad_accounts/{ad_account_id}/campaigns/targeting_analytics': {
    get: {
      summary: 'Get targeting analytics for campaigns';
      description: 'Get targeting analytics for one or more campaigns.\nFor the requested account and metrics, the response will include the requested metric information\n(e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. "age_bucket") for applicable values (e.g. "45-49"). <p/>\n- The token\'s user_account must either be the Owner of the specified ad account, or have one\nof the necessary roles granted to them via\n<a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.';
      operationId: 'campaign_targeting_analytics/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_campaign_ids_required';
        },
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_campaign_targeting_types';
        },
        {
          $ref: '#/components/parameters/query_columns';
        },
        {
          $ref: '#/components/parameters/query_granularity';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time';
        },
        {
          $ref: '#/components/parameters/query_attribution_types';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MetricsResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['campaigns'];
    };
  };
  '/ad_accounts/{ad_account_id}/campaigns/{campaign_id}': {
    get: {
      summary: 'Get campaign';
      description: 'Get a specific campaign given the campaign ID.';
      operationId: 'campaigns/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_campaign_id';
        },
      ];
      responses: {
        '200': {
          description: 'Success';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CampaignResponse';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['campaigns'];
    };
  };
  '/ad_accounts/{ad_account_id}/conversion_tags': {
    get: {
      summary: 'Get conversion tags';
      description: 'List conversion tags associated with an ad account.';
      operationId: 'conversion_tags/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_filter_deleted';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ConversionTagListResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['conversion_tags'];
      'x-sandbox': 'disabled';
    };
    post: {
      'x-sandbox': 'disabled';
      summary: 'Create conversion tag';
      description: 'Create a conversion tag, also known as <a href="https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag" target="_blank">Pinterest tag</a>, with the option to enable enhanced match.<p/>\nThe Pinterest Tag tracks actions people take on the ad account’ s website after they view the ad account\'s ad on Pinterest. The advertiser needs to customize this tag to track conversions.<p/>\nFor more information, see:<p/>\n<a class="reference external" href="https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag">Set up the Pinterest tag</a><p/>\n<a class="reference external" href="/docs/api-features/pinterest-tag/">Pinterest Tag</a><p/>\n<a class="reference external" href="/docs/api-features/pinterest-tag/#enhanced-match">Enhanced match</a>';
      operationId: 'conversion_tags/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/ConversionTagCreate';
            };
          };
        };
        description: 'Conversion Tag to create';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ConversionTagResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['conversion_tags'];
    };
  };
  '/ad_accounts/{ad_account_id}/conversion_tags/ocpm_eligible': {
    get: {
      summary: 'Get Ocpm eligible conversion tags';
      description: 'Get Ocpm eligible conversion tag events for an ad account.';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      operationId: 'ocpm_eligible_conversion_tags/get';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      'x-sandbox': 'disabled';
      responses: {
        '200': {
          description: 'Success';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ConversionTagsOcpmEligibleResponse';
              };
            };
          };
        };
        default: {
          description: 'Unexpected errors';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['conversion_tags'];
    };
  };
  '/ad_accounts/{ad_account_id}/conversion_tags/page_visit': {
    get: {
      summary: 'Get page visit conversion tags';
      description: 'Get all page visit conversion tag events for an ad account.';
      operationId: 'page_visit_conversion_tags/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_order';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/ConversionEventResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['conversion_tags'];
    };
  };
  '/ad_accounts/{ad_account_id}/conversion_tags/{conversion_tag_id}': {
    get: {
      'x-sandbox': 'disabled';
      summary: 'Get conversion tag';
      description: 'Get information about an existing conversion tag.';
      operationId: 'conversion_tags/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_conversion_tag_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ConversionTagResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['conversion_tags'];
    };
  };
  '/ad_accounts/{ad_account_id}/customer_lists': {
    post: {
      description: '<p>Create a customer list from your records(hashed or plain-text email addresses, or hashed MAIDs or IDFAs).</p>\n<p>A customer list is one of the four types of Pinterest audiences: for more information, see <a href="https://help.pinterest.com/en/business/article/audience-targeting" target="_blank">Audience targeting</a>\nor the <a href="/docs/api-features/targeting-overview/" target="_blank">Audiences</a> section of the ads management guide.<p/>\n <p><b>Please review our <u><a href="https://help.pinterest.com/en/business/article/audience-targeting#section-13341" target="_blank">requirements</a></u> for what type of information is allowed when uploading a customer list.</b></p>\n<p>When you create a customer list, the system scans the list for existing Pinterest accounts;\nthe list must include at least 100 Pinterest accounts. Your original list will be deleted when the matching process\nis complete. The filtered list – containing only the Pinterest accounts that were included in your starting\nlist – is what will be used to create the audience.</p>\n<p>Note that once you have created your customer list, you must convert it into an audience (of the “ CUSTOMER_LIST” type)\nusing the <a href="#operation/create_audience_handler">create audience endpoint</a> before it can be used.</p>';
      operationId: 'customer_lists/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CustomerListRequest';
            };
          };
        };
        description: 'Parameters to get Customer lists info';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CustomerList';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Create customer lists';
      tags: ['customer_lists'];
    };
    get: {
      description: '<p>Get a set of customer lists including id and name based on the filters provided.</p>\n<p>(Customer lists are a type of audience.) For more information, see\n<a href="https://help.pinterest.com/en/business/article/audience-targeting" target="_blank">Audience targeting</a>\n or the <a href="/docs/api-features/targeting-overview/" target="_blank">Audiences</a>\nsection of the ads management guide.</p>';
      operationId: 'customer_lists/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_order';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/CustomerList';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Get customer lists';
      tags: ['customer_lists'];
    };
  };
  '/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}': {
    get: {
      summary: 'Get customer list';
      description: 'Gets a specific customer list given the customer list ID.';
      operationId: 'customer_lists/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_customer_list_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CustomerList';
              };
            };
          };
          description: 'Success';
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['customer_lists'];
    };
    patch: {
      description: '<p>Append or remove records to/from an existing customer list. (A customer list is one of the four types of Pinterest audiences.)</p>\n<p>When you add records to an existing customer list, the system scans the additions for existing Pinterest\naccounts; those are the records that will be added to your “CUSTOMER_LIST” audience. Your original list of records\n to add will be deleted when the matching process is complete.</p>\n<p>For more information, see <a href="https://help.pinterest.com/en/business/article/audience-targeting" target="_blank">Audience targeting</a>\nor the <a href="/docs/api-features/targeting-overview/" target="_blank">Audiences</a>\nsection of the ads management guide.</p>';
      operationId: 'customer_lists/update';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_customer_list_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CustomerListUpdateRequest';
            };
          };
        };
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CustomerList';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Update customer list';
      tags: ['customer_lists'];
    };
  };
  '/ad_accounts/{ad_account_id}/events': {
    post: {
      summary: 'Send conversions';
      description: 'The Pinterest API offers advertisers a way to send Pinterest their conversion information (including web conversions, in-app conversions, or even offline conversions) based on their <code>ad_account_id</code>. The request body should be a JSON object.\n- This endpoint requires an <code>access_token</code> be generated through Ads Manager. Review the <a href="/docs/api-features/conversion-overview/">Conversions Guide</a> for more details. (Note that the authorization header required is <code>Authorization: Bearer &lt;access_token&gt;</code>).\n- The token\'s <code>user_account</code> must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Audience, Campaign. (Note that the token can be used across multiple ad accounts under an user ID.)\n- This endpoint has a rate limit of 5,000 calls per minute per ad account.\n- If the merchant is submitting this information using both Pinterest conversion tags and the Pinterest API, Pinterest will remove duplicate information before reporting. (Note that events that took place offline cannot be deduplicated.)';
      operationId: 'events/create';
      tags: ['conversion_events'];
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
        {
          conversion_token: [];
        },
      ];
      'x-ratelimit-category': 'ads_conversions';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          name: 'test';
          description: 'Include query param ?test=true to mark the request as a test request. The events will not be recorded but the API will still return the same response messages. Use this mode to verify your requests are working and your events are constructed correctly.\nWarning: If you use this query parameter, be certain that it is off (set to false or deleted) before sending a legitimate (non-testing) request.';
          in: 'query';
          required: false;
          schema: {
            type: 'boolean';
          };
        },
      ];
      requestBody: {
        description: 'Conversion events.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/ConversionEvents';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ConversionApiResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'The request was invalid.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 4196;
                message: 'The request was invalid.';
              };
            };
          };
        };
        '401': {
          description: 'Not authorized to send conversion events';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 2;
                    message: 'Authentication failed.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '422': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DetailedError';
              };
            };
          };
          description: 'Not all events were successfully processed.';
        };
        '429': {
          description: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits within a short time window.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 8;
                message: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits within a short time window.';
              };
            };
          };
        };
        '503': {
          description: 'The endpoint has been ramped down and is currently not accepting any traffic.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 4197;
                message: 'The endpoint has been ramped down and is currently not accepting any traffic.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected errors';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/ad_accounts/{ad_account_id}/insights/audiences': {
    get: {
      summary: 'Get audience insights scope and type';
      description: 'Get the scope and type of available audiences, which along with a date, is an audience that has recently had an interaction (referred to here as a type) on pins. Interacted pins can belong to at least the most common **partner** or **Pinterest** scopes. This means that user interactions made on advertiser or partner pins will have the **partner** scope. You can also have user interactions performed in general on Pinterest with the **Pinterest** scope. In that case, you can then use the returned type and scope values together on requests to other endpoints to retrieve insight metrics for a desired audience.';
      operationId: 'audience_insights_scope_and_type/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AudienceDefinitionResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['audience_insights'];
    };
  };
  '/ad_accounts/{ad_account_id}/keywords': {
    get: {
      summary: 'Get keywords';
      description: '<p>Get a list of keywords based on the filters provided. If no filter is provided, it will default to the ad_account_id filter, which means it will only return keywords that specifically have parent_id set to the ad_account_id. Note: Keywords can have ad_account_ids, campaign_ids, and ad_group_ids set as their parent_ids. Keywords created through Ads Manager will have their parent_id set to an ad_group_id, not ad_account_id.</p>\n<p>For more information, see <a target="_blank" href="https://help.pinterest.com/en/business/article/keyword-targeting">Keyword targeting</a>.</p>\n<p><b>Notes:</b></p> <ul style="list-style-type: square;"> <li>Advertisers and campaigns can only be assigned keywords with excluding (\'_NEGATIVE\').</li> <li>All keyword match types are available for ad groups.</li> </ul> <p>For more information on match types, see <a target="_blank" href="/docs/api-features/targeting-overview/">match type enums</a>.</p>\n<p><b>Returns:</b></p> <ul style="list-style-type: square;"> <li><p>A successful call returns an object containing an array of new keyword objects and an empty &quot;errors&quot; object array.</p></li> <li><p>An unsuccessful call returns an empty keywords array, and, instead, inserts the entire object with nulled/negated properties into the &quot;errors&quot; object array:</p> <pre class="last literal-block"> { "keywords": [], "errors": [ { "data": { "archived": null, "match_type": "EXACT", "parent_type": null, "value": "foobar", "parent_id": null, "type": "keyword", "id": null }, "error_messages": [ "Advertisers and Campaigns only accept excluded targeting attributes." ] } } </pre></li> </ul>';
      operationId: 'keywords/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_campaign_id';
        },
        {
          $ref: '#/components/parameters/query_ad_group_id';
        },
        {
          $ref: '#/components/parameters/query_match_types';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/Keyword';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['keywords'];
    };
    post: {
      summary: 'Create keywords';
      description: '<p>Create keywords for following entity types(advertiser, campaign, ad group or ad).</p> <p>For more information, see <a target="_blank" href="https://help.pinterest.com/en/business/article/keyword-targeting">Keyword targeting</a>.</p>\n<p><b>Notes:</b></p> <ul style="list-style-type: square;"> <li>Advertisers and campaigns can only be assigned keywords with excluding (\'_NEGATIVE\').</li> <li>All keyword match types are available for ad groups.</li> </ul> <p>For more information on match types, see <a  target="_blank" href="/docs/api-features/targeting-overview/">match type enums</a>.</p>\n<p><b>Returns:</b></p> <ul style="list-style-type: square;"> <li><p>A successful call returns an object containing an array of new keyword objects and an empty &quot;errors&quot; object array.</p></li> <li><p>An unsuccessful call returns an empty keywords array, and, instead, inserts the entire object with nulled/negated properties into the &quot;errors&quot; object array:</p> <pre class="last literal-block"> { "keywords": [], "errors": [ { "data": { "archived": null, "match_type": "EXACT", "parent_type": null, "value": "foobar", "parent_id": null, "type": "keyword", "id": null }, "error_messages": [ "Advertisers and Campaigns only accept excluded targeting attributes." ] } } </pre></li> </ul>\n<p><b>Rate limit</b>: <a href="/docs/reference/rate-limits/">WRITE</a>.</p>';
      operationId: 'keywords/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/KeywordsRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/KeywordsResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['keywords'];
    };
    patch: {
      summary: 'Update keywords';
      description: "<p>Update one or more keywords' bid and archived fields.</p> <p>Archiving a keyword effectively deletes it - keywords no longer receive metrics and no longer visible within the parent entity's keywords list.</p>";
      operationId: 'keywords/update';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/KeywordUpdateBody';
            };
          };
        };
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/KeywordsResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['keywords'];
    };
  };
  '/ad_accounts/{ad_account_id}/keywords/metrics': {
    get: {
      summary: "Get country's keyword metrics";
      description: 'See keyword metrics for a specified country, aggregated across all of Pinterest.\n(Definitions are available from the "Get delivery metrics definitions"\n<a href="/docs/api/v5/#operation/delivery_metrics/get">API endpoint</a>).';
      operationId: 'country_keywords_metrics/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_country_code';
        },
        {
          $ref: '#/components/parameters/query_keywords';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/KeywordsMetricsArrayResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['keywords'];
    };
  };
  '/ad_accounts/{ad_account_id}/lead_forms': {
    get: {
      summary: 'List lead forms';
      description: '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nList lead forms associated with an ad account ID.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.';
      operationId: 'lead_forms/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_order';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/LeadFormResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account lead forms parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account lead forms parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['lead_forms'];
    };
    post: {
      'x-sandbox': 'disabled';
      description: '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nCreate lead forms. Lead forms are used in lead ads and allow you to control what text appears on the lead form’ s description, questions and confirmation sections.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.';
      summary: 'Create lead forms';
      operationId: 'lead_forms/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/LeadFormCreateRequest';
              };
              maxItems: 30;
              minItems: 1;
              type: 'array';
            };
          };
        };
        description: 'List of lead forms to create, size limit [1, 30].';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadFormArrayResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account lead forms parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account lead forms parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['lead_forms'];
    };
    patch: {
      'x-sandbox': 'disabled';
      description: '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nUpdate lead forms. Lead ads help you reach people who are actively looking for, and interested in, your goods and services. The lead form can be associated with an ad to allow people to fill out the form.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.';
      summary: 'Update lead forms';
      operationId: 'lead_forms/update';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/LeadFormUpdateRequest';
              };
              maxItems: 30;
              minItems: 1;
              type: 'array';
            };
          };
        };
        description: 'List of lead forms to update, size limit [1, 30].';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadFormArrayResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account lead forms parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account lead forms parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['lead_forms'];
    };
  };
  '/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}': {
    get: {
      summary: 'Get lead form by id';
      description: '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nGets a lead form given it\'s ID. It must also be associated with the provided ad account ID.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.';
      operationId: 'lead_form/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_lead_form_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadFormResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account lead forms parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 1;
                message: 'Invalid ad account lead forms parameters.';
              };
            };
          };
        };
        '404': {
          description: 'The lead form ID for the given ad account ID does not exist.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 4842;
                message: 'Lead form is not found.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['lead_forms'];
    };
  };
  '/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}/test': {
    post: {
      summary: 'Create lead form test data';
      description: "Create lead form test data based on the list of answers provided as part of the body.\n- List of answers should follow the questions creation order.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>";
      operationId: 'lead_form_test/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_lead_form_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/LeadFormTestRequest';
            };
          };
        };
        description: 'Subscription to create.';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadFormTestResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 1;
                message: 'Invalid parameters.';
              };
            };
          };
        };
        '404': {
          description: 'Lead not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 4842;
                message: 'Lead not found.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['lead_forms'];
    };
  };
  '/ad_accounts/{ad_account_id}/leads/subscriptions': {
    post: {
      summary: 'Create lead ads subscription';
      description: "Create a lead ads webhook subscription.\nSubscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n- Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records.\n- For data security, egress lead data is encrypted with AES-256-GCM.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>";
      tags: ['lead_ads'];
      operationId: 'ad_accounts_subscriptions/post';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdAccountCreateSubscriptionRequest';
            };
          };
        };
        description: 'Subscription to create.';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccountCreateSubscriptionResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid input parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 1;
                message: 'Advertiser ID must be numeric.';
              };
            };
          };
        };
        '403': {
          description: "Can't access this subscription.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 4182;
                    message: "Can't access this subscription.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
    get: {
      summary: 'Get lead ads subscriptions';
      description: "Get the advertiser's list of lead ads subscriptions.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>";
      operationId: 'ad_accounts_subscriptions/get_list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/AdAccountGetSubscriptionResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '403': {
          description: "Can't access this subscription.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['lead_ads'];
    };
  };
  '/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}': {
    get: {
      summary: 'Get lead ads subscription';
      description: "Get a specific lead ads subscription record.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>";
      operationId: 'ad_accounts_subscriptions/get_by_id';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_subscription_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccountGetSubscriptionResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid input parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 1;
                message: 'Advertiser ID must be numeric.';
              };
            };
          };
        };
        '403': {
          description: "Can't access this subscription.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Subscription not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CommerceIntegrationNotFound: {
                  value: {
                    code: 4517;
                    message: 'Subscription for given ids not found.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['lead_ads'];
    };
    delete: {
      summary: 'Delete lead ads subscription';
      description: "Delete an existing lead ads webhook subscription by ID.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>";
      operationId: 'ad_accounts_subscriptions/del_by_id';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_subscription_id';
        },
      ];
      responses: {
        '204': {
          description: 'Subscription deleted successfully';
        };
        '400': {
          description: 'Invalid input parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 1;
                message: 'Advertiser ID must be numeric.';
              };
            };
          };
        };
        '403': {
          description: 'You are not authorized to delete this subscription.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Subscription not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CommerceIntegrationNotFound: {
                  value: {
                    code: 4517;
                    message: 'Subscription for given ids not found.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['lead_ads'];
    };
  };
  '/ad_accounts/{ad_account_id}/leads_export': {
    post: {
      'x-sandbox': 'disabled';
      description: '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nCreate an export of leads collected from a lead ad. This returns a lead_export_id  token that you can use to download the export when it is ready.\n\nNote: Lead ad data will be available up to 30 days after the lead has been submitted.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.';
      summary: 'Create a request to export leads collected from a lead ad';
      operationId: 'leads_export/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/LeadsExportCreateRequest';
            };
          };
        };
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadsExportCreateResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account parameter.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account parameter.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['leads_export'];
    };
  };
  '/ad_accounts/{ad_account_id}/leads_export/{leads_export_id}': {
    get: {
      'x-sandbox': 'disabled';
      description: '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nGet the export of leads collected from a lead ad. This returns a URL to a list of lead export given a lead_export_id token returned from the create a lead export call. You can use the URL to download the report.\n\nNote: Lead ad data will be available up to 30 days after the lead has been submitted.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.';
      summary: 'Get the lead export from the lead export create call';
      operationId: 'leads_export/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          name: 'leads_export_id';
          in: 'path';
          description: 'lead_export_id token returned from the create a lead export endpoint';
          example: '123755885175';
          required: true;
          schema: {
            type: 'string';
            pattern: '^\\d+$';
          };
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadsExportResponseData';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account parameter.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account parameter.';
              };
            };
          };
        };
        '404': {
          description: 'Invalid leads export id parameter.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 404;
                message: 'Invalid leads export id parameter.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['leads_export'];
    };
  };
  '/ad_accounts/{ad_account_id}/mmm_reports': {
    get: {
      summary: 'Get advertiser Marketing Mix Modeling (MMM) report.';
      description: 'Get an mmm report for an ad account. This returns a URL to an mmm metrics report given a token returned from the\ncreate mmm report endpoint.';
      operationId: 'analytics/get_mmm_report';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_token_required';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/GetMMMReportResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account ads analytics parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account ads analytics parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_accounts'];
    };
    post: {
      summary: 'Create a request for a Marketing Mix Modeling (MMM) report';
      description: "This creates an asynchronous mmm report based on the given request. It returns a token that you can use to download\nthe report when it is ready. NOTE: An additional limit of 5 queries per minute per advertiser applies to this endpoint while it's in beta release.";
      operationId: 'analytics/create_mmm_report';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CreateMMMReportRequest';
            };
          };
        };
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CreateMMMReportResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account ads analytics mmm parameters';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account ads analytics mmm parameters';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_accounts'];
    };
  };
  '/ad_accounts/{ad_account_id}/order_lines': {
    get: {
      summary: 'Get order lines';
      description: 'List existing order lines associated with an ad account.';
      operationId: 'order_lines/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_order';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/OrderLine';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['order_lines'];
    };
  };
  '/ad_accounts/{ad_account_id}/order_lines/{order_line_id}': {
    get: {
      summary: 'Get order line';
      description: 'Get a specific existing order line associated with an ad account.';
      operationId: 'order_lines/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_order_line_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/OrderLine';
              };
            };
          };
          description: 'Success';
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['order_lines'];
    };
  };
  '/ad_accounts/{ad_account_id}/product_group_promotions': {
    post: {
      description: "Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a 'product group promotion.')";
      operationId: 'product_group_promotions/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/ProductGroupPromotionCreateRequest';
            };
          };
        };
        description: 'List of Product Group Promotions to create, size limit [1, 30].';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ProductGroupPromotionResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Create product group promotions';
      tags: ['product_group_promotions'];
    };
    patch: {
      description: 'Update multiple existing Product Group Promotions (by product_group_id)';
      operationId: 'product_group_promotions/update';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/ProductGroupPromotionUpdateRequest';
            };
          };
        };
        description: 'Parameters to update Product group promotions';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ProductGroupPromotionResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Update product group promotions';
      tags: ['product_group_promotions'];
    };
    get: {
      description: 'List existing product group promotions associated with an ad account.\n\nInclude either ad_group_id or product_group_promotion_ids in your request.\n\n<b>Note:</b> ad_group_ids and product_group_promotion_ids are mutually exclusive parameters.\nOnly provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.';
      operationId: 'product_group_promotions/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_product_group_promotion_ids';
        },
        {
          $ref: '#/components/parameters/query_entity_statuses';
        },
        {
          $ref: '#/components/parameters/query_ad_group_id';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_order';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/ProductGroupPromotionResponseItem';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Get product group promotions';
      tags: ['product_group_promotions'];
    };
  };
  '/ad_accounts/{ad_account_id}/product_group_promotions/{product_group_promotion_id}': {
    get: {
      description: 'Get a product group promotion by id';
      operationId: 'product_group_promotions/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_product_group_promotion_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ProductGroupPromotionResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Get a product group promotion by id';
      tags: ['product_group_promotions'];
    };
  };
  '/ad_accounts/{ad_account_id}/product_groups/analytics': {
    get: {
      summary: 'Get product group analytics';
      description: 'Get analytics for the specified product groups in the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.';
      operationId: 'product_groups/analytics';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_product_group_ids_required';
        },
        {
          $ref: '#/components/parameters/query_columns';
        },
        {
          $ref: '#/components/parameters/query_granularity';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ProductGroupAnalyticsResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account ads analytics parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account ads analytics parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['product_group_promotions'];
    };
  };
  '/ad_accounts/{ad_account_id}/reports': {
    get: {
      summary: 'Get the account analytics report created by the async call';
      description: 'This returns a URL to an analytics report given a token returned from the post request report creation call. You can use the URL to download the report. The link is valid for five minutes and the report is valid for one hour.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.';
      operationId: 'analytics/get_report';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_token_required';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdsAnalyticsGetAsyncResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account ads analytics parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account ads analytics parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_accounts'];
    };
    post: {
      summary: 'Create async request for an account analytics report';
      description: 'This returns a token that you can use to download the report when it is ready. Note that this endpoint requires the parameters to be passed as JSON-formatted in the request body. This endpoint does not support URL query parameters.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 914 days before the current date in UTC time and the max time range supported is 186 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.\n- If level is PRODUCT_ITEM, the furthest back you can are allowed to pull data is 92 days before the current date in UTC time and the max time range supported is 31 days.\n- If level is PRODUCT_ITEM, ad_ids and ad_statuses parameters are not allowed. Any columns related to pin promotion and ad is not allowed either.';
      operationId: 'analytics/create_report';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdsAnalyticsCreateAsyncRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdsAnalyticsCreateAsyncResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account ads analytics parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account ads analytics parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_accounts'];
    };
  };
  '/ad_accounts/{ad_account_id}/sandbox': {
    delete: {
      summary: 'Delete ads data for ad account in API Sandbox';
      description: 'Delete an ad account and all the ads data associated with that account.\nA string message is returned indicating the status of the delete operation.\n\nNote: This endpoint is only allowed in the Pinterest API Sandbox (https://api-sandbox.pinterest.com/v5).\nGo to /docs/developer-tools/sandbox/ for more information.';
      operationId: 'sandbox/delete';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      responses: {
        '200': {
          description: 'OK';
          content: {
            'application/json': {
              schema: {
                type: 'string';
                example: 'Delete Success';
              };
            };
          };
        };
        '400': {
          description: 'Invalid ad account id.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account id';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_accounts'];
    };
  };
  '/ad_accounts/{ad_account_id}/ssio/accounts': {
    get: {
      summary: 'Get Salesforce account details including bill-to information.';
      description: 'Get Salesforce account details including bill-to information to be used in insertion orders process for <code>ad_account_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.';
      operationId: 'ssio_accounts/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SSIOAccountResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid request parameter.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid request parameter.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['billing'];
    };
  };
  '/ad_accounts/{ad_account_id}/ssio/insertion_orders': {
    post: {
      summary: 'Create insertion order through SSIO.';
      description: 'Create insertion order through SSIO for <code>ad_account_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.';
      operationId: 'ssio_insertion_order/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/SSIOCreateInsertionOrderRequest';
            };
          };
        };
        description: 'Order line to create.';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SSIOCreateInsertionOrderResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid request.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid request.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['billing'];
    };
    patch: {
      summary: 'Edit insertion order through SSIO.';
      description: 'Edit insertion order through SSIO for <code>ad_account_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.';
      operationId: 'ssio_insertion_order/edit';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/SSIOEditInsertionOrderRequest';
            };
          };
        };
        description: 'Order line to create.';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SSIOEditInsertionOrderResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid request.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid request.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['billing'];
    };
  };
  '/ad_accounts/{ad_account_id}/ssio/insertion_orders/status': {
    get: {
      summary: 'Get insertion order status by ad account id.';
      description: 'Get insertion order status for account id <code>ad_account_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.';
      operationId: 'ssio_insertion_orders_status/get_by_ad_account';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'Insertion orders status by ad acount id';
                        items: {
                          $ref: '#/components/schemas/SSIOInsertionOrderStatus';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid request parameter.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid request parameter.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['billing'];
    };
  };
  '/ad_accounts/{ad_account_id}/ssio/insertion_orders/{pin_order_id}/status': {
    get: {
      summary: 'Get insertion order status by pin order id.';
      description: 'Get insertion order status for pin order id <code>pin_order_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.';
      operationId: 'ssio_insertion_orders_status/get_by_pin_order_id';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_pin_order_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SSIOInsertionOrderStatusResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid request parameter.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid request parameter.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['billing'];
    };
  };
  '/ad_accounts/{ad_account_id}/ssio/order_lines': {
    get: {
      summary: 'Get Salesforce order lines by ad account id.';
      description: 'Get Salesforce order lines for account id <code>ad_account_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.';
      operationId: 'ssio_order_lines/get_by_ad_account';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_pin_order_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'SSIO order lines by ad acount id';
                        items: {
                          $ref: '#/components/schemas/SSIOOrderLine';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid request parameter.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid request parameter.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['billing'];
    };
  };
  '/ad_accounts/{ad_account_id}/targeting_analytics': {
    get: {
      summary: 'Get targeting analytics for an ad account';
      description: 'Get targeting analytics for an ad account.\nFor the requested account and metrics, the response will include the requested metric information\n(e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. "age_bucket") for applicable values (e.g. "45-49"). <p/>\n- The token\'s user_account must either be the Owner of the specified ad account, or have one\nof the necessary roles granted to them via\n<a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.';
      operationId: 'ad_account_targeting_analytics/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_targeting_types';
        },
        {
          $ref: '#/components/parameters/query_columns';
        },
        {
          $ref: '#/components/parameters/query_granularity';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days';
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time';
        },
        {
          $ref: '#/components/parameters/query_attribution_types';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MetricsResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_accounts'];
    };
  };
  '/ad_accounts/{ad_account_id}/targeting_templates': {
    get: {
      summary: 'List targeting templates';
      description: 'Get a list of the targeting templates in the specified <code>ad_account_id</code>';
      operationId: 'targeting_template/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_order';
        },
        {
          in: 'query';
          description: 'Include audience sizing in result or not';
          name: 'include_sizing';
          required: false;
          schema: {
            type: 'boolean';
            default: false;
          };
        },
        {
          description: 'Search keyword for targeting templates';
          in: 'query';
          name: 'search_query';
          example: 'gaming';
          required: false;
          schema: {
            type: 'string';
          };
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/TargetingTemplateResponseData';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account id.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account id';
              };
            };
          };
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['targeting_template'];
    };
    post: {
      summary: 'Create targeting templates';
      description: '<p>Targeting templates allow advertisers to save a set of targeting details including audience lists,\n keywords & interest, demographics, and placements to use more than once during the campaign creation process.</p>\n <p>Templates can be used to build out basic targeting criteria that you plan to use across campaigns and to reuse\n  performance targeting from prior campaigns for new campaigns.</p>';
      operationId: 'targeting_template/create';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        description: 'targeting template creation entity';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/TargetingTemplateCreate';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TargetingTemplateGetResponseData';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account id.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account id';
              };
            };
          };
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['targeting_template'];
    };
    patch: {
      summary: 'Update targeting templates';
      description: '<p>Update the targeting template given advertiser ID and targeting template ID</p>';
      operationId: 'targeting_template/update';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Operation type and targeting template ID';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/TargetingTemplateUpdateRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account id.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account id';
              };
            };
          };
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['targeting_template'];
    };
  };
  '/ad_accounts/{ad_account_id}/templates': {
    get: {
      summary: 'List templates';
      description: 'Gets all Templates associated with an ad account ID.';
      operationId: 'templates/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_order';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/TemplateResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account template parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account template parameters';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_accounts'];
    };
  };
  '/ad_accounts/{ad_account_id}/templates/{template_id}/reports': {
    post: {
      summary: 'Create async request for an analytics report using a template';
      description: 'This takes a template ID and an optional custom timeframe and constructs an asynchronous report based on the\ntemplate. It returns a token that you can use to download the report when it is ready.';
      operationId: 'analytics/create_template_report';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/path_template_id';
        },
        {
          $ref: '#/components/parameters/query_start_date_async';
        },
        {
          $ref: '#/components/parameters/query_end_date_async';
        },
        {
          $ref: '#/components/parameters/query_granularity_async';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdsAnalyticsCreateAsyncResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid ad account ads analytics template parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account analytics template parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['ad_accounts'];
    };
  };
  '/ad_accounts/{ad_account_id}/terms_of_service': {
    get: {
      description: 'Get the text of the terms of service and see whether the advertiser has accepted the terms of service.';
      operationId: 'terms_of_service/get';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_include_html';
        },
        {
          $ref: '#/components/parameters/query_tos_type';
        },
      ];
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TermsOfService';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: 'Get terms of service';
      tags: ['terms_of_service'];
    };
  };
  '/advanced_auction/items/get': {
    post: {
      summary: 'Get item bid options (POST)';
      description: 'Get the bid options for a batch of retail catalog items.\n\nThe catalog must be owned by the "operation user_account". <a href="/docs/api-features/shopping-overview/#Update%20items%20in%20batch" target="_blank">See detailed documentation here.</a> By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: `Owner`, `Admin`.\n\nThis endpoint is not available to all users.';
      operationId: 'advanced_auction_items_get/post';
      'x-ratelimit-category': 'advanced_auction_read';
      'x-sandbox': 'enabled';
      security: [
        {
          pinterest_oauth2: ['ads:read', 'catalogs:read'];
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Request object used to get bid options values for a batch of retail catalog items';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdvancedAuctionItemsGetRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          description: "Response containing the bid option values for the requested retail catalog items. Items that don't exist or do not have bid options set won't be present in the response.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdvancedAuctionItems';
              };
            };
          };
        };
        '400': {
          description: 'Invalid request parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "Invalid request: {'catalog_id': '1234'} list of retail catalog items not provided";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Not authenticated to get item bid options';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthenticatedAccess: {
                  value: {
                    code: 2;
                    message: 'Authentication failed.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to get item bid options';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        '500': {
          description: 'Internal error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['advanced_auction'];
    };
  };
  '/advanced_auction/items/submit': {
    post: {
      summary: 'Operate on item level bid options';
      description: 'This endpoint supports multiple operations on a set of one or more bid options (bid price and bid adjustments for targeting categories) for retail catalog items. These advanced auction settings are applied in campaigns using objective_type `CATALOG_SALES` and ad groups using bid_strategy_type `MAX_BID`.\n\nThe catalog must be owned by the "operation user_account". <a href="/docs/api-features/modify-items-in-batch/" target="_blank">See detailed documentation here.</a> By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: `Owner`, `Admin`.\n\nThis endpoint is not available to all users.';
      operationId: 'advanced_auction_items_submit/post';
      'x-ratelimit-category': 'advanced_auction_write';
      'x-sandbox': 'enabled';
      security: [
        {
          pinterest_oauth2: ['ads:write', 'catalogs:read'];
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Request object used to upsert or delete bid options for a batch of retail catalog items';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdvancedAuctionItemsSubmitRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'Response containing the results of the item bid options operations';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdvancedAuctionProcessedItems';
              };
            };
          };
        };
        '400': {
          description: 'Invalid request parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "Invalid request: {'catalog_id': '1234'} list of item bid option operations not provided";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Not authenticated to post item bid options';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthenticatedAccess: {
                  value: {
                    code: 2;
                    message: 'Authentication failed.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to post item bid options';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        '500': {
          description: 'Internal error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['advanced_auction'];
    };
  };
  '/boards': {
    get: {
      summary: 'List boards';
      description: 'Get a list of the boards owned by the "operation user_account" + group boards where this account is a collaborator\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\nOptional: Specify a privacy type (public, protected, or secret) to indicate which boards to return.\n- If no privacy is specified, all boards that can be returned (based on the scopes of the token and ad_account role if applicable) will be returned.';
      tags: ['boards'];
      operationId: 'boards/list';
      security: [
        {
          pinterest_oauth2: ['boards:read'];
        },
        {
          client_credentials: ['boards:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      'x-codeSamples': [
        {
          lang: 'cURL';
          label: 'curl';
          source: "curl --location --request GET 'https://api.pinterest.com/v5/boards' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n";
        },
        {
          lang: 'cURL';
          label: 'curl (Sandbox)';
          source: "curl --location --request GET 'https://api-sandbox.pinterest.com/v5/boards' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n";
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          name: 'privacy';
          description: 'Privacy setting for a board.';
          in: 'query';
          required: false;
          schema: {
            type: 'string';
            enum: ['ALL', 'PROTECTED', 'PUBLIC', 'SECRET', 'PUBLIC_AND_SECRET'];
          };
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'Boards';
                        items: {
                          $ref: '#/components/schemas/Board';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
    post: {
      summary: 'Create board';
      description: 'Create a board owned by the "operation user_account".\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.';
      tags: ['boards'];
      operationId: 'boards/create';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      'x-codeSamples': [
        {
          lang: 'python';
          label: 'Python SDK';
          source: '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.boards import Board\n\nboard_create=Board.create(\n  name="Summer Recipes",\n  description="My favorite summer recipes",\n  privacy="PUBLIC"\n)\nprint("Board Id: %s, Board name:%s"%(board_create.id, board_create.name))\n';
        },
        {
          lang: 'cURL';
          label: 'curl';
          source: 'curl --location --request POST \'https://api.pinterest.com/v5/boards\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "name": "Summer Recipes",\n      "description": "My favorite summer recipes",\n      "privacy": "PUBLIC"\n}\'\n';
        },
        {
          lang: 'cURL';
          label: 'curl (Sandbox)';
          source: 'curl --location --request POST \'https://api-sandbox.pinterest.com/v5/boards\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "name": "Summer Recipes",\n      "description": "My favorite summer recipes",\n      "privacy": "PUBLIC"\n}\'\n';
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Create a board using a single board json object.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/Board';
            };
          };
        };
      };
      responses: {
        '201': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Board';
              };
            };
          };
        };
        '400': {
          description: 'The board name is invalid or duplicated.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'The board name is invalid or duplicated.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/boards/{board_id}': {
    get: {
      summary: 'Get board';
      description: 'Get a board owned by the operation user_account - or a group board that has been shared with this account.\n- Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.';
      tags: ['boards'];
      operationId: 'boards/get';
      security: [
        {
          pinterest_oauth2: ['boards:read'];
        },
        {
          client_credentials: ['boards:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      'x-codeSamples': [
        {
          lang: 'python';
          label: 'Python SDK';
          source: '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.boards import Board\n# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\nBOARD_ID="<Add your board id here>"\n\nboard_get = Board(board_id=BOARD_ID)\nprint("Board Id: %s, Board name:%s"%(board_get.id, board_get.name))\n';
        },
        {
          lang: 'cURL';
          label: 'curl';
          source: "# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request GET 'https://api.pinterest.com/v5/boards/<insert_your_board_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n";
        },
        {
          lang: 'cURL';
          label: 'curl (Sandbox)';
          source: "# Board information can be fetched from profile page or from create/ist board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request GET 'https://api-sandbox.pinterest.com/v5/boards/<insert_your_board_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n";
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Board';
              };
            };
          };
        };
        '404': {
          description: 'Board not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 404;
                message: 'Board not found.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
    patch: {
      summary: 'Update board';
      description: 'Update a board owned by the "operating user_account".\n- Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.';
      tags: ['boards'];
      operationId: 'boards/update';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      'x-codeSamples': [
        {
          lang: 'python';
          label: 'Python SDK';
          source: '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.boards import Board\n# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\nBOARD_ID="<Add your board id here>"\nNEW_DESCRIPTION="Updated summer recipes!"\nNEW_PRIVACY="SECRET"\n\nboard_update = Board(board_id=BOARD_ID)\nboard_update.update_fields(\n    description=NEW_DESCRIPTION,\n    privacy=NEW_PRIVACY\n)\nprint("Board Id: %s, Board description:%s, Board privacy:%s" %(board_update.id, board_update.description, board_update.privacy))\n';
        },
        {
          lang: 'cURL';
          label: 'curl';
          source: '# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request PATCH \'https://api.pinterest.com/v5/boards/<insert_board_id>\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "name": "New Summer Recipes",\n      "description": "Updated summer recipes!",\n      "privacy": "SECRET"\n}\'\n';
        },
        {
          lang: 'cURL';
          label: 'curl (Sandbox)';
          source: '# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request PATCH \'https://api-sandbox.pinterest.com/v5/boards/<insert_board_id>\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "name": "New Summer Recipes",\n      "description": "Updated summer recipes!",\n      "privacy": "SECRET"\n}\'\n';
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Update a board.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BoardUpdate';
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Board';
              };
            };
          };
        };
        '400': {
          description: 'Invalid board parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid board parameters.';
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to update the board.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to update the board.';
              };
            };
          };
        };
        '429': {
          description: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 8;
                message: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
    delete: {
      summary: 'Delete board';
      description: 'Delete a board owned by the "operation user_account".\n- Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.';
      tags: ['boards'];
      operationId: 'boards/delete';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      'x-codeSamples': [
        {
          lang: 'python';
          label: 'Python SDK';
          source: '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.boards import Board\n# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\nBOARD_ID="<Add your board id here>"\n\nboard_delete=Board.delete(board_id=BOARD_ID)\nprint("Board was deleted? %s" % (board_delete))\n';
        },
        {
          lang: 'cURL';
          label: 'curl';
          source: "# Board information can be fetched from profile page or create/from list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --request DELETE 'https://api.pinterest.com/v5/boards/<insert_board_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n";
        },
        {
          lang: 'cURL';
          label: 'curl (Sandbox)';
          source: "# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --request DELETE 'https://api-sandbox.pinterest.com/v5/boards/<insert_board_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n";
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '204': {
          description: 'Board deleted successfully';
        };
        '403': {
          description: 'Not authorized to delete the board.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to delete the board.';
              };
            };
          };
        };
        '404': {
          description: 'Board not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 404;
                message: 'Board not found.';
              };
            };
          };
        };
        '409': {
          description: 'Could not get exclusive access to delete the board.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 409;
                message: 'Could not get exclusive access to delete the board.';
              };
            };
          };
        };
        '429': {
          description: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 8;
                message: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/boards/{board_id}/pins': {
    get: {
      summary: 'List Pins on board';
      description: 'Get a list of the Pins on a board owned by the "operation user_account" - or on a group board that has been shared with this account.\n- Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.';
      tags: ['boards'];
      operationId: 'boards/list_pins';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'];
        },
        {
          client_credentials: ['boards:read', 'pins:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_creative_types';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_pin_metrics';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'Pins';
                        items: {
                          $ref: '#/components/schemas/Pin';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        '404': {
          description: 'Board not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 404;
                message: 'Board not found.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/boards/{board_id}/sections': {
    get: {
      summary: 'List board sections';
      description: 'Get a list of all board sections from a board owned by the "operation user_account" - or a group board that has been shared with this account.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.';
      tags: ['boards'];
      operationId: 'board_sections/list';
      security: [
        {
          pinterest_oauth2: ['boards:read'];
        },
        {
          client_credentials: ['boards:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'Board sections';
                        items: {
                          $ref: '#/components/schemas/BoardSection';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
    post: {
      summary: 'Create board section';
      description: 'Create a board section on a board owned by the "operation user_account" - or on a group board that has been shared with this account.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.';
      tags: ['boards'];
      operationId: 'board_sections/create';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Create a board section.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BoardSection';
            };
          };
        };
      };
      responses: {
        '201': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BoardSection';
              };
            };
          };
        };
        '400': {
          description: 'Invalid board section parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid board section parameters.';
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to create board sections.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to create board sections.';
              };
            };
          };
        };
        '409': {
          description: 'Could not get exclusive access to the board to create a new section.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 409;
                message: 'Could not get exclusive access to the board to create a new section.';
              };
            };
          };
        };
        '500': {
          description: 'Could not create a new board section.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 500;
                message: 'Could not create a new board section.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/boards/{board_id}/sections/{section_id}': {
    patch: {
      summary: 'Update board section';
      description: 'Update a board section on a board owned by the "operation user_account" - or on a group board that has been shared with this account.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.';
      tags: ['boards'];
      operationId: 'board_sections/update';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id';
        },
        {
          $ref: '#/components/parameters/path_board_section_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Update a board section.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BoardSection';
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BoardSection';
              };
            };
          };
        };
        '400': {
          description: 'Invalid board section parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid board section parameters.';
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to update board section.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to update board section.';
              };
            };
          };
        };
        '409': {
          description: 'Board section conflict.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 409;
                message: 'Board section conflict.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
    delete: {
      summary: 'Delete board section';
      description: 'Delete a board section on a board owned by the "operation user_account" - or on a group board that has been shared with this account.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.';
      tags: ['boards'];
      operationId: 'board_sections/delete';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id';
        },
        {
          $ref: '#/components/parameters/path_board_section_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '204': {
          description: 'Board section deleted successfully';
        };
        '403': {
          description: 'Not authorized to delete board section.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to delete board section.';
              };
            };
          };
        };
        '404': {
          description: 'Board section not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 404;
                message: 'Board section not found.';
              };
            };
          };
        };
        '409': {
          description: 'Board section conflict.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 409;
                message: 'Board section conflict.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/boards/{board_id}/sections/{section_id}/pins': {
    get: {
      summary: 'List Pins on board section';
      description: 'Get a list of the Pins on a board section of a board owned by the "operation user_account" - or on a group board that has been shared with this account.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.';
      tags: ['boards'];
      operationId: 'board_sections/list_pins';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'];
        },
        {
          client_credentials: ['boards:read', 'pins:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id';
        },
        {
          $ref: '#/components/parameters/path_board_section_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'Pins';
                        items: {
                          $ref: '#/components/schemas/Pin';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to access Pins on board section.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to access Pins on board section.';
              };
            };
          };
        };
        '404': {
          description: 'Board or section not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 404;
                message: 'Board or section not found.';
              };
            };
          };
        };
        '409': {
          description: 'Board section conflict.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 409;
                message: 'Board section conflict.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/businesses/employers': {
    get: {
      summary: 'List business employers for user';
      description: "Get all of the viewing user's business employers.";
      operationId: 'get/business_employers';
      security: [
        {
          pinterest_oauth2: ['biz_access:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        description: 'List of employers.';
                        items: {
                          $ref: '#/components/schemas/UserBusinessRoleBinding';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_relationships'];
    };
  };
  '/businesses/invites': {
    patch: {
      summary: 'Accept or decline an invite/request';
      description: 'Accept or decline invites or requests.';
      operationId: 'respond_business_access_invites';
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AuthRespondInvitesBody';
            };
          };
        };
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/RespondToInvitesResponseArray';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_invite'];
    };
  };
  '/businesses/{business_id}/assets/{asset_id}/members': {
    get: {
      summary: 'Get members with access to asset';
      description: 'Get all the members the requesting business has granted access to on the given asset.';
      operationId: 'business_asset_members/get';
      security: [
        {
          pinterest_oauth2: ['biz_access:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
        {
          $ref: '#/components/parameters/path_asset_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        description: 'List of members with permissions to the asset.';
                        items: {
                          $ref: '#/components/schemas/UserSingleAssetBinding';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Sucess';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
  };
  '/businesses/{business_id}/assets/{asset_id}/partners': {
    get: {
      summary: 'Get partners with access to asset';
      description: 'Get all the partners the requesting business has granted access to on the given asset.\nNote: If the asset has been shared with you, an empty array will be returned. This is because an asset shared with\nyou cannot be shared with a different partner.';
      operationId: 'business_asset_partners/get';
      security: [
        {
          pinterest_oauth2: ['biz_access:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
        {
          $ref: '#/components/parameters/path_asset_id';
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        description: 'List of partners with permissions to the asset.';
                        items: {
                          $ref: '#/components/schemas/UserSingleAssetBinding';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Sucess';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
  };
  '/businesses/{business_id}/invites/assets/access': {
    post: {
      summary: 'Update invite/request with an asset permission';
      description: 'Assign asset permissions information to an existing invite/request. Can be used to:\n- Request access to a partner\'s asset. Note: This is only for when no existing partnership exists. If an existing\n  partnership exists, use "Create a request to access an existing partner\'s assets" to request access to your\n  partner\'s assets.\n    - invite_type="PARTNER_REQUEST"\n- Invite a partner to access your business assets. Note: This is only for when there is no existing partnership.\n  If there is an existing partnership, use "Assign/Update partner asset permissions" to assign a partner access to\n  new assets.\n    - invite_type="PARTNER_INVITE"\n- Invite a member to access your business assets. Note: This is only for when there is no existing membership.\n  If there is an existing membership, use "Assign/Update member asset permissions" to assign a member access to new\n  assets.\n    - invite_type="MEMBER_INVITE"\n\nTo learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview.';
      operationId: 'create_asset_invites';
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CreateAssetInvitesRequest';
            };
          };
        };
        description: 'A list of invites/requests together with the asset permissions to be assigned to the invite/request.\n';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UpdateInvitesResultsResponseArray';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_invite'];
    };
  };
  '/businesses/{business_id}/requests/assets/access': {
    post: {
      summary: "Create a request to access an existing partner's assets.";
      description: "Create a request to access an existing partner's assets with the specified permissions. The request will be sent to the partner for approval. The assets that can be requested are ad accounts and profiles.";
      operationId: 'asset_access_requests/create';
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CreateAssetAccessRequestBody';
            };
          };
        };
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CreateAssetAccessRequestResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_invite'];
    };
  };
  '/businesses/{business_id}/members': {
    get: {
      summary: 'Get business members';
      description: "Get all members of the specified business.\nThe return response will include the member's business_role and assets they have access to if assets_summary=TRUE";
      operationId: 'get/business_members';
      security: [
        {
          pinterest_oauth2: ['biz_access:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
        {
          $ref: '#/components/parameters/query_assets_summary';
        },
        {
          name: 'business_roles';
          in: 'query';
          description: 'A list of business roles to filter the members by. Only members whose roles are in the specified roles will be returned.';
          required: false;
          schema: {
            type: 'array';
            items: {
              $ref: '#/components/schemas/MemberBusinessRole';
            };
          };
        },
        {
          name: 'member_ids';
          in: 'query';
          description: 'A list of business members ids separated by comma.';
          example: '00101010101,2222220101';
          required: false;
          schema: {
            type: 'string';
            maxLength: 500;
          };
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        description: 'List of business members.';
                        items: {
                          $ref: '#/components/schemas/UserBusinessRoleBinding';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_relationships'];
    };
    patch: {
      description: "Update a member's business role within the business.";
      summary: "Update member's business role";
      operationId: 'update/business_memberships';
      security: [
        {
          pinterest_oauth2: ['biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              type: 'array';
              minItems: 1;
              items: {
                $ref: '#/components/schemas/UpdateMemberBusinessRoleBody';
              };
            };
          };
        };
        description: 'List of objects with the member id and the business_role.';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UpdateMemberResultsResponseArray';
              };
            };
          };
          description: 'response';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_relationships'];
    };
    delete: {
      description: 'Terminate memberships between the specified members and your business.';
      summary: 'Terminate business memberships';
      operationId: 'delete_business_membership';
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/MembersToDeleteBody';
            };
          };
        };
        description: 'List of members with role to delete.';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeletedMembersResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_relationships'];
    };
  };
  '/businesses/{business_id}/assets': {
    get: {
      summary: 'List business assets';
      description: 'Get all the assets the requesting business has access to. This includes assets the business owns and assets the business has access to through partnerships.';
      operationId: 'business_assets/get';
      security: [
        {
          pinterest_oauth2: ['biz_access:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
        {
          name: 'permissions';
          in: 'query';
          description: 'A list of asset permissions used to filter the assets. Only assets where the requesting business has at least one of the specified permissions will be returned.';
          required: false;
          schema: {
            type: 'array';
            items: {
              $ref: '#/components/schemas/PermissionsWithOwner';
            };
          };
        },
        {
          name: 'child_asset_id';
          in: 'query';
          description: 'A child asset unique identifier. Used to fetch asset groups that contain the asset id as a child.';
          required: false;
          schema: {
            type: 'string';
            pattern: '^\\d+$';
            example: '549764894835';
            minLength: 1;
            maxLength: 20;
          };
        },
        {
          name: 'asset_group_id';
          in: 'query';
          description: 'An asset group unique identifier. Used to fetch assets contained within the specified asset group.';
          required: false;
          schema: {
            type: 'string';
            pattern: '^\\d+$';
            example: '7078106104032';
            minLength: 1;
            maxLength: 20;
          };
        },
        {
          $ref: '#/components/parameters/query_resource_type';
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        description: 'List of assets the requesting business has access to.';
                        items: {
                          $ref: '#/components/schemas/GetBusinessAssetsResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
  };
  '/businesses/{business_id}/members/{member_id}/assets': {
    get: {
      summary: 'Get assets assigned to a member';
      description: 'Get assets on which you assigned asset permissions to the given member. Can be used to:\n- get all assets, regardless of asset type or\n- get assets of one asset type by using the asset_type query.\nThe return response will include the permissions the member has to that asset and the asset type.';
      operationId: 'business_member_assets/get';
      security: [
        {
          pinterest_oauth2: ['biz_access:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
        {
          $ref: '#/components/parameters/path_business_member_user';
        },
        {
          $ref: '#/components/parameters/query_resource_type';
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        description: 'List asset permissions the given member was granted.';
                        items: {
                          $ref: '#/components/schemas/AssetIdPermissions';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
  };
  '/businesses/{business_id}/members/assets/access': {
    patch: {
      description: "Grant multiple members access to assets and/or update multiple member's exisiting permissions to an asset.\nNote: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE.\n";
      summary: 'Assign/Update member asset permissions';
      operationId: 'business_members_asset_access/update';
      security: [
        {
          pinterest_oauth2: ['biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/UpdateMemberAssetAccessBody';
            };
          };
        };
        description: 'List of member asset permissions to create or update.';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UpdateMemberAssetsResultsResponseArray';
              };
            };
          };
          description: 'response';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
    delete: {
      description: "Terminate multiple members' access to an asset.";
      summary: 'Delete member access to asset';
      operationId: 'business_members_asset_access/delete';
      security: [
        {
          pinterest_oauth2: ['biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              type: 'object';
              required: ['accesses'];
              properties: {
                accesses: {
                  type: 'array';
                  minItems: 1;
                  maxItems: 100;
                  description: 'List of members asset access to be deleted';
                  items: {
                    type: 'object';
                    required: ['asset_id', 'member_id'];
                    properties: {
                      asset_id: {
                        type: 'string';
                        description: 'Id of the asset on which to remove member permissions.';
                        example: '549755885175';
                        maxLength: 25;
                        pattern: '^\\d+$';
                      };
                      member_id: {
                        type: 'string';
                        description: 'Unique identifier of the member on which to perform the asset permission removal';
                        example: '140943737684417';
                        maxLength: 25;
                        pattern: '^\\d+$';
                      };
                    };
                  };
                };
              };
            };
          };
        };
        description: 'List member assset permissions to delete.';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeleteMemberAccessResultsResponseArray';
              };
            };
          };
          description: 'response';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
  };
  '/businesses/{business_id}/invites': {
    get: {
      summary: 'Get invites/requests';
      description: 'Get the membership/partnership invites and/or requests for the authorized user.';
      operationId: 'get/invites';
      security: [
        {
          pinterest_oauth2: ['biz_access:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
        {
          $ref: '#/components/parameters/query_is_member';
        },
        {
          $ref: '#/components/parameters/query_invite_status';
        },
        {
          $ref: '#/components/parameters/query_invite_type';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        description: 'List of invite and request data.';
                        items: {
                          $ref: '#/components/schemas/InviteResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_invite'];
    };
    post: {
      summary: 'Create invites or requests';
      description: 'Create batch invites or requests. Can create batch invites or requests as described below.\n- Invite members to join the business. This would required specifying the following:\n    - invite_type="MEMBER_INVITE"\n    - business_role="EMPLOYEE" OR business_role="BIZ_ADMIN" (To learn more about business roles, visit\n    https://help.pinterest.com/en/business/article/profile-permissions-in-business-access.)\n    - members\n- Invite partners to access your business assets. This would require specifying the following:\n    - invite_type="PARTNER_INVITE"\n    - business_role="PARTNER"\n    - partners\n- Request to be a partner so you can access their assets. This would require specifying the following:\n    - invite_type="PARTNER_REQUEST"\n    - business_role="PARTNER"\n    - partners';
      operationId: 'create_membership_or_partnership_invites';
      security: [
        {
          pinterest_oauth2: ['biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_id';
        },
      ];
      requestBody: {
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CreateMembershipOrPartnershipInvitesBody';
            };
          };
        };
        description: 'An object with the properties: invite_type, partners, members, business_role';
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CreateInvitesResultsResponseArray';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_invite'];
    };
    delete: {
      summary: 'Cancel invites/requests';
      description: 'Cancel membership/partnership invites and/or requests.';
      operationId: 'cancel_invites_or_requests';
      security: [
        {
          pinterest_oauth2: ['biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_id';
        },
      ];
      requestBody: {
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CancelInvitesBody';
            };
          };
        };
        description: 'A list with invite ids';
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeleteInvitesResultsResponseArray';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_invite'];
    };
  };
  '/businesses/{business_id}/partners/assets': {
    patch: {
      summary: 'Assign/Update partner asset permissions';
      description: "Grant multiple partners access to assets and/or update multiple partner's exisiting permissions to an asset.\nIf your partner already had permissions on the asset, they will be overriden with the new permissions you assign to them.\nTo learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview\n\nNote: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be\napplicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of\nthe type PROFILE.";
      operationId: 'update_partner_asset_access_handler_impl';
      security: [
        {
          pinterest_oauth2: ['biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        description: 'A list of assets and permissions to assign to your partners.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/UpdatePartnerAssetAccessBody';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UpdatePartnerAssetsResultsResponseArray';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
    delete: {
      summary: 'Delete partner access to asset';
      description: "Terminate multiple partners' access to an asset. If\n- partner_type=INTERNAL: You will terminate a partner's asset access to your business assets.\n- partner_type=EXTERNAL: You will terminate your own access to your partner's business assets.";
      operationId: 'delete_partner_asset_access_handler_impl';
      security: [
        {
          pinterest_oauth2: ['biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/DeletePartnerAssetAccessBody';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeletePartnerAssetsResultsResponseArray';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
  };
  '/businesses/{business_id}/partners/{partner_id}/assets': {
    get: {
      summary: 'Get assets assigned to a partner or assets assigned by a partner';
      description: "Can be used to get the business assets your partner has granted you access to or the business assets you have\ngranted your partner access to. If you specify:\n- partner_type=INTERNAL, you will retrieve your business assets that the partner has access to.\n- partner_type=EXTERNAL, you will retrieve the partner's business assets that the partner has granted you access to.";
      operationId: 'business_partner_asset_access/get';
      security: [
        {
          pinterest_oauth2: ['biz_access:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
        {
          $ref: '#/components/parameters/path_business_partner_user';
        },
        {
          name: 'partner_type';
          in: 'query';
          description: "Specifies whether to fetch internal or external (shared) partners.\nIf partner_type=INTERNAL, the asset being queried is for accesses the partner has to your business assets.<br>\nIf partner_type=EXTERNAL, the asset being queried is for the accesses you have to the partner's business asset.";
          example: 'INTERNAL';
          required: false;
          schema: {
            allOf: [
              {
                $ref: '#/components/schemas/PartnerType';
              },
              {
                default: 'INTERNAL';
              },
            ];
          };
        },
        {
          $ref: '#/components/parameters/query_resource_type';
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        description: 'List assets on which you granted access to your partner or assets on which your partner has granted you access.';
                        items: {
                          $ref: '#/components/schemas/GetPartnerAssetsResponse';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
  };
  '/businesses/{business_id}/partners': {
    get: {
      summary: 'Get business partners';
      description: "Get all partners of the specified business.\n\nIf the assets_summary=TRUE and:\n- partner_type=INTERNAL, the business assets returned are your business assets the partner has access to.\n- partner_type=EXTERNAL, the business assets returned are your partner's business assets the partner has granted you\n  access to.";
      operationId: 'get/business_partners';
      security: [
        {
          pinterest_oauth2: ['biz_access:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
        {
          $ref: '#/components/parameters/query_assets_summary';
        },
        {
          $ref: '#/components/parameters/query_business_partner_type';
        },
        {
          name: 'partner_ids';
          in: 'query';
          description: 'A list of business partner ids separated by commas used to filter the results. Only partners with the specified ids will be returned.';
          example: '00101010101,2222220101';
          required: false;
          schema: {
            type: 'string';
            maxLength: 500;
          };
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        description: 'List of business partners.';
                        items: {
                          $ref: '#/components/schemas/UserBusinessRoleBinding';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_relationships'];
    };
    delete: {
      summary: 'Terminate business partnerships';
      description: 'Terminate partnerships between the specified partners and your business.\nNote: You may only batch terminate partners of the same partner type.';
      operationId: 'delete_business_partners';
      security: [
        {
          pinterest_oauth2: ['biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/DeletePartnersRequest';
            };
          };
        };
        description: 'An object containing a "partner_ids" property composed of a list of partner IDs and a "partners_type" property specifying the type of partners to delete.\n';
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeletePartnersResponse';
              };
            };
          };
          description: 'Success';
        };
        '404': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: "A supplied partner id doesn't exist";
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_relationships'];
    };
  };
  '/businesses/{business_id}/audiences': {
    get: {
      summary: 'List received audiences for a business';
      description: 'Get a list of received audiences for the given business.';
      operationId: 'shared_audiences_for_business/list';
      security: [
        {
          pinterest_oauth2: ['biz_access:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_order';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/Audience';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['audience_sharing'];
    };
  };
  '/businesses/{business_id}/audiences/shared/accounts': {
    get: {
      summary: 'List accounts with access to an audience owned by a business';
      description: 'List all ad accounts and/or businesses that have access to a specific audience.\nThe audience must either be owned by an ad account in the requesting business, or it must have been shared with the requesting business.\nIf the requesting business is not the owner of the audience, only ad accounts owned by the requesting business will be returned.';
      operationId: 'business_account_audiences_shared_accounts/list';
      security: [
        {
          pinterest_oauth2: ['biz_access:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
        {
          $ref: '#/components/parameters/query_audience_id';
        },
        {
          $ref: '#/components/parameters/query_account_type';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          description: 'Success';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/SharedAudienceAccount';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        '400': {
          description: 'Invalid business audiences shared accounts parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid business audiences shared accounts parameters.';
              };
            };
          };
        };
        '404': {
          description: 'Shared accounts not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['audience_sharing'];
    };
  };
  '/businesses/{business_id}/audiences/ad_accounts/shared': {
    patch: {
      summary: 'Update audience sharing from a business to ad accounts';
      description: "From a business, share a specific audience with other ad account(s), or revoke access to a previously shared audience. <ul> <li>If the business is the owner of the audience, it can share with any ad account within the same business hierarchy.</li> <li>If the business is the recipient of the audience, it can share with any of its owned ad accounts.</li> </ul> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.";
      operationId: 'update_business_to_ad_account_shared_audience';
      security: [
        {
          pinterest_oauth2: ['biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/SharedAudience';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SharedAudienceResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid ad account id';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['audience_sharing'];
    };
  };
  '/businesses/{business_id}/audiences/businesses/shared': {
    patch: {
      summary: 'Update audience sharing between businesses';
      description: "From a business, share a specific audience with another business account, or revoke access to a previously shared audience. Only the audience owner can share the audience with other businesses, and the recipient business must be within the same business hierarchy.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.";
      operationId: 'update_business_to_business_shared_audience';
      security: [
        {
          pinterest_oauth2: ['biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BusinessSharedAudience';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BusinessSharedAudienceResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid business id';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['audience_sharing'];
    };
  };
  '/businesses/{business_id}/asset_groups': {
    post: {
      summary: 'Create a new asset group.';
      description: 'Create a new asset group with the specified parameters.\n- An <a href="https://help.pinterest.com/en/business/article/asset-groups">asset group</a> is a custom group of assets based on how you’d like to manage your accounts.';
      operationId: 'asset_group/create';
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CreateAssetGroupBody';
            };
          };
        };
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CreateAssetGroupResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid parameters.';
              };
            };
          };
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
    patch: {
      summary: 'Update asset groups.';
      description: 'Update a batch of asset groups with the specified parameters.';
      operationId: 'asset_group/update';
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/UpdateAssetGroupBody';
            };
          };
        };
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UpdateAssetGroupResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid parameters.';
              };
            };
          };
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
    delete: {
      summary: 'Delete asset groups.';
      description: 'Delete a batch of asset groups.';
      operationId: 'asset_group/delete';
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/DeleteAssetGroupBody';
            };
          };
        };
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeleteAssetGroupResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid parameters.';
              };
            };
          };
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['business_access_assets'];
    };
  };
  '/catalogs': {
    get: {
      'x-ratelimit-category': 'catalogs_read';
      summary: 'List catalogs';
      description: 'Fetch catalogs owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>';
      operationId: 'catalogs/list';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/Catalog';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "Parameter 'page_size' was not numeric (was 3e)\"";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
    post: {
      'x-ratelimit-category': 'catalogs_write';
      summary: 'Create catalog';
      description: 'Create a new catalog owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>\n\nNote: this API only supports the catalog type of HOTEL for now.';
      operationId: 'catalogs/create';
      security: [
        {
          pinterest_oauth2: ['catalogs:write'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Request object used to created a feed.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CatalogsCreateRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Catalog';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: 'Invalid request: ...';
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/feeds': {
    get: {
      'x-ratelimit-category': 'catalogs_read';
      summary: 'List feeds';
      description: 'Fetch feeds owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.';
      operationId: 'feeds/list';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
        {
          client_credentials: ['catalogs:read'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_catalogs_catalog_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/CatalogsFeed';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "Parameter 'page_size' was not numeric (was 3e)\"";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
    post: {
      'x-ratelimit-category': 'catalogs_write';
      summary: 'Create feed';
      description: 'Create a new feed owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nPlease, be aware that "default_country"\nand "default_locale" are not required in the spec for forward compatibility\nbut for now the API will not accept requests without those fields.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.';
      operationId: 'feeds/create';
      security: [
        {
          pinterest_oauth2: ['catalogs:read', 'catalogs:write'];
        },
        {
          client_credentials: ['catalogs:read', 'catalogs:write'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Request object used to created a feed.';
        required: true;
        content: {
          'application/json': {
            schema: {
              oneOf: [
                {
                  $ref: '#/components/schemas/CatalogsVerticalFeedsCreateRequest';
                },
                {
                  $ref: '#/components/schemas/CatalogsFeedsCreateRequest';
                },
              ];
            };
          };
        };
      };
      responses: {
        '201': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsFeed';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid feed parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: 'Invalid request: ...';
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Business account required.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                BusinessAccountRequired: {
                  value: {
                    code: 654;
                    message: 'You must have a business account to operate as merchant.';
                  };
                };
                MerchantDisapproved: {
                  value: {
                    code: 2625;
                    message: 'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: 'User website required.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UserWebsiteRequired: {
                  value: {
                    code: 4168;
                    message: 'User does not have a website.';
                  };
                };
                UserWebsiteNotVerified: {
                  value: {
                    code: 4169;
                    message: 'User does not have a verified website.';
                  };
                };
              };
            };
          };
        };
        '422': {
          description: 'Unique feed name is required.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                FeedDuplicatedName: {
                  value: {
                    code: 4170;
                    message: 'The feed name already exists.';
                  };
                };
              };
            };
          };
        };
        '501': {
          description: 'Not implemented (absent "default_country" or "default_locale").';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                NotImplemented: {
                  value: {
                    code: 4181;
                    message: 'Not implemented at the moment. Please, see documentation';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/feeds/{feed_id}': {
    get: {
      'x-ratelimit-category': 'catalogs_read';
      summary: 'Get feed';
      description: 'Get a single feed owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.';
      operationId: 'feeds/get';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
        {
          client_credentials: ['catalogs:read'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_feed_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsFeed';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid feed parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Data feed not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161;
                    message: 'Sorry! We could not find your catalogs feed.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
    patch: {
      'x-ratelimit-category': 'catalogs_write';
      summary: 'Update feed';
      description: 'Update a feed owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.';
      operationId: 'feeds/update';
      security: [
        {
          pinterest_oauth2: ['catalogs:read', 'catalogs:write'];
        },
        {
          client_credentials: ['catalogs:read', 'catalogs:write'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_feed_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Request object used to update a feed.';
        required: true;
        content: {
          'application/json': {
            schema: {
              oneOf: [
                {
                  $ref: '#/components/schemas/CatalogsVerticalFeedsUpdateRequest';
                },
                {
                  $ref: '#/components/schemas/CatalogsFeedsUpdateRequest';
                },
              ];
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsFeed';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid feed parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: 'Invalid request: ...';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Forbidden. Account not approved for feed mutations yet.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625;
                    message: 'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
                MerchantUnderReview: {
                  value: {
                    code: 2626;
                    message: 'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Data feed not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161;
                    message: 'Sorry! We could not find your catalogs feed.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
    delete: {
      'x-ratelimit-category': 'catalogs_write';
      summary: 'Delete feed';
      description: 'Delete a feed owned by the "operating user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.';
      operationId: 'feeds/delete';
      security: [
        {
          pinterest_oauth2: ['catalogs:read', 'catalogs:write'];
        },
        {
          client_credentials: ['catalogs:read', 'catalogs:write'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_feed_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '204': {
          description: 'Feed deleted successfully.';
        };
        '400': {
          description: 'Invalid feed parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}";
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Forbidden. Account not approved for feed mutations yet.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625;
                    message: 'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
                MerchantUnderReview: {
                  value: {
                    code: 2626;
                    message: 'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Data feed not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161;
                    message: 'Sorry! We could not find your catalogs feed.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Conflict. Can't delete a feed with active promotions.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                FeedHasActivePromotions: {
                  value: {
                    code: 4162;
                    message: "We can't disable a Product Group with active promotions.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/feeds/{feed_id}/ingest': {
    post: {
      'x-ratelimit-category': 'catalogs_write';
      summary: 'Ingest feed items';
      description: 'Ingest items for a given feed owned by the "operation user_account".\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>\n\nNote: This endpoint is restricted to a specific group of users. If you require access, please reach out to your partner manager.';
      operationId: 'feeds/ingest';
      security: [
        {
          pinterest_oauth2: ['catalogs:write'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_feed_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          description: 'The ingestion process was successfully started.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsFeedIngestion';
              };
            };
          };
        };
        '400': {
          description: 'Invalid feed parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}";
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Forbidden. Account not approved for feed mutations yet.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625;
                    message: 'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
                MerchantUnderReview: {
                  value: {
                    code: 2626;
                    message: 'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Data feed not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161;
                    message: 'Sorry! We could not find your catalogs feed.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/feeds/{feed_id}/processing_results': {
    get: {
      'x-ratelimit-category': 'catalogs_read';
      summary: 'List feed processing results';
      description: 'Fetch a feed processing results owned by the "operation user_account". Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>';
      operationId: 'feed_processing_results/list';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_feed_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/CatalogsFeedProcessingResult';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "Parameter 'page_size' was not numeric (was 3e)\"";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Feed not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161;
                    message: 'Sorry! We could not find your catalogs feed.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/processing_results/{processing_result_id}/item_issues': {
    get: {
      'x-ratelimit-category': 'catalogs_read';
      summary: 'List item issues';
      description: "List item validation issues for a given feed processing result owned by the \"operation user_account\". Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters 'item_numbers' and 'item_validation_issue' cannot be used simultaneously until it is implemented in some release in the future.\n- By default, the \"operation user_account\" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nNote: To get a list of all affected items instead of sampled issues, please refer to <a href='/docs/api/v5/#operation/reports/create'>Build catalogs report</a> and <a href='/docs/api/v5/#operation/reports/get'>Get catalogs report</a> endpoints. Moreover, they support multiple types of catalogs.\n\n<a href='/docs/api-features/shopping-overview/'>Learn more</a>";
      operationId: 'items_issues/list';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/path_catalogs_processing_result_id';
        },
        {
          $ref: '#/components/parameters/query_catalogs_item_numbers';
        },
        {
          $ref: '#/components/parameters/query_catalogs_item_validation_issue';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/CatalogsItemValidationIssues';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Processing Result not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                ProcessingResultFound: {
                  value: {
                    code: 4184;
                    message: 'Sorry! We could not find your processing result.';
                  };
                };
              };
            };
          };
        };
        '501': {
          description: 'Not implemented.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                NotImplemented: {
                  value: {
                    code: 4181;
                    message: 'Not implemented at the moment. Please, see documentation.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/items': {
    get: {
      deprecated: true;
      summary: 'Get catalogs items';
      description: 'Get the items of the catalog owned by the "operation user_account". <a href="/docs/api-features/shopping-overview/#Update%20items%20in%20batch" target="_blank">See detailed documentation here.</a>\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nNote: this endpoint is deprecated and will be deleted soon. Please use <a href=\'/docs/api/v5/#operation/items/post\'>Get catalogs items (POST)</a> instead.';
      operationId: 'items/get';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
      ];
      'x-ratelimit-category': 'catalogs_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_catalogs_items_country';
        },
        {
          $ref: '#/components/parameters/query_catalogs_items_language';
        },
        {
          $ref: '#/components/parameters/query_catalogs_items';
        },
        {
          $ref: '#/components/parameters/query_catalogs_items_filters';
        },
      ];
      responses: {
        '200': {
          description: 'Response containing the requested catalogs items';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsItems';
              };
            };
          };
        };
        '400': {
          description: 'Invalid request parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "Parameter 'item_ids' is required.";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Not authorized to access catalogs items';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 2;
                    message: 'Authentication failed.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to access catalogs items';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
    post: {
      summary: 'Get catalogs items (POST)';
      description: 'Get the items of the catalog owned by the "operation user_account". <a href="/docs/api-features/shopping-overview/#Update%20items%20in%20batch" target="_blank">See detailed documentation here.</a>\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.';
      operationId: 'items/post';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
      ];
      'x-ratelimit-category': 'catalogs_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Request object used to get catalogs items';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CatalogsItemsRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'Response containing the requested catalogs items';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsItems';
              };
            };
          };
        };
        '400': {
          description: 'Invalid request';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "Invalid request: {'country': 'US', 'language': 'EN', 'filters': {'catalog_type': 'RETAIL', 'item_ids': 'test0'}} ('test0' is not of type array)";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Not authorized to access catalogs items';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 2;
                    message: 'Authentication failed.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to access catalogs items';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/items/batch': {
    post: {
      summary: 'Operate on item batch';
      description: 'This endpoint supports multiple operations on a set of one or more catalog items owned by the "operation user_account". <a href="/docs/api-features/shopping-overview/#Update%20items%20in%20batch" target="_blank">See detailed documentation here.</a>\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nNote:\n- Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.\n- The item UPSERT operation is restricted to users without a feed data source. If you plan to migrate item ingestion from feeds to the API, please reach out to your partner manager to get assistance.';
      operationId: 'items_batch/post';
      'x-ratelimit-category': 'catalogs_write';
      'x-sandbox': 'enabled';
      security: [
        {
          pinterest_oauth2: ['catalogs:read', 'catalogs:write'];
        },
        {
          client_credentials: ['catalogs:read', 'catalogs:write'];
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Request object used to create catalogs items in a batch';
        required: true;
        content: {
          'application/json': {
            schema: {
              oneOf: [
                {
                  $ref: '#/components/schemas/CatalogsVerticalBatchRequest';
                },
                {
                  $ref: '#/components/schemas/CatalogsItemsBatchRequest';
                },
              ];
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'Response containing the requested catalogs items batch';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsItemsBatch';
              };
            };
          };
        };
        '400': {
          description: 'Invalid request parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "Invalid request: {'country': 'US', 'language': 'EN', 'operation': 'CREATE', 'items': [{'item_id': 'RAY_01_', 'attributes': {'image_link': 'https://www.example.com/', 'title': 'My Product'}}]} ('https://www.example.com/' is not of type array)";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Not authenticated to post catalogs items';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthenticatedAccess: {
                  value: {
                    code: 2;
                    message: 'Authentication failed.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to post catalogs items';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/items/batch/{batch_id}': {
    get: {
      summary: 'Get item batch status';
      description: 'Get a single catalogs items batch owned by the "operating user_account". <a href="/docs/api-features/shopping-overview/#Update%20items%20in%20batch" target="_blank">See detailed documentation here.</a>\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.';
      operationId: 'items_batch/get';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
        {
          client_credentials: ['catalogs:read'];
        },
      ];
      'x-ratelimit-category': 'catalogs_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_items_batch_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          description: 'Response containing the requested catalogs items batch';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsItemsBatch';
              };
            };
          };
        };
        '401': {
          description: 'Not authenticated to access catalogs items batch';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthenticatedAccess: {
                  value: {
                    code: 2;
                    message: 'Authentication failed.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to access catalogs items batch';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        '404': {
          description: 'Catalogs items batch not found';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CannotFindBatch: {
                  value: {
                    code: 4331;
                    message: 'Sorry! We could not find your batch ID.';
                  };
                };
              };
            };
          };
        };
        '405': {
          description: 'Method Not Allowed.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                MethodNotAllowed: {
                  value: {
                    status: 'failure';
                    code: 5;
                    data: '405 Method Not Allowed: The method is not allowed for the requested URL.';
                    message: 'Method not allowed';
                    endpoint_name: null;
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/product_groups/multiple': {
    delete: {
      'x-ratelimit-category': 'catalogs_write';
      summary: 'Delete product groups';
      description: 'Delete product groups owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>';
      operationId: 'catalogs_product_groups/delete_many';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_catalogs_product_group_ids_required';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      security: [
        {
          pinterest_oauth2: ['catalogs:write'];
        },
      ];
      responses: {
        '204': {
          description: 'Catalogs Product Groups deleted successfully.';
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625;
                    message: 'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
                MerchantUnderReview: {
                  value: {
                    code: 2626;
                    message: 'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Catalogs product group not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180;
                    message: 'Sorry! We could not find your catalogs product group.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Conflict. Can't delete this catalogs product group.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsProductGroupHasActivePromotions: {
                  value: {
                    code: 4176;
                    message: "We can't delete a Catalogs Product Group with active promotions.";
                  };
                };
                CannotAlterAutoGeneratedCatalogsProductGroup: {
                  value: {
                    code: 4177;
                    message: 'You cannot alter an auto generated catalogs product group.';
                  };
                };
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182;
                    message: "Can't access this feature without an existing catalog.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
    post: {
      'x-ratelimit-category': 'catalogs_write';
      summary: 'Create product groups';
      description: 'Create product group to use in Catalogs owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.';
      operationId: 'catalogs_product_groups/create_many';
      security: [
        {
          pinterest_oauth2: ['catalogs:write'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Request object used to create one or more catalogs product groups.';
        required: true;
        content: {
          'application/json': {
            schema: {
              type: 'array';
              title: 'multiple product groups';
              items: {
                oneOf: [
                  {
                    $ref: '#/components/schemas/CatalogsProductGroupCreateRequest';
                  },
                  {
                    $ref: '#/components/schemas/CatalogsVerticalProductGroupCreateRequest';
                  },
                ];
              };
            };
            examples: {
              RetailFewFiltersUsingAllOf: {
                summary: 'A simple retail example that applies "all of the following filters".';
                description: 'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a product to be included in the Product Group.\n';
                value: [
                  {
                    name: 'Few Filters using "all_of"';
                    feed_id: '2680059592705';
                    filters: {
                      all_of: [
                        {
                          MIN_PRICE: {
                            values: 999.99;
                            inclusion: true;
                          };
                        },
                        {
                          CURRENCY: {
                            values: 'USD';
                          };
                        },
                        {
                          CUSTOM_LABEL_0: {
                            values: ['Luxury Items'];
                          };
                        },
                      ];
                    };
                  },
                ];
              };
              RetailManyFiltersUsingAnyOf: {
                summary: 'A more complete retail example that applies "any of the following filters".';
                description: 'The use of "any_of" creates a Product Group where any of the individual filters\ncan add products to the Product Group independently.\n';
                value: [
                  {
                    name: 'Many Filters using "any_of"';
                    feed_id: '2680059592705';
                    filters: {
                      all_of: [
                        {
                          MIN_PRICE: {
                            values: 111.55;
                            inclusion: false;
                            negated: false;
                          };
                        },
                        {
                          CURRENCY: {
                            values: 'USD';
                            negated: false;
                          };
                        },
                        {
                          AVAILABILITY: {
                            values: ['IN_STOCK', 'OUT_OF_STOCK', 'PREORDER'];
                            negated: false;
                          };
                        },
                        {
                          BRAND: {
                            values: ['avanti', 'beautyrest'];
                            negated: true;
                          };
                        },
                        {
                          GOOGLE_PRODUCT_CATEGORY_0: {
                            values: [
                              ['furniture', 'tables', 'accent tables', 'end tables'],
                              ['furniture', 'chairs', 'slipper chairs'],
                              ['home & garden'],
                            ];
                            negated: false;
                          };
                        },
                        {
                          CONDITION: {
                            values: ['NEW', 'REFURBISHED', 'USED'];
                            negated: false;
                          };
                        },
                        {
                          CUSTOM_LABEL_0: {
                            values: ['004 - home furn leisure'];
                            negated: false;
                          };
                        },
                        {
                          CUSTOM_LABEL_1: {
                            values: ['clearance', 'original price'];
                            negated: false;
                          };
                        },
                        {
                          CUSTOM_LABEL_2: {
                            values: ['789 - table linens', '794 - living room accents'];
                            negated: false;
                          };
                        },
                        {
                          GENDER: {
                            values: ['FEMALE', 'MALE', 'UNISEX'];
                            negated: false;
                          };
                        },
                        {
                          ITEM_ID: {
                            values: ['does not exists', 'this one neither', 'nope'];
                            negated: true;
                          };
                        },
                        {
                          ITEM_GROUP_ID: {
                            values: ['nonexistant group', 'another one', 'last one'];
                            negated: true;
                          };
                        },
                        {
                          PRODUCT_TYPE_0: {
                            values: [
                              ['accent chairs', 'club chairs'],
                              ['accent chairs', 'slipper chairs'],
                              ['accent tables', 'end tables'],
                              ['air mattresses', 'air mattresses'],
                              ['table linens'],
                            ];
                            negated: false;
                          };
                        },
                      ];
                    };
                  },
                ];
              };
              CatalogBasedRetailFewFiltersUsingAllOf: {
                summary: 'A simple catalog based retail example that applies "all of the following filters".';
                description: 'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a retail to be included in the Product Group.\n';
                value: [
                  {
                    catalog_type: 'RETAIL';
                    name: 'Few Filters using "all_of"';
                    catalog_id: '4866935934774';
                    country: 'US';
                    locale: 'en-US';
                    filters: {
                      all_of: [
                        {
                          ITEM_ID: {
                            values: ['item1', 'item2'];
                          };
                        },
                        {
                          CUSTOM_LABEL_1: {
                            values: ['shoes'];
                            negated: false;
                          };
                        },
                      ];
                    };
                  },
                ];
              };
              HotelFewFiltersUsingAllOf: {
                summary: 'A simple hotel example that applies "all of the following filters".';
                description: 'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a hotel to be included in the Product Group.\n';
                value: [
                  {
                    catalog_type: 'HOTEL';
                    name: 'Few Filters using "all_of"';
                    catalog_id: '4866935934774';
                    filters: {
                      all_of: [
                        {
                          HOTEL_ID: {
                            values: ['hotel1', 'hotel2'];
                          };
                        },
                        {
                          CUSTOM_LABEL_1: {
                            values: ['big_hotels'];
                            negated: false;
                          };
                        },
                      ];
                    };
                  },
                ];
              };
            };
          };
        };
      };
      responses: {
        '201': {
          content: {
            'application/json': {
              schema: {
                type: 'array';
                items: {
                  description: 'ID of a created catalog product group.';
                  example: '443727193917';
                  type: 'string';
                  pattern: '^\\d+$';
                };
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid body.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625;
                    message: 'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
                MerchantUnderReview: {
                  value: {
                    code: 2626;
                    message: 'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Conflict. Can't create this catalogs product group with this value.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsProductGroupFiltersAlreadyExist: {
                  value: {
                    code: 4178;
                    message: 'A catalogs product group with these filters already exists for this feed.';
                  };
                };
                CatalogsProductGroupNameAlreadyExist: {
                  value: {
                    code: 4179;
                    message: 'A catalogs product group with this name already exists for this feed.';
                  };
                };
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182;
                    message: "Can't access this feature without an existing catalog.";
                  };
                };
                CatalogsProductGroupFiltersInvalid: {
                  value: {
                    code: 4183;
                    message: 'Catalog product group filters failed validation, please ensure all filters are set correctly.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/product_groups': {
    get: {
      'x-ratelimit-category': 'catalogs_read';
      summary: 'List product groups';
      description: 'Get a list of product groups for a given Catalogs Feed Id owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>';
      operationId: 'catalogs_product_groups/list';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_catalogs_product_group_ids';
        },
        {
          $ref: '#/components/parameters/query_catalogs_feed_id';
        },
        {
          $ref: '#/components/parameters/query_catalogs_catalog_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/CatalogsVerticalProductGroup';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid feed parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625;
                    message: 'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
                MerchantUnderReview: {
                  value: {
                    code: 2626;
                    message: 'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Data feed not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161;
                    message: 'Sorry! We could not find your catalogs feed.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Conflict. Can't create this catalogs product group with this value.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182;
                    message: "Can't access this feature without an existing catalog.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
    post: {
      'x-ratelimit-category': 'catalogs_write';
      summary: 'Create product group';
      description: 'Create product group to use in Catalogs owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.';
      operationId: 'catalogs_product_groups/create';
      security: [
        {
          pinterest_oauth2: ['catalogs:write'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Request object used to create a single catalogs product groups.';
        required: true;
        content: {
          'application/json': {
            schema: {
              oneOf: [
                {
                  $ref: '#/components/schemas/CatalogsProductGroupCreateRequest';
                },
                {
                  $ref: '#/components/schemas/CatalogsVerticalProductGroupCreateRequest';
                },
              ];
            };
            examples: {
              RetailFewFiltersUsingAllOf: {
                summary: 'A simple retail example that applies "all of the following filters".';
                description: 'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a product to be included in the Product Group.\n';
                value: {
                  name: 'Few Filters using "all_of"';
                  feed_id: '2680059592705';
                  filters: {
                    all_of: [
                      {
                        MIN_PRICE: {
                          values: 999.99;
                          inclusion: true;
                        };
                      },
                      {
                        CURRENCY: {
                          values: 'USD';
                        };
                      },
                      {
                        CUSTOM_LABEL_0: {
                          values: ['Luxury Items'];
                        };
                      },
                    ];
                  };
                };
              };
              RetailManyFiltersUsingAnyOf: {
                summary: 'A more complete retail example that applies "any of the following filters".';
                description: 'The use of "any_of" creates a Product Group where any of the individual filters\ncan add products to the Product Group independently.\n';
                value: {
                  name: 'Many Filters using "any_of"';
                  feed_id: '2680059592705';
                  filters: {
                    all_of: [
                      {
                        MIN_PRICE: {
                          values: 111.55;
                          inclusion: false;
                          negated: false;
                        };
                      },
                      {
                        CURRENCY: {
                          values: 'USD';
                          negated: false;
                        };
                      },
                      {
                        AVAILABILITY: {
                          values: ['IN_STOCK', 'OUT_OF_STOCK', 'PREORDER'];
                          negated: false;
                        };
                      },
                      {
                        BRAND: {
                          values: ['avanti', 'beautyrest'];
                          negated: true;
                        };
                      },
                      {
                        GOOGLE_PRODUCT_CATEGORY_0: {
                          values: [
                            ['furniture', 'tables', 'accent tables', 'end tables'],
                            ['furniture', 'chairs', 'slipper chairs'],
                            ['home & garden'],
                          ];
                          negated: false;
                        };
                      },
                      {
                        CONDITION: {
                          values: ['NEW', 'REFURBISHED', 'USED'];
                          negated: false;
                        };
                      },
                      {
                        CUSTOM_LABEL_0: {
                          values: ['004 - home furn leisure'];
                          negated: false;
                        };
                      },
                      {
                        CUSTOM_LABEL_1: {
                          values: ['clearance', 'original price'];
                          negated: false;
                        };
                      },
                      {
                        CUSTOM_LABEL_2: {
                          values: ['789 - table linens', '794 - living room accents'];
                          negated: false;
                        };
                      },
                      {
                        GENDER: {
                          values: ['FEMALE', 'MALE', 'UNISEX'];
                          negated: false;
                        };
                      },
                      {
                        ITEM_ID: {
                          values: ['does not exists', 'this one neither', 'nope'];
                          negated: true;
                        };
                      },
                      {
                        ITEM_GROUP_ID: {
                          values: ['nonexistant group', 'another one', 'last one'];
                          negated: true;
                        };
                      },
                      {
                        PRODUCT_TYPE_0: {
                          values: [
                            ['accent chairs', 'club chairs'],
                            ['accent chairs', 'slipper chairs'],
                            ['accent tables', 'end tables'],
                            ['air mattresses', 'air mattresses'],
                            ['table linens'],
                          ];
                          negated: false;
                        };
                      },
                    ];
                  };
                };
              };
              HotelFewFiltersUsingAllOf: {
                summary: 'A simple hotel example that applies "all of the following filters".';
                description: 'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a hotel to be included in the Product Group.\n';
                value: {
                  catalog_type: 'HOTEL';
                  name: 'Few Filters using "all_of"';
                  catalog_id: '4866935934774';
                  filters: {
                    all_of: [
                      {
                        HOTEL_ID: {
                          values: ['hotel1', 'hotel2'];
                        };
                      },
                      {
                        CUSTOM_LABEL_1: {
                          values: ['big_hotels'];
                          negated: false;
                        };
                      },
                    ];
                  };
                };
              };
              CatalogBasedRetailFewFiltersUsingAllOf: {
                summary: 'A simple catalog based retail example that applies "all of the following filters".';
                description: 'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a retail to be included in the Product Group.\n';
                value: {
                  catalog_type: 'RETAIL';
                  name: 'Few Filters using "all_of"';
                  catalog_id: '4866935934774';
                  country: 'US';
                  locale: 'en-US';
                  filters: {
                    all_of: [
                      {
                        ITEM_ID: {
                          values: ['item1', 'item2'];
                        };
                      },
                      {
                        CUSTOM_LABEL_1: {
                          values: ['shoes'];
                          negated: false;
                        };
                      },
                    ];
                  };
                };
              };
            };
          };
        };
      };
      responses: {
        '201': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsVerticalProductGroup';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid body.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625;
                    message: 'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
                MerchantUnderReview: {
                  value: {
                    code: 2626;
                    message: 'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Conflict. Can't create this catalogs product group with this value.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsProductGroupFiltersAlreadyExist: {
                  value: {
                    code: 4178;
                    message: 'A catalogs product group with these filters already exists for this feed.';
                  };
                };
                CatalogsProductGroupNameAlreadyExist: {
                  value: {
                    code: 4179;
                    message: 'A catalogs product group with this name already exists for this feed.';
                  };
                };
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182;
                    message: "Can't access this feature without an existing catalog.";
                  };
                };
                CatalogsProductGroupFiltersInvalid: {
                  value: {
                    code: 4183;
                    message: 'Catalog product group filters failed validation, please ensure all filters are set correctly.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/product_groups/{product_group_id}': {
    get: {
      'x-ratelimit-category': 'catalogs_read';
      summary: 'Get product group';
      description: 'Get a singe product group for a given Catalogs Product Group Id owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>';
      operationId: 'catalogs_product_groups/get';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_product_group_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsVerticalProductGroup';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid catalogs product group id parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "'product_group_id' value '11851494501_' must match the pattern: ^\\d+$\"}";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625;
                    message: 'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
                MerchantUnderReview: {
                  value: {
                    code: 2626;
                    message: 'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Catalogs product group not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180;
                    message: 'Sorry! We could not find your catalogs product group.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Conflict. Can't get a catalogs product group without an existing catalog.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182;
                    message: "Can't acccess this feature without an existing catalog.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
    delete: {
      'x-ratelimit-category': 'catalogs_write';
      summary: 'Delete product group';
      description: 'Delete a product group owned by the "operation user_account" from being in use in Catalogs.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>';
      operationId: 'catalogs_product_groups/delete';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_product_group_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      security: [
        {
          pinterest_oauth2: ['catalogs:write'];
        },
      ];
      responses: {
        '204': {
          description: 'Catalogs Product Group deleted successfully.';
        };
        '400': {
          description: 'Invalid catalogs product group id parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "'product_group_id' value '11851494501_' must match the pattern: ^\\d+$\"}";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625;
                    message: 'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
                MerchantUnderReview: {
                  value: {
                    code: 2626;
                    message: 'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Catalogs product group not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180;
                    message: 'Sorry! We could not find your catalogs product group.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Conflict. Can't delete this catalogs product group.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsProductGroupHasActivePromotions: {
                  value: {
                    code: 4176;
                    message: "We can't delete a Catalogs Product Group with active promotions.";
                  };
                };
                CannotAlterAutoGeneratedCatalogsProductGroup: {
                  value: {
                    code: 4177;
                    message: 'You cannot alter an auto generated catalogs product group.';
                  };
                };
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182;
                    message: "Can't access this feature without an existing catalog.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
    patch: {
      'x-ratelimit-category': 'catalogs_write';
      summary: 'Update single product group';
      description: 'Update product group owned by the "operation user_account" to use in Catalogs.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.';
      operationId: 'catalogs_product_groups/update';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_product_group_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      security: [
        {
          pinterest_oauth2: ['catalogs:write'];
        },
      ];
      requestBody: {
        description: 'Request object used to Update a catalogs product group.';
        required: true;
        content: {
          'application/json': {
            schema: {
              oneOf: [
                {
                  $ref: '#/components/schemas/CatalogsProductGroupUpdateRequest';
                },
                {
                  $ref: '#/components/schemas/CatalogsVerticalProductGroupUpdateRequest';
                },
              ];
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsVerticalProductGroup';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "'product_group_id' value '11851494501_' must match the pattern: ^\\d+$\"}";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625;
                    message: 'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
                MerchantUnderReview: {
                  value: {
                    code: 2626;
                    message: 'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Catalogs product group not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180;
                    message: 'Sorry! We could not find your catalogs product group.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Conflict. Can't update this catalogs product group to this value.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CannotAlterAutoGeneratedCatalogsProductGroup: {
                  value: {
                    code: 4177;
                    message: 'You cannot alter an auto generated catalogs product group.';
                  };
                };
                CatalogsProductGroupFiltersAlreadyExist: {
                  value: {
                    code: 4178;
                    message: 'A catalogs product group with these filters already exists for this feed.';
                  };
                };
                CatalogsProductGroupNameAlreadyExist: {
                  value: {
                    code: 4179;
                    message: 'A catalogs product group with this name already exists for this feed.';
                  };
                };
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182;
                    message: "Can't access this feature without an existing catalog.";
                  };
                };
                CatalogsProductGroupFiltersInvalid: {
                  value: {
                    code: 4183;
                    message: 'Catalog product group filters failed validation, please ensure all filters are set correctly.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/product_groups/{product_group_id}/product_counts': {
    get: {
      'x-ratelimit-category': 'catalogs_read';
      summary: 'Get product counts';
      description: 'Get a product counts for a given Catalogs Product Group owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>';
      operationId: 'catalogs_product_groups/product_counts_get';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_product_group_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsProductGroupProductCountsVertical';
              };
            };
          };
          description: 'Success';
        };
        '404': {
          description: 'Product Group Not Found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180;
                    message: 'Sorry! We could not find your catalogs product group.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Can't access this feature without an existing catalog.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182;
                    message: "Can't access this feature without an existing catalog.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/product_groups/{product_group_id}/products': {
    get: {
      'x-ratelimit-category': 'catalogs_read';
      summary: 'List products by product group';
      description: 'Get a list of product pins for a given Catalogs Product Group Id owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>';
      operationId: 'catalogs_product_group_pins/list';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'catalogs:read', 'pins:read'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/path_catalogs_product_group_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_pin_metrics';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'Pins';
                        items: {
                          $ref: '#/components/schemas/CatalogsProduct';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1;
                    message: "'product_group_id' value '11851494501_' must match the pattern: ^\\d+$\"}";
                  };
                };
              };
            };
          };
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Catalogs product group not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180;
                    message: 'Sorry! We could not find your catalogs product group.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/products/get_by_product_group_filters': {
    post: {
      'x-ratelimit-category': 'catalogs_read';
      summary: 'List products by filter';
      description: 'List products Pins owned by the "operation user_account" that meet the criteria specified in the Catalogs Product Group Filter given in the request.\n- This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nNote: This endpoint only supports RETAIL catalog at the moment.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>';
      operationId: 'products_by_product_group_filter/list';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'catalogs:read', 'pins:read'];
        },
      ];
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_pin_metrics';
        },
      ];
      requestBody: {
        description: 'Object holding a group of filters for a catalog product group';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CatalogsListProductsByFilterRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'Pins';
                        items: {
                          $ref: '#/components/schemas/CatalogsProduct';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '401': {
          description: 'Unauthorized access.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29;
                    message: 'You are not permitted to access that resource.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Conflict. Can't get products.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182;
                    message: "Can't acccess this feature without an existing catalog.";
                  };
                };
                CatalogsProductGroupFiltersInvalid: {
                  value: {
                    code: 4183;
                    message: 'Catalog product group filters failed validation, please ensure all filters are set correctly.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/reports': {
    post: {
      summary: 'Build catalogs report';
      description: 'Async request to create a report of the catalog owned by the "operation user_account". This endpoint generates a report upon receiving the first approved request of the day. Any following requests with identical parameters will yield the same report even if data has changed.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.';
      operationId: 'reports/create';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
      ];
      'x-ratelimit-category': 'catalogs_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Request object to asynchronously create a report.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CatalogsReportParameters';
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'Response containing the report token';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsCreateReportResponse';
              };
            };
          };
        };
        '404': {
          description: 'Entity (e.g., catalog, feed or processing_result) not found';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogNotFound: {
                  value: {
                    code: 678;
                    message: "Sorry! We couldn't find that catalog. Please ensure you have access to a valid catalog id.";
                  };
                };
                FeedNotFound: {
                  value: {
                    code: 4161;
                    message: 'Sorry! We could not find your catalogs feed.';
                  };
                };
                CatalogsProcessingResultNotFound: {
                  value: {
                    code: 4184;
                    message: 'Sorry! We could not find your processing result';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Can't access this feature without an existing catalog.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182;
                    message: "Can't access this feature without an existing catalog.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
    get: {
      summary: 'Get catalogs report';
      description: 'This returns a URL to a report given a token returned from <a href=\'/docs/api/v5/#operation/reports/create\'>Build catalogs report</a>. You can use the URL to download the report.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.';
      operationId: 'reports/get';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
      ];
      'x-ratelimit-category': 'catalogs_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_catalogs_report_token';
        },
      ];
      responses: {
        '200': {
          description: 'Response that contains a link to download the report';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsReport';
              };
            };
          };
        };
        '400': {
          description: 'The token you provided is not valid or has expired.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidReportingToken: {
                  value: {
                    code: 1104;
                    message: 'The token you provided is not valid or has expired.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Can't access this feature without an existing catalog.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182;
                    message: "Can't access this feature without an existing catalog.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/catalogs/reports/stats': {
    get: {
      summary: 'List report stats';
      description: 'List aggregated numbers of issues for a catalog owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.';
      operationId: 'reports/stats';
      security: [
        {
          pinterest_oauth2: ['catalogs:read'];
        },
      ];
      'x-ratelimit-category': 'catalogs_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_catalogs_report_stats_parameters';
        },
      ];
      responses: {
        '200': {
          description: 'Response containing the diagnostics aggregated counters';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/CatalogsReportStats';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        '401': {
          description: 'Not authorized to access catalogs';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 2;
                    message: 'Authentication failed.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['catalogs'];
    };
  };
  '/integrations/commerce': {
    post: {
      summary: 'Create commerce integration';
      description: "Create commerce integration metadata to link an external business ID with a Pinterest merchant & ad account.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.";
      operationId: 'integrations_commerce/post';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/IntegrationRequest';
            };
          };
        };
        description: 'Parameters to get create/update the Integration Metadata';
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/IntegrationMetadata';
              };
            };
          };
          description: 'Success';
        };
        '404': {
          description: 'Integration not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                IntegrationNotFound: {
                  value: {
                    code: 4180;
                    message: 'Sorry! We could not find your integration.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Can't access this integration metadata.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 4182;
                    message: "Can't access this integration metadata.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['integrations'];
    };
  };
  '/integrations/commerce/{external_business_id}': {
    get: {
      summary: 'Get commerce integration';
      description: "Get commerce integration metadata associated with the given external business ID.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.";
      operationId: 'integrations_commerce/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_external_business_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/IntegrationMetadata';
              };
            };
          };
          description: 'Success';
        };
        '404': {
          description: 'Integration not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                IntegrationNotFound: {
                  value: {
                    code: 4180;
                    message: 'Sorry! We could not find your integration.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Can't access this integration metadata.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 4182;
                    message: "Can't access this integration metadata.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['integrations'];
    };
    patch: {
      summary: 'Update commerce integration';
      description: "Update commerce integration metadata for the given external business ID.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.";
      operationId: 'integrations_commerce/patch';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_external_business_id';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/IntegrationRequestPatch';
            };
          };
        };
        description: 'Parameters to get create/update the Integration Metadata';
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/IntegrationMetadata';
              };
            };
          };
          description: 'Success';
        };
        '404': {
          description: 'Integration not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                IntegrationNotFound: {
                  value: {
                    code: 4180;
                    message: 'Sorry! We could not find your integration.';
                  };
                };
              };
            };
          };
        };
        '409': {
          description: "Can't access this integration metadata.";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 4182;
                    message: "Can't access this integration metadata.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['integrations'];
    };
    delete: {
      summary: 'Delete commerce integration';
      description: "Delete commerce integration metadata for the given external business ID.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.";
      operationId: 'integrations_commerce/del';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-ratelimit-category': 'ads_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_external_business_id';
        },
      ];
      responses: {
        '204': {
          description: 'Commerce Integration deleted successfully';
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['integrations'];
    };
  };
  '/integrations/logs': {
    post: {
      summary: 'Receives batched logs from integration applications.';
      description: "This endpoint receives batched logs from integration applications on partner platforms.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.";
      tags: ['integrations'];
      operationId: 'integrations_logs/post';
      'x-ratelimit-category': 'ads_write';
      security: [
        {
          pinterest_oauth2: ['ads:write'];
        },
      ];
      'x-sandbox': 'enabled';
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/IntegrationLogsRequest';
            };
          };
        };
        description: 'Ingest log information from external integration application.';
        required: true;
      };
      responses: {
        '200': {
          description: 'Success.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/IntegrationLogsSuccessResponse';
              };
            };
          };
        };
        '400': {
          description: 'Bad request.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DetailedError';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/integrations': {
    get: {
      summary: 'Get integration metadata list';
      description: "Get integration metadata list.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.";
      operationId: 'integrations/get_list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/IntegrationRecord';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['integrations'];
    };
  };
  '/integrations/{id}': {
    get: {
      summary: 'Get integration metadata';
      description: "Get integration metadata by ID.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.";
      operationId: 'integrations/get_by_id';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          name: 'id';
          description: 'Integration ID.';
          in: 'path';
          required: true;
          schema: {
            type: 'string';
          };
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/IntegrationRecord';
              };
            };
          };
          description: 'Success';
        };
        '404': {
          description: 'Integration not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                IntegrationNotFound: {
                  value: {
                    code: 4517;
                    message: 'Sorry! We could not find your integration.';
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['integrations'];
    };
  };
  '/media': {
    get: {
      summary: 'List media uploads';
      description: "List media uploads filtered by given parameters.\n\n<strong><a href='/docs/api-features/creating-boards-and-pins/#creating-video-pins'>Learn more</a></strong> about video Pin creation.";
      tags: ['media'];
      operationId: 'media/list';
      security: [
        {
          pinterest_oauth2: ['pins:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'Media';
                        items: {
                          $ref: '#/components/schemas/MediaUploadDetails';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
    post: {
      summary: 'Register media upload';
      description: "Register your intent to upload media\n\nThe response includes all of the information needed to upload the media\nto Pinterest.\n\nTo upload the media, make an HTTP POST request (using <tt>curl</tt>, for\nexample) to <tt>upload_url</tt> using the <tt>Content-Type</tt> header\nvalue. Send the media file's contents as the request's <tt>file</tt>\nparameter and also include all of the parameters from\n<tt>upload_parameters</tt>.\n\n<strong><a href='/docs/api-features/creating-boards-and-pins/#creating-video-pins'>Learn more</a></strong> about video Pin creation.";
      tags: ['media'];
      operationId: 'media/create';
      security: [
        {
          pinterest_oauth2: ['pins:read', 'pins:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      requestBody: {
        description: 'Create a media upload request';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/MediaUploadRequest';
            };
          };
        };
      };
      responses: {
        '201': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MediaUpload';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/media/{media_id}': {
    get: {
      summary: 'Get media upload details';
      description: "Get details for a registered media upload, including its current status.\n\n<strong><a href='/docs/api-features/creating-boards-and-pins/#creating-video-pins'>Learn more</a></strong> about video Pin creation.";
      tags: ['media'];
      operationId: 'media/get';
      security: [
        {
          pinterest_oauth2: ['pins:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_media_id';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MediaUploadDetails';
              };
            };
          };
        };
        '404': {
          description: 'Media upload not found';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 404;
                message: 'Media upload not found';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/oauth/token': {
    post: {
      summary: 'Generate OAuth access token';
      description: "Generate an OAuth access token by using an authorization code or a refresh token.\n\nIMPORTANT: You need to start the OAuth flow via www.pinterest.com/oauth before calling this endpoint (or have an existing refresh token).\n\nSee <a href='/docs/getting-started/authentication-and-scopes/'>Authentication</a> for more.\n\n<strong>Parameter <i>refresh_on</i> and its corresponding response type <i>everlasting_refresh</i> are now available to all apps! Later this year, continuous refresh will become the default behavior (ie you will no longer need to send this parameter). <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>\n\n<strong>Grant type <i>client_credentials</i> and its corresponding response type are not fully available. You will likely get a default error if you attempt to use this grant_type.</strong>";
      tags: ['oauth'];
      operationId: 'oauth/token';
      security: [
        {
          basic: [];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      requestBody: {
        description: 'Generate an OAuth access token.';
        required: true;
        content: {
          'application/x-www-form-urlencoded': {
            schema: {
              $ref: '#/components/schemas/OauthAccessTokenRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/OauthAccessTokenResponse';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/pins': {
    get: {
      summary: 'List Pins';
      description: 'Get a list of the Pins owned by the "operation user_account".\n  - By default, the "operation user_account" is the token user_account.\n  - All Pins owned by the "operation user_account" are included, regardless of who owns the board they are on.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n\nDisclaimer: there are known performance issues when filtering by field <code>creative_type</code> and including protected pins. If your\nrequest is timing out in this scenario we encourage you to use <a href=\'/docs/api/v5/#operation/boards/list_pins\'>GET List Pins on Board</a>.';
      operationId: 'pins/list';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'];
        },
        {
          client_credentials: ['boards:read', 'pins:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      'x-codeSamples': [
        {
          lang: 'cURL';
          label: 'curl';
          source: "curl --location --request GET 'https://api.pinterest.com/v5/pins' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n";
        },
        {
          lang: 'cURL';
          label: 'curl (Sandbox)';
          source: "curl --location --request GET 'https://api-sandbox.pinterest.com/v5/pins' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n";
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_pin_filter';
        },
        {
          $ref: '#/components/parameters/query_include_protected_pins';
        },
        {
          $ref: '#/components/parameters/query_pin_type';
        },
        {
          $ref: '#/components/parameters/query_creative_types';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_pin_metrics';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/Pin';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid pin filter value';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid pin filter value';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['pins'];
    };
    post: {
      summary: 'Create Pin';
      description: "Create a Pin on a board or board section owned by the \"operation user_account\".\n\nNote: If the current \"operation user_account\" (defined by the access token) has access to another user's Ad Accounts via Pinterest Business Access, you can modify your request to make use of the current operation_user_account's permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id=12345&...).\n\n- This function is intended solely for publishing new content created by the user. If you are interested in saving content created by others to your Pinterest boards, sometimes called 'curated content', please use our <a href='/docs/web-features/add-ons-overview/'>Save button</a> instead. For more tips on creating fresh content for Pinterest, review our <a href='/docs/api-features/content-overview/'>Content App Solutions Guide</a>.\n\n<strong><a href='/docs/api-features/creating-boards-and-pins/#creating-video-pins'>Learn more</a></strong> about video Pin creation.";
      tags: ['pins'];
      operationId: 'pins/create';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write', 'pins:read', 'pins:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      'x-codeSamples': [
        {
          lang: 'python';
          label: 'Python SDK';
          source: '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.pins import Pin\n# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\nBOARD_ID="<Add your board id here>"\n\npin_create = Pin.create(\n  board_id=BOARD_ID,\n  title="My Pin",\n  description="Pin Description",\n  media_source={\n      "source_type": "image_url",\n      "content_type": "image/jpeg",\n      "data": "string",\n      \'url\':\'https://i.pinimg.com/564x/28/75/e9/2875e94f8055227e72d514b837adb271.jpg\'\n      }\n  )\nprint("Pin Id: %s, Pin Title:%s" %(pin_create.id, pin_create.title))\n';
        },
        {
          lang: 'cURL';
          label: 'curl';
          source: '# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request POST \'https://api.pinterest.com/v5/pins\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "title": "My Pin",\n      "description": "Pin Description",\n      "board_id": "<insert_your_board_id>,\n      "media_source": {\n        "source_type": "image_url",\n        "url": "https://i.pinimg.com/564x/28/75/e9/2875e94f8055227e72d514b837adb271.jpg"\n      }\n  }\'\n';
        },
        {
          lang: 'cURL';
          label: 'curl (Sandbox)';
          source: '# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request POST \'https://api-sandbox.pinterest.com/v5/pins\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "title": "My Pin",\n      "description": "Pin Description",\n      "board_id": "<insert_your_sandbox_board_id>,\n      "media_source": {\n        "source_type": "image_url",\n        "url": "https://i.pinimg.com/564x/28/75/e9/2875e94f8055227e72d514b837adb271.jpg"\n      }\n  }\'\n';
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Create a new Pin.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/PinCreate';
            };
          };
        };
      };
      responses: {
        '201': {
          description: 'Successful pin creation.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Pin';
              };
            };
          };
        };
        '400': {
          description: 'Invalid Pin parameters response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                InvalidPinUrl: {
                  value: {
                    code: 1;
                    message: 'Whoops! It looks like you entered an invalid URL. Try creating a Pin again with a valid URL.';
                  };
                };
              };
            };
          };
        };
        '403': {
          description: "The Pin's image is too small, too large or is broken";
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                PinImageTooSmall: {
                  value: {
                    code: 233;
                    message: 'Your image is too small. Please choose a larger image and try again.';
                  };
                };
                PinImageBroken: {
                  value: {
                    code: 235;
                    message: 'Sorry, this image is broken. Please pick a different image.';
                  };
                };
              };
            };
          };
        };
        '404': {
          description: 'Board or section not found';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                BoardNotFound: {
                  value: {
                    code: 40;
                    message: 'Board not found.';
                  };
                };
                BoardSectionNotFound: {
                  value: {
                    code: 2031;
                    message: "Sorry! We couldn't find this board section.";
                  };
                };
              };
            };
          };
        };
        '429': {
          description: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 8;
                message: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/pins/{pin_id}': {
    get: {
      summary: 'Get Pin';
      description: 'Get a Pin owned by the "operation user_account" - or on a group board that has been shared with this account.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.';
      tags: ['pins'];
      operationId: 'pins/get';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'];
        },
        {
          client_credentials: ['boards:read', 'pins:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      'x-codeSamples': [
        {
          lang: 'python';
          label: 'Python SDK';
          source: '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.pins import Pin\n# Pin information can be fetched from profile page or from list pin method here:\n# /docs/api/v5/#operation/pins/list\nPIN_ID="<Add your pin id here>"\n\npin_get = Pin(pin_id=PIN_ID)\nprint("Pin Id: %s, Pin Title:%s" %(pin_get.id, pin_get.title))\n';
        },
        {
          lang: 'cURL';
          label: 'curl';
          source: "# Pin information can be fetched from profile page or from list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --location --request GET 'https://api.pinterest.com/v5/pins/<insert_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n";
        },
        {
          lang: 'cURL';
          label: 'curl (Sandbox)';
          source: "# Pin information can be fetched from profile page or from list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --location --request GET 'https://api-sandbox.pinterest.com/v5/pins/<insert_sandbox_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n";
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/path_pin_id';
        },
        {
          $ref: '#/components/parameters/query_pin_metrics';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Pin';
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to access board or Pin.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 29;
                message: 'You are not permitted to access that resource.';
              };
            };
          };
        };
        '404': {
          description: 'Pin not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 50;
                message: 'Pin not found.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
    delete: {
      summary: 'Delete Pin';
      description: 'Delete a Pins owned by the "operation user_account" - or on a group board that has been shared with this account.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.';
      tags: ['pins'];
      operationId: 'pins/delete';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write', 'pins:read', 'pins:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      'x-codeSamples': [
        {
          lang: 'python';
          label: 'Python SDK';
          source: '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.pins import Pin\n# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\nPIN_ID="<Add your pin id here>"\n\npin_delete=Pin.delete(pin_id=PIN_ID)\n\nprint("Pin was deleted? %s" % (pin_delete))\n';
        },
        {
          lang: 'cURL';
          label: 'curl';
          source: "# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --request DELETE 'https://api.pinterest.com/v5/pins/<insert_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n";
        },
        {
          lang: 'cURL';
          label: 'curl (Sandbox)';
          source: "# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --request DELETE 'https://api-sandbox.pinterest.com/v5/pins/<insert_sandbox_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n";
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/path_pin_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '204': {
          description: 'Successfully deleted Pin';
        };
        '403': {
          description: 'Not authorized to access board or Pin.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to access board or Pin.';
              };
            };
          };
        };
        '404': {
          description: 'Pin not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 404;
                message: 'Pin not found.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
    patch: {
      summary: 'Update Pin';
      description: 'Update a pin owned by the "operating user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>';
      tags: ['pins'];
      operationId: 'pins/update';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write', 'pins:read', 'pins:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      'x-codeSamples': [
        {
          lang: 'cURL';
          label: 'curl';
          source: "# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --location --request PATCH 'https://api.pinterest.com/v5/pins/<insert_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n  \"title\": \"My updated Pin title\"\n}'\n";
        },
        {
          lang: 'cURL';
          label: 'curl (Sandbox)';
          source: "# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --location --request GET 'https://api-sandbox.pinterest.com/v5/pins/<insert_sandbox_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n  \"title\": \"My updated Pin title\"\n}'\n";
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/path_pin_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/PinUpdate';
            };
          };
        };
      };
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Pin';
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to update Pin.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 29;
                message: 'Not authorized to update Pin.';
              };
            };
          };
        };
        '404': {
          description: 'Pin not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 50;
                message: 'Pin not found.';
              };
            };
          };
        };
        '429': {
          description: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 8;
                message: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/pins/{pin_id}/analytics': {
    get: {
      summary: 'Get Pin analytics';
      description: 'Get analytics for a Pin owned by the "operation user_account" - or on a group board that has been shared with this account.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href="/docs/api/v5/#operation/ad_accounts/list">List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Admin, Analyst.\n- For Pins on secret boards: Admin.\n\nIf Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.';
      tags: ['pins'];
      operationId: 'pins/analytics';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'];
        },
        {
          client_credentials: ['boards:read', 'pins:read'];
        },
      ];
      'x-ratelimit-category': 'org_analytics';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_pin_id';
        },
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_app_types';
        },
        {
          $ref: '#/components/parameters/query_pin_analytics_metric_types';
        },
        {
          $ref: '#/components/parameters/query_split_field_pins';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/PinAnalyticsResponse';
              };
            };
          };
        };
        '400': {
          description: 'Invalid pins analytics parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid pins analytics parameters.';
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to access board or Pin.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to access board or Pin.';
              };
            };
          };
        };
        '404': {
          description: 'Pin not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 404;
                message: 'Pin not found.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/pins/analytics': {
    get: {
      summary: 'Get multiple Pin analytics';
      description: '<strong>This endpoint is currently in beta and not available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>\n\nGet analytics for multiple pins owned by the "operation user_account" - or on a group board that has been shared with this account.\n- The maximum number of pins supported in a single request is 100.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href="/docs/api/v5/#operation/ad_accounts/list">List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Admin, Analyst.\n- For Pins on secret boards: Admin.\n\nIf Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.';
      tags: ['pins'];
      operationId: 'multi_pins/analytics';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'];
        },
        {
          client_credentials: ['boards:read', 'pins:read'];
        },
      ];
      'x-ratelimit-category': 'org_analytics';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_required_pin_ids';
        },
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_app_types';
        },
        {
          description: 'Pin metric types to get data for.';
          explode: false;
          in: 'query';
          name: 'metric_types';
          required: true;
          schema: {
            type: 'array';
            items: {
              oneOf: [
                {
                  description: 'Standard Pin metric types';
                  type: 'string';
                  enum: [
                    'IMPRESSION',
                    'OUTBOUND_CLICK',
                    'PIN_CLICK',
                    'SAVE',
                    'SAVE_RATE',
                    'TOTAL_COMMENTS',
                    'TOTAL_REACTIONS',
                    'USER_FOLLOW',
                    'PROFILE_VISIT',
                  ];
                },
                {
                  description: 'Video Pin metric types';
                  type: 'string';
                  enum: [
                    'IMPRESSION',
                    'OUTBOUND_CLICK',
                    'PIN_CLICK',
                    'SAVE',
                    'SAVE_RATE',
                    'VIDEO_MRC_VIEW',
                    'VIDEO_10S_VIEW',
                    'QUARTILE_95_PERCENT_VIEW',
                    'VIDEO_V50_WATCH_TIME',
                    'VIDEO_START',
                    'VIDEO_AVG_WATCH_TIME',
                    'TOTAL_COMMENTS',
                    'TOTAL_REACTIONS',
                  ];
                },
              ];
            };
          };
          style: 'form';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BulkPinAnalyticsResponse';
              };
            };
          };
        };
        '400': {
          description: 'Invalid pins analytics parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 1;
                message: 'Invalid multi_pins analytics parameters.';
              };
            };
          };
        };
        '401': {
          description: 'Not authorized to access board or Pin.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 7;
                message: 'Not authorized to access board or Pin.';
              };
            };
          };
        };
        '404': {
          description: 'Pin not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 50;
                message: 'Pin not found.';
              };
            };
          };
        };
        '429': {
          description: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 8;
                message: 'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/pins/{pin_id}/save': {
    post: {
      summary: 'Save Pin';
      description: 'Save a Pin on a board or board section owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.\n\n- Any Pin type can be saved: image Pin, video Pin, Idea Pin, product Pin, etc.\n- Any public Pin can be saved given a pin ID.';
      tags: ['pins'];
      operationId: 'pins/save';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write', 'pins:read', 'pins:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      'x-codeSamples': [
        {
          lang: 'python';
          label: 'Python SDK';
          source: '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.pins import Pin\n# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\nPIN_ID="<Add your pin id here>"\n\n# Board information can be fetched from profile page or from list board method here:\n# /docs/api/v5/#operation/boards/list\nNEW_BOARD_ID="<Add your board id here>"\n\npin_save = Pin(pin_id=PIN_ID)\npin_save.save(board_id=NEW_BOARD_ID)\nprint("Pin Id: %s, Board Id:%s" %(pin_save.id, pin_save.board_id))\n';
        },
        {
          lang: 'cURL';
          label: 'curl';
          source: "# Pin and Board information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n# /docs/api/v5/#operation/boards/list\n\ncurl --request DELETE 'https://api.pinterest.com/v5/pins/<insert_pin_id>/save' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"board_id\": <insert_new_board_id>\n}'\n";
        },
        {
          lang: 'cURL';
          label: 'curl (Sandbox)';
          source: "# Pin and Board information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n# /docs/api/v5/#operation/boards/list\n\ncurl --request DELETE 'https://api-sandbox.pinterest.com/v5/pins/<insert_sandbox_pin_id>/save' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"board_id\": <insert_new_sandbox_board_id>\n}'\n";
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/path_pin_id';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Request object used to save an existing pin';
        required: true;
        content: {
          'application/json': {
            schema: {
              type: 'object';
              properties: {
                board_id: {
                  description: 'Unique identifier of the board to which the pin will be saved.';
                  type: 'string';
                  pattern: '^\\d+$';
                  nullable: true;
                };
                board_section_id: {
                  description: 'Unique identifier of the board section to which the pin will be saved.';
                  type: 'string';
                  pattern: '^\\d+$';
                  nullable: true;
                };
              };
            };
          };
        };
      };
      responses: {
        '201': {
          description: 'Successfully saved pin.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Pin';
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to access Board or Pin.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 29;
                message: 'You are not permitted to access that resource.';
              };
            };
          };
        };
        '404': {
          description: 'Board or Pin not found.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                BoardNotFound: {
                  value: {
                    code: 40;
                    message: 'Board not found.';
                  };
                };
                PinNotFound: {
                  value: {
                    code: 50;
                    message: 'Pin not found.';
                  };
                };
                BoardSectionNotFound: {
                  value: {
                    code: 2031;
                    message: "Sorry! We couldn't find this board section.";
                  };
                };
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/resources/ad_account_countries': {
    get: {
      summary: 'Get ad accounts countries';
      description: 'Get Ad Accounts countries';
      operationId: 'ad_account_countries/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccountsCountryResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['resources'];
    };
  };
  '/resources/delivery_metrics': {
    get: {
      summary: "Get available metrics' definitions";
      description: "Get the definitions for ads and organic metrics available across both synchronous and asynchronous report endpoints.\nThe `display_name` attribute will match how the metric is named in our native tools like Ads Manager.\nSee <a href='/docs/api-features/analytics-overview/'>Organic Analytics</a> and <a href='/docs/api-features/ads-reporting/'>Ads Analytics</a> for more information.";
      operationId: 'delivery_metrics/get';
      security: [
        {
          pinterest_oauth2: ['ads:read', 'pins:read', 'user_accounts:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_report_type';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeliveryMetricsResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['resources'];
    };
  };
  '/resources/lead_form_questions': {
    get: {
      summary: 'Get lead form questions';
      description: "Get a list of all lead form question type names. Some questions might not be used.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>";
      operationId: 'lead_form_questions/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      responses: {
        '200': {
          description: 'Success';
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['resources'];
    };
  };
  '/resources/metrics_ready_state': {
    get: {
      summary: 'Get metrics ready state';
      description: 'Learn whether conversion or non-conversion metrics are finalized and ready to query.';
      operationId: 'metrics_ready_state/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_analytics';
      'x-sandbox': 'enabled';
      parameters: [
        {
          name: 'date';
          description: 'Analytics reports request date (UTC). Format: YYYY-MM-DD';
          in: 'query';
          required: true;
          style: 'form';
          schema: {
            type: 'string';
            pattern: '^(\\d{4})-(\\d{2})-(\\d{2})$';
            example: '2022-07-13';
          };
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BookClosedResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['resources'];
    };
  };
  '/resources/targeting/interests/{interest_id}': {
    get: {
      summary: 'Get interest details';
      description: '<p>Get details of a specific interest given interest ID.</p> <p>Click <a href="https://docs.google.com/spreadsheets/d/1HxL-0Z3p2fgxis9YBP2HWC3tvPrs1hAuHDRtH-NJTIM/edit#gid=118370875" target="_blank">here</a> for a spreadsheet listing interests and their IDs.</p>';
      operationId: 'interest_targeting_options/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_interest_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SingleInterestTargetingOptionResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['resources'];
    };
  };
  '/resources/targeting/{targeting_type}': {
    get: {
      summary: 'Get targeting options';
      description: '<p>You can use targeting values in ads placement to define your intended audience. </p> <p>Targeting metrics are organized around targeting specifications.</p> <p>For more information on ads targeting, see <a class="reference external" href="https://help.pinterest.com/en/business/article/audience-targeting" target="_blank">Audience targeting</a>.</p>\n<p><b>Sample return:</b></p> <pre class="literal-block"> [{&quot;36313&quot;: &quot;Australia: Moreton Bay - North&quot;, &quot;124735&quot;: &quot;Canada: North Battleford&quot;, &quot;36109&quot;: &quot;Australia: Murray&quot;, &quot;36108&quot;: &quot;Australia: Mid North Coast&quot;, &quot;36101&quot;: &quot;Australia: Capital Region&quot;, &quot;811&quot;: &quot;U.S.: Reno&quot;, &quot;36103&quot;: &quot;Australia: Central West&quot;, &quot;36102&quot;: &quot;Australia: Central Coast&quot;, &quot;36105&quot;: &quot;Australia: Far West and Orana&quot;, &quot;36104&quot;: &quot;Australia: Coffs Harbour - Grafton&quot;, &quot;36107&quot;: &quot;Australia: Illawarra&quot;, &quot;36106&quot;: &quot;Australia: Hunter Valley Exc Newcastle&quot;, &quot;554017&quot;: &quot;New Zealand: Wanganui&quot;, &quot;554016&quot;: &quot;New Zealand: Marlborough&quot;, &quot;554015&quot;: &quot;New Zealand: Gisborne&quot;, &quot;554014&quot;: &quot;New Zealand: Tararua&quot;, &quot;554013&quot;: &quot;New Zealand: Invercargill&quot;, &quot;GR&quot;: &quot;Greece&quot;, &quot;554011&quot;: &quot;New Zealand: Whangarei&quot;, &quot;554010&quot;: &quot;New Zealand: Far North&quot;, &quot;717&quot;: &quot;U.S.: Quincy-Hannibal-Keokuk&quot;, &quot;716&quot;: &quot;U.S.: Baton Rouge&quot;,...}] </pre>';
      operationId: 'targeting_options/get';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_targeting_type';
        },
        {
          $ref: '#/components/parameters/query_client_id';
        },
        {
          $ref: '#/components/parameters/query_oauth_signature';
        },
        {
          $ref: '#/components/parameters/query_timestamp';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TargetingOptionResponse';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['resources'];
    };
  };
  '/search/boards': {
    get: {
      summary: "Search user's boards";
      description: 'Search for boards for the "operation user_account". This includes boards of all board types.\n- By default, the "operation user_account" is the token user_account.\n\nIf using Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account". See <a href=\'/docs/getting-started/using-business-access/\'>Understanding Business Access</a> for more information.';
      operationId: 'search_user_boards/get';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:read_secret'];
        },
        {
          client_credentials: ['boards:read', 'boards:read_secret'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_query';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'items';
                        items: {
                          $ref: '#/components/schemas/Board';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['search'];
    };
  };
  '/search/pins': {
    get: {
      description: 'Search for pins for the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nIf using Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account". See <a href=\'/docs/getting-started/using-business-access/\'>Understanding Business Access</a> for more information.';
      operationId: 'search_user_pins/list';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:read_secret', 'pins:read', 'pins:read_secret'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
        {
          $ref: '#/components/parameters/query_required_search_query';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/Pin';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '404': {
          description: 'User not found';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UserNotFound: {
                  value: {
                    code: 30;
                    message: 'User not found.';
                  };
                };
              };
            };
          };
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      summary: "Search user's Pins";
      tags: ['search'];
    };
  };
  '/search/partner/pins': {
    get: {
      summary: 'Search pins by a given search term';
      description: "<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>\n\nGet the top 10 Pins by a given search term.";
      operationId: 'search_partner_pins';
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'disabled';
      'x-codeSamples': [
        {
          lang: 'cURL';
          label: 'curl';
          source: "curl --location --request GET 'https://api.pinterest.com/v5/search/partner/pins' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n";
        },
      ];
      parameters: [
        {
          description: 'Search term to look up pins.';
          in: 'query';
          name: 'term';
          required: true;
          schema: {
            type: 'string';
          };
        },
        {
          $ref: '#/components/parameters/query_country_code';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          description: 'Search locale.';
          in: 'query';
          name: 'locale';
          required: false;
          schema: {
            type: 'string';
          };
        },
        {
          $ref: '#/components/parameters/result_limit';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/SummaryPin';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid pins';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid pin filter value';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['search'];
    };
  };
  '/terms/related': {
    get: {
      summary: 'List related terms';
      description: "Get a list of terms logically related to each input term. <p/>\nExample: the term 'workout' would list related terms like 'one song workout', 'yoga workout', 'workout motivation', etc.";
      tags: ['terms'];
      operationId: 'terms_related/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_list_input_terms';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/RelatedTerms';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid terms related parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid terms related parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/terms/suggested': {
    get: {
      summary: 'List suggested terms';
      description: "Get popular search terms that begin with your input term. <p/>\nExample: 'sport' would return popular terms like 'sports bar' and 'sportswear', but not 'motor sports' since the phrase does not begin with the given term.";
      tags: ['terms'];
      operationId: 'terms_suggested/list';
      security: [
        {
          pinterest_oauth2: ['ads:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_input_term';
        },
        {
          $ref: '#/components/parameters/query_term_limit';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TermsSuggestedResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid terms suggested parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid terms suggested parameters.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/trends/keywords/{region}/top/{trend_type}': {
    get: {
      summary: 'List trending keywords';
      description: '<p>Get the top trending search keywords among the Pinterest user audience.</p> <p>Trending keywords can be used to inform ad targeting, budget strategy, and creative decisions about which products and Pins will resonate with your audience.</p> <p>Geographic, demographic and interest-based filters are available to narrow down to the top trends among a specific audience. Multiple trend types are supported that can be used to identify newly-popular, evergreen or seasonal keywords.</p> <p>For an interactive way to explore this data, please visit <a href="https://trends.pinterest.com">trends.pinterest.com</a>.\n';
      operationId: 'trending_keywords/list';
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'];
        },
      ];
      'x-ratelimit-category': 'trends_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_trend_region';
        },
        {
          $ref: '#/components/parameters/path_trend_type';
        },
        {
          $ref: '#/components/parameters/query_interest_list';
        },
        {
          $ref: '#/components/parameters/query_gender_list';
        },
        {
          $ref: '#/components/parameters/query_age_bucket_list';
        },
        {
          name: 'include_keywords';
          description: 'If set, filters the results to top trends which include at least one of the specified keywords.<br />\nIf unset, no keyword filtering logic is applied.';
          example: ['recipes', 'dessert'];
          in: 'query';
          required: false;
          schema: {
            $ref: '#/components/schemas/KeywordList';
          };
        },
        {
          $ref: '#/components/parameters/query_normalize_against_group';
        },
        {
          $ref: '#/components/parameters/query_trending_keyword_limit';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TrendingKeywordsResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid trending keywords request parameters';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid trending keywords request parameters';
              };
            };
          };
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['keywords'];
    };
  };
  '/user_account': {
    get: {
      summary: 'Get user account';
      description: 'Get account information for the "operation user_account"\n- By default, the "operation user_account" is the token user_account.\n\nIf using Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account". See <a href=\'/docs/getting-started/using-business-access/\'>Understanding Business Access</a> for more information.';
      tags: ['user_account'];
      operationId: 'user_account/get';
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'];
        },
        {
          client_credentials: ['user_accounts:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Account';
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to access the user account.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to access the user account.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/user_account/analytics': {
    get: {
      summary: 'Get user account analytics';
      description: 'Get analytics for the "operation user_account"\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".';
      tags: ['user_account'];
      operationId: 'user_account/analytics';
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'];
        },
      ];
      'x-ratelimit-category': 'org_analytics';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_from_claimed_content';
        },
        {
          $ref: '#/components/parameters/query_pin_format';
        },
        {
          $ref: '#/components/parameters/query_app_types';
        },
        {
          $ref: '#/components/parameters/query_content_type';
        },
        {
          $ref: '#/components/parameters/query_source';
        },
        {
          $ref: '#/components/parameters/query_metric_types';
        },
        {
          $ref: '#/components/parameters/query_split_field_user_account';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AnalyticsResponse';
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid user accounts analytics parameters.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid user accounts analytics parameters.';
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to access the user account analytics.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to access the user account analytics.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/user_account/analytics/top_pins': {
    get: {
      summary: 'Get user account top pins analytics';
      description: 'Gets analytics data about a user\'s top pins (limited to the top 50).\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".';
      tags: ['user_account'];
      operationId: 'user_account/analytics/top_pins';
      security: [
        {
          pinterest_oauth2: ['pins:read', 'user_accounts:read'];
        },
        {
          client_credentials: ['pins:read', 'user_accounts:read'];
        },
      ];
      'x-ratelimit-category': 'org_analytics';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_sort_by';
        },
        {
          $ref: '#/components/parameters/query_from_claimed_content';
        },
        {
          $ref: '#/components/parameters/query_pin_format';
        },
        {
          $ref: '#/components/parameters/query_app_types';
        },
        {
          $ref: '#/components/parameters/query_content_type';
        },
        {
          $ref: '#/components/parameters/query_source';
        },
        {
          $ref: '#/components/parameters/query_metric_types';
        },
        {
          $ref: '#/components/parameters/query_num_of_pins';
        },
        {
          $ref: '#/components/parameters/query_created_in_last_n_days';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TopPinsAnalyticsResponse';
              };
            };
          };
          description: 'Success';
        };
        '403': {
          description: 'Not authorized to access the user account analytics.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to access the user account analytics.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/user_account/analytics/top_video_pins': {
    get: {
      summary: 'Get user account top video pins analytics';
      description: 'Gets analytics data about a user\'s top video pins (limited to the top 50).\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".';
      tags: ['user_account'];
      operationId: 'user_account/analytics/top_video_pins';
      security: [
        {
          pinterest_oauth2: ['pins:read', 'user_accounts:read'];
        },
        {
          client_credentials: ['pins:read', 'user_accounts:read'];
        },
      ];
      'x-ratelimit-category': 'org_analytics';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_start_date';
        },
        {
          $ref: '#/components/parameters/query_end_date';
        },
        {
          $ref: '#/components/parameters/query_video_pin_sort_by';
        },
        {
          $ref: '#/components/parameters/query_from_claimed_content';
        },
        {
          $ref: '#/components/parameters/query_pin_format';
        },
        {
          $ref: '#/components/parameters/query_app_types';
        },
        {
          $ref: '#/components/parameters/query_content_type';
        },
        {
          $ref: '#/components/parameters/query_source';
        },
        {
          $ref: '#/components/parameters/query_video_pin_metric_types';
        },
        {
          $ref: '#/components/parameters/query_num_of_pins';
        },
        {
          $ref: '#/components/parameters/query_created_in_last_n_days';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TopVideoPinsAnalyticsResponse';
              };
            };
          };
          description: 'Success';
        };
        '403': {
          description: 'Not authorized to access the user account analytics.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to access the user account analytics.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/user_account/businesses': {
    get: {
      summary: 'List linked businesses';
      description: 'Get a list of your linked business accounts.';
      operationId: 'linked_business_accounts/get';
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'];
        },
        {
          client_credentials: ['user_accounts:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                type: 'array';
                items: {
                  $ref: '#/components/schemas/LinkedBusiness';
                };
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      tags: ['user_account'];
    };
  };
  '/user_account/followers': {
    get: {
      summary: 'List followers';
      description: 'Get a list of your followers.';
      operationId: 'followers/list';
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'];
        },
        {
          client_credentials: ['user_accounts:read'];
        },
      ];
      'x-ratelimit-category': 'ads_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/UserSummary';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid user id';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid user id';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['user_account'];
    };
  };
  '/user_account/following': {
    get: {
      summary: 'List following';
      description: 'Get a list of who a certain user follows.';
      operationId: 'user_following/get';
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'];
        },
        {
          client_credentials: ['user_accounts:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_user_following_feed_type';
        },
        {
          $ref: '#/components/parameters/query_explicit_following';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          description: 'response';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        description: 'Users';
                        items: {
                          $ref: '#/components/schemas/UserSummary';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['user_account'];
    };
  };
  '/user_account/following/boards': {
    get: {
      summary: 'List following boards';
      description: 'Get a list of the boards a user follows. The request returns a board summary object array.';
      operationId: 'boards_user_follows/list';
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'];
        },
        {
          client_credentials: ['user_accounts:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
        {
          $ref: '#/components/parameters/query_explicit_following';
        },
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/Board';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
          description: 'Success';
        };
        '400': {
          description: 'Invalid user id';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 400;
                message: 'Invalid user id';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      tags: ['user_account'];
    };
  };
  '/user_account/following/{username}': {
    post: {
      summary: 'Follow user';
      description: "<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>\n\nUse this request, as a signed-in user, to follow another user.";
      tags: ['user_account'];
      operationId: 'follow_user/update';
      security: [
        {
          pinterest_oauth2: ['user_accounts:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'enabled';
      parameters: [
        {
          $ref: '#/components/parameters/path_username';
        },
      ];
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/FollowUserRequest';
            };
          };
        };
        description: 'Follow a user.';
        required: true;
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UserSummary';
              };
            };
          };
          description: 'Success';
        };
        '404': {
          description: 'User not found';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              examples: {
                UserNotFound: {
                  value: {
                    code: 30;
                    message: 'User not found.';
                  };
                };
              };
            };
          };
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
    };
  };
  '/user_account/websites': {
    post: {
      summary: 'Verify website';
      description: 'Verify a website as a signed-in user.';
      tags: ['user_account'];
      operationId: 'verify_website/update';
      security: [
        {
          pinterest_oauth2: ['user_accounts:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      requestBody: {
        description: 'Verify a website.';
        required: true;
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/UserWebsiteVerifyRequest';
            };
          };
        };
      };
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UserWebsiteSummary';
              };
            };
          };
          description: 'Success';
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
    };
    get: {
      summary: 'Get user websites';
      description: 'Get user websites, claimed or not';
      tags: ['user_account'];
      operationId: 'user_websites/get';
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'];
        },
      ];
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          description: 'Success';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/UserWebsiteSummary';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        '403': {
          description: 'Not authorized to access the user website list.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to access the user website list.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'disabled';
    };
    delete: {
      summary: 'Unverify website';
      description: 'Unverifu a website verified by the signed-in user.';
      tags: ['user_account'];
      operationId: 'unverify_website/delete';
      security: [
        {
          pinterest_oauth2: ['user_accounts:write'];
        },
      ];
      'x-ratelimit-category': 'org_write';
      'x-sandbox': 'disabled';
      parameters: [
        {
          $ref: '#/components/parameters/query_website';
        },
      ];
      responses: {
        '204': {
          description: 'Successfully unverified website';
        };
        '404': {
          description: 'Website not in user list.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 404;
                message: 'Website not in user list.';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
    };
  };
  '/user_account/websites/verification': {
    get: {
      summary: 'Get user verification code for website claiming';
      description: 'Get verification code for user to install on the website to claim it.';
      tags: ['user_account'];
      operationId: 'website_verification/get';
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id';
        },
      ];
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'];
        },
        {
          client_credentials: ['user_accounts:read'];
        },
      ];
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UserWebsiteVerificationCode';
              };
            };
          };
          description: 'Success';
        };
        '403': {
          description: 'Not authorized to access the user verification code for website claiming.';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
              example: {
                code: 403;
                message: 'Not authorized to access the user verification code for website claiming.';
              };
            };
          };
        };
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
          description: 'Unexpected error';
        };
      };
      'x-ratelimit-category': 'org_read';
      'x-sandbox': 'disabled';
    };
  };
  '/users/{username}/interests/follow': {
    get: {
      summary: 'List following interests';
      description: "Get a list of a user's following interests in one place.";
      tags: ['user_account'];
      operationId: 'user_account/followed_interests';
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'];
        },
        {
          client_credentials: ['user_accounts:read'];
        },
      ];
      'x-ratelimit-category': 'org_read';
      parameters: [
        {
          $ref: '#/components/parameters/path_username';
        },
        {
          $ref: '#/components/parameters/query_bookmark';
        },
        {
          $ref: '#/components/parameters/query_page_size';
        },
      ];
      responses: {
        '200': {
          description: 'Success';
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated';
                  },
                  {
                    type: 'object';
                    properties: {
                      items: {
                        type: 'array';
                        items: {
                          $ref: '#/components/schemas/Interest';
                        };
                      };
                    };
                  },
                ];
              };
            };
          };
        };
        '400': {
          description: 'Invalid parameters';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        '401': {
          description: 'Authorization failed';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        '404': {
          description: 'User not found';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
        default: {
          description: 'Unexpected error';
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error';
              };
            };
          };
        };
      };
      'x-sandbox': 'enabled';
    };
  };
};
export const paths = {
  '/ad_accounts': {
    get: {
      summary: 'List ad accounts',
      description:
        'Get a list of the ad_accounts that the "operation user_account" has access to.\n- This includes ad_accounts they own and ad_accounts that are owned by others who have granted them <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>.',
      tags: ['ad_accounts'],
      operationId: 'ad_accounts/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_include_shared_accounts',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'Ad accounts',
                        items: {
                          $ref: '#/components/schemas/AdAccount',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
    post: {
      summary: 'Create ad account',
      description:
        'Create a new ad account. Different ad accounts can support different currencies, payment methods, etc.\nAn ad account is needed to create campaigns, ad groups, and ads; other accounts (your employees or partners) can be assigned business access and appropriate roles to access an ad account. <p/>\nYou can set up up to 50 ad accounts per user. (The user must have a business account to create an ad account.) <p/>\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/create-an-advertiser-account">Create an advertiser account</a>.',
      tags: ['ad_accounts'],
      operationId: 'ad_accounts/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdAccountCreateRequest',
            },
          },
        },
        description: 'Ad account to create.',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccount',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
    },
  },
  '/ad_accounts/{ad_account_id}': {
    get: {
      summary: 'Get ad account',
      description: 'Get an ad account',
      operationId: 'ad_accounts/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccount',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['ad_accounts'],
    },
  },
  '/ad_accounts/{ad_account_id}/ad_groups': {
    get: {
      summary: 'List ad groups',
      description:
        'List ad groups based on provided campaign IDs or ad group IDs.(campaign_ids or ad_group_ids). <p/>\n<strong>Note:</strong><p/>\nProvide only campaign_id or ad_group_id. Do not provide both.',
      operationId: 'ad_groups/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_campaign_ids',
        },
        {
          $ref: '#/components/parameters/query_ad_group_ids',
        },
        {
          $ref: '#/components/parameters/query_entity_statuses',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_order',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_translate_interests_to_names',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/AdGroupResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account group parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account group parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_groups'],
    },
    post: {
      summary: 'Create ad groups',
      description:
        "Create multiple new ad groups. All ads in a given ad group will have the same budget, bid, run dates, targeting, and placement (search, browse, other). For more information, <a href=\"https://help.pinterest.com/en/business/article/campaign-structure\" target=\"_blank\"> click here</a>.</p>\n<strong>Note:</strong>\n- 'bid_in_micro_currency' and 'budget_in_micro_currency' should be expressed in microcurrency amounts based on the currency field set in the advertiser's profile.<p/>\n<p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p>\n<p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’s profile.</p>\n <p><strong>Equivalency equations</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>$1 = 1,000,000 microdollars</li>\n  <li>1 microdollar = $0.000001 </li>\n</ul>\n<p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>\n  <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li>\n</ul>\n- Ad groups belong to ad campaigns. Some types of campaigns (e.g. budget optimization) have limits on the number of ad groups they can hold. If you exceed those limits, you will get an error message.\n- Start and end time cannot be set for ad groups that belong to CBO campaigns. Currently, campaigns with the following objective types: TRAFFIC, AWARENESS, WEB_CONVERSIONS, and CATALOG_SALES will default to CBO.",
      operationId: 'ad_groups/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/AdGroupCreateRequest',
              },
              maxItems: 30,
              minItems: 1,
              type: 'array',
            },
          },
        },
        description: 'List of ad groups to create, size limit [1, 30].',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdGroupArrayResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['ad_groups'],
    },
    patch: {
      summary: 'Update ad groups',
      description: 'Update multiple existing ad groups.',
      operationId: 'ad_groups/update',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/AdGroupUpdateRequest',
              },
              maxItems: 30,
              minItems: 1,
              type: 'array',
            },
          },
        },
        description: 'List of ad groups to update, size limit [1, 30].',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdGroupArrayResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['ad_groups'],
    },
  },
  '/ad_accounts/{ad_account_id}/ad_groups/analytics': {
    get: {
      summary: 'Get ad group analytics',
      description:
        'Get analytics for the specified ad groups in the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.',
      operationId: 'ad_groups/analytics',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_ad_group_ids_required',
        },
        {
          $ref: '#/components/parameters/query_columns',
        },
        {
          $ref: '#/components/parameters/query_granularity',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdGroupsAnalyticsResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account group analytics parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account group analytics parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_groups'],
    },
  },
  '/ad_accounts/{ad_account_id}/ad_groups/targeting_analytics': {
    get: {
      summary: 'Get targeting analytics for ad groups',
      description:
        'Get targeting analytics for one or more ad groups.\nFor the requested ad group(s) and metrics, the response will include the requested metric information\n(e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. "age_bucket") for applicable values (e.g. "45-49"). <p/>\n- The token\'s user_account must either be the Owner of the specified ad account, or have one\nof the necessary roles granted to them via\n<a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.',
      operationId: 'ad_groups_targeting_analytics/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_ad_group_ids_required',
        },
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_targeting_types',
        },
        {
          $ref: '#/components/parameters/query_columns',
        },
        {
          $ref: '#/components/parameters/query_granularity',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time',
        },
        {
          $ref: '#/components/parameters/query_attribution_types',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MetricsResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_groups'],
    },
  },
  '/ad_accounts/{ad_account_id}/ad_groups/audience_sizing': {
    post: {
      summary: 'Get audience sizing',
      description:
        'Get potential audience size for an ad group with given targeting criteria. \nPotential audience size estimates the number of people you may be able to reach per month with your campaign. \nIt is based on historical advertising data and the targeting criteria you select.\nIt does not guarantee results or take into account factors such as bid, budget, schedule, seasonality or product experiments.',
      operationId: 'ad_groups/audience_sizing',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdGroupAudienceSizingRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdGroupAudienceSizingResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad group audience sizing parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad group audience sizing parameters.',
              },
            },
          },
        },
        '403': {
          description: 'No access to requested audience list or product group.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: "You don't have access to the requested audience list or product group.",
              },
            },
          },
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['ad_groups'],
    },
  },
  '/ad_accounts/{ad_account_id}/ad_groups/{ad_group_id}': {
    get: {
      summary: 'Get ad group',
      description:
        'Get a specific ad given the ad ID. If your pin is rejected, rejected_reasons will\ncontain additional information from the Ad Review process.\nFor more information about our policies and rejection reasons see the <a href="https://www.pinterest.com/_/_/policy/advertising-guidelines/" target="_blank">Pinterest advertising standards</a>.',
      operationId: 'ad_groups/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_ad_group_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdGroupResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['ad_groups'],
    },
  },
  '/ad_accounts/{ad_account_id}/ad_previews': {
    post: {
      summary: 'Create ad preview with pin or image',
      description:
        'Create an ad preview given an ad account ID and either an existing organic pin ID or the URL for an image to be used to create the Pin and the ad. <p/>\nIf you are creating a preview from an existing Pin, that Pin must be promotable: that is, it must have a clickthrough link and meet other requirements. (See <a href="https://help.pinterest.com/en/business/article/promoted-pins-overview" target="_blank">Ads Overview</a>.) <p/>\nYou can view the returned preview URL on a webpage or iframe for 7 days, after which the URL expires. Collection ads are not currently supported ad preview.',
      tags: ['ads'],
      operationId: 'ad_previews/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Create ad preview with pin or image.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdPreviewRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'Successful ad preview creation.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdPreviewURLResponse',
              },
            },
          },
        },
        '400': {
          description: 'Invalid Pin parameters response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidPinUrl: {
                  value: {
                    code: 1,
                    message:
                      'Whoops! It looks like you entered an invalid URL. Try creating a Pin again with a valid URL.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/ad_accounts/{ad_account_id}/ads': {
    get: {
      summary: 'List ads',
      description:
        'List ads that meet the filters provided:\n  - Listed campaign ids or ad group ids or ad ids\n  - Listed entity statuses <p/>\nIf no filter is provided, all ads in the ad account are returned. <p/>\n<strong>Note:</strong><p/>\nProvide only campaign_id or ad_group_id or ad_id. Do not provide more than one type. <p/>\nReview status is provided for each ad; if review_status is REJECTED, the rejected_reasons field will contain additional information.\nFor more, see <a href="https://policy.pinterest.com/en/advertising-guidelines">Pinterest advertising standards</a>.',
      operationId: 'ads/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_campaign_ids',
        },
        {
          $ref: '#/components/parameters/query_ad_group_ids',
        },
        {
          $ref: '#/components/parameters/query_ad_ids',
        },
        {
          $ref: '#/components/parameters/query_entity_statuses',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_order',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/AdResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account ads parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account ads parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ads'],
    },
    post: {
      description:
        'Create multiple new ads. Request must contain ad_group_id, creative_type, and the source Pin pin_id.',
      operationId: 'ads/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/AdCreateRequest',
              },
              maxItems: 30,
              minItems: 1,
              type: 'array',
            },
          },
        },
        description: 'List of ads to create, size limit [1, 30].',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdArrayResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Create ads',
      tags: ['ads'],
    },
    patch: {
      description: 'Update multiple existing ads',
      operationId: 'ads/update',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/AdUpdateRequest',
              },
              maxItems: 30,
              minItems: 1,
              type: 'array',
            },
          },
        },
        description: 'List of ads to update, size limit [1, 30]',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdArrayResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Update ads',
      tags: ['ads'],
    },
  },
  '/ad_accounts/{ad_account_id}/ads/analytics': {
    get: {
      summary: 'Get ad analytics',
      description:
        'Get analytics for the specified ads in the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- The request must contain either ad_ids or both campaign_ids and pin_ids.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.',
      operationId: 'ads/analytics',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_ad_ids',
        },
        {
          $ref: '#/components/parameters/query_columns',
        },
        {
          $ref: '#/components/parameters/query_granularity',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time',
        },
        {
          name: 'pin_ids',
          description: 'List of Pin IDs.',
          in: 'query',
          required: false,
          schema: {
            type: 'array',
            items: {
              type: 'string',
              pattern: '^\\d+$',
            },
            minItems: 1,
            maxItems: 100,
          },
        },
        {
          $ref: '#/components/parameters/query_campaign_ids',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdsAnalyticsResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account ads analytics parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account ads analytics parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ads'],
    },
  },
  '/ad_accounts/{ad_account_id}/ads_credit/discounts': {
    get: {
      summary: 'Get ads credit discounts',
      description:
        "Returns the list of discounts applied to the account.\n\n<strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
      operationId: 'ads_credits_discounts/get',
      security: [
        {
          pinterest_oauth2: ['ads:read', 'billing:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      tags: ['billing'],
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/AdsCreditDiscountsResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/ad_accounts/{ad_account_id}/ads_credit/redeem': {
    post: {
      summary: 'Redeem ad credits',
      description:
        "Redeem ads credit on behalf of the ad account id and apply it towards billing.\n\n<strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
      tags: ['billing'],
      operationId: 'ads_credit/redeem',
      security: [
        {
          pinterest_oauth2: ['ads:write', 'billing:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Redeem ad credits request.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdsCreditRedeemRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'Successfully redeemed ad credits.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdsCreditRedeemResponse',
              },
            },
          },
        },
        '400': {
          description: 'Error thrown when unable to redeem offer code.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                ValidationError: {
                  value: {
                    code: 15,
                    message: 'Unable to redeem offer code. Try again later.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/ad_accounts/{ad_account_id}/ads/targeting_analytics': {
    get: {
      summary: 'Get targeting analytics for ads',
      description:
        'Get targeting analytics for one or more ads. For the requested ad(s) and metrics,\nthe response will include the requested metric information (e.g. SPEND_IN_DOLLAR) for the requested target type\n(e.g. "age_bucket") for applicable values (e.g. "45-49"). <p/>\n- The token\'s user_account must either be the Owner of the specified ad account, or have one\nof the necessary roles granted to them via\n<a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.',
      operationId: 'ad_targeting_analytics/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_ad_ids_required',
        },
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_ad_targeting_types',
        },
        {
          $ref: '#/components/parameters/query_columns',
        },
        {
          $ref: '#/components/parameters/query_granularity',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time',
        },
        {
          $ref: '#/components/parameters/query_attribution_types',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MetricsResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['ads'],
    },
  },
  '/ad_accounts/{ad_account_id}/ads/{ad_id}': {
    get: {
      summary: 'Get ad',
      description:
        'Get a specific ad given the ad ID. If your pin is rejected, rejected_reasons will\ncontain additional information from the Ad Review process.\nFor more information about our policies and rejection reasons see the <a href="https://www.pinterest.com/_/_/policy/advertising-guidelines/" target="_blank">Pinterest advertising standards</a>.',
      operationId: 'ads/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_ad_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['ads'],
    },
  },
  '/ad_accounts/{ad_account_id}/analytics': {
    get: {
      summary: 'Get ad account analytics',
      description:
        'Get analytics for the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time.',
      operationId: 'ad_account/analytics',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_columns',
        },
        {
          $ref: '#/components/parameters/query_granularity',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccountAnalyticsResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account analytics parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account analytics parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_accounts'],
    },
  },
  '/ad_accounts/{ad_account_id}/audience_insights': {
    get: {
      summary: 'Get audience insights',
      description:
        'Get Audience Insights for an ad account. The response will return insights for 3 types of audiences: the\nad account\'s engaged audience on Pinterest, the ad account\'s total audience on Pinterest and Pinterest\'s\ntotal audience.<p/>\n<a href="https://help.pinterest.com/en/business/article/audience-insights" target="_blank">Learn more about Audience Insights</a>.',
      operationId: 'audience_insights/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_audience_insight_type',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AudienceInsightsResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['audience_insights'],
    },
  },
  '/ad_accounts/{ad_account_id}/audiences': {
    get: {
      summary: 'List audiences',
      description: 'Get list of audiences for the ad account.',
      operationId: 'audiences/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          description:
            'The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID.\nFor received audiences, it is sorted by sharing event time.\nNote that higher-value IDs are associated with more-recently added items.',
          in: 'query',
          name: 'order',
          required: false,
          schema: {
            type: 'string',
            example: 'ASCENDING',
            enum: ['ASCENDING', 'DESCENDING'],
          },
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          description: 'Filter audiences by ownership type.',
          in: 'query',
          name: 'ownership_type',
          required: false,
          example: 'OWNED',
          schema: {
            type: 'string',
            default: 'OWNED',
            enum: ['OWNED', 'RECEIVED'],
          },
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/Audience',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account audience parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account audience parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['audiences'],
    },
    post: {
      description:
        'Create an audience you can use in targeting for specific ad groups. Targeting combines customer information with\nthe ways users interact with Pinterest to help you reach specific groups of users; you can include or exclude\nspecific audience_ids when you create an ad group. <p/>\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/audience-targeting" target="_blank">Audience targeting</a>.',
      operationId: 'audiences/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AudienceCreateRequest',
            },
          },
        },
        description: 'List of ads to create, size limit [1, 30]',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Audience',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Create audience',
      tags: ['audiences'],
    },
  },
  '/ad_accounts/{ad_account_id}/audiences/{audience_id}': {
    get: {
      summary: 'Get audience',
      description: 'Get a specific audience given the audience ID.',
      operationId: 'audiences/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_audience_id',
        },
      ],
      responses: {
        '200': {
          description: 'Success',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Audience',
              },
            },
          },
        },
        '404': {
          description: 'Audience not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['audiences'],
    },
    patch: {
      summary: 'Update audience',
      description: 'Update (edit or remove) an existing targeting audience.',
      operationId: 'audiences/update',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_audience_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AudienceUpdateRequest',
            },
          },
        },
        description: 'The audience to be updated.',
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Audience',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['audiences'],
    },
  },
  '/ad_accounts/{ad_account_id}/audiences/custom': {
    post: {
      summary: 'Create custom audience',
      description: 'Create a custom audience and find the audiences you want your ads to reach.',
      operationId: 'audiences/create_custom',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Custom audience to create.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AudienceCreateCustomRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'Success',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Audience',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['audiences'],
    },
  },
  '/ad_accounts/{ad_account_id}/audiences/shared/accounts': {
    get: {
      summary: 'List accounts with access to an audience owned by an ad account',
      description:
        'List all ad accounts and/or businesses that have access to a specific audience. The audience must be owned by the requesting ad account.',
      operationId: 'ad_accounts_audiences_shared_accounts/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_audience_id',
        },
        {
          $ref: '#/components/parameters/query_account_type',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          description: 'Success',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/SharedAudienceAccount',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        '400': {
          description: 'Invalid ad account audiences shared accounts parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account audiences shared accounts parameters.',
              },
            },
          },
        },
        '404': {
          description: 'Shared accounts not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['audience_sharing'],
    },
  },
  '/ad_accounts/{ad_account_id}/audiences/ad_accounts/shared': {
    patch: {
      summary: 'Update audience sharing between ad accounts',
      description:
        "From an ad account, share a specific audience with another ad account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient ad account(s) must be in the same <a href='https://help.pinterest.com/en/business/article/create-and-manage-accounts'>Pinterest Business Hierarchy</a> as the business owner of the ad account.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.",
      operationId: 'update_ad_account_to_ad_account_shared_audience',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/SharedAudience',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SharedAudienceResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account id.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account id',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['audience_sharing'],
    },
  },
  '/ad_accounts/{ad_account_id}/audiences/businesses/shared': {
    patch: {
      summary: 'Update audience sharing from an ad account to businesses',
      description:
        "From an ad account, share a specific audience with a business account, or revoke access to a previously shared audience. Only the audience owner account can share the audience. The recipient business account must be in the same business hierarchy as the business owner of the ad account.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.",
      operationId: 'update_ad_account_to_business_shared_audience',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BusinessSharedAudience',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BusinessSharedAudienceResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account id.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account id',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['audience_sharing'],
    },
  },
  '/ad_accounts/{ad_account_id}/bid_floor': {
    post: {
      description:
        'List bid floors for your campaign configuration. Bid floors are given in microcurrency values based on the currency in the bid floor specification. <p/>\n<p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p>\n<p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’ s profile.</p>\n<p><strong>Equivalency equations</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>$1 = 1,000,000 microdollars</li>\n  <li>1 microdollar = $0.000001 </li>\n</ul>\n<p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>\n  <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li>\n </ul>\nFor more on bid floors see <a class="reference external" href="https://help.pinterest.com/en/business/article/set-your-bid"> Set your bid</a>.',
      operationId: 'ad_groups_bid_floor/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BidFloorRequest',
            },
          },
        },
        description: 'Parameters to get bid_floor info',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BidFloor',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Get bid floors',
      tags: ['ad_groups'],
    },
  },
  '/ad_accounts/{ad_account_id}/billing_profiles': {
    get: {
      summary: 'Get billing profiles',
      description:
        "Get billing profiles in the advertiser account.\n\n<strong>This endpoint might not be available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
      operationId: 'billing_profiles/get',
      security: [
        {
          pinterest_oauth2: ['ads:read', 'billing:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      tags: ['billing'],
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          description: 'Return active billing profiles, if false return all billing profiles.',
          in: 'query',
          name: 'is_active',
          required: true,
          schema: {
            type: 'boolean',
          },
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/BillingProfilesResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/ad_accounts/{ad_account_id}/bulk/download': {
    post: {
      summary: 'Get advertiser entities in bulk',
      description:
        'Create an asynchronous report that may include information on campaigns, ad groups, product groups, ads,\nand/or keywords; can filter by campaigns. Though the entities may be active, archived, or paused,\nonly active entities will return data.',
      operationId: 'bulk_download/create',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BulkDownloadRequest',
            },
          },
        },
        description: 'Parameters to get ad entities in bulk',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BulkDownloadResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['bulk'],
    },
  },
  '/ad_accounts/{ad_account_id}/bulk/upsert': {
    post: {
      description:
        'Either create or update any combination of campaigns, ad groups, product groups, ads, or keywords.\nNote that this request will be processed asynchronously; the response will include a <code>request_id</code>\nthat can be used to obtain the status of the request.',
      operationId: 'bulk_upsert/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BulkUpsertRequest',
            },
          },
        },
        description: 'Parameters to get create/update ad entities in bulk',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BulkUpsertResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Create/update ad entities in bulk',
      tags: ['bulk'],
    },
  },
  '/ad_accounts/{ad_account_id}/bulk/{bulk_request_id}': {
    get: {
      description:
        'Get the status of a bulk request by <code>request_id</code>, along with a download URL that will allow you to download the\nnew or updated entity data (campaigns, ad groups, product groups, ads, or keywords).',
      operationId: 'bulk_request/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_bulk_request_id',
        },
        {
          $ref: '#/components/parameters/include_details',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BulkUpsertStatusResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Download advertiser entities in bulk',
      tags: ['bulk'],
    },
  },
  '/ad_accounts/{ad_account_id}/campaigns': {
    get: {
      summary: 'List campaigns',
      description:
        'Get a list of the campaigns in the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.',
      operationId: 'campaigns/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_campaign_ids',
        },
        {
          $ref: '#/components/parameters/query_entity_statuses',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_order',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/CampaignResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account campaign parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account campaign parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['campaigns'],
    },
    post: {
      summary: 'Create campaigns',
      description:
        "Create multiple new campaigns. Every campaign has its own campaign_id and houses one or more ad groups, which contain one or more ads.\nFor more, see <a href=\"https://help.pinterest.com/en/business/article/set-up-your-campaign/\">Set up your campaign</a>. <p/>\n<strong>Note:</strong>\n- The values for 'lifetime_spend_cap' and 'daily_spend_cap' are microcurrency amounts based on the currency field set in the advertiser's profile. (e.g. USD) <p/>\n<p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p>\n<p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’s profile.</p>\n <p><strong>Equivalency equations</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>$1 = 1,000,000 microdollars</li>\n  <li>1 microdollar = $0.000001 </li>\n</ul>\n<p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>\n  <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li>\n</ul>",
      tags: ['campaigns'],
      operationId: 'campaigns/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Array of campaigns.',
        required: true,
        content: {
          'application/json': {
            schema: {
              type: 'array',
              maxItems: 30,
              minItems: 1,
              items: {
                $ref: '#/components/schemas/CampaignCreateRequest',
              },
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CampaignCreateResponse',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
    patch: {
      summary: 'Update campaigns',
      description:
        "Update multiple ad campaigns based on campaign_ids. <p/>\n<strong>Note:</strong><p/>\n - <p>The values for 'lifetime_spend_cap' and 'daily_spend_cap' are microcurrency amounts based on the currency field set in the advertiser's profile. (e.g. USD) <p/>\n<p>Microcurrency is used to track very small transactions, based on the currency set in the advertiser’s profile.</p>\n<p>A microcurrency unit is 10^(-6) of the standard unit of currency selected in the advertiser’ s profile.</p>\n<p><strong>Equivalency equations</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>$1 = 1,000,000 microdollars</li>\n  <li>1 microdollar = $0.000001 </li>\n</ul>\n<p><strong>To convert between currency and microcurrency</strong>, using dollars as an example currency:</p>\n<ul>\n  <li>To convert dollars to microdollars, mutiply dollars by 1,000,000</li>\n  <li>To convert microdollars to dollars, divide microdollars by 1,000,000</li>\n</ul>",
      tags: ['campaigns'],
      operationId: 'campaigns/update',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Array of campaigns.',
        required: true,
        content: {
          'application/json': {
            schema: {
              type: 'array',
              maxItems: 30,
              minItems: 1,
              items: {
                $ref: '#/components/schemas/CampaignUpdateRequest',
              },
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CampaignUpdateResponse',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/ad_accounts/{ad_account_id}/campaigns/analytics': {
    get: {
      summary: 'Get campaign analytics',
      description:
        'Get analytics for the specified campaigns in the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.',
      operationId: 'campaigns/analytics',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_campaign_ids_required',
        },
        {
          $ref: '#/components/parameters/query_columns',
        },
        {
          $ref: '#/components/parameters/query_granularity',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CampaignsAnalyticsResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account campaign analytics parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account campaign analytics parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['campaigns'],
    },
  },
  '/ad_accounts/{ad_account_id}/campaigns/targeting_analytics': {
    get: {
      summary: 'Get targeting analytics for campaigns',
      description:
        'Get targeting analytics for one or more campaigns.\nFor the requested account and metrics, the response will include the requested metric information\n(e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. "age_bucket") for applicable values (e.g. "45-49"). <p/>\n- The token\'s user_account must either be the Owner of the specified ad account, or have one\nof the necessary roles granted to them via\n<a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.',
      operationId: 'campaign_targeting_analytics/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_campaign_ids_required',
        },
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_campaign_targeting_types',
        },
        {
          $ref: '#/components/parameters/query_columns',
        },
        {
          $ref: '#/components/parameters/query_granularity',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time',
        },
        {
          $ref: '#/components/parameters/query_attribution_types',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MetricsResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['campaigns'],
    },
  },
  '/ad_accounts/{ad_account_id}/campaigns/{campaign_id}': {
    get: {
      summary: 'Get campaign',
      description: 'Get a specific campaign given the campaign ID.',
      operationId: 'campaigns/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_campaign_id',
        },
      ],
      responses: {
        '200': {
          description: 'Success',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CampaignResponse',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['campaigns'],
    },
  },
  '/ad_accounts/{ad_account_id}/conversion_tags': {
    get: {
      summary: 'Get conversion tags',
      description: 'List conversion tags associated with an ad account.',
      operationId: 'conversion_tags/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_filter_deleted',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ConversionTagListResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['conversion_tags'],
      'x-sandbox': 'disabled',
    },
    post: {
      'x-sandbox': 'disabled',
      summary: 'Create conversion tag',
      description:
        'Create a conversion tag, also known as <a href="https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag" target="_blank">Pinterest tag</a>, with the option to enable enhanced match.<p/>\nThe Pinterest Tag tracks actions people take on the ad account’ s website after they view the ad account\'s ad on Pinterest. The advertiser needs to customize this tag to track conversions.<p/>\nFor more information, see:<p/>\n<a class="reference external" href="https://help.pinterest.com/en/business/article/set-up-the-pinterest-tag">Set up the Pinterest tag</a><p/>\n<a class="reference external" href="/docs/api-features/pinterest-tag/">Pinterest Tag</a><p/>\n<a class="reference external" href="/docs/api-features/pinterest-tag/#enhanced-match">Enhanced match</a>',
      operationId: 'conversion_tags/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/ConversionTagCreate',
            },
          },
        },
        description: 'Conversion Tag to create',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ConversionTagResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['conversion_tags'],
    },
  },
  '/ad_accounts/{ad_account_id}/conversion_tags/ocpm_eligible': {
    get: {
      summary: 'Get Ocpm eligible conversion tags',
      description: 'Get Ocpm eligible conversion tag events for an ad account.',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      operationId: 'ocpm_eligible_conversion_tags/get',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      'x-sandbox': 'disabled',
      responses: {
        '200': {
          description: 'Success',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ConversionTagsOcpmEligibleResponse',
              },
            },
          },
        },
        default: {
          description: 'Unexpected errors',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['conversion_tags'],
    },
  },
  '/ad_accounts/{ad_account_id}/conversion_tags/page_visit': {
    get: {
      summary: 'Get page visit conversion tags',
      description: 'Get all page visit conversion tag events for an ad account.',
      operationId: 'page_visit_conversion_tags/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_order',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/ConversionEventResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['conversion_tags'],
    },
  },
  '/ad_accounts/{ad_account_id}/conversion_tags/{conversion_tag_id}': {
    get: {
      'x-sandbox': 'disabled',
      summary: 'Get conversion tag',
      description: 'Get information about an existing conversion tag.',
      operationId: 'conversion_tags/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_conversion_tag_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ConversionTagResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['conversion_tags'],
    },
  },
  '/ad_accounts/{ad_account_id}/customer_lists': {
    post: {
      description:
        '<p>Create a customer list from your records(hashed or plain-text email addresses, or hashed MAIDs or IDFAs).</p>\n<p>A customer list is one of the four types of Pinterest audiences: for more information, see <a href="https://help.pinterest.com/en/business/article/audience-targeting" target="_blank">Audience targeting</a>\nor the <a href="/docs/api-features/targeting-overview/" target="_blank">Audiences</a> section of the ads management guide.<p/>\n <p><b>Please review our <u><a href="https://help.pinterest.com/en/business/article/audience-targeting#section-13341" target="_blank">requirements</a></u> for what type of information is allowed when uploading a customer list.</b></p>\n<p>When you create a customer list, the system scans the list for existing Pinterest accounts;\nthe list must include at least 100 Pinterest accounts. Your original list will be deleted when the matching process\nis complete. The filtered list – containing only the Pinterest accounts that were included in your starting\nlist – is what will be used to create the audience.</p>\n<p>Note that once you have created your customer list, you must convert it into an audience (of the “ CUSTOMER_LIST” type)\nusing the <a href="#operation/create_audience_handler">create audience endpoint</a> before it can be used.</p>',
      operationId: 'customer_lists/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CustomerListRequest',
            },
          },
        },
        description: 'Parameters to get Customer lists info',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CustomerList',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Create customer lists',
      tags: ['customer_lists'],
    },
    get: {
      description:
        '<p>Get a set of customer lists including id and name based on the filters provided.</p>\n<p>(Customer lists are a type of audience.) For more information, see\n<a href="https://help.pinterest.com/en/business/article/audience-targeting" target="_blank">Audience targeting</a>\n or the <a href="/docs/api-features/targeting-overview/" target="_blank">Audiences</a>\nsection of the ads management guide.</p>',
      operationId: 'customer_lists/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_order',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/CustomerList',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Get customer lists',
      tags: ['customer_lists'],
    },
  },
  '/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}': {
    get: {
      summary: 'Get customer list',
      description: 'Gets a specific customer list given the customer list ID.',
      operationId: 'customer_lists/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_customer_list_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CustomerList',
              },
            },
          },
          description: 'Success',
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['customer_lists'],
    },
    patch: {
      description:
        '<p>Append or remove records to/from an existing customer list. (A customer list is one of the four types of Pinterest audiences.)</p>\n<p>When you add records to an existing customer list, the system scans the additions for existing Pinterest\naccounts; those are the records that will be added to your “CUSTOMER_LIST” audience. Your original list of records\n to add will be deleted when the matching process is complete.</p>\n<p>For more information, see <a href="https://help.pinterest.com/en/business/article/audience-targeting" target="_blank">Audience targeting</a>\nor the <a href="/docs/api-features/targeting-overview/" target="_blank">Audiences</a>\nsection of the ads management guide.</p>',
      operationId: 'customer_lists/update',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_customer_list_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CustomerListUpdateRequest',
            },
          },
        },
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CustomerList',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Update customer list',
      tags: ['customer_lists'],
    },
  },
  '/ad_accounts/{ad_account_id}/events': {
    post: {
      summary: 'Send conversions',
      description:
        'The Pinterest API offers advertisers a way to send Pinterest their conversion information (including web conversions, in-app conversions, or even offline conversions) based on their <code>ad_account_id</code>. The request body should be a JSON object.\n- This endpoint requires an <code>access_token</code> be generated through Ads Manager. Review the <a href="/docs/api-features/conversion-overview/">Conversions Guide</a> for more details. (Note that the authorization header required is <code>Authorization: Bearer &lt;access_token&gt;</code>).\n- The token\'s <code>user_account</code> must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Audience, Campaign. (Note that the token can be used across multiple ad accounts under an user ID.)\n- This endpoint has a rate limit of 5,000 calls per minute per ad account.\n- If the merchant is submitting this information using both Pinterest conversion tags and the Pinterest API, Pinterest will remove duplicate information before reporting. (Note that events that took place offline cannot be deduplicated.)',
      operationId: 'events/create',
      tags: ['conversion_events'],
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
        {
          conversion_token: [],
        },
      ],
      'x-ratelimit-category': 'ads_conversions',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          name: 'test',
          description:
            'Include query param ?test=true to mark the request as a test request. The events will not be recorded but the API will still return the same response messages. Use this mode to verify your requests are working and your events are constructed correctly.\nWarning: If you use this query parameter, be certain that it is off (set to false or deleted) before sending a legitimate (non-testing) request.',
          in: 'query',
          required: false,
          schema: {
            type: 'boolean',
          },
        },
      ],
      requestBody: {
        description: 'Conversion events.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/ConversionEvents',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ConversionApiResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'The request was invalid.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 4196,
                message: 'The request was invalid.',
              },
            },
          },
        },
        '401': {
          description: 'Not authorized to send conversion events',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 2,
                    message: 'Authentication failed.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '422': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DetailedError',
              },
            },
          },
          description: 'Not all events were successfully processed.',
        },
        '429': {
          description:
            'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits within a short time window.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 8,
                message:
                  'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits within a short time window.',
              },
            },
          },
        },
        '503': {
          description: 'The endpoint has been ramped down and is currently not accepting any traffic.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 4197,
                message: 'The endpoint has been ramped down and is currently not accepting any traffic.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected errors',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/ad_accounts/{ad_account_id}/insights/audiences': {
    get: {
      summary: 'Get audience insights scope and type',
      description:
        'Get the scope and type of available audiences, which along with a date, is an audience that has recently had an interaction (referred to here as a type) on pins. Interacted pins can belong to at least the most common **partner** or **Pinterest** scopes. This means that user interactions made on advertiser or partner pins will have the **partner** scope. You can also have user interactions performed in general on Pinterest with the **Pinterest** scope. In that case, you can then use the returned type and scope values together on requests to other endpoints to retrieve insight metrics for a desired audience.',
      operationId: 'audience_insights_scope_and_type/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AudienceDefinitionResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['audience_insights'],
    },
  },
  '/ad_accounts/{ad_account_id}/keywords': {
    get: {
      summary: 'Get keywords',
      description:
        '<p>Get a list of keywords based on the filters provided. If no filter is provided, it will default to the ad_account_id filter, which means it will only return keywords that specifically have parent_id set to the ad_account_id. Note: Keywords can have ad_account_ids, campaign_ids, and ad_group_ids set as their parent_ids. Keywords created through Ads Manager will have their parent_id set to an ad_group_id, not ad_account_id.</p>\n<p>For more information, see <a target="_blank" href="https://help.pinterest.com/en/business/article/keyword-targeting">Keyword targeting</a>.</p>\n<p><b>Notes:</b></p> <ul style="list-style-type: square;"> <li>Advertisers and campaigns can only be assigned keywords with excluding (\'_NEGATIVE\').</li> <li>All keyword match types are available for ad groups.</li> </ul> <p>For more information on match types, see <a target="_blank" href="/docs/api-features/targeting-overview/">match type enums</a>.</p>\n<p><b>Returns:</b></p> <ul style="list-style-type: square;"> <li><p>A successful call returns an object containing an array of new keyword objects and an empty &quot;errors&quot; object array.</p></li> <li><p>An unsuccessful call returns an empty keywords array, and, instead, inserts the entire object with nulled/negated properties into the &quot;errors&quot; object array:</p> <pre class="last literal-block"> { "keywords": [], "errors": [ { "data": { "archived": null, "match_type": "EXACT", "parent_type": null, "value": "foobar", "parent_id": null, "type": "keyword", "id": null }, "error_messages": [ "Advertisers and Campaigns only accept excluded targeting attributes." ] } } </pre></li> </ul>',
      operationId: 'keywords/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_campaign_id',
        },
        {
          $ref: '#/components/parameters/query_ad_group_id',
        },
        {
          $ref: '#/components/parameters/query_match_types',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/Keyword',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['keywords'],
    },
    post: {
      summary: 'Create keywords',
      description:
        '<p>Create keywords for following entity types(advertiser, campaign, ad group or ad).</p> <p>For more information, see <a target="_blank" href="https://help.pinterest.com/en/business/article/keyword-targeting">Keyword targeting</a>.</p>\n<p><b>Notes:</b></p> <ul style="list-style-type: square;"> <li>Advertisers and campaigns can only be assigned keywords with excluding (\'_NEGATIVE\').</li> <li>All keyword match types are available for ad groups.</li> </ul> <p>For more information on match types, see <a  target="_blank" href="/docs/api-features/targeting-overview/">match type enums</a>.</p>\n<p><b>Returns:</b></p> <ul style="list-style-type: square;"> <li><p>A successful call returns an object containing an array of new keyword objects and an empty &quot;errors&quot; object array.</p></li> <li><p>An unsuccessful call returns an empty keywords array, and, instead, inserts the entire object with nulled/negated properties into the &quot;errors&quot; object array:</p> <pre class="last literal-block"> { "keywords": [], "errors": [ { "data": { "archived": null, "match_type": "EXACT", "parent_type": null, "value": "foobar", "parent_id": null, "type": "keyword", "id": null }, "error_messages": [ "Advertisers and Campaigns only accept excluded targeting attributes." ] } } </pre></li> </ul>\n<p><b>Rate limit</b>: <a href="/docs/reference/rate-limits/">WRITE</a>.</p>',
      operationId: 'keywords/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/KeywordsRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/KeywordsResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['keywords'],
    },
    patch: {
      summary: 'Update keywords',
      description:
        "<p>Update one or more keywords' bid and archived fields.</p> <p>Archiving a keyword effectively deletes it - keywords no longer receive metrics and no longer visible within the parent entity's keywords list.</p>",
      operationId: 'keywords/update',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/KeywordUpdateBody',
            },
          },
        },
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/KeywordsResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['keywords'],
    },
  },
  '/ad_accounts/{ad_account_id}/keywords/metrics': {
    get: {
      summary: "Get country's keyword metrics",
      description:
        'See keyword metrics for a specified country, aggregated across all of Pinterest.\n(Definitions are available from the "Get delivery metrics definitions"\n<a href="/docs/api/v5/#operation/delivery_metrics/get">API endpoint</a>).',
      operationId: 'country_keywords_metrics/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_country_code',
        },
        {
          $ref: '#/components/parameters/query_keywords',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/KeywordsMetricsArrayResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['keywords'],
    },
  },
  '/ad_accounts/{ad_account_id}/lead_forms': {
    get: {
      summary: 'List lead forms',
      description:
        '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nList lead forms associated with an ad account ID.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.',
      operationId: 'lead_forms/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_order',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/LeadFormResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account lead forms parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account lead forms parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['lead_forms'],
    },
    post: {
      'x-sandbox': 'disabled',
      description:
        '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nCreate lead forms. Lead forms are used in lead ads and allow you to control what text appears on the lead form’ s description, questions and confirmation sections.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.',
      summary: 'Create lead forms',
      operationId: 'lead_forms/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/LeadFormCreateRequest',
              },
              maxItems: 30,
              minItems: 1,
              type: 'array',
            },
          },
        },
        description: 'List of lead forms to create, size limit [1, 30].',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadFormArrayResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account lead forms parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account lead forms parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['lead_forms'],
    },
    patch: {
      'x-sandbox': 'disabled',
      description:
        '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nUpdate lead forms. Lead ads help you reach people who are actively looking for, and interested in, your goods and services. The lead form can be associated with an ad to allow people to fill out the form.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.',
      summary: 'Update lead forms',
      operationId: 'lead_forms/update',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              items: {
                $ref: '#/components/schemas/LeadFormUpdateRequest',
              },
              maxItems: 30,
              minItems: 1,
              type: 'array',
            },
          },
        },
        description: 'List of lead forms to update, size limit [1, 30].',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadFormArrayResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account lead forms parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account lead forms parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['lead_forms'],
    },
  },
  '/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}': {
    get: {
      summary: 'Get lead form by id',
      description:
        '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nGets a lead form given it\'s ID. It must also be associated with the provided ad account ID.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.',
      operationId: 'lead_form/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_lead_form_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadFormResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account lead forms parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 1,
                message: 'Invalid ad account lead forms parameters.',
              },
            },
          },
        },
        '404': {
          description: 'The lead form ID for the given ad account ID does not exist.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 4842,
                message: 'Lead form is not found.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['lead_forms'],
    },
  },
  '/ad_accounts/{ad_account_id}/lead_forms/{lead_form_id}/test': {
    post: {
      summary: 'Create lead form test data',
      description:
        "Create lead form test data based on the list of answers provided as part of the body.\n- List of answers should follow the questions creation order.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
      operationId: 'lead_form_test/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_lead_form_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/LeadFormTestRequest',
            },
          },
        },
        description: 'Subscription to create.',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadFormTestResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 1,
                message: 'Invalid parameters.',
              },
            },
          },
        },
        '404': {
          description: 'Lead not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 4842,
                message: 'Lead not found.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['lead_forms'],
    },
  },
  '/ad_accounts/{ad_account_id}/leads/subscriptions': {
    post: {
      summary: 'Create lead ads subscription',
      description:
        "Create a lead ads webhook subscription.\nSubscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n- Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records.\n- For data security, egress lead data is encrypted with AES-256-GCM.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
      tags: ['lead_ads'],
      operationId: 'ad_accounts_subscriptions/post',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdAccountCreateSubscriptionRequest',
            },
          },
        },
        description: 'Subscription to create.',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccountCreateSubscriptionResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid input parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 1,
                message: 'Advertiser ID must be numeric.',
              },
            },
          },
        },
        '403': {
          description: "Can't access this subscription.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 4182,
                    message: "Can't access this subscription.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
    get: {
      summary: 'Get lead ads subscriptions',
      description:
        "Get the advertiser's list of lead ads subscriptions.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
      operationId: 'ad_accounts_subscriptions/get_list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/AdAccountGetSubscriptionResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '403': {
          description: "Can't access this subscription.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['lead_ads'],
    },
  },
  '/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}': {
    get: {
      summary: 'Get lead ads subscription',
      description:
        "Get a specific lead ads subscription record.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
      operationId: 'ad_accounts_subscriptions/get_by_id',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_subscription_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccountGetSubscriptionResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid input parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 1,
                message: 'Advertiser ID must be numeric.',
              },
            },
          },
        },
        '403': {
          description: "Can't access this subscription.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Subscription not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CommerceIntegrationNotFound: {
                  value: {
                    code: 4517,
                    message: 'Subscription for given ids not found.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['lead_ads'],
    },
    delete: {
      summary: 'Delete lead ads subscription',
      description:
        "Delete an existing lead ads webhook subscription by ID.\n- Only requests for the OWNER or ADMIN of the ad_account will be allowed.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
      operationId: 'ad_accounts_subscriptions/del_by_id',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_subscription_id',
        },
      ],
      responses: {
        '204': {
          description: 'Subscription deleted successfully',
        },
        '400': {
          description: 'Invalid input parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 1,
                message: 'Advertiser ID must be numeric.',
              },
            },
          },
        },
        '403': {
          description: 'You are not authorized to delete this subscription.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Subscription not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CommerceIntegrationNotFound: {
                  value: {
                    code: 4517,
                    message: 'Subscription for given ids not found.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['lead_ads'],
    },
  },
  '/ad_accounts/{ad_account_id}/leads_export': {
    post: {
      'x-sandbox': 'disabled',
      description:
        '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nCreate an export of leads collected from a lead ad. This returns a lead_export_id  token that you can use to download the export when it is ready.\n\nNote: Lead ad data will be available up to 30 days after the lead has been submitted.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.',
      summary: 'Create a request to export leads collected from a lead ad',
      operationId: 'leads_export/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/LeadsExportCreateRequest',
            },
          },
        },
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadsExportCreateResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account parameter.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account parameter.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['leads_export'],
    },
  },
  '/ad_accounts/{ad_account_id}/leads_export/{leads_export_id}': {
    get: {
      'x-sandbox': 'disabled',
      description:
        '<strong>This feature is currently in beta and not available to all apps, if you\'re interested in joining the beta, please reach out to your Pinterest account manager.</strong>\n\nGet the export of leads collected from a lead ad. This returns a URL to a list of lead export given a lead_export_id token returned from the create a lead export call. You can use the URL to download the report.\n\nNote: Lead ad data will be available up to 30 days after the lead has been submitted.\n\nFor more, see <a class="reference external" href="https://help.pinterest.com/en/business/article/lead-ads">Lead ads</a>.',
      summary: 'Get the lead export from the lead export create call',
      operationId: 'leads_export/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          name: 'leads_export_id',
          in: 'path',
          description: 'lead_export_id token returned from the create a lead export endpoint',
          example: '123755885175',
          required: true,
          schema: {
            type: 'string',
            pattern: '^\\d+$',
          },
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/LeadsExportResponseData',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account parameter.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account parameter.',
              },
            },
          },
        },
        '404': {
          description: 'Invalid leads export id parameter.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 404,
                message: 'Invalid leads export id parameter.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['leads_export'],
    },
  },
  '/ad_accounts/{ad_account_id}/mmm_reports': {
    get: {
      summary: 'Get advertiser Marketing Mix Modeling (MMM) report.',
      description:
        'Get an mmm report for an ad account. This returns a URL to an mmm metrics report given a token returned from the\ncreate mmm report endpoint.',
      operationId: 'analytics/get_mmm_report',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_token_required',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/GetMMMReportResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account ads analytics parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account ads analytics parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_accounts'],
    },
    post: {
      summary: 'Create a request for a Marketing Mix Modeling (MMM) report',
      description:
        "This creates an asynchronous mmm report based on the given request. It returns a token that you can use to download\nthe report when it is ready. NOTE: An additional limit of 5 queries per minute per advertiser applies to this endpoint while it's in beta release.",
      operationId: 'analytics/create_mmm_report',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CreateMMMReportRequest',
            },
          },
        },
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CreateMMMReportResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account ads analytics mmm parameters',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account ads analytics mmm parameters',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_accounts'],
    },
  },
  '/ad_accounts/{ad_account_id}/order_lines': {
    get: {
      summary: 'Get order lines',
      description: 'List existing order lines associated with an ad account.',
      operationId: 'order_lines/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_order',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/OrderLine',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['order_lines'],
    },
  },
  '/ad_accounts/{ad_account_id}/order_lines/{order_line_id}': {
    get: {
      summary: 'Get order line',
      description: 'Get a specific existing order line associated with an ad account.',
      operationId: 'order_lines/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_order_line_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/OrderLine',
              },
            },
          },
          description: 'Success',
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['order_lines'],
    },
  },
  '/ad_accounts/{ad_account_id}/product_group_promotions': {
    post: {
      description:
        "Add one or more product groups from your catalog to an existing ad group. (Product groups added to an ad group are a 'product group promotion.')",
      operationId: 'product_group_promotions/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/ProductGroupPromotionCreateRequest',
            },
          },
        },
        description: 'List of Product Group Promotions to create, size limit [1, 30].',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ProductGroupPromotionResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Create product group promotions',
      tags: ['product_group_promotions'],
    },
    patch: {
      description: 'Update multiple existing Product Group Promotions (by product_group_id)',
      operationId: 'product_group_promotions/update',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/ProductGroupPromotionUpdateRequest',
            },
          },
        },
        description: 'Parameters to update Product group promotions',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ProductGroupPromotionResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Update product group promotions',
      tags: ['product_group_promotions'],
    },
    get: {
      description:
        'List existing product group promotions associated with an ad account.\n\nInclude either ad_group_id or product_group_promotion_ids in your request.\n\n<b>Note:</b> ad_group_ids and product_group_promotion_ids are mutually exclusive parameters.\nOnly provide one. If multiple options are provided, product_group_promotion_ids takes precedence over ad_group_ids. If none are provided, the endpoint returns an error.',
      operationId: 'product_group_promotions/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_product_group_promotion_ids',
        },
        {
          $ref: '#/components/parameters/query_entity_statuses',
        },
        {
          $ref: '#/components/parameters/query_ad_group_id',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_order',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/ProductGroupPromotionResponseItem',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Get product group promotions',
      tags: ['product_group_promotions'],
    },
  },
  '/ad_accounts/{ad_account_id}/product_group_promotions/{product_group_promotion_id}': {
    get: {
      description: 'Get a product group promotion by id',
      operationId: 'product_group_promotions/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_product_group_promotion_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ProductGroupPromotionResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Get a product group promotion by id',
      tags: ['product_group_promotions'],
    },
  },
  '/ad_accounts/{ad_account_id}/product_groups/analytics': {
    get: {
      summary: 'Get product group analytics',
      description:
        'Get analytics for the specified product groups in the specified <code>ad_account_id</code>, filtered by the specified options.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.',
      operationId: 'product_groups/analytics',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_product_group_ids_required',
        },
        {
          $ref: '#/components/parameters/query_columns',
        },
        {
          $ref: '#/components/parameters/query_granularity',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/ProductGroupAnalyticsResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account ads analytics parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account ads analytics parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['product_group_promotions'],
    },
  },
  '/ad_accounts/{ad_account_id}/reports': {
    get: {
      summary: 'Get the account analytics report created by the async call',
      description:
        'This returns a URL to an analytics report given a token returned from the post request report creation call. You can use the URL to download the report. The link is valid for five minutes and the report is valid for one hour.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.',
      operationId: 'analytics/get_report',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_token_required',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdsAnalyticsGetAsyncResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account ads analytics parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account ads analytics parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_accounts'],
    },
    post: {
      summary: 'Create async request for an account analytics report',
      description:
        'This returns a token that you can use to download the report when it is ready. Note that this endpoint requires the parameters to be passed as JSON-formatted in the request body. This endpoint does not support URL query parameters.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 914 days before the current date in UTC time and the max time range supported is 186 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.\n- If level is PRODUCT_ITEM, the furthest back you can are allowed to pull data is 92 days before the current date in UTC time and the max time range supported is 31 days.\n- If level is PRODUCT_ITEM, ad_ids and ad_statuses parameters are not allowed. Any columns related to pin promotion and ad is not allowed either.',
      operationId: 'analytics/create_report',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdsAnalyticsCreateAsyncRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdsAnalyticsCreateAsyncResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account ads analytics parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account ads analytics parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_accounts'],
    },
  },
  '/ad_accounts/{ad_account_id}/sandbox': {
    delete: {
      summary: 'Delete ads data for ad account in API Sandbox',
      description:
        'Delete an ad account and all the ads data associated with that account.\nA string message is returned indicating the status of the delete operation.\n\nNote: This endpoint is only allowed in the Pinterest API Sandbox (https://api-sandbox.pinterest.com/v5).\nGo to /docs/developer-tools/sandbox/ for more information.',
      operationId: 'sandbox/delete',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      responses: {
        '200': {
          description: 'OK',
          content: {
            'application/json': {
              schema: {
                type: 'string',
                example: 'Delete Success',
              },
            },
          },
        },
        '400': {
          description: 'Invalid ad account id.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account id',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_accounts'],
    },
  },
  '/ad_accounts/{ad_account_id}/ssio/accounts': {
    get: {
      summary: 'Get Salesforce account details including bill-to information.',
      description:
        'Get Salesforce account details including bill-to information to be used in insertion orders process for <code>ad_account_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.',
      operationId: 'ssio_accounts/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SSIOAccountResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid request parameter.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid request parameter.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['billing'],
    },
  },
  '/ad_accounts/{ad_account_id}/ssio/insertion_orders': {
    post: {
      summary: 'Create insertion order through SSIO.',
      description:
        'Create insertion order through SSIO for <code>ad_account_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.',
      operationId: 'ssio_insertion_order/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/SSIOCreateInsertionOrderRequest',
            },
          },
        },
        description: 'Order line to create.',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SSIOCreateInsertionOrderResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid request.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid request.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['billing'],
    },
    patch: {
      summary: 'Edit insertion order through SSIO.',
      description:
        'Edit insertion order through SSIO for <code>ad_account_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.',
      operationId: 'ssio_insertion_order/edit',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/SSIOEditInsertionOrderRequest',
            },
          },
        },
        description: 'Order line to create.',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SSIOEditInsertionOrderResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid request.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid request.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['billing'],
    },
  },
  '/ad_accounts/{ad_account_id}/ssio/insertion_orders/status': {
    get: {
      summary: 'Get insertion order status by ad account id.',
      description:
        'Get insertion order status for account id <code>ad_account_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.',
      operationId: 'ssio_insertion_orders_status/get_by_ad_account',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'Insertion orders status by ad acount id',
                        items: {
                          $ref: '#/components/schemas/SSIOInsertionOrderStatus',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid request parameter.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid request parameter.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['billing'],
    },
  },
  '/ad_accounts/{ad_account_id}/ssio/insertion_orders/{pin_order_id}/status': {
    get: {
      summary: 'Get insertion order status by pin order id.',
      description:
        'Get insertion order status for pin order id <code>pin_order_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.',
      operationId: 'ssio_insertion_orders_status/get_by_pin_order_id',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_pin_order_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SSIOInsertionOrderStatusResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid request parameter.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid request parameter.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['billing'],
    },
  },
  '/ad_accounts/{ad_account_id}/ssio/order_lines': {
    get: {
      summary: 'Get Salesforce order lines by ad account id.',
      description:
        'Get Salesforce order lines for account id <code>ad_account_id</code>.\n- The token\'s user_account must either be the Owner of the specified ad account, or have one of the necessary roles granted to them via <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Finance, Campaign.',
      operationId: 'ssio_order_lines/get_by_ad_account',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_pin_order_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'SSIO order lines by ad acount id',
                        items: {
                          $ref: '#/components/schemas/SSIOOrderLine',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid request parameter.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid request parameter.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['billing'],
    },
  },
  '/ad_accounts/{ad_account_id}/targeting_analytics': {
    get: {
      summary: 'Get targeting analytics for an ad account',
      description:
        'Get targeting analytics for an ad account.\nFor the requested account and metrics, the response will include the requested metric information\n(e.g. SPEND_IN_DOLLAR) for the requested target type (e.g. "age_bucket") for applicable values (e.g. "45-49"). <p/>\n- The token\'s user_account must either be the Owner of the specified ad account, or have one\nof the necessary roles granted to them via\n<a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a>: Admin, Analyst, Campaign Manager.\n- If granularity is not HOUR, the furthest back you can are allowed to pull data is 90 days before the current date in UTC time and the max time range supported is 90 days.\n- If granularity is HOUR, the furthest back you can are allowed to pull data is 8 days before the current date in UTC time and the max time range supported is 3 days.',
      operationId: 'ad_account_targeting_analytics/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_targeting_types',
        },
        {
          $ref: '#/components/parameters/query_columns',
        },
        {
          $ref: '#/components/parameters/query_granularity',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_click_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_engagement_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_view_window_days',
        },
        {
          $ref: '#/components/parameters/query_conversion_attribution_conversion_report_time',
        },
        {
          $ref: '#/components/parameters/query_attribution_types',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MetricsResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_accounts'],
    },
  },
  '/ad_accounts/{ad_account_id}/targeting_templates': {
    get: {
      summary: 'List targeting templates',
      description: 'Get a list of the targeting templates in the specified <code>ad_account_id</code>',
      operationId: 'targeting_template/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_order',
        },
        {
          in: 'query',
          description: 'Include audience sizing in result or not',
          name: 'include_sizing',
          required: false,
          schema: {
            type: 'boolean',
            default: false,
          },
        },
        {
          description: 'Search keyword for targeting templates',
          in: 'query',
          name: 'search_query',
          example: 'gaming',
          required: false,
          schema: {
            type: 'string',
          },
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/TargetingTemplateResponseData',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account id.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account id',
              },
            },
          },
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['targeting_template'],
    },
    post: {
      summary: 'Create targeting templates',
      description:
        '<p>Targeting templates allow advertisers to save a set of targeting details including audience lists,\n keywords & interest, demographics, and placements to use more than once during the campaign creation process.</p>\n <p>Templates can be used to build out basic targeting criteria that you plan to use across campaigns and to reuse\n  performance targeting from prior campaigns for new campaigns.</p>',
      operationId: 'targeting_template/create',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        description: 'targeting template creation entity',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/TargetingTemplateCreate',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TargetingTemplateGetResponseData',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account id.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account id',
              },
            },
          },
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['targeting_template'],
    },
    patch: {
      summary: 'Update targeting templates',
      description: '<p>Update the targeting template given advertiser ID and targeting template ID</p>',
      operationId: 'targeting_template/update',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Operation type and targeting template ID',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/TargetingTemplateUpdateRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account id.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account id',
              },
            },
          },
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['targeting_template'],
    },
  },
  '/ad_accounts/{ad_account_id}/templates': {
    get: {
      summary: 'List templates',
      description: 'Gets all Templates associated with an ad account ID.',
      operationId: 'templates/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_order',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/TemplateResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account template parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account template parameters',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_accounts'],
    },
  },
  '/ad_accounts/{ad_account_id}/templates/{template_id}/reports': {
    post: {
      summary: 'Create async request for an analytics report using a template',
      description:
        'This takes a template ID and an optional custom timeframe and constructs an asynchronous report based on the\ntemplate. It returns a token that you can use to download the report when it is ready.',
      operationId: 'analytics/create_template_report',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/path_template_id',
        },
        {
          $ref: '#/components/parameters/query_start_date_async',
        },
        {
          $ref: '#/components/parameters/query_end_date_async',
        },
        {
          $ref: '#/components/parameters/query_granularity_async',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdsAnalyticsCreateAsyncResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid ad account ads analytics template parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account analytics template parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['ad_accounts'],
    },
  },
  '/ad_accounts/{ad_account_id}/terms_of_service': {
    get: {
      description:
        'Get the text of the terms of service and see whether the advertiser has accepted the terms of service.',
      operationId: 'terms_of_service/get',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_include_html',
        },
        {
          $ref: '#/components/parameters/query_tos_type',
        },
      ],
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TermsOfService',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: 'Get terms of service',
      tags: ['terms_of_service'],
    },
  },
  '/advanced_auction/items/get': {
    post: {
      summary: 'Get item bid options (POST)',
      description:
        'Get the bid options for a batch of retail catalog items.\n\nThe catalog must be owned by the "operation user_account". <a href="/docs/api-features/shopping-overview/#Update%20items%20in%20batch" target="_blank">See detailed documentation here.</a> By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: `Owner`, `Admin`.\n\nThis endpoint is not available to all users.',
      operationId: 'advanced_auction_items_get/post',
      'x-ratelimit-category': 'advanced_auction_read',
      'x-sandbox': 'enabled',
      security: [
        {
          pinterest_oauth2: ['ads:read', 'catalogs:read'],
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Request object used to get bid options values for a batch of retail catalog items',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdvancedAuctionItemsGetRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          description:
            "Response containing the bid option values for the requested retail catalog items. Items that don't exist or do not have bid options set won't be present in the response.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdvancedAuctionItems',
              },
            },
          },
        },
        '400': {
          description: 'Invalid request parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "Invalid request: {'catalog_id': '1234'} list of retail catalog items not provided",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Not authenticated to get item bid options',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthenticatedAccess: {
                  value: {
                    code: 2,
                    message: 'Authentication failed.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to get item bid options',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        '500': {
          description: 'Internal error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['advanced_auction'],
    },
  },
  '/advanced_auction/items/submit': {
    post: {
      summary: 'Operate on item level bid options',
      description:
        'This endpoint supports multiple operations on a set of one or more bid options (bid price and bid adjustments for targeting categories) for retail catalog items. These advanced auction settings are applied in campaigns using objective_type `CATALOG_SALES` and ad groups using bid_strategy_type `MAX_BID`.\n\nThe catalog must be owned by the "operation user_account". <a href="/docs/api-features/modify-items-in-batch/" target="_blank">See detailed documentation here.</a> By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: `Owner`, `Admin`.\n\nThis endpoint is not available to all users.',
      operationId: 'advanced_auction_items_submit/post',
      'x-ratelimit-category': 'advanced_auction_write',
      'x-sandbox': 'enabled',
      security: [
        {
          pinterest_oauth2: ['ads:write', 'catalogs:read'],
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Request object used to upsert or delete bid options for a batch of retail catalog items',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AdvancedAuctionItemsSubmitRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'Response containing the results of the item bid options operations',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdvancedAuctionProcessedItems',
              },
            },
          },
        },
        '400': {
          description: 'Invalid request parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "Invalid request: {'catalog_id': '1234'} list of item bid option operations not provided",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Not authenticated to post item bid options',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthenticatedAccess: {
                  value: {
                    code: 2,
                    message: 'Authentication failed.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to post item bid options',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        '500': {
          description: 'Internal error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['advanced_auction'],
    },
  },
  '/boards': {
    get: {
      summary: 'List boards',
      description:
        'Get a list of the boards owned by the "operation user_account" + group boards where this account is a collaborator\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\nOptional: Specify a privacy type (public, protected, or secret) to indicate which boards to return.\n- If no privacy is specified, all boards that can be returned (based on the scopes of the token and ad_account role if applicable) will be returned.',
      tags: ['boards'],
      operationId: 'boards/list',
      security: [
        {
          pinterest_oauth2: ['boards:read'],
        },
        {
          client_credentials: ['boards:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      'x-codeSamples': [
        {
          lang: 'cURL',
          label: 'curl',
          source:
            "curl --location --request GET 'https://api.pinterest.com/v5/boards' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n",
        },
        {
          lang: 'cURL',
          label: 'curl (Sandbox)',
          source:
            "curl --location --request GET 'https://api-sandbox.pinterest.com/v5/boards' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n",
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          name: 'privacy',
          description: 'Privacy setting for a board.',
          in: 'query',
          required: false,
          schema: {
            type: 'string',
            enum: ['ALL', 'PROTECTED', 'PUBLIC', 'SECRET', 'PUBLIC_AND_SECRET'],
          },
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'Boards',
                        items: {
                          $ref: '#/components/schemas/Board',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
    post: {
      summary: 'Create board',
      description:
        'Create a board owned by the "operation user_account".\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.',
      tags: ['boards'],
      operationId: 'boards/create',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      'x-codeSamples': [
        {
          lang: 'python',
          label: 'Python SDK',
          source:
            '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.boards import Board\n\nboard_create=Board.create(\n  name="Summer Recipes",\n  description="My favorite summer recipes",\n  privacy="PUBLIC"\n)\nprint("Board Id: %s, Board name:%s"%(board_create.id, board_create.name))\n',
        },
        {
          lang: 'cURL',
          label: 'curl',
          source:
            'curl --location --request POST \'https://api.pinterest.com/v5/boards\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "name": "Summer Recipes",\n      "description": "My favorite summer recipes",\n      "privacy": "PUBLIC"\n}\'\n',
        },
        {
          lang: 'cURL',
          label: 'curl (Sandbox)',
          source:
            'curl --location --request POST \'https://api-sandbox.pinterest.com/v5/boards\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "name": "Summer Recipes",\n      "description": "My favorite summer recipes",\n      "privacy": "PUBLIC"\n}\'\n',
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Create a board using a single board json object.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/Board',
            },
          },
        },
      },
      responses: {
        '201': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Board',
              },
            },
          },
        },
        '400': {
          description: 'The board name is invalid or duplicated.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'The board name is invalid or duplicated.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/boards/{board_id}': {
    get: {
      summary: 'Get board',
      description:
        'Get a board owned by the operation user_account - or a group board that has been shared with this account.\n- Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.',
      tags: ['boards'],
      operationId: 'boards/get',
      security: [
        {
          pinterest_oauth2: ['boards:read'],
        },
        {
          client_credentials: ['boards:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      'x-codeSamples': [
        {
          lang: 'python',
          label: 'Python SDK',
          source:
            '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.boards import Board\n# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\nBOARD_ID="<Add your board id here>"\n\nboard_get = Board(board_id=BOARD_ID)\nprint("Board Id: %s, Board name:%s"%(board_get.id, board_get.name))\n',
        },
        {
          lang: 'cURL',
          label: 'curl',
          source:
            "# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request GET 'https://api.pinterest.com/v5/boards/<insert_your_board_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n",
        },
        {
          lang: 'cURL',
          label: 'curl (Sandbox)',
          source:
            "# Board information can be fetched from profile page or from create/ist board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request GET 'https://api-sandbox.pinterest.com/v5/boards/<insert_your_board_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n",
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Board',
              },
            },
          },
        },
        '404': {
          description: 'Board not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 404,
                message: 'Board not found.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
    patch: {
      summary: 'Update board',
      description:
        'Update a board owned by the "operating user_account".\n- Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.',
      tags: ['boards'],
      operationId: 'boards/update',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      'x-codeSamples': [
        {
          lang: 'python',
          label: 'Python SDK',
          source:
            '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.boards import Board\n# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\nBOARD_ID="<Add your board id here>"\nNEW_DESCRIPTION="Updated summer recipes!"\nNEW_PRIVACY="SECRET"\n\nboard_update = Board(board_id=BOARD_ID)\nboard_update.update_fields(\n    description=NEW_DESCRIPTION,\n    privacy=NEW_PRIVACY\n)\nprint("Board Id: %s, Board description:%s, Board privacy:%s" %(board_update.id, board_update.description, board_update.privacy))\n',
        },
        {
          lang: 'cURL',
          label: 'curl',
          source:
            '# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request PATCH \'https://api.pinterest.com/v5/boards/<insert_board_id>\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "name": "New Summer Recipes",\n      "description": "Updated summer recipes!",\n      "privacy": "SECRET"\n}\'\n',
        },
        {
          lang: 'cURL',
          label: 'curl (Sandbox)',
          source:
            '# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request PATCH \'https://api-sandbox.pinterest.com/v5/boards/<insert_board_id>\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "name": "New Summer Recipes",\n      "description": "Updated summer recipes!",\n      "privacy": "SECRET"\n}\'\n',
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Update a board.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BoardUpdate',
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Board',
              },
            },
          },
        },
        '400': {
          description: 'Invalid board parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid board parameters.',
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to update the board.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to update the board.',
              },
            },
          },
        },
        '429': {
          description:
            'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 8,
                message:
                  'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
    delete: {
      summary: 'Delete board',
      description:
        'Delete a board owned by the "operation user_account".\n- Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.',
      tags: ['boards'],
      operationId: 'boards/delete',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      'x-codeSamples': [
        {
          lang: 'python',
          label: 'Python SDK',
          source:
            '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.boards import Board\n# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\nBOARD_ID="<Add your board id here>"\n\nboard_delete=Board.delete(board_id=BOARD_ID)\nprint("Board was deleted? %s" % (board_delete))\n',
        },
        {
          lang: 'cURL',
          label: 'curl',
          source:
            "# Board information can be fetched from profile page or create/from list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --request DELETE 'https://api.pinterest.com/v5/boards/<insert_board_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n",
        },
        {
          lang: 'cURL',
          label: 'curl (Sandbox)',
          source:
            "# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --request DELETE 'https://api-sandbox.pinterest.com/v5/boards/<insert_board_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n",
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '204': {
          description: 'Board deleted successfully',
        },
        '403': {
          description: 'Not authorized to delete the board.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to delete the board.',
              },
            },
          },
        },
        '404': {
          description: 'Board not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 404,
                message: 'Board not found.',
              },
            },
          },
        },
        '409': {
          description: 'Could not get exclusive access to delete the board.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 409,
                message: 'Could not get exclusive access to delete the board.',
              },
            },
          },
        },
        '429': {
          description:
            'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 8,
                message:
                  'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/boards/{board_id}/pins': {
    get: {
      summary: 'List Pins on board',
      description:
        'Get a list of the Pins on a board owned by the "operation user_account" - or on a group board that has been shared with this account.\n- Optional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.',
      tags: ['boards'],
      operationId: 'boards/list_pins',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'],
        },
        {
          client_credentials: ['boards:read', 'pins:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_creative_types',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_pin_metrics',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'Pins',
                        items: {
                          $ref: '#/components/schemas/Pin',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        '404': {
          description: 'Board not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 404,
                message: 'Board not found.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/boards/{board_id}/sections': {
    get: {
      summary: 'List board sections',
      description:
        'Get a list of all board sections from a board owned by the "operation user_account" - or a group board that has been shared with this account.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.',
      tags: ['boards'],
      operationId: 'board_sections/list',
      security: [
        {
          pinterest_oauth2: ['boards:read'],
        },
        {
          client_credentials: ['boards:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'Board sections',
                        items: {
                          $ref: '#/components/schemas/BoardSection',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
    post: {
      summary: 'Create board section',
      description:
        'Create a board section on a board owned by the "operation user_account" - or on a group board that has been shared with this account.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.',
      tags: ['boards'],
      operationId: 'board_sections/create',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Create a board section.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BoardSection',
            },
          },
        },
      },
      responses: {
        '201': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BoardSection',
              },
            },
          },
        },
        '400': {
          description: 'Invalid board section parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid board section parameters.',
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to create board sections.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to create board sections.',
              },
            },
          },
        },
        '409': {
          description: 'Could not get exclusive access to the board to create a new section.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 409,
                message: 'Could not get exclusive access to the board to create a new section.',
              },
            },
          },
        },
        '500': {
          description: 'Could not create a new board section.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 500,
                message: 'Could not create a new board section.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/boards/{board_id}/sections/{section_id}': {
    patch: {
      summary: 'Update board section',
      description:
        'Update a board section on a board owned by the "operation user_account" - or on a group board that has been shared with this account.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.',
      tags: ['boards'],
      operationId: 'board_sections/update',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id',
        },
        {
          $ref: '#/components/parameters/path_board_section_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Update a board section.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BoardSection',
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BoardSection',
              },
            },
          },
        },
        '400': {
          description: 'Invalid board section parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid board section parameters.',
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to update board section.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to update board section.',
              },
            },
          },
        },
        '409': {
          description: 'Board section conflict.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 409,
                message: 'Board section conflict.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
    delete: {
      summary: 'Delete board section',
      description:
        'Delete a board section on a board owned by the "operation user_account" - or on a group board that has been shared with this account.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.',
      tags: ['boards'],
      operationId: 'board_sections/delete',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id',
        },
        {
          $ref: '#/components/parameters/path_board_section_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '204': {
          description: 'Board section deleted successfully',
        },
        '403': {
          description: 'Not authorized to delete board section.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to delete board section.',
              },
            },
          },
        },
        '404': {
          description: 'Board section not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 404,
                message: 'Board section not found.',
              },
            },
          },
        },
        '409': {
          description: 'Board section conflict.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 409,
                message: 'Board section conflict.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/boards/{board_id}/sections/{section_id}/pins': {
    get: {
      summary: 'List Pins on board section',
      description:
        'Get a list of the Pins on a board section of a board owned by the "operation user_account" - or on a group board that has been shared with this account.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n- By default, the "operation user_account" is the token user_account.',
      tags: ['boards'],
      operationId: 'board_sections/list_pins',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'],
        },
        {
          client_credentials: ['boards:read', 'pins:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_board_id',
        },
        {
          $ref: '#/components/parameters/path_board_section_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'Pins',
                        items: {
                          $ref: '#/components/schemas/Pin',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to access Pins on board section.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to access Pins on board section.',
              },
            },
          },
        },
        '404': {
          description: 'Board or section not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 404,
                message: 'Board or section not found.',
              },
            },
          },
        },
        '409': {
          description: 'Board section conflict.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 409,
                message: 'Board section conflict.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/businesses/employers': {
    get: {
      summary: 'List business employers for user',
      description: "Get all of the viewing user's business employers.",
      operationId: 'get/business_employers',
      security: [
        {
          pinterest_oauth2: ['biz_access:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        description: 'List of employers.',
                        items: {
                          $ref: '#/components/schemas/UserBusinessRoleBinding',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_relationships'],
    },
  },
  '/businesses/invites': {
    patch: {
      summary: 'Accept or decline an invite/request',
      description: 'Accept or decline invites or requests.',
      operationId: 'respond_business_access_invites',
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/AuthRespondInvitesBody',
            },
          },
        },
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/RespondToInvitesResponseArray',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_invite'],
    },
  },
  '/businesses/{business_id}/assets/{asset_id}/members': {
    get: {
      summary: 'Get members with access to asset',
      description: 'Get all the members the requesting business has granted access to on the given asset.',
      operationId: 'business_asset_members/get',
      security: [
        {
          pinterest_oauth2: ['biz_access:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
        {
          $ref: '#/components/parameters/path_asset_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        description: 'List of members with permissions to the asset.',
                        items: {
                          $ref: '#/components/schemas/UserSingleAssetBinding',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Sucess',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
  },
  '/businesses/{business_id}/assets/{asset_id}/partners': {
    get: {
      summary: 'Get partners with access to asset',
      description:
        'Get all the partners the requesting business has granted access to on the given asset.\nNote: If the asset has been shared with you, an empty array will be returned. This is because an asset shared with\nyou cannot be shared with a different partner.',
      operationId: 'business_asset_partners/get',
      security: [
        {
          pinterest_oauth2: ['biz_access:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
        {
          $ref: '#/components/parameters/path_asset_id',
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        description: 'List of partners with permissions to the asset.',
                        items: {
                          $ref: '#/components/schemas/UserSingleAssetBinding',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Sucess',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
  },
  '/businesses/{business_id}/invites/assets/access': {
    post: {
      summary: 'Update invite/request with an asset permission',
      description:
        'Assign asset permissions information to an existing invite/request. Can be used to:\n- Request access to a partner\'s asset. Note: This is only for when no existing partnership exists. If an existing\n  partnership exists, use "Create a request to access an existing partner\'s assets" to request access to your\n  partner\'s assets.\n    - invite_type="PARTNER_REQUEST"\n- Invite a partner to access your business assets. Note: This is only for when there is no existing partnership.\n  If there is an existing partnership, use "Assign/Update partner asset permissions" to assign a partner access to\n  new assets.\n    - invite_type="PARTNER_INVITE"\n- Invite a member to access your business assets. Note: This is only for when there is no existing membership.\n  If there is an existing membership, use "Assign/Update member asset permissions" to assign a member access to new\n  assets.\n    - invite_type="MEMBER_INVITE"\n\nTo learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview.',
      operationId: 'create_asset_invites',
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CreateAssetInvitesRequest',
            },
          },
        },
        description:
          'A list of invites/requests together with the asset permissions to be assigned to the invite/request.\n',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UpdateInvitesResultsResponseArray',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_invite'],
    },
  },
  '/businesses/{business_id}/requests/assets/access': {
    post: {
      summary: "Create a request to access an existing partner's assets.",
      description:
        "Create a request to access an existing partner's assets with the specified permissions. The request will be sent to the partner for approval. The assets that can be requested are ad accounts and profiles.",
      operationId: 'asset_access_requests/create',
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CreateAssetAccessRequestBody',
            },
          },
        },
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CreateAssetAccessRequestResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_invite'],
    },
  },
  '/businesses/{business_id}/members': {
    get: {
      summary: 'Get business members',
      description:
        "Get all members of the specified business.\nThe return response will include the member's business_role and assets they have access to if assets_summary=TRUE",
      operationId: 'get/business_members',
      security: [
        {
          pinterest_oauth2: ['biz_access:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
        {
          $ref: '#/components/parameters/query_assets_summary',
        },
        {
          name: 'business_roles',
          in: 'query',
          description:
            'A list of business roles to filter the members by. Only members whose roles are in the specified roles will be returned.',
          required: false,
          schema: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/MemberBusinessRole',
            },
          },
        },
        {
          name: 'member_ids',
          in: 'query',
          description: 'A list of business members ids separated by comma.',
          example: '00101010101,2222220101',
          required: false,
          schema: {
            type: 'string',
            maxLength: 500,
          },
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        description: 'List of business members.',
                        items: {
                          $ref: '#/components/schemas/UserBusinessRoleBinding',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_relationships'],
    },
    patch: {
      description: "Update a member's business role within the business.",
      summary: "Update member's business role",
      operationId: 'update/business_memberships',
      security: [
        {
          pinterest_oauth2: ['biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              type: 'array',
              minItems: 1,
              items: {
                $ref: '#/components/schemas/UpdateMemberBusinessRoleBody',
              },
            },
          },
        },
        description: 'List of objects with the member id and the business_role.',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UpdateMemberResultsResponseArray',
              },
            },
          },
          description: 'response',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_relationships'],
    },
    delete: {
      description: 'Terminate memberships between the specified members and your business.',
      summary: 'Terminate business memberships',
      operationId: 'delete_business_membership',
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/MembersToDeleteBody',
            },
          },
        },
        description: 'List of members with role to delete.',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeletedMembersResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_relationships'],
    },
  },
  '/businesses/{business_id}/assets': {
    get: {
      summary: 'List business assets',
      description:
        'Get all the assets the requesting business has access to. This includes assets the business owns and assets the business has access to through partnerships.',
      operationId: 'business_assets/get',
      security: [
        {
          pinterest_oauth2: ['biz_access:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
        {
          name: 'permissions',
          in: 'query',
          description:
            'A list of asset permissions used to filter the assets. Only assets where the requesting business has at least one of the specified permissions will be returned.',
          required: false,
          schema: {
            type: 'array',
            items: {
              $ref: '#/components/schemas/PermissionsWithOwner',
            },
          },
        },
        {
          name: 'child_asset_id',
          in: 'query',
          description:
            'A child asset unique identifier. Used to fetch asset groups that contain the asset id as a child.',
          required: false,
          schema: {
            type: 'string',
            pattern: '^\\d+$',
            example: '549764894835',
            minLength: 1,
            maxLength: 20,
          },
        },
        {
          name: 'asset_group_id',
          in: 'query',
          description:
            'An asset group unique identifier. Used to fetch assets contained within the specified asset group.',
          required: false,
          schema: {
            type: 'string',
            pattern: '^\\d+$',
            example: '7078106104032',
            minLength: 1,
            maxLength: 20,
          },
        },
        {
          $ref: '#/components/parameters/query_resource_type',
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        description: 'List of assets the requesting business has access to.',
                        items: {
                          $ref: '#/components/schemas/GetBusinessAssetsResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
  },
  '/businesses/{business_id}/members/{member_id}/assets': {
    get: {
      summary: 'Get assets assigned to a member',
      description:
        'Get assets on which you assigned asset permissions to the given member. Can be used to:\n- get all assets, regardless of asset type or\n- get assets of one asset type by using the asset_type query.\nThe return response will include the permissions the member has to that asset and the asset type.',
      operationId: 'business_member_assets/get',
      security: [
        {
          pinterest_oauth2: ['biz_access:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
        {
          $ref: '#/components/parameters/path_business_member_user',
        },
        {
          $ref: '#/components/parameters/query_resource_type',
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        description: 'List asset permissions the given member was granted.',
                        items: {
                          $ref: '#/components/schemas/AssetIdPermissions',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
  },
  '/businesses/{business_id}/members/assets/access': {
    patch: {
      description:
        "Grant multiple members access to assets and/or update multiple member's exisiting permissions to an asset.\nNote: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be applicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of the type PROFILE.\n",
      summary: 'Assign/Update member asset permissions',
      operationId: 'business_members_asset_access/update',
      security: [
        {
          pinterest_oauth2: ['biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/UpdateMemberAssetAccessBody',
            },
          },
        },
        description: 'List of member asset permissions to create or update.',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UpdateMemberAssetsResultsResponseArray',
              },
            },
          },
          description: 'response',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
    delete: {
      description: "Terminate multiple members' access to an asset.",
      summary: 'Delete member access to asset',
      operationId: 'business_members_asset_access/delete',
      security: [
        {
          pinterest_oauth2: ['biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              type: 'object',
              required: ['accesses'],
              properties: {
                accesses: {
                  type: 'array',
                  minItems: 1,
                  maxItems: 100,
                  description: 'List of members asset access to be deleted',
                  items: {
                    type: 'object',
                    required: ['asset_id', 'member_id'],
                    properties: {
                      asset_id: {
                        type: 'string',
                        description: 'Id of the asset on which to remove member permissions.',
                        example: '549755885175',
                        maxLength: 25,
                        pattern: '^\\d+$',
                      },
                      member_id: {
                        type: 'string',
                        description: 'Unique identifier of the member on which to perform the asset permission removal',
                        example: '140943737684417',
                        maxLength: 25,
                        pattern: '^\\d+$',
                      },
                    },
                  },
                },
              },
            },
          },
        },
        description: 'List member assset permissions to delete.',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeleteMemberAccessResultsResponseArray',
              },
            },
          },
          description: 'response',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
  },
  '/businesses/{business_id}/invites': {
    get: {
      summary: 'Get invites/requests',
      description: 'Get the membership/partnership invites and/or requests for the authorized user.',
      operationId: 'get/invites',
      security: [
        {
          pinterest_oauth2: ['biz_access:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
        {
          $ref: '#/components/parameters/query_is_member',
        },
        {
          $ref: '#/components/parameters/query_invite_status',
        },
        {
          $ref: '#/components/parameters/query_invite_type',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        description: 'List of invite and request data.',
                        items: {
                          $ref: '#/components/schemas/InviteResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_invite'],
    },
    post: {
      summary: 'Create invites or requests',
      description:
        'Create batch invites or requests. Can create batch invites or requests as described below.\n- Invite members to join the business. This would required specifying the following:\n    - invite_type="MEMBER_INVITE"\n    - business_role="EMPLOYEE" OR business_role="BIZ_ADMIN" (To learn more about business roles, visit\n    https://help.pinterest.com/en/business/article/profile-permissions-in-business-access.)\n    - members\n- Invite partners to access your business assets. This would require specifying the following:\n    - invite_type="PARTNER_INVITE"\n    - business_role="PARTNER"\n    - partners\n- Request to be a partner so you can access their assets. This would require specifying the following:\n    - invite_type="PARTNER_REQUEST"\n    - business_role="PARTNER"\n    - partners',
      operationId: 'create_membership_or_partnership_invites',
      security: [
        {
          pinterest_oauth2: ['biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_id',
        },
      ],
      requestBody: {
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CreateMembershipOrPartnershipInvitesBody',
            },
          },
        },
        description: 'An object with the properties: invite_type, partners, members, business_role',
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CreateInvitesResultsResponseArray',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_invite'],
    },
    delete: {
      summary: 'Cancel invites/requests',
      description: 'Cancel membership/partnership invites and/or requests.',
      operationId: 'cancel_invites_or_requests',
      security: [
        {
          pinterest_oauth2: ['biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_id',
        },
      ],
      requestBody: {
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CancelInvitesBody',
            },
          },
        },
        description: 'A list with invite ids',
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeleteInvitesResultsResponseArray',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_invite'],
    },
  },
  '/businesses/{business_id}/partners/assets': {
    patch: {
      summary: 'Assign/Update partner asset permissions',
      description:
        "Grant multiple partners access to assets and/or update multiple partner's exisiting permissions to an asset.\nIf your partner already had permissions on the asset, they will be overriden with the new permissions you assign to them.\nTo learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview\n\nNote: Not all listed permissions are applicable to each asset type. For example, PROFILE_PUBLISHER would not be\napplicable to an asset of type AD_ACCOUNT. The permission level PROFILE_PUBLISHER is only available to an asset of\nthe type PROFILE.",
      operationId: 'update_partner_asset_access_handler_impl',
      security: [
        {
          pinterest_oauth2: ['biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        description: 'A list of assets and permissions to assign to your partners.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/UpdatePartnerAssetAccessBody',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UpdatePartnerAssetsResultsResponseArray',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
    delete: {
      summary: 'Delete partner access to asset',
      description:
        "Terminate multiple partners' access to an asset. If\n- partner_type=INTERNAL: You will terminate a partner's asset access to your business assets.\n- partner_type=EXTERNAL: You will terminate your own access to your partner's business assets.",
      operationId: 'delete_partner_asset_access_handler_impl',
      security: [
        {
          pinterest_oauth2: ['biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/DeletePartnerAssetAccessBody',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeletePartnerAssetsResultsResponseArray',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
  },
  '/businesses/{business_id}/partners/{partner_id}/assets': {
    get: {
      summary: 'Get assets assigned to a partner or assets assigned by a partner',
      description:
        "Can be used to get the business assets your partner has granted you access to or the business assets you have\ngranted your partner access to. If you specify:\n- partner_type=INTERNAL, you will retrieve your business assets that the partner has access to.\n- partner_type=EXTERNAL, you will retrieve the partner's business assets that the partner has granted you access to.",
      operationId: 'business_partner_asset_access/get',
      security: [
        {
          pinterest_oauth2: ['biz_access:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
        {
          $ref: '#/components/parameters/path_business_partner_user',
        },
        {
          name: 'partner_type',
          in: 'query',
          description:
            "Specifies whether to fetch internal or external (shared) partners.\nIf partner_type=INTERNAL, the asset being queried is for accesses the partner has to your business assets.<br>\nIf partner_type=EXTERNAL, the asset being queried is for the accesses you have to the partner's business asset.",
          example: 'INTERNAL',
          required: false,
          schema: {
            allOf: [
              {
                $ref: '#/components/schemas/PartnerType',
              },
              {
                default: 'INTERNAL',
              },
            ],
          },
        },
        {
          $ref: '#/components/parameters/query_resource_type',
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        description:
                          'List assets on which you granted access to your partner or assets on which your partner has granted you access.',
                        items: {
                          $ref: '#/components/schemas/GetPartnerAssetsResponse',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
  },
  '/businesses/{business_id}/partners': {
    get: {
      summary: 'Get business partners',
      description:
        "Get all partners of the specified business.\n\nIf the assets_summary=TRUE and:\n- partner_type=INTERNAL, the business assets returned are your business assets the partner has access to.\n- partner_type=EXTERNAL, the business assets returned are your partner's business assets the partner has granted you\n  access to.",
      operationId: 'get/business_partners',
      security: [
        {
          pinterest_oauth2: ['biz_access:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
        {
          $ref: '#/components/parameters/query_assets_summary',
        },
        {
          $ref: '#/components/parameters/query_business_partner_type',
        },
        {
          name: 'partner_ids',
          in: 'query',
          description:
            'A list of business partner ids separated by commas used to filter the results. Only partners with the specified ids will be returned.',
          example: '00101010101,2222220101',
          required: false,
          schema: {
            type: 'string',
            maxLength: 500,
          },
        },
        {
          $ref: '#/components/parameters/query_business_access_start_index',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        description: 'List of business partners.',
                        items: {
                          $ref: '#/components/schemas/UserBusinessRoleBinding',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_relationships'],
    },
    delete: {
      summary: 'Terminate business partnerships',
      description:
        'Terminate partnerships between the specified partners and your business.\nNote: You may only batch terminate partners of the same partner type.',
      operationId: 'delete_business_partners',
      security: [
        {
          pinterest_oauth2: ['biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/DeletePartnersRequest',
            },
          },
        },
        description:
          'An object containing a "partner_ids" property composed of a list of partner IDs and a "partners_type" property specifying the type of partners to delete.\n',
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeletePartnersResponse',
              },
            },
          },
          description: 'Success',
        },
        '404': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: "A supplied partner id doesn't exist",
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_relationships'],
    },
  },
  '/businesses/{business_id}/audiences': {
    get: {
      summary: 'List received audiences for a business',
      description: 'Get a list of received audiences for the given business.',
      operationId: 'shared_audiences_for_business/list',
      security: [
        {
          pinterest_oauth2: ['biz_access:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_order',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/Audience',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['audience_sharing'],
    },
  },
  '/businesses/{business_id}/audiences/shared/accounts': {
    get: {
      summary: 'List accounts with access to an audience owned by a business',
      description:
        'List all ad accounts and/or businesses that have access to a specific audience.\nThe audience must either be owned by an ad account in the requesting business, or it must have been shared with the requesting business.\nIf the requesting business is not the owner of the audience, only ad accounts owned by the requesting business will be returned.',
      operationId: 'business_account_audiences_shared_accounts/list',
      security: [
        {
          pinterest_oauth2: ['biz_access:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
        {
          $ref: '#/components/parameters/query_audience_id',
        },
        {
          $ref: '#/components/parameters/query_account_type',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          description: 'Success',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/SharedAudienceAccount',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        '400': {
          description: 'Invalid business audiences shared accounts parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid business audiences shared accounts parameters.',
              },
            },
          },
        },
        '404': {
          description: 'Shared accounts not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['audience_sharing'],
    },
  },
  '/businesses/{business_id}/audiences/ad_accounts/shared': {
    patch: {
      summary: 'Update audience sharing from a business to ad accounts',
      description:
        "From a business, share a specific audience with other ad account(s), or revoke access to a previously shared audience. <ul> <li>If the business is the owner of the audience, it can share with any ad account within the same business hierarchy.</li> <li>If the business is the recipient of the audience, it can share with any of its owned ad accounts.</li> </ul> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.",
      operationId: 'update_business_to_ad_account_shared_audience',
      security: [
        {
          pinterest_oauth2: ['biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/SharedAudience',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SharedAudienceResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid ad account id',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['audience_sharing'],
    },
  },
  '/businesses/{business_id}/audiences/businesses/shared': {
    patch: {
      summary: 'Update audience sharing between businesses',
      description:
        "From a business, share a specific audience with another business account, or revoke access to a previously shared audience. Only the audience owner can share the audience with other businesses, and the recipient business must be within the same business hierarchy.<br> This endpoint is not available to all apps.<a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.",
      operationId: 'update_business_to_business_shared_audience',
      security: [
        {
          pinterest_oauth2: ['biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/BusinessSharedAudience',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BusinessSharedAudienceResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid business id',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['audience_sharing'],
    },
  },
  '/businesses/{business_id}/asset_groups': {
    post: {
      summary: 'Create a new asset group.',
      description:
        'Create a new asset group with the specified parameters.\n- An <a href="https://help.pinterest.com/en/business/article/asset-groups">asset group</a> is a custom group of assets based on how you’d like to manage your accounts.',
      operationId: 'asset_group/create',
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CreateAssetGroupBody',
            },
          },
        },
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CreateAssetGroupResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid parameters.',
              },
            },
          },
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
    patch: {
      summary: 'Update asset groups.',
      description: 'Update a batch of asset groups with the specified parameters.',
      operationId: 'asset_group/update',
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/UpdateAssetGroupBody',
            },
          },
        },
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UpdateAssetGroupResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid parameters.',
              },
            },
          },
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
    delete: {
      summary: 'Delete asset groups.',
      description: 'Delete a batch of asset groups.',
      operationId: 'asset_group/delete',
      security: [
        {
          pinterest_oauth2: ['biz_access:read', 'biz_access:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_business_user',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/DeleteAssetGroupBody',
            },
          },
        },
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeleteAssetGroupResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid parameters.',
              },
            },
          },
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['business_access_assets'],
    },
  },
  '/catalogs': {
    get: {
      'x-ratelimit-category': 'catalogs_read',
      summary: 'List catalogs',
      description:
        'Fetch catalogs owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>',
      operationId: 'catalogs/list',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/Catalog',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "Parameter 'page_size' was not numeric (was 3e)\"",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
    post: {
      'x-ratelimit-category': 'catalogs_write',
      summary: 'Create catalog',
      description:
        'Create a new catalog owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>\n\nNote: this API only supports the catalog type of HOTEL for now.',
      operationId: 'catalogs/create',
      security: [
        {
          pinterest_oauth2: ['catalogs:write'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Request object used to created a feed.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CatalogsCreateRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Catalog',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: 'Invalid request: ...',
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/feeds': {
    get: {
      'x-ratelimit-category': 'catalogs_read',
      summary: 'List feeds',
      description:
        'Fetch feeds owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.',
      operationId: 'feeds/list',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
        {
          client_credentials: ['catalogs:read'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_catalogs_catalog_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/CatalogsFeed',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "Parameter 'page_size' was not numeric (was 3e)\"",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
    post: {
      'x-ratelimit-category': 'catalogs_write',
      summary: 'Create feed',
      description:
        'Create a new feed owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nPlease, be aware that "default_country"\nand "default_locale" are not required in the spec for forward compatibility\nbut for now the API will not accept requests without those fields.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.',
      operationId: 'feeds/create',
      security: [
        {
          pinterest_oauth2: ['catalogs:read', 'catalogs:write'],
        },
        {
          client_credentials: ['catalogs:read', 'catalogs:write'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Request object used to created a feed.',
        required: true,
        content: {
          'application/json': {
            schema: {
              oneOf: [
                {
                  $ref: '#/components/schemas/CatalogsVerticalFeedsCreateRequest',
                },
                {
                  $ref: '#/components/schemas/CatalogsFeedsCreateRequest',
                },
              ],
            },
          },
        },
      },
      responses: {
        '201': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsFeed',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid feed parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: 'Invalid request: ...',
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Business account required.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                BusinessAccountRequired: {
                  value: {
                    code: 654,
                    message: 'You must have a business account to operate as merchant.',
                  },
                },
                MerchantDisapproved: {
                  value: {
                    code: 2625,
                    message:
                      'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: 'User website required.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UserWebsiteRequired: {
                  value: {
                    code: 4168,
                    message: 'User does not have a website.',
                  },
                },
                UserWebsiteNotVerified: {
                  value: {
                    code: 4169,
                    message: 'User does not have a verified website.',
                  },
                },
              },
            },
          },
        },
        '422': {
          description: 'Unique feed name is required.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                FeedDuplicatedName: {
                  value: {
                    code: 4170,
                    message: 'The feed name already exists.',
                  },
                },
              },
            },
          },
        },
        '501': {
          description: 'Not implemented (absent "default_country" or "default_locale").',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                NotImplemented: {
                  value: {
                    code: 4181,
                    message: 'Not implemented at the moment. Please, see documentation',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/feeds/{feed_id}': {
    get: {
      'x-ratelimit-category': 'catalogs_read',
      summary: 'Get feed',
      description:
        'Get a single feed owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.',
      operationId: 'feeds/get',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
        {
          client_credentials: ['catalogs:read'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_feed_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsFeed',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid feed parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Data feed not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161,
                    message: 'Sorry! We could not find your catalogs feed.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
    patch: {
      'x-ratelimit-category': 'catalogs_write',
      summary: 'Update feed',
      description:
        'Update a feed owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.',
      operationId: 'feeds/update',
      security: [
        {
          pinterest_oauth2: ['catalogs:read', 'catalogs:write'],
        },
        {
          client_credentials: ['catalogs:read', 'catalogs:write'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_feed_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Request object used to update a feed.',
        required: true,
        content: {
          'application/json': {
            schema: {
              oneOf: [
                {
                  $ref: '#/components/schemas/CatalogsVerticalFeedsUpdateRequest',
                },
                {
                  $ref: '#/components/schemas/CatalogsFeedsUpdateRequest',
                },
              ],
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsFeed',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid feed parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: 'Invalid request: ...',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Forbidden. Account not approved for feed mutations yet.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625,
                    message:
                      'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
                MerchantUnderReview: {
                  value: {
                    code: 2626,
                    message:
                      'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Data feed not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161,
                    message: 'Sorry! We could not find your catalogs feed.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
    delete: {
      'x-ratelimit-category': 'catalogs_write',
      summary: 'Delete feed',
      description:
        'Delete a feed owned by the "operating user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nFor Retail partners, refer to <a href=\'https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\'>Before you get started with Catalogs</a>. For Hotel parterns, refer to <a href=\'/docs/api-features/shopping-overview/\'>Pinterest API for shopping</a>.',
      operationId: 'feeds/delete',
      security: [
        {
          pinterest_oauth2: ['catalogs:read', 'catalogs:write'],
        },
        {
          client_credentials: ['catalogs:read', 'catalogs:write'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_feed_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '204': {
          description: 'Feed deleted successfully.',
        },
        '400': {
          description: 'Invalid feed parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}",
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Forbidden. Account not approved for feed mutations yet.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625,
                    message:
                      'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
                MerchantUnderReview: {
                  value: {
                    code: 2626,
                    message:
                      'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Data feed not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161,
                    message: 'Sorry! We could not find your catalogs feed.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Conflict. Can't delete a feed with active promotions.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                FeedHasActivePromotions: {
                  value: {
                    code: 4162,
                    message: "We can't disable a Product Group with active promotions.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/feeds/{feed_id}/ingest': {
    post: {
      'x-ratelimit-category': 'catalogs_write',
      summary: 'Ingest feed items',
      description:
        'Ingest items for a given feed owned by the "operation user_account".\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>\n\nNote: This endpoint is restricted to a specific group of users. If you require access, please reach out to your partner manager.',
      operationId: 'feeds/ingest',
      security: [
        {
          pinterest_oauth2: ['catalogs:write'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_feed_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          description: 'The ingestion process was successfully started.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsFeedIngestion',
              },
            },
          },
        },
        '400': {
          description: 'Invalid feed parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}",
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Forbidden. Account not approved for feed mutations yet.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625,
                    message:
                      'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
                MerchantUnderReview: {
                  value: {
                    code: 2626,
                    message:
                      'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Data feed not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161,
                    message: 'Sorry! We could not find your catalogs feed.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/feeds/{feed_id}/processing_results': {
    get: {
      'x-ratelimit-category': 'catalogs_read',
      summary: 'List feed processing results',
      description:
        'Fetch a feed processing results owned by the "operation user_account". Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>',
      operationId: 'feed_processing_results/list',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_feed_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/CatalogsFeedProcessingResult',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "Parameter 'page_size' was not numeric (was 3e)\"",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Feed not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161,
                    message: 'Sorry! We could not find your catalogs feed.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/processing_results/{processing_result_id}/item_issues': {
    get: {
      'x-ratelimit-category': 'catalogs_read',
      summary: 'List item issues',
      description:
        "List item validation issues for a given feed processing result owned by the \"operation user_account\". Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters 'item_numbers' and 'item_validation_issue' cannot be used simultaneously until it is implemented in some release in the future.\n- By default, the \"operation user_account\" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href='/docs/api/v5/#operation/ad_accounts/list'>List ad accounts</a>) to use the owner of that ad_account as the \"operation user_account\". In order to do this, the token user_account must have one of the following <a href=\"https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nNote: To get a list of all affected items instead of sampled issues, please refer to <a href='/docs/api/v5/#operation/reports/create'>Build catalogs report</a> and <a href='/docs/api/v5/#operation/reports/get'>Get catalogs report</a> endpoints. Moreover, they support multiple types of catalogs.\n\n<a href='/docs/api-features/shopping-overview/'>Learn more</a>",
      operationId: 'items_issues/list',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/path_catalogs_processing_result_id',
        },
        {
          $ref: '#/components/parameters/query_catalogs_item_numbers',
        },
        {
          $ref: '#/components/parameters/query_catalogs_item_validation_issue',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/CatalogsItemValidationIssues',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Processing Result not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                ProcessingResultFound: {
                  value: {
                    code: 4184,
                    message: 'Sorry! We could not find your processing result.',
                  },
                },
              },
            },
          },
        },
        '501': {
          description: 'Not implemented.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                NotImplemented: {
                  value: {
                    code: 4181,
                    message: 'Not implemented at the moment. Please, see documentation.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/items': {
    get: {
      deprecated: true,
      summary: 'Get catalogs items',
      description:
        'Get the items of the catalog owned by the "operation user_account". <a href="/docs/api-features/shopping-overview/#Update%20items%20in%20batch" target="_blank">See detailed documentation here.</a>\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nNote: this endpoint is deprecated and will be deleted soon. Please use <a href=\'/docs/api/v5/#operation/items/post\'>Get catalogs items (POST)</a> instead.',
      operationId: 'items/get',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
      ],
      'x-ratelimit-category': 'catalogs_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_catalogs_items_country',
        },
        {
          $ref: '#/components/parameters/query_catalogs_items_language',
        },
        {
          $ref: '#/components/parameters/query_catalogs_items',
        },
        {
          $ref: '#/components/parameters/query_catalogs_items_filters',
        },
      ],
      responses: {
        '200': {
          description: 'Response containing the requested catalogs items',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsItems',
              },
            },
          },
        },
        '400': {
          description: 'Invalid request parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "Parameter 'item_ids' is required.",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Not authorized to access catalogs items',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 2,
                    message: 'Authentication failed.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to access catalogs items',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
    post: {
      summary: 'Get catalogs items (POST)',
      description:
        'Get the items of the catalog owned by the "operation user_account". <a href="/docs/api-features/shopping-overview/#Update%20items%20in%20batch" target="_blank">See detailed documentation here.</a>\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.',
      operationId: 'items/post',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
      ],
      'x-ratelimit-category': 'catalogs_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Request object used to get catalogs items',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CatalogsItemsRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'Response containing the requested catalogs items',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsItems',
              },
            },
          },
        },
        '400': {
          description: 'Invalid request',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message:
                      "Invalid request: {'country': 'US', 'language': 'EN', 'filters': {'catalog_type': 'RETAIL', 'item_ids': 'test0'}} ('test0' is not of type array)",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Not authorized to access catalogs items',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 2,
                    message: 'Authentication failed.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to access catalogs items',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/items/batch': {
    post: {
      summary: 'Operate on item batch',
      description:
        'This endpoint supports multiple operations on a set of one or more catalog items owned by the "operation user_account". <a href="/docs/api-features/shopping-overview/#Update%20items%20in%20batch" target="_blank">See detailed documentation here.</a>\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nNote:\n- Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.\n- The item UPSERT operation is restricted to users without a feed data source. If you plan to migrate item ingestion from feeds to the API, please reach out to your partner manager to get assistance.',
      operationId: 'items_batch/post',
      'x-ratelimit-category': 'catalogs_write',
      'x-sandbox': 'enabled',
      security: [
        {
          pinterest_oauth2: ['catalogs:read', 'catalogs:write'],
        },
        {
          client_credentials: ['catalogs:read', 'catalogs:write'],
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Request object used to create catalogs items in a batch',
        required: true,
        content: {
          'application/json': {
            schema: {
              oneOf: [
                {
                  $ref: '#/components/schemas/CatalogsVerticalBatchRequest',
                },
                {
                  $ref: '#/components/schemas/CatalogsItemsBatchRequest',
                },
              ],
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'Response containing the requested catalogs items batch',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsItemsBatch',
              },
            },
          },
        },
        '400': {
          description: 'Invalid request parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message:
                      "Invalid request: {'country': 'US', 'language': 'EN', 'operation': 'CREATE', 'items': [{'item_id': 'RAY_01_', 'attributes': {'image_link': 'https://www.example.com/', 'title': 'My Product'}}]} ('https://www.example.com/' is not of type array)",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Not authenticated to post catalogs items',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthenticatedAccess: {
                  value: {
                    code: 2,
                    message: 'Authentication failed.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to post catalogs items',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/items/batch/{batch_id}': {
    get: {
      summary: 'Get item batch status',
      description:
        'Get a single catalogs items batch owned by the "operating user_account". <a href="/docs/api-features/shopping-overview/#Update%20items%20in%20batch" target="_blank">See detailed documentation here.</a>\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.',
      operationId: 'items_batch/get',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
        {
          client_credentials: ['catalogs:read'],
        },
      ],
      'x-ratelimit-category': 'catalogs_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_items_batch_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          description: 'Response containing the requested catalogs items batch',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsItemsBatch',
              },
            },
          },
        },
        '401': {
          description: 'Not authenticated to access catalogs items batch',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthenticatedAccess: {
                  value: {
                    code: 2,
                    message: 'Authentication failed.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to access catalogs items batch',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        '404': {
          description: 'Catalogs items batch not found',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CannotFindBatch: {
                  value: {
                    code: 4331,
                    message: 'Sorry! We could not find your batch ID.',
                  },
                },
              },
            },
          },
        },
        '405': {
          description: 'Method Not Allowed.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                MethodNotAllowed: {
                  value: {
                    status: 'failure',
                    code: 5,
                    data: '405 Method Not Allowed: The method is not allowed for the requested URL.',
                    message: 'Method not allowed',
                    endpoint_name: null,
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/product_groups/multiple': {
    delete: {
      'x-ratelimit-category': 'catalogs_write',
      summary: 'Delete product groups',
      description:
        'Delete product groups owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>',
      operationId: 'catalogs_product_groups/delete_many',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_catalogs_product_group_ids_required',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      security: [
        {
          pinterest_oauth2: ['catalogs:write'],
        },
      ],
      responses: {
        '204': {
          description: 'Catalogs Product Groups deleted successfully.',
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625,
                    message:
                      'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
                MerchantUnderReview: {
                  value: {
                    code: 2626,
                    message:
                      'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Catalogs product group not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180,
                    message: 'Sorry! We could not find your catalogs product group.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Conflict. Can't delete this catalogs product group.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsProductGroupHasActivePromotions: {
                  value: {
                    code: 4176,
                    message: "We can't delete a Catalogs Product Group with active promotions.",
                  },
                },
                CannotAlterAutoGeneratedCatalogsProductGroup: {
                  value: {
                    code: 4177,
                    message: 'You cannot alter an auto generated catalogs product group.',
                  },
                },
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182,
                    message: "Can't access this feature without an existing catalog.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
    post: {
      'x-ratelimit-category': 'catalogs_write',
      summary: 'Create product groups',
      description:
        'Create product group to use in Catalogs owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.',
      operationId: 'catalogs_product_groups/create_many',
      security: [
        {
          pinterest_oauth2: ['catalogs:write'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Request object used to create one or more catalogs product groups.',
        required: true,
        content: {
          'application/json': {
            schema: {
              type: 'array',
              title: 'multiple product groups',
              items: {
                oneOf: [
                  {
                    $ref: '#/components/schemas/CatalogsProductGroupCreateRequest',
                  },
                  {
                    $ref: '#/components/schemas/CatalogsVerticalProductGroupCreateRequest',
                  },
                ],
              },
            },
            examples: {
              RetailFewFiltersUsingAllOf: {
                summary: 'A simple retail example that applies "all of the following filters".',
                description:
                  'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a product to be included in the Product Group.\n',
                value: [
                  {
                    name: 'Few Filters using "all_of"',
                    feed_id: '2680059592705',
                    filters: {
                      all_of: [
                        {
                          MIN_PRICE: {
                            values: 999.99,
                            inclusion: true,
                          },
                        },
                        {
                          CURRENCY: {
                            values: 'USD',
                          },
                        },
                        {
                          CUSTOM_LABEL_0: {
                            values: ['Luxury Items'],
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              RetailManyFiltersUsingAnyOf: {
                summary: 'A more complete retail example that applies "any of the following filters".',
                description:
                  'The use of "any_of" creates a Product Group where any of the individual filters\ncan add products to the Product Group independently.\n',
                value: [
                  {
                    name: 'Many Filters using "any_of"',
                    feed_id: '2680059592705',
                    filters: {
                      all_of: [
                        {
                          MIN_PRICE: {
                            values: 111.55,
                            inclusion: false,
                            negated: false,
                          },
                        },
                        {
                          CURRENCY: {
                            values: 'USD',
                            negated: false,
                          },
                        },
                        {
                          AVAILABILITY: {
                            values: ['IN_STOCK', 'OUT_OF_STOCK', 'PREORDER'],
                            negated: false,
                          },
                        },
                        {
                          BRAND: {
                            values: ['avanti', 'beautyrest'],
                            negated: true,
                          },
                        },
                        {
                          GOOGLE_PRODUCT_CATEGORY_0: {
                            values: [
                              ['furniture', 'tables', 'accent tables', 'end tables'],
                              ['furniture', 'chairs', 'slipper chairs'],
                              ['home & garden'],
                            ],
                            negated: false,
                          },
                        },
                        {
                          CONDITION: {
                            values: ['NEW', 'REFURBISHED', 'USED'],
                            negated: false,
                          },
                        },
                        {
                          CUSTOM_LABEL_0: {
                            values: ['004 - home furn leisure'],
                            negated: false,
                          },
                        },
                        {
                          CUSTOM_LABEL_1: {
                            values: ['clearance', 'original price'],
                            negated: false,
                          },
                        },
                        {
                          CUSTOM_LABEL_2: {
                            values: ['789 - table linens', '794 - living room accents'],
                            negated: false,
                          },
                        },
                        {
                          GENDER: {
                            values: ['FEMALE', 'MALE', 'UNISEX'],
                            negated: false,
                          },
                        },
                        {
                          ITEM_ID: {
                            values: ['does not exists', 'this one neither', 'nope'],
                            negated: true,
                          },
                        },
                        {
                          ITEM_GROUP_ID: {
                            values: ['nonexistant group', 'another one', 'last one'],
                            negated: true,
                          },
                        },
                        {
                          PRODUCT_TYPE_0: {
                            values: [
                              ['accent chairs', 'club chairs'],
                              ['accent chairs', 'slipper chairs'],
                              ['accent tables', 'end tables'],
                              ['air mattresses', 'air mattresses'],
                              ['table linens'],
                            ],
                            negated: false,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              CatalogBasedRetailFewFiltersUsingAllOf: {
                summary: 'A simple catalog based retail example that applies "all of the following filters".',
                description:
                  'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a retail to be included in the Product Group.\n',
                value: [
                  {
                    catalog_type: 'RETAIL',
                    name: 'Few Filters using "all_of"',
                    catalog_id: '4866935934774',
                    country: 'US',
                    locale: 'en-US',
                    filters: {
                      all_of: [
                        {
                          ITEM_ID: {
                            values: ['item1', 'item2'],
                          },
                        },
                        {
                          CUSTOM_LABEL_1: {
                            values: ['shoes'],
                            negated: false,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              HotelFewFiltersUsingAllOf: {
                summary: 'A simple hotel example that applies "all of the following filters".',
                description:
                  'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a hotel to be included in the Product Group.\n',
                value: [
                  {
                    catalog_type: 'HOTEL',
                    name: 'Few Filters using "all_of"',
                    catalog_id: '4866935934774',
                    filters: {
                      all_of: [
                        {
                          HOTEL_ID: {
                            values: ['hotel1', 'hotel2'],
                          },
                        },
                        {
                          CUSTOM_LABEL_1: {
                            values: ['big_hotels'],
                            negated: false,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
      responses: {
        '201': {
          content: {
            'application/json': {
              schema: {
                type: 'array',
                items: {
                  description: 'ID of a created catalog product group.',
                  example: '443727193917',
                  type: 'string',
                  pattern: '^\\d+$',
                },
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid body.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625,
                    message:
                      'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
                MerchantUnderReview: {
                  value: {
                    code: 2626,
                    message:
                      'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Conflict. Can't create this catalogs product group with this value.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsProductGroupFiltersAlreadyExist: {
                  value: {
                    code: 4178,
                    message: 'A catalogs product group with these filters already exists for this feed.',
                  },
                },
                CatalogsProductGroupNameAlreadyExist: {
                  value: {
                    code: 4179,
                    message: 'A catalogs product group with this name already exists for this feed.',
                  },
                },
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182,
                    message: "Can't access this feature without an existing catalog.",
                  },
                },
                CatalogsProductGroupFiltersInvalid: {
                  value: {
                    code: 4183,
                    message:
                      'Catalog product group filters failed validation, please ensure all filters are set correctly.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/product_groups': {
    get: {
      'x-ratelimit-category': 'catalogs_read',
      summary: 'List product groups',
      description:
        'Get a list of product groups for a given Catalogs Feed Id owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>',
      operationId: 'catalogs_product_groups/list',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_catalogs_product_group_ids',
        },
        {
          $ref: '#/components/parameters/query_catalogs_feed_id',
        },
        {
          $ref: '#/components/parameters/query_catalogs_catalog_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/CatalogsVerticalProductGroup',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid feed parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625,
                    message:
                      'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
                MerchantUnderReview: {
                  value: {
                    code: 2626,
                    message:
                      'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Data feed not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                FeedNotFound: {
                  value: {
                    code: 4161,
                    message: 'Sorry! We could not find your catalogs feed.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Conflict. Can't create this catalogs product group with this value.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182,
                    message: "Can't access this feature without an existing catalog.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
    post: {
      'x-ratelimit-category': 'catalogs_write',
      summary: 'Create product group',
      description:
        'Create product group to use in Catalogs owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.',
      operationId: 'catalogs_product_groups/create',
      security: [
        {
          pinterest_oauth2: ['catalogs:write'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Request object used to create a single catalogs product groups.',
        required: true,
        content: {
          'application/json': {
            schema: {
              oneOf: [
                {
                  $ref: '#/components/schemas/CatalogsProductGroupCreateRequest',
                },
                {
                  $ref: '#/components/schemas/CatalogsVerticalProductGroupCreateRequest',
                },
              ],
            },
            examples: {
              RetailFewFiltersUsingAllOf: {
                summary: 'A simple retail example that applies "all of the following filters".',
                description:
                  'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a product to be included in the Product Group.\n',
                value: {
                  name: 'Few Filters using "all_of"',
                  feed_id: '2680059592705',
                  filters: {
                    all_of: [
                      {
                        MIN_PRICE: {
                          values: 999.99,
                          inclusion: true,
                        },
                      },
                      {
                        CURRENCY: {
                          values: 'USD',
                        },
                      },
                      {
                        CUSTOM_LABEL_0: {
                          values: ['Luxury Items'],
                        },
                      },
                    ],
                  },
                },
              },
              RetailManyFiltersUsingAnyOf: {
                summary: 'A more complete retail example that applies "any of the following filters".',
                description:
                  'The use of "any_of" creates a Product Group where any of the individual filters\ncan add products to the Product Group independently.\n',
                value: {
                  name: 'Many Filters using "any_of"',
                  feed_id: '2680059592705',
                  filters: {
                    all_of: [
                      {
                        MIN_PRICE: {
                          values: 111.55,
                          inclusion: false,
                          negated: false,
                        },
                      },
                      {
                        CURRENCY: {
                          values: 'USD',
                          negated: false,
                        },
                      },
                      {
                        AVAILABILITY: {
                          values: ['IN_STOCK', 'OUT_OF_STOCK', 'PREORDER'],
                          negated: false,
                        },
                      },
                      {
                        BRAND: {
                          values: ['avanti', 'beautyrest'],
                          negated: true,
                        },
                      },
                      {
                        GOOGLE_PRODUCT_CATEGORY_0: {
                          values: [
                            ['furniture', 'tables', 'accent tables', 'end tables'],
                            ['furniture', 'chairs', 'slipper chairs'],
                            ['home & garden'],
                          ],
                          negated: false,
                        },
                      },
                      {
                        CONDITION: {
                          values: ['NEW', 'REFURBISHED', 'USED'],
                          negated: false,
                        },
                      },
                      {
                        CUSTOM_LABEL_0: {
                          values: ['004 - home furn leisure'],
                          negated: false,
                        },
                      },
                      {
                        CUSTOM_LABEL_1: {
                          values: ['clearance', 'original price'],
                          negated: false,
                        },
                      },
                      {
                        CUSTOM_LABEL_2: {
                          values: ['789 - table linens', '794 - living room accents'],
                          negated: false,
                        },
                      },
                      {
                        GENDER: {
                          values: ['FEMALE', 'MALE', 'UNISEX'],
                          negated: false,
                        },
                      },
                      {
                        ITEM_ID: {
                          values: ['does not exists', 'this one neither', 'nope'],
                          negated: true,
                        },
                      },
                      {
                        ITEM_GROUP_ID: {
                          values: ['nonexistant group', 'another one', 'last one'],
                          negated: true,
                        },
                      },
                      {
                        PRODUCT_TYPE_0: {
                          values: [
                            ['accent chairs', 'club chairs'],
                            ['accent chairs', 'slipper chairs'],
                            ['accent tables', 'end tables'],
                            ['air mattresses', 'air mattresses'],
                            ['table linens'],
                          ],
                          negated: false,
                        },
                      },
                    ],
                  },
                },
              },
              HotelFewFiltersUsingAllOf: {
                summary: 'A simple hotel example that applies "all of the following filters".',
                description:
                  'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a hotel to be included in the Product Group.\n',
                value: {
                  catalog_type: 'HOTEL',
                  name: 'Few Filters using "all_of"',
                  catalog_id: '4866935934774',
                  filters: {
                    all_of: [
                      {
                        HOTEL_ID: {
                          values: ['hotel1', 'hotel2'],
                        },
                      },
                      {
                        CUSTOM_LABEL_1: {
                          values: ['big_hotels'],
                          negated: false,
                        },
                      },
                    ],
                  },
                },
              },
              CatalogBasedRetailFewFiltersUsingAllOf: {
                summary: 'A simple catalog based retail example that applies "all of the following filters".',
                description:
                  'The use of "all_of" creates a Product Group where all of the individual filters\nmust be satisfied by a retail to be included in the Product Group.\n',
                value: {
                  catalog_type: 'RETAIL',
                  name: 'Few Filters using "all_of"',
                  catalog_id: '4866935934774',
                  country: 'US',
                  locale: 'en-US',
                  filters: {
                    all_of: [
                      {
                        ITEM_ID: {
                          values: ['item1', 'item2'],
                        },
                      },
                      {
                        CUSTOM_LABEL_1: {
                          values: ['shoes'],
                          negated: false,
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
      responses: {
        '201': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsVerticalProductGroup',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid body.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "'feed_id' value '1511851494501_' must match the pattern: ^\\d+$\"}",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625,
                    message:
                      'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
                MerchantUnderReview: {
                  value: {
                    code: 2626,
                    message:
                      'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Conflict. Can't create this catalogs product group with this value.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsProductGroupFiltersAlreadyExist: {
                  value: {
                    code: 4178,
                    message: 'A catalogs product group with these filters already exists for this feed.',
                  },
                },
                CatalogsProductGroupNameAlreadyExist: {
                  value: {
                    code: 4179,
                    message: 'A catalogs product group with this name already exists for this feed.',
                  },
                },
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182,
                    message: "Can't access this feature without an existing catalog.",
                  },
                },
                CatalogsProductGroupFiltersInvalid: {
                  value: {
                    code: 4183,
                    message:
                      'Catalog product group filters failed validation, please ensure all filters are set correctly.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/product_groups/{product_group_id}': {
    get: {
      'x-ratelimit-category': 'catalogs_read',
      summary: 'Get product group',
      description:
        'Get a singe product group for a given Catalogs Product Group Id owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>',
      operationId: 'catalogs_product_groups/get',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_product_group_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsVerticalProductGroup',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid catalogs product group id parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "'product_group_id' value '11851494501_' must match the pattern: ^\\d+$\"}",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625,
                    message:
                      'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
                MerchantUnderReview: {
                  value: {
                    code: 2626,
                    message:
                      'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Catalogs product group not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180,
                    message: 'Sorry! We could not find your catalogs product group.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Conflict. Can't get a catalogs product group without an existing catalog.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182,
                    message: "Can't acccess this feature without an existing catalog.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
    delete: {
      'x-ratelimit-category': 'catalogs_write',
      summary: 'Delete product group',
      description:
        'Delete a product group owned by the "operation user_account" from being in use in Catalogs.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>',
      operationId: 'catalogs_product_groups/delete',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_product_group_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      security: [
        {
          pinterest_oauth2: ['catalogs:write'],
        },
      ],
      responses: {
        '204': {
          description: 'Catalogs Product Group deleted successfully.',
        },
        '400': {
          description: 'Invalid catalogs product group id parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "'product_group_id' value '11851494501_' must match the pattern: ^\\d+$\"}",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625,
                    message:
                      'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
                MerchantUnderReview: {
                  value: {
                    code: 2626,
                    message:
                      'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Catalogs product group not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180,
                    message: 'Sorry! We could not find your catalogs product group.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Conflict. Can't delete this catalogs product group.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsProductGroupHasActivePromotions: {
                  value: {
                    code: 4176,
                    message: "We can't delete a Catalogs Product Group with active promotions.",
                  },
                },
                CannotAlterAutoGeneratedCatalogsProductGroup: {
                  value: {
                    code: 4177,
                    message: 'You cannot alter an auto generated catalogs product group.',
                  },
                },
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182,
                    message: "Can't access this feature without an existing catalog.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
    patch: {
      'x-ratelimit-category': 'catalogs_write',
      summary: 'Update single product group',
      description:
        'Update product group owned by the "operation user_account" to use in Catalogs.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>\n\nNote: Access to the Creative Assets catalog type is restricted to a specific group of users.\nIf you require access, please reach out to your partner manager.',
      operationId: 'catalogs_product_groups/update',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_product_group_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      security: [
        {
          pinterest_oauth2: ['catalogs:write'],
        },
      ],
      requestBody: {
        description: 'Request object used to Update a catalogs product group.',
        required: true,
        content: {
          'application/json': {
            schema: {
              oneOf: [
                {
                  $ref: '#/components/schemas/CatalogsProductGroupUpdateRequest',
                },
                {
                  $ref: '#/components/schemas/CatalogsVerticalProductGroupUpdateRequest',
                },
              ],
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsVerticalProductGroup',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "'product_group_id' value '11851494501_' must match the pattern: ^\\d+$\"}",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: 'Forbidden. Account not approved for catalog product group mutations yet.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                MerchantDisapproved: {
                  value: {
                    code: 2625,
                    message:
                      'Sorry, you cannot perform this action as your account has been disapproved. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
                MerchantUnderReview: {
                  value: {
                    code: 2626,
                    message:
                      'We are reviewing your account. Please see business hub for more details. https://www.pinterest.com/business/hub/',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Catalogs product group not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180,
                    message: 'Sorry! We could not find your catalogs product group.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Conflict. Can't update this catalogs product group to this value.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CannotAlterAutoGeneratedCatalogsProductGroup: {
                  value: {
                    code: 4177,
                    message: 'You cannot alter an auto generated catalogs product group.',
                  },
                },
                CatalogsProductGroupFiltersAlreadyExist: {
                  value: {
                    code: 4178,
                    message: 'A catalogs product group with these filters already exists for this feed.',
                  },
                },
                CatalogsProductGroupNameAlreadyExist: {
                  value: {
                    code: 4179,
                    message: 'A catalogs product group with this name already exists for this feed.',
                  },
                },
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182,
                    message: "Can't access this feature without an existing catalog.",
                  },
                },
                CatalogsProductGroupFiltersInvalid: {
                  value: {
                    code: 4183,
                    message:
                      'Catalog product group filters failed validation, please ensure all filters are set correctly.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/product_groups/{product_group_id}/product_counts': {
    get: {
      'x-ratelimit-category': 'catalogs_read',
      summary: 'Get product counts',
      description:
        'Get a product counts for a given Catalogs Product Group owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>',
      operationId: 'catalogs_product_groups/product_counts_get',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_catalogs_product_group_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsProductGroupProductCountsVertical',
              },
            },
          },
          description: 'Success',
        },
        '404': {
          description: 'Product Group Not Found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180,
                    message: 'Sorry! We could not find your catalogs product group.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Can't access this feature without an existing catalog.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182,
                    message: "Can't access this feature without an existing catalog.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/product_groups/{product_group_id}/products': {
    get: {
      'x-ratelimit-category': 'catalogs_read',
      summary: 'List products by product group',
      description:
        'Get a list of product pins for a given Catalogs Product Group Id owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>',
      operationId: 'catalogs_product_group_pins/list',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'catalogs:read', 'pins:read'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/path_catalogs_product_group_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_pin_metrics',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'Pins',
                        items: {
                          $ref: '#/components/schemas/CatalogsProduct',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidRequest: {
                  value: {
                    code: 1,
                    message: "'product_group_id' value '11851494501_' must match the pattern: ^\\d+$\"}",
                  },
                },
              },
            },
          },
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Catalogs product group not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsProductGroupNotFound: {
                  value: {
                    code: 4180,
                    message: 'Sorry! We could not find your catalogs product group.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/products/get_by_product_group_filters': {
    post: {
      'x-ratelimit-category': 'catalogs_read',
      summary: 'List products by filter',
      description:
        'List products Pins owned by the "operation user_account" that meet the criteria specified in the Catalogs Product Group Filter given in the request.\n- This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.\n\nNote: This endpoint only supports RETAIL catalog at the moment.\n\n<a href=\'/docs/api-features/shopping-overview/\'>Learn more</a>',
      operationId: 'products_by_product_group_filter/list',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'catalogs:read', 'pins:read'],
        },
      ],
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_pin_metrics',
        },
      ],
      requestBody: {
        description: 'Object holding a group of filters for a catalog product group',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CatalogsListProductsByFilterRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'Pins',
                        items: {
                          $ref: '#/components/schemas/CatalogsProduct',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '401': {
          description: 'Unauthorized access.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 29,
                    message: 'You are not permitted to access that resource.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Conflict. Can't get products.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182,
                    message: "Can't acccess this feature without an existing catalog.",
                  },
                },
                CatalogsProductGroupFiltersInvalid: {
                  value: {
                    code: 4183,
                    message:
                      'Catalog product group filters failed validation, please ensure all filters are set correctly.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/reports': {
    post: {
      summary: 'Build catalogs report',
      description:
        'Async request to create a report of the catalog owned by the "operation user_account". This endpoint generates a report upon receiving the first approved request of the day. Any following requests with identical parameters will yield the same report even if data has changed.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.',
      operationId: 'reports/create',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
      ],
      'x-ratelimit-category': 'catalogs_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Request object to asynchronously create a report.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/CatalogsReportParameters',
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'Response containing the report token',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsCreateReportResponse',
              },
            },
          },
        },
        '404': {
          description: 'Entity (e.g., catalog, feed or processing_result) not found',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogNotFound: {
                  value: {
                    code: 678,
                    message:
                      "Sorry! We couldn't find that catalog. Please ensure you have access to a valid catalog id.",
                  },
                },
                FeedNotFound: {
                  value: {
                    code: 4161,
                    message: 'Sorry! We could not find your catalogs feed.',
                  },
                },
                CatalogsProcessingResultNotFound: {
                  value: {
                    code: 4184,
                    message: 'Sorry! We could not find your processing result',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Can't access this feature without an existing catalog.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182,
                    message: "Can't access this feature without an existing catalog.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
    get: {
      summary: 'Get catalogs report',
      description:
        'This returns a URL to a report given a token returned from <a href=\'/docs/api/v5/#operation/reports/create\'>Build catalogs report</a>. You can use the URL to download the report.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.',
      operationId: 'reports/get',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
      ],
      'x-ratelimit-category': 'catalogs_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_catalogs_report_token',
        },
      ],
      responses: {
        '200': {
          description: 'Response that contains a link to download the report',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/CatalogsReport',
              },
            },
          },
        },
        '400': {
          description: 'The token you provided is not valid or has expired.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidReportingToken: {
                  value: {
                    code: 1104,
                    message: 'The token you provided is not valid or has expired.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Can't access this feature without an existing catalog.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                CatalogsMerchantNotCreated: {
                  value: {
                    code: 4182,
                    message: "Can't access this feature without an existing catalog.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/catalogs/reports/stats': {
    get: {
      summary: 'List report stats',
      description:
        'List aggregated numbers of issues for a catalog owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account: Owner, Admin, Catalogs Manager.',
      operationId: 'reports/stats',
      security: [
        {
          pinterest_oauth2: ['catalogs:read'],
        },
      ],
      'x-ratelimit-category': 'catalogs_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_catalogs_report_stats_parameters',
        },
      ],
      responses: {
        '200': {
          description: 'Response containing the diagnostics aggregated counters',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/CatalogsReportStats',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        '401': {
          description: 'Not authorized to access catalogs',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UnauthorizedAccess: {
                  value: {
                    code: 2,
                    message: 'Authentication failed.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['catalogs'],
    },
  },
  '/integrations/commerce': {
    post: {
      summary: 'Create commerce integration',
      description:
        "Create commerce integration metadata to link an external business ID with a Pinterest merchant & ad account.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.",
      operationId: 'integrations_commerce/post',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/IntegrationRequest',
            },
          },
        },
        description: 'Parameters to get create/update the Integration Metadata',
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/IntegrationMetadata',
              },
            },
          },
          description: 'Success',
        },
        '404': {
          description: 'Integration not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                IntegrationNotFound: {
                  value: {
                    code: 4180,
                    message: 'Sorry! We could not find your integration.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Can't access this integration metadata.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 4182,
                    message: "Can't access this integration metadata.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['integrations'],
    },
  },
  '/integrations/commerce/{external_business_id}': {
    get: {
      summary: 'Get commerce integration',
      description:
        "Get commerce integration metadata associated with the given external business ID.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.",
      operationId: 'integrations_commerce/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_external_business_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/IntegrationMetadata',
              },
            },
          },
          description: 'Success',
        },
        '404': {
          description: 'Integration not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                IntegrationNotFound: {
                  value: {
                    code: 4180,
                    message: 'Sorry! We could not find your integration.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Can't access this integration metadata.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 4182,
                    message: "Can't access this integration metadata.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['integrations'],
    },
    patch: {
      summary: 'Update commerce integration',
      description:
        "Update commerce integration metadata for the given external business ID.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.",
      operationId: 'integrations_commerce/patch',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_external_business_id',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/IntegrationRequestPatch',
            },
          },
        },
        description: 'Parameters to get create/update the Integration Metadata',
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/IntegrationMetadata',
              },
            },
          },
          description: 'Success',
        },
        '404': {
          description: 'Integration not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                IntegrationNotFound: {
                  value: {
                    code: 4180,
                    message: 'Sorry! We could not find your integration.',
                  },
                },
              },
            },
          },
        },
        '409': {
          description: "Can't access this integration metadata.",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                NotIntegrationOwner: {
                  value: {
                    code: 4182,
                    message: "Can't access this integration metadata.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['integrations'],
    },
    delete: {
      summary: 'Delete commerce integration',
      description:
        "Delete commerce integration metadata for the given external business ID.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.",
      operationId: 'integrations_commerce/del',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-ratelimit-category': 'ads_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_external_business_id',
        },
      ],
      responses: {
        '204': {
          description: 'Commerce Integration deleted successfully',
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['integrations'],
    },
  },
  '/integrations/logs': {
    post: {
      summary: 'Receives batched logs from integration applications.',
      description:
        "This endpoint receives batched logs from integration applications on partner platforms.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.",
      tags: ['integrations'],
      operationId: 'integrations_logs/post',
      'x-ratelimit-category': 'ads_write',
      security: [
        {
          pinterest_oauth2: ['ads:write'],
        },
      ],
      'x-sandbox': 'enabled',
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/IntegrationLogsRequest',
            },
          },
        },
        description: 'Ingest log information from external integration application.',
        required: true,
      },
      responses: {
        '200': {
          description: 'Success.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/IntegrationLogsSuccessResponse',
              },
            },
          },
        },
        '400': {
          description: 'Bad request.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DetailedError',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/integrations': {
    get: {
      summary: 'Get integration metadata list',
      description:
        "Get integration metadata list.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.",
      operationId: 'integrations/get_list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/IntegrationRecord',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['integrations'],
    },
  },
  '/integrations/{id}': {
    get: {
      summary: 'Get integration metadata',
      description:
        "Get integration metadata by ID.\nNote: If you're interested in joining the beta, please reach out to your Pinterest account manager.",
      operationId: 'integrations/get_by_id',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          name: 'id',
          description: 'Integration ID.',
          in: 'path',
          required: true,
          schema: {
            type: 'string',
          },
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/IntegrationRecord',
              },
            },
          },
          description: 'Success',
        },
        '404': {
          description: 'Integration not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                IntegrationNotFound: {
                  value: {
                    code: 4517,
                    message: 'Sorry! We could not find your integration.',
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['integrations'],
    },
  },
  '/media': {
    get: {
      summary: 'List media uploads',
      description:
        "List media uploads filtered by given parameters.\n\n<strong><a href='/docs/api-features/creating-boards-and-pins/#creating-video-pins'>Learn more</a></strong> about video Pin creation.",
      tags: ['media'],
      operationId: 'media/list',
      security: [
        {
          pinterest_oauth2: ['pins:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'Media',
                        items: {
                          $ref: '#/components/schemas/MediaUploadDetails',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
    post: {
      summary: 'Register media upload',
      description:
        "Register your intent to upload media\n\nThe response includes all of the information needed to upload the media\nto Pinterest.\n\nTo upload the media, make an HTTP POST request (using <tt>curl</tt>, for\nexample) to <tt>upload_url</tt> using the <tt>Content-Type</tt> header\nvalue. Send the media file's contents as the request's <tt>file</tt>\nparameter and also include all of the parameters from\n<tt>upload_parameters</tt>.\n\n<strong><a href='/docs/api-features/creating-boards-and-pins/#creating-video-pins'>Learn more</a></strong> about video Pin creation.",
      tags: ['media'],
      operationId: 'media/create',
      security: [
        {
          pinterest_oauth2: ['pins:read', 'pins:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      requestBody: {
        description: 'Create a media upload request',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/MediaUploadRequest',
            },
          },
        },
      },
      responses: {
        '201': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MediaUpload',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/media/{media_id}': {
    get: {
      summary: 'Get media upload details',
      description:
        "Get details for a registered media upload, including its current status.\n\n<strong><a href='/docs/api-features/creating-boards-and-pins/#creating-video-pins'>Learn more</a></strong> about video Pin creation.",
      tags: ['media'],
      operationId: 'media/get',
      security: [
        {
          pinterest_oauth2: ['pins:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_media_id',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/MediaUploadDetails',
              },
            },
          },
        },
        '404': {
          description: 'Media upload not found',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 404,
                message: 'Media upload not found',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/oauth/token': {
    post: {
      summary: 'Generate OAuth access token',
      description:
        "Generate an OAuth access token by using an authorization code or a refresh token.\n\nIMPORTANT: You need to start the OAuth flow via www.pinterest.com/oauth before calling this endpoint (or have an existing refresh token).\n\nSee <a href='/docs/getting-started/authentication-and-scopes/'>Authentication</a> for more.\n\n<strong>Parameter <i>refresh_on</i> and its corresponding response type <i>everlasting_refresh</i> are now available to all apps! Later this year, continuous refresh will become the default behavior (ie you will no longer need to send this parameter). <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>\n\n<strong>Grant type <i>client_credentials</i> and its corresponding response type are not fully available. You will likely get a default error if you attempt to use this grant_type.</strong>",
      tags: ['oauth'],
      operationId: 'oauth/token',
      security: [
        {
          basic: [],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      requestBody: {
        description: 'Generate an OAuth access token.',
        required: true,
        content: {
          'application/x-www-form-urlencoded': {
            schema: {
              $ref: '#/components/schemas/OauthAccessTokenRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/OauthAccessTokenResponse',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/pins': {
    get: {
      summary: 'List Pins',
      description:
        'Get a list of the Pins owned by the "operation user_account".\n  - By default, the "operation user_account" is the token user_account.\n  - All Pins owned by the "operation user_account" are included, regardless of who owns the board they are on.\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".\n\nDisclaimer: there are known performance issues when filtering by field <code>creative_type</code> and including protected pins. If your\nrequest is timing out in this scenario we encourage you to use <a href=\'/docs/api/v5/#operation/boards/list_pins\'>GET List Pins on Board</a>.',
      operationId: 'pins/list',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'],
        },
        {
          client_credentials: ['boards:read', 'pins:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      'x-codeSamples': [
        {
          lang: 'cURL',
          label: 'curl',
          source:
            "curl --location --request GET 'https://api.pinterest.com/v5/pins' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n",
        },
        {
          lang: 'cURL',
          label: 'curl (Sandbox)',
          source:
            "curl --location --request GET 'https://api-sandbox.pinterest.com/v5/pins' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n",
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_pin_filter',
        },
        {
          $ref: '#/components/parameters/query_include_protected_pins',
        },
        {
          $ref: '#/components/parameters/query_pin_type',
        },
        {
          $ref: '#/components/parameters/query_creative_types',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_pin_metrics',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/Pin',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid pin filter value',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid pin filter value',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['pins'],
    },
    post: {
      summary: 'Create Pin',
      description:
        "Create a Pin on a board or board section owned by the \"operation user_account\".\n\nNote: If the current \"operation user_account\" (defined by the access token) has access to another user's Ad Accounts via Pinterest Business Access, you can modify your request to make use of the current operation_user_account's permissions to those Ad Accounts by including the ad_account_id in the path parameters for the request (e.g. .../?ad_account_id=12345&...).\n\n- This function is intended solely for publishing new content created by the user. If you are interested in saving content created by others to your Pinterest boards, sometimes called 'curated content', please use our <a href='/docs/web-features/add-ons-overview/'>Save button</a> instead. For more tips on creating fresh content for Pinterest, review our <a href='/docs/api-features/content-overview/'>Content App Solutions Guide</a>.\n\n<strong><a href='/docs/api-features/creating-boards-and-pins/#creating-video-pins'>Learn more</a></strong> about video Pin creation.",
      tags: ['pins'],
      operationId: 'pins/create',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write', 'pins:read', 'pins:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      'x-codeSamples': [
        {
          lang: 'python',
          label: 'Python SDK',
          source:
            '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.pins import Pin\n# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\nBOARD_ID="<Add your board id here>"\n\npin_create = Pin.create(\n  board_id=BOARD_ID,\n  title="My Pin",\n  description="Pin Description",\n  media_source={\n      "source_type": "image_url",\n      "content_type": "image/jpeg",\n      "data": "string",\n      \'url\':\'https://i.pinimg.com/564x/28/75/e9/2875e94f8055227e72d514b837adb271.jpg\'\n      }\n  )\nprint("Pin Id: %s, Pin Title:%s" %(pin_create.id, pin_create.title))\n',
        },
        {
          lang: 'cURL',
          label: 'curl',
          source:
            '# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request POST \'https://api.pinterest.com/v5/pins\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "title": "My Pin",\n      "description": "Pin Description",\n      "board_id": "<insert_your_board_id>,\n      "media_source": {\n        "source_type": "image_url",\n        "url": "https://i.pinimg.com/564x/28/75/e9/2875e94f8055227e72d514b837adb271.jpg"\n      }\n  }\'\n',
        },
        {
          lang: 'cURL',
          label: 'curl (Sandbox)',
          source:
            '# Board information can be fetched from profile page or from create/list board method here:\n# /docs/api/v5/#operation/boards/list\n\ncurl --location --request POST \'https://api-sandbox.pinterest.com/v5/pins\' \\\n--header \'Authorization: Bearer <Add your token here>\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n      "title": "My Pin",\n      "description": "Pin Description",\n      "board_id": "<insert_your_sandbox_board_id>,\n      "media_source": {\n        "source_type": "image_url",\n        "url": "https://i.pinimg.com/564x/28/75/e9/2875e94f8055227e72d514b837adb271.jpg"\n      }\n  }\'\n',
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Create a new Pin.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/PinCreate',
            },
          },
        },
      },
      responses: {
        '201': {
          description: 'Successful pin creation.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Pin',
              },
            },
          },
        },
        '400': {
          description: 'Invalid Pin parameters response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                InvalidPinUrl: {
                  value: {
                    code: 1,
                    message:
                      'Whoops! It looks like you entered an invalid URL. Try creating a Pin again with a valid URL.',
                  },
                },
              },
            },
          },
        },
        '403': {
          description: "The Pin's image is too small, too large or is broken",
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                PinImageTooSmall: {
                  value: {
                    code: 233,
                    message: 'Your image is too small. Please choose a larger image and try again.',
                  },
                },
                PinImageBroken: {
                  value: {
                    code: 235,
                    message: 'Sorry, this image is broken. Please pick a different image.',
                  },
                },
              },
            },
          },
        },
        '404': {
          description: 'Board or section not found',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                BoardNotFound: {
                  value: {
                    code: 40,
                    message: 'Board not found.',
                  },
                },
                BoardSectionNotFound: {
                  value: {
                    code: 2031,
                    message: "Sorry! We couldn't find this board section.",
                  },
                },
              },
            },
          },
        },
        '429': {
          description:
            'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 8,
                message:
                  'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/pins/{pin_id}': {
    get: {
      summary: 'Get Pin',
      description:
        'Get a Pin owned by the "operation user_account" - or on a group board that has been shared with this account.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.',
      tags: ['pins'],
      operationId: 'pins/get',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'],
        },
        {
          client_credentials: ['boards:read', 'pins:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      'x-codeSamples': [
        {
          lang: 'python',
          label: 'Python SDK',
          source:
            '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.pins import Pin\n# Pin information can be fetched from profile page or from list pin method here:\n# /docs/api/v5/#operation/pins/list\nPIN_ID="<Add your pin id here>"\n\npin_get = Pin(pin_id=PIN_ID)\nprint("Pin Id: %s, Pin Title:%s" %(pin_get.id, pin_get.title))\n',
        },
        {
          lang: 'cURL',
          label: 'curl',
          source:
            "# Pin information can be fetched from profile page or from list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --location --request GET 'https://api.pinterest.com/v5/pins/<insert_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n",
        },
        {
          lang: 'cURL',
          label: 'curl (Sandbox)',
          source:
            "# Pin information can be fetched from profile page or from list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --location --request GET 'https://api-sandbox.pinterest.com/v5/pins/<insert_sandbox_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n",
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/path_pin_id',
        },
        {
          $ref: '#/components/parameters/query_pin_metrics',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Pin',
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to access board or Pin.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 29,
                message: 'You are not permitted to access that resource.',
              },
            },
          },
        },
        '404': {
          description: 'Pin not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 50,
                message: 'Pin not found.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
    delete: {
      summary: 'Delete Pin',
      description:
        'Delete a Pins owned by the "operation user_account" - or on a group board that has been shared with this account.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.',
      tags: ['pins'],
      operationId: 'pins/delete',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write', 'pins:read', 'pins:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      'x-codeSamples': [
        {
          lang: 'python',
          label: 'Python SDK',
          source:
            '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.pins import Pin\n# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\nPIN_ID="<Add your pin id here>"\n\npin_delete=Pin.delete(pin_id=PIN_ID)\n\nprint("Pin was deleted? %s" % (pin_delete))\n',
        },
        {
          lang: 'cURL',
          label: 'curl',
          source:
            "# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --request DELETE 'https://api.pinterest.com/v5/pins/<insert_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n",
        },
        {
          lang: 'cURL',
          label: 'curl (Sandbox)',
          source:
            "# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --request DELETE 'https://api-sandbox.pinterest.com/v5/pins/<insert_sandbox_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n",
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/path_pin_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '204': {
          description: 'Successfully deleted Pin',
        },
        '403': {
          description: 'Not authorized to access board or Pin.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to access board or Pin.',
              },
            },
          },
        },
        '404': {
          description: 'Pin not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 404,
                message: 'Pin not found.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
    patch: {
      summary: 'Update Pin',
      description:
        'Update a pin owned by the "operating user_account".\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>',
      tags: ['pins'],
      operationId: 'pins/update',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write', 'pins:read', 'pins:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      'x-codeSamples': [
        {
          lang: 'cURL',
          label: 'curl',
          source:
            "# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --location --request PATCH 'https://api.pinterest.com/v5/pins/<insert_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n  \"title\": \"My updated Pin title\"\n}'\n",
        },
        {
          lang: 'cURL',
          label: 'curl (Sandbox)',
          source:
            "# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n\ncurl --location --request GET 'https://api-sandbox.pinterest.com/v5/pins/<insert_sandbox_pin_id>' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n  \"title\": \"My updated Pin title\"\n}'\n",
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/path_pin_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/PinUpdate',
            },
          },
        },
      },
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Pin',
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to update Pin.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 29,
                message: 'Not authorized to update Pin.',
              },
            },
          },
        },
        '404': {
          description: 'Pin not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 50,
                message: 'Pin not found.',
              },
            },
          },
        },
        '429': {
          description:
            'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 8,
                message:
                  'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/pins/{pin_id}/analytics': {
    get: {
      summary: 'Get Pin analytics',
      description:
        'Get analytics for a Pin owned by the "operation user_account" - or on a group board that has been shared with this account.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href="/docs/api/v5/#operation/ad_accounts/list">List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Admin, Analyst.\n- For Pins on secret boards: Admin.\n\nIf Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.',
      tags: ['pins'],
      operationId: 'pins/analytics',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'],
        },
        {
          client_credentials: ['boards:read', 'pins:read'],
        },
      ],
      'x-ratelimit-category': 'org_analytics',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_pin_id',
        },
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_app_types',
        },
        {
          $ref: '#/components/parameters/query_pin_analytics_metric_types',
        },
        {
          $ref: '#/components/parameters/query_split_field_pins',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/PinAnalyticsResponse',
              },
            },
          },
        },
        '400': {
          description: 'Invalid pins analytics parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid pins analytics parameters.',
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to access board or Pin.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to access board or Pin.',
              },
            },
          },
        },
        '404': {
          description: 'Pin not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 404,
                message: 'Pin not found.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/pins/analytics': {
    get: {
      summary: 'Get multiple Pin analytics',
      description:
        '<strong>This endpoint is currently in beta and not available to all apps. <a href=\'/docs/getting-started/beta-and-advanced-access/\'>Learn more</a>.</strong>\n\nGet analytics for multiple pins owned by the "operation user_account" - or on a group board that has been shared with this account.\n- The maximum number of pins supported in a single request is 100.\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href="/docs/api/v5/#operation/ad_accounts/list">List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Admin, Analyst.\n- For Pins on secret boards: Admin.\n\nIf Pin was created before <code>2023-03-20</code> lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.',
      tags: ['pins'],
      operationId: 'multi_pins/analytics',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'],
        },
        {
          client_credentials: ['boards:read', 'pins:read'],
        },
      ],
      'x-ratelimit-category': 'org_analytics',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_required_pin_ids',
        },
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_app_types',
        },
        {
          description: 'Pin metric types to get data for.',
          explode: false,
          in: 'query',
          name: 'metric_types',
          required: true,
          schema: {
            type: 'array',
            items: {
              oneOf: [
                {
                  description: 'Standard Pin metric types',
                  type: 'string',
                  enum: [
                    'IMPRESSION',
                    'OUTBOUND_CLICK',
                    'PIN_CLICK',
                    'SAVE',
                    'SAVE_RATE',
                    'TOTAL_COMMENTS',
                    'TOTAL_REACTIONS',
                    'USER_FOLLOW',
                    'PROFILE_VISIT',
                  ],
                },
                {
                  description: 'Video Pin metric types',
                  type: 'string',
                  enum: [
                    'IMPRESSION',
                    'OUTBOUND_CLICK',
                    'PIN_CLICK',
                    'SAVE',
                    'SAVE_RATE',
                    'VIDEO_MRC_VIEW',
                    'VIDEO_10S_VIEW',
                    'QUARTILE_95_PERCENT_VIEW',
                    'VIDEO_V50_WATCH_TIME',
                    'VIDEO_START',
                    'VIDEO_AVG_WATCH_TIME',
                    'TOTAL_COMMENTS',
                    'TOTAL_REACTIONS',
                  ],
                },
              ],
            },
          },
          style: 'form',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BulkPinAnalyticsResponse',
              },
            },
          },
        },
        '400': {
          description: 'Invalid pins analytics parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 1,
                message: 'Invalid multi_pins analytics parameters.',
              },
            },
          },
        },
        '401': {
          description: 'Not authorized to access board or Pin.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 7,
                message: 'Not authorized to access board or Pin.',
              },
            },
          },
        },
        '404': {
          description: 'Pin not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 50,
                message: 'Pin not found.',
              },
            },
          },
        },
        '429': {
          description:
            'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 8,
                message:
                  'This request exceeded a rate limit. This can happen if the client exceeds one\nof the published rate limits or if multiple write operations are applied to\nan object within a short time window.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/pins/{pin_id}/save': {
    post: {
      summary: 'Save Pin',
      description:
        'Save a Pin on a board or board section owned by the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\nOptional: Business Access: Specify an <code>ad_account_id</code> (obtained via <a href=\'/docs/api/v5/#operation/ad_accounts/list\'>List ad accounts</a>) to use the owner of that ad_account as the "operation user_account". In order to do this, the token user_account must have one of the following <a href="https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts">Business Access</a> roles on the ad_account:\n\n- For Pins on public or protected boards: Owner, Admin, Analyst, Campaign Manager.\n- For Pins on secret boards: Owner, Admin.\n\n- Any Pin type can be saved: image Pin, video Pin, Idea Pin, product Pin, etc.\n- Any public Pin can be saved given a pin ID.',
      tags: ['pins'],
      operationId: 'pins/save',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:write', 'pins:read', 'pins:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      'x-codeSamples': [
        {
          lang: 'python',
          label: 'Python SDK',
          source:
            '# Follow this link for initial setup: https://github.com/pinterest/pinterest-python-sdk#getting-started\n\nfrom pinterest.organic.pins import Pin\n# Pin information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\nPIN_ID="<Add your pin id here>"\n\n# Board information can be fetched from profile page or from list board method here:\n# /docs/api/v5/#operation/boards/list\nNEW_BOARD_ID="<Add your board id here>"\n\npin_save = Pin(pin_id=PIN_ID)\npin_save.save(board_id=NEW_BOARD_ID)\nprint("Pin Id: %s, Board Id:%s" %(pin_save.id, pin_save.board_id))\n',
        },
        {
          lang: 'cURL',
          label: 'curl',
          source:
            "# Pin and Board information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n# /docs/api/v5/#operation/boards/list\n\ncurl --request DELETE 'https://api.pinterest.com/v5/pins/<insert_pin_id>/save' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"board_id\": <insert_new_board_id>\n}'\n",
        },
        {
          lang: 'cURL',
          label: 'curl (Sandbox)',
          source:
            "# Pin and Board information can be fetched from profile page or from create/list pin method here:\n# /docs/api/v5/#operation/pins/list\n# /docs/api/v5/#operation/boards/list\n\ncurl --request DELETE 'https://api-sandbox.pinterest.com/v5/pins/<insert_sandbox_pin_id>/save' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"board_id\": <insert_new_sandbox_board_id>\n}'\n",
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/path_pin_id',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Request object used to save an existing pin',
        required: true,
        content: {
          'application/json': {
            schema: {
              type: 'object',
              properties: {
                board_id: {
                  description: 'Unique identifier of the board to which the pin will be saved.',
                  type: 'string',
                  pattern: '^\\d+$',
                  nullable: true,
                },
                board_section_id: {
                  description: 'Unique identifier of the board section to which the pin will be saved.',
                  type: 'string',
                  pattern: '^\\d+$',
                  nullable: true,
                },
              },
            },
          },
        },
      },
      responses: {
        '201': {
          description: 'Successfully saved pin.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Pin',
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to access Board or Pin.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 29,
                message: 'You are not permitted to access that resource.',
              },
            },
          },
        },
        '404': {
          description: 'Board or Pin not found.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                BoardNotFound: {
                  value: {
                    code: 40,
                    message: 'Board not found.',
                  },
                },
                PinNotFound: {
                  value: {
                    code: 50,
                    message: 'Pin not found.',
                  },
                },
                BoardSectionNotFound: {
                  value: {
                    code: 2031,
                    message: "Sorry! We couldn't find this board section.",
                  },
                },
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/resources/ad_account_countries': {
    get: {
      summary: 'Get ad accounts countries',
      description: 'Get Ad Accounts countries',
      operationId: 'ad_account_countries/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AdAccountsCountryResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['resources'],
    },
  },
  '/resources/delivery_metrics': {
    get: {
      summary: "Get available metrics' definitions",
      description:
        "Get the definitions for ads and organic metrics available across both synchronous and asynchronous report endpoints.\nThe `display_name` attribute will match how the metric is named in our native tools like Ads Manager.\nSee <a href='/docs/api-features/analytics-overview/'>Organic Analytics</a> and <a href='/docs/api-features/ads-reporting/'>Ads Analytics</a> for more information.",
      operationId: 'delivery_metrics/get',
      security: [
        {
          pinterest_oauth2: ['ads:read', 'pins:read', 'user_accounts:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_report_type',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/DeliveryMetricsResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['resources'],
    },
  },
  '/resources/lead_form_questions': {
    get: {
      summary: 'Get lead form questions',
      description:
        "Get a list of all lead form question type names. Some questions might not be used.\n\n<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>",
      operationId: 'lead_form_questions/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      responses: {
        '200': {
          description: 'Success',
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['resources'],
    },
  },
  '/resources/metrics_ready_state': {
    get: {
      summary: 'Get metrics ready state',
      description: 'Learn whether conversion or non-conversion metrics are finalized and ready to query.',
      operationId: 'metrics_ready_state/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_analytics',
      'x-sandbox': 'enabled',
      parameters: [
        {
          name: 'date',
          description: 'Analytics reports request date (UTC). Format: YYYY-MM-DD',
          in: 'query',
          required: true,
          style: 'form',
          schema: {
            type: 'string',
            pattern: '^(\\d{4})-(\\d{2})-(\\d{2})$',
            example: '2022-07-13',
          },
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/BookClosedResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['resources'],
    },
  },
  '/resources/targeting/interests/{interest_id}': {
    get: {
      summary: 'Get interest details',
      description:
        '<p>Get details of a specific interest given interest ID.</p> <p>Click <a href="https://docs.google.com/spreadsheets/d/1HxL-0Z3p2fgxis9YBP2HWC3tvPrs1hAuHDRtH-NJTIM/edit#gid=118370875" target="_blank">here</a> for a spreadsheet listing interests and their IDs.</p>',
      operationId: 'interest_targeting_options/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_interest_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/SingleInterestTargetingOptionResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['resources'],
    },
  },
  '/resources/targeting/{targeting_type}': {
    get: {
      summary: 'Get targeting options',
      description:
        '<p>You can use targeting values in ads placement to define your intended audience. </p> <p>Targeting metrics are organized around targeting specifications.</p> <p>For more information on ads targeting, see <a class="reference external" href="https://help.pinterest.com/en/business/article/audience-targeting" target="_blank">Audience targeting</a>.</p>\n<p><b>Sample return:</b></p> <pre class="literal-block"> [{&quot;36313&quot;: &quot;Australia: Moreton Bay - North&quot;, &quot;124735&quot;: &quot;Canada: North Battleford&quot;, &quot;36109&quot;: &quot;Australia: Murray&quot;, &quot;36108&quot;: &quot;Australia: Mid North Coast&quot;, &quot;36101&quot;: &quot;Australia: Capital Region&quot;, &quot;811&quot;: &quot;U.S.: Reno&quot;, &quot;36103&quot;: &quot;Australia: Central West&quot;, &quot;36102&quot;: &quot;Australia: Central Coast&quot;, &quot;36105&quot;: &quot;Australia: Far West and Orana&quot;, &quot;36104&quot;: &quot;Australia: Coffs Harbour - Grafton&quot;, &quot;36107&quot;: &quot;Australia: Illawarra&quot;, &quot;36106&quot;: &quot;Australia: Hunter Valley Exc Newcastle&quot;, &quot;554017&quot;: &quot;New Zealand: Wanganui&quot;, &quot;554016&quot;: &quot;New Zealand: Marlborough&quot;, &quot;554015&quot;: &quot;New Zealand: Gisborne&quot;, &quot;554014&quot;: &quot;New Zealand: Tararua&quot;, &quot;554013&quot;: &quot;New Zealand: Invercargill&quot;, &quot;GR&quot;: &quot;Greece&quot;, &quot;554011&quot;: &quot;New Zealand: Whangarei&quot;, &quot;554010&quot;: &quot;New Zealand: Far North&quot;, &quot;717&quot;: &quot;U.S.: Quincy-Hannibal-Keokuk&quot;, &quot;716&quot;: &quot;U.S.: Baton Rouge&quot;,...}] </pre>',
      operationId: 'targeting_options/get',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_targeting_type',
        },
        {
          $ref: '#/components/parameters/query_client_id',
        },
        {
          $ref: '#/components/parameters/query_oauth_signature',
        },
        {
          $ref: '#/components/parameters/query_timestamp',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TargetingOptionResponse',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['resources'],
    },
  },
  '/search/boards': {
    get: {
      summary: "Search user's boards",
      description:
        'Search for boards for the "operation user_account". This includes boards of all board types.\n- By default, the "operation user_account" is the token user_account.\n\nIf using Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account". See <a href=\'/docs/getting-started/using-business-access/\'>Understanding Business Access</a> for more information.',
      operationId: 'search_user_boards/get',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:read_secret'],
        },
        {
          client_credentials: ['boards:read', 'boards:read_secret'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_query',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'items',
                        items: {
                          $ref: '#/components/schemas/Board',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['search'],
    },
  },
  '/search/pins': {
    get: {
      description:
        'Search for pins for the "operation user_account".\n- By default, the "operation user_account" is the token user_account.\n\nIf using Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account". See <a href=\'/docs/getting-started/using-business-access/\'>Understanding Business Access</a> for more information.',
      operationId: 'search_user_pins/list',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'boards:read_secret', 'pins:read', 'pins:read_secret'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
        {
          $ref: '#/components/parameters/query_required_search_query',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/Pin',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '404': {
          description: 'User not found',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UserNotFound: {
                  value: {
                    code: 30,
                    message: 'User not found.',
                  },
                },
              },
            },
          },
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      summary: "Search user's Pins",
      tags: ['search'],
    },
  },
  '/search/partner/pins': {
    get: {
      summary: 'Search pins by a given search term',
      description:
        "<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>\n\nGet the top 10 Pins by a given search term.",
      operationId: 'search_partner_pins',
      security: [
        {
          pinterest_oauth2: ['boards:read', 'pins:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'disabled',
      'x-codeSamples': [
        {
          lang: 'cURL',
          label: 'curl',
          source:
            "curl --location --request GET 'https://api.pinterest.com/v5/search/partner/pins' \\\n--header 'Authorization: Bearer <Add your token here>' \\\n--header 'Content-Type: application/json'\n",
        },
      ],
      parameters: [
        {
          description: 'Search term to look up pins.',
          in: 'query',
          name: 'term',
          required: true,
          schema: {
            type: 'string',
          },
        },
        {
          $ref: '#/components/parameters/query_country_code',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          description: 'Search locale.',
          in: 'query',
          name: 'locale',
          required: false,
          schema: {
            type: 'string',
          },
        },
        {
          $ref: '#/components/parameters/result_limit',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/SummaryPin',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid pins',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid pin filter value',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['search'],
    },
  },
  '/terms/related': {
    get: {
      summary: 'List related terms',
      description:
        "Get a list of terms logically related to each input term. <p/>\nExample: the term 'workout' would list related terms like 'one song workout', 'yoga workout', 'workout motivation', etc.",
      tags: ['terms'],
      operationId: 'terms_related/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_list_input_terms',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/RelatedTerms',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid terms related parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid terms related parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/terms/suggested': {
    get: {
      summary: 'List suggested terms',
      description:
        "Get popular search terms that begin with your input term. <p/>\nExample: 'sport' would return popular terms like 'sports bar' and 'sportswear', but not 'motor sports' since the phrase does not begin with the given term.",
      tags: ['terms'],
      operationId: 'terms_suggested/list',
      security: [
        {
          pinterest_oauth2: ['ads:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_input_term',
        },
        {
          $ref: '#/components/parameters/query_term_limit',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TermsSuggestedResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid terms suggested parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid terms suggested parameters.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/trends/keywords/{region}/top/{trend_type}': {
    get: {
      summary: 'List trending keywords',
      description:
        '<p>Get the top trending search keywords among the Pinterest user audience.</p> <p>Trending keywords can be used to inform ad targeting, budget strategy, and creative decisions about which products and Pins will resonate with your audience.</p> <p>Geographic, demographic and interest-based filters are available to narrow down to the top trends among a specific audience. Multiple trend types are supported that can be used to identify newly-popular, evergreen or seasonal keywords.</p> <p>For an interactive way to explore this data, please visit <a href="https://trends.pinterest.com">trends.pinterest.com</a>.\n',
      operationId: 'trending_keywords/list',
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'],
        },
      ],
      'x-ratelimit-category': 'trends_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_trend_region',
        },
        {
          $ref: '#/components/parameters/path_trend_type',
        },
        {
          $ref: '#/components/parameters/query_interest_list',
        },
        {
          $ref: '#/components/parameters/query_gender_list',
        },
        {
          $ref: '#/components/parameters/query_age_bucket_list',
        },
        {
          name: 'include_keywords',
          description:
            'If set, filters the results to top trends which include at least one of the specified keywords.<br />\nIf unset, no keyword filtering logic is applied.',
          example: ['recipes', 'dessert'],
          in: 'query',
          required: false,
          schema: {
            $ref: '#/components/schemas/KeywordList',
          },
        },
        {
          $ref: '#/components/parameters/query_normalize_against_group',
        },
        {
          $ref: '#/components/parameters/query_trending_keyword_limit',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TrendingKeywordsResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid trending keywords request parameters',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid trending keywords request parameters',
              },
            },
          },
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['keywords'],
    },
  },
  '/user_account': {
    get: {
      summary: 'Get user account',
      description:
        'Get account information for the "operation user_account"\n- By default, the "operation user_account" is the token user_account.\n\nIf using Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account". See <a href=\'/docs/getting-started/using-business-access/\'>Understanding Business Access</a> for more information.',
      tags: ['user_account'],
      operationId: 'user_account/get',
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'],
        },
        {
          client_credentials: ['user_accounts:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Account',
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to access the user account.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to access the user account.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/user_account/analytics': {
    get: {
      summary: 'Get user account analytics',
      description:
        'Get analytics for the "operation user_account"\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".',
      tags: ['user_account'],
      operationId: 'user_account/analytics',
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'],
        },
      ],
      'x-ratelimit-category': 'org_analytics',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_from_claimed_content',
        },
        {
          $ref: '#/components/parameters/query_pin_format',
        },
        {
          $ref: '#/components/parameters/query_app_types',
        },
        {
          $ref: '#/components/parameters/query_content_type',
        },
        {
          $ref: '#/components/parameters/query_source',
        },
        {
          $ref: '#/components/parameters/query_metric_types',
        },
        {
          $ref: '#/components/parameters/query_split_field_user_account',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/AnalyticsResponse',
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid user accounts analytics parameters.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid user accounts analytics parameters.',
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to access the user account analytics.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to access the user account analytics.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/user_account/analytics/top_pins': {
    get: {
      summary: 'Get user account top pins analytics',
      description:
        'Gets analytics data about a user\'s top pins (limited to the top 50).\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".',
      tags: ['user_account'],
      operationId: 'user_account/analytics/top_pins',
      security: [
        {
          pinterest_oauth2: ['pins:read', 'user_accounts:read'],
        },
        {
          client_credentials: ['pins:read', 'user_accounts:read'],
        },
      ],
      'x-ratelimit-category': 'org_analytics',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_sort_by',
        },
        {
          $ref: '#/components/parameters/query_from_claimed_content',
        },
        {
          $ref: '#/components/parameters/query_pin_format',
        },
        {
          $ref: '#/components/parameters/query_app_types',
        },
        {
          $ref: '#/components/parameters/query_content_type',
        },
        {
          $ref: '#/components/parameters/query_source',
        },
        {
          $ref: '#/components/parameters/query_metric_types',
        },
        {
          $ref: '#/components/parameters/query_num_of_pins',
        },
        {
          $ref: '#/components/parameters/query_created_in_last_n_days',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TopPinsAnalyticsResponse',
              },
            },
          },
          description: 'Success',
        },
        '403': {
          description: 'Not authorized to access the user account analytics.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to access the user account analytics.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/user_account/analytics/top_video_pins': {
    get: {
      summary: 'Get user account top video pins analytics',
      description:
        'Gets analytics data about a user\'s top video pins (limited to the top 50).\n- By default, the "operation user_account" is the token user_account.\n\nOptional: Business Access: Specify an ad_account_id to use the owner of that ad_account as the "operation user_account".',
      tags: ['user_account'],
      operationId: 'user_account/analytics/top_video_pins',
      security: [
        {
          pinterest_oauth2: ['pins:read', 'user_accounts:read'],
        },
        {
          client_credentials: ['pins:read', 'user_accounts:read'],
        },
      ],
      'x-ratelimit-category': 'org_analytics',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_start_date',
        },
        {
          $ref: '#/components/parameters/query_end_date',
        },
        {
          $ref: '#/components/parameters/query_video_pin_sort_by',
        },
        {
          $ref: '#/components/parameters/query_from_claimed_content',
        },
        {
          $ref: '#/components/parameters/query_pin_format',
        },
        {
          $ref: '#/components/parameters/query_app_types',
        },
        {
          $ref: '#/components/parameters/query_content_type',
        },
        {
          $ref: '#/components/parameters/query_source',
        },
        {
          $ref: '#/components/parameters/query_video_pin_metric_types',
        },
        {
          $ref: '#/components/parameters/query_num_of_pins',
        },
        {
          $ref: '#/components/parameters/query_created_in_last_n_days',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/TopVideoPinsAnalyticsResponse',
              },
            },
          },
          description: 'Success',
        },
        '403': {
          description: 'Not authorized to access the user account analytics.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to access the user account analytics.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/user_account/businesses': {
    get: {
      summary: 'List linked businesses',
      description: 'Get a list of your linked business accounts.',
      operationId: 'linked_business_accounts/get',
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'],
        },
        {
          client_credentials: ['user_accounts:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                type: 'array',
                items: {
                  $ref: '#/components/schemas/LinkedBusiness',
                },
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      tags: ['user_account'],
    },
  },
  '/user_account/followers': {
    get: {
      summary: 'List followers',
      description: 'Get a list of your followers.',
      operationId: 'followers/list',
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'],
        },
        {
          client_credentials: ['user_accounts:read'],
        },
      ],
      'x-ratelimit-category': 'ads_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/UserSummary',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid user id',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid user id',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['user_account'],
    },
  },
  '/user_account/following': {
    get: {
      summary: 'List following',
      description: 'Get a list of who a certain user follows.',
      operationId: 'user_following/get',
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'],
        },
        {
          client_credentials: ['user_accounts:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_user_following_feed_type',
        },
        {
          $ref: '#/components/parameters/query_explicit_following',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          description: 'response',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        description: 'Users',
                        items: {
                          $ref: '#/components/schemas/UserSummary',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['user_account'],
    },
  },
  '/user_account/following/boards': {
    get: {
      summary: 'List following boards',
      description: 'Get a list of the boards a user follows. The request returns a board summary object array.',
      operationId: 'boards_user_follows/list',
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'],
        },
        {
          client_credentials: ['user_accounts:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
        {
          $ref: '#/components/parameters/query_explicit_following',
        },
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/Board',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
          description: 'Success',
        },
        '400': {
          description: 'Invalid user id',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 400,
                message: 'Invalid user id',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      tags: ['user_account'],
    },
  },
  '/user_account/following/{username}': {
    post: {
      summary: 'Follow user',
      description:
        "<strong>This endpoint is currently in beta and not available to all apps. <a href='/docs/getting-started/beta-and-advanced-access/'>Learn more</a>.</strong>\n\nUse this request, as a signed-in user, to follow another user.",
      tags: ['user_account'],
      operationId: 'follow_user/update',
      security: [
        {
          pinterest_oauth2: ['user_accounts:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'enabled',
      parameters: [
        {
          $ref: '#/components/parameters/path_username',
        },
      ],
      requestBody: {
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/FollowUserRequest',
            },
          },
        },
        description: 'Follow a user.',
        required: true,
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UserSummary',
              },
            },
          },
          description: 'Success',
        },
        '404': {
          description: 'User not found',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              examples: {
                UserNotFound: {
                  value: {
                    code: 30,
                    message: 'User not found.',
                  },
                },
              },
            },
          },
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
    },
  },
  '/user_account/websites': {
    post: {
      summary: 'Verify website',
      description: 'Verify a website as a signed-in user.',
      tags: ['user_account'],
      operationId: 'verify_website/update',
      security: [
        {
          pinterest_oauth2: ['user_accounts:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      requestBody: {
        description: 'Verify a website.',
        required: true,
        content: {
          'application/json': {
            schema: {
              $ref: '#/components/schemas/UserWebsiteVerifyRequest',
            },
          },
        },
      },
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UserWebsiteSummary',
              },
            },
          },
          description: 'Success',
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
    },
    get: {
      summary: 'Get user websites',
      description: 'Get user websites, claimed or not',
      tags: ['user_account'],
      operationId: 'user_websites/get',
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'],
        },
      ],
      parameters: [
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          description: 'Success',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/UserWebsiteSummary',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        '403': {
          description: 'Not authorized to access the user website list.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to access the user website list.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'disabled',
    },
    delete: {
      summary: 'Unverify website',
      description: 'Unverifu a website verified by the signed-in user.',
      tags: ['user_account'],
      operationId: 'unverify_website/delete',
      security: [
        {
          pinterest_oauth2: ['user_accounts:write'],
        },
      ],
      'x-ratelimit-category': 'org_write',
      'x-sandbox': 'disabled',
      parameters: [
        {
          $ref: '#/components/parameters/query_website',
        },
      ],
      responses: {
        '204': {
          description: 'Successfully unverified website',
        },
        '404': {
          description: 'Website not in user list.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 404,
                message: 'Website not in user list.',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
    },
  },
  '/user_account/websites/verification': {
    get: {
      summary: 'Get user verification code for website claiming',
      description: 'Get verification code for user to install on the website to claim it.',
      tags: ['user_account'],
      operationId: 'website_verification/get',
      parameters: [
        {
          $ref: '#/components/parameters/query_ad_account_id',
        },
      ],
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'],
        },
        {
          client_credentials: ['user_accounts:read'],
        },
      ],
      responses: {
        '200': {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/UserWebsiteVerificationCode',
              },
            },
          },
          description: 'Success',
        },
        '403': {
          description: 'Not authorized to access the user verification code for website claiming.',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
              example: {
                code: 403,
                message: 'Not authorized to access the user verification code for website claiming.',
              },
            },
          },
        },
        default: {
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
          description: 'Unexpected error',
        },
      },
      'x-ratelimit-category': 'org_read',
      'x-sandbox': 'disabled',
    },
  },
  '/users/{username}/interests/follow': {
    get: {
      summary: 'List following interests',
      description: "Get a list of a user's following interests in one place.",
      tags: ['user_account'],
      operationId: 'user_account/followed_interests',
      security: [
        {
          pinterest_oauth2: ['user_accounts:read'],
        },
        {
          client_credentials: ['user_accounts:read'],
        },
      ],
      'x-ratelimit-category': 'org_read',
      parameters: [
        {
          $ref: '#/components/parameters/path_username',
        },
        {
          $ref: '#/components/parameters/query_bookmark',
        },
        {
          $ref: '#/components/parameters/query_page_size',
        },
      ],
      responses: {
        '200': {
          description: 'Success',
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    $ref: '#/components/schemas/Paginated',
                  },
                  {
                    type: 'object',
                    properties: {
                      items: {
                        type: 'array',
                        items: {
                          $ref: '#/components/schemas/Interest',
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
        '400': {
          description: 'Invalid parameters',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        '401': {
          description: 'Authorization failed',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        '404': {
          description: 'User not found',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
        default: {
          description: 'Unexpected error',
          content: {
            'application/json': {
              schema: {
                $ref: '#/components/schemas/Error',
              },
            },
          },
        },
      },
      'x-sandbox': 'enabled',
    },
  },
} as TPaths;
