name: Manual Branch Run

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run on (cannot be main)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check if branch is main
        if: github.event.inputs.branch == 'main'
        run: |
          echo "Error: This workflow cannot be run on the main branch."
          exit 1

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Generate slugified branch name
        id: slugify
        run: |
          BRANCH_NAME="${{ github.event.inputs.branch }}"
          # Simple slugification: replace non-alphanumeric with -, remove leading/trailing -, lowercase
          SLUG=$(echo "$BRANCH_NAME" | iconv -t ascii//TRANSLIT | sed -r 's/[^a-zA-Z0-9]+/-/g' | sed -r 's/^-+\|-+$//g' | tr 'A-Z' 'a-z')
          echo "SLUG_BRANCH_NAME=$SLUG" >> "$GITHUB_ENV"
          echo "Slugified branch name: $SLUG"

      - name: Update workspace dependencies
        run: |
          for file in $(find . -type f -name package.json -not -path "./node_modules/*" -not -path "./package.json"); do
            content="$(< "$file")"
            updated="$(echo "$content" | sed -E 's/"workspace:\^"/"workspace:*"/g')"
            if [ "$content" != "$updated" ]; then
              echo "Updating $file"
              echo "$updated" > "$file"
              changed_count=$((changed_count + 1))
            fi
          done
          echo "Finished updating workspace dependencies. $changed_count files updated."
        shell: bash

      - name: Run Changeset Pre Exit
        run: pnpm changeset pre exit

      - name: Run Changeset Version Snapshot
        run: pnpm changeset version --snapshot ${{ env.SLUG_BRANCH_NAME }}

      # - name: Publish to npm
      #   run: pnpm publish -r --no-git-checks --tag ${{ env.SLUG_BRANCH_NAME }}
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
