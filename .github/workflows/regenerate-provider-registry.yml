name: Regenerate Provider Registry

permissions:
  contents: write

on:
  # Run every 6 hours to keep provider registry up-to-date
  schedule:
    - cron: '0 */6 * * *' # Every 6 hours
  # Allow manual triggering for testing
  workflow_dispatch:

concurrency:
  group: regenerate-provider-registry
  cancel-in-progress: false

jobs:
  regenerate:
    # Only run on the main repository, not on forks
    if: ${{ github.repository == 'mastra-ai/mastra' }}
    runs-on: ubuntu-latest
    env:
      HUSKY: 0

    steps:
      - name: Get Github App Token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.DANE_APP_ID }}
          private-key: ${{ secrets.DANE_APP_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - run: |
          cat <<- EOF > $HOME/.netrc
            machine github.com
            login ${{ steps.app-token.outputs.app-slug }}
            password ${{ steps.app-token.outputs.token }}
            machine api.github.com
            login ${{ steps.app-token.outputs.app-slug }}
            password ${{ steps.app-token.outputs.token }}
          EOF
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0

      - name: Configure npm registry
        run: mkdir -p ~/setup-pnpm && echo "registry=https://registry.yarnpkg.com" > ~/setup-pnpm/.npmrc

      - uses: wardpeet/action-setup@pnpm-registry
        name: Install pnpm
        with:
          registry: https://registry.yarnpkg.com
          run_install: false

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.5
          cache: 'pnpm'
          registry-url: 'https://registry.yarnpkg.com'

      - name: Install dependencies
        run: pnpm install

      - name: Generate provider registry
        run: pnpm --filter @mastra/core generate:providers

      - name: Generate model documentation
        run: pnpx tsx packages/core/scripts/generate-model-docs.ts

      - name: Format generated files with Prettier
        run: |
          pnpm prettier --write packages/core/src/llm/model/provider-registry.json
          pnpm prettier --write packages/core/src/llm/model/provider-types.generated.d.ts
          pnpm prettier --write docs/src/content/en/models/**/*.{mdx,ts}
      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code packages/core/src/llm/model/provider-registry.json packages/core/src/llm/model/provider-types.generated.d.ts docs/src/content/en/models/ || echo "changed=true" >> $GITHUB_OUTPUT

      - name: Create changeset
        if: steps.git-check.outputs.changed == 'true'
        run: |
          # Check if an automated provider registry changeset already exists
          EXISTING_CHANGESET=$(ls .changeset/automated-provider-registry-*.md 2>/dev/null | head -n 1)
          
          if [ -n "$EXISTING_CHANGESET" ]; then
            echo "Automated changeset already exists: ${EXISTING_CHANGESET}"
            echo "Skipping changeset creation to avoid spam"
            echo "CHANGESET_FILE=" >> $GITHUB_ENV
          else
            # Generate a unique changeset filename with timestamp
            CHANGESET_ID="automated-provider-registry-$(date +%Y%m%d-%H%M%S)"
            CHANGESET_FILE=".changeset/${CHANGESET_ID}.md"

            # Create changeset for @mastra/core with patch bump
            cat > "${CHANGESET_FILE}" << 'EOF'
          ---
          '@mastra/core': patch
          ---

          Update provider registry and model documentation with latest models and providers
          EOF

            echo "Created changeset: ${CHANGESET_FILE}"
            echo "CHANGESET_FILE=${CHANGESET_FILE}" >> $GITHUB_ENV
          fi

      - name: Commit and push changes
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git add packages/core/src/llm/model/provider-registry.json
          git add packages/core/src/llm/model/provider-types.generated.d.ts
          git add docs/src/content/en/models/
          git add "${CHANGESET_FILE}"
          git commit -m "chore: regenerate provider registry and model documentation [skip ci]"
          git pull --rebase
          git push

      - name: Log summary
        if: steps.git-check.outputs.changed == 'true'
        run: echo "✅ Provider registry and model documentation updated with changeset and committed to main"

      - name: Log no changes
        if: steps.git-check.outputs.changed != 'true'
        run: echo "ℹ️ No changes detected in provider registry or model documentation"
