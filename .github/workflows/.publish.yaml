name: Publish

on:
  workflow_call:
    inputs:
      dry-run:
        description: 'Include --dry-run argument'
        type: boolean
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          always-auth: true
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Environment
        run: |
          echo "DB_URL=postgres://postgres:postgres@localhost:5432/postgres?schema=mastra" >> packages/core/.env

      - name: Install `pnpm`
        run: npm install -g pnpm

      - name: Install Modules
        run: pnpm install --frozen-lockfile

      - name: Build and Publish Changed Packages
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
          pnpm -r --filter "./packages/**/*" exec -- node -e "
            const pkg = require('./package.json');
            const publishedVersion = require('child_process')
              .execSync('npm view ' + pkg.name + ' version')
              .toString().trim();
            if (pkg.version !== publishedVersion) {
              console.log('Building package...');
              require('child_process').execSync('pnpm run build', { stdio: 'inherit' });
              console.log('Publishing package...');
              require('child_process').execSync('pnpm publish --no-git-checks --access public ${{ inputs.dry-run && '--dry-run' || '' }}', { stdio: 'inherit' });
            } else {
              console.log('Package version unchanged, skipping build and publish.');
            }
          "
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
