name: First Time Contributor

on:
  pull_request:
    types: [opened, reopened]

jobs:
  check-first-time:
    runs-on: ubuntu-latest
    outputs:
      is_first_time: ${{ steps.check-commits.outputs.is_first_time }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for accurate commit checking

      - name: Check if author has previous commits
        id: check-commits
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
        run: |
          PR_HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          PR_AUTHOR=$(git show -s --format='%ae' $PR_HEAD_SHA)
          DEFAULT_BRANCH="${{ github.event.repository.default_branch }}"

          echo "Checking commits for author: $PR_AUTHOR"
          echo "PR SHA: $PR_HEAD_SHA"
          echo "Default branch: $DEFAULT_BRANCH"

          # Get the commits excluding the PR
          COMMIT_COUNT=$(git log $DEFAULT_BRANCH \
            --author="$PR_AUTHOR" \
            --pretty=format:"%H" | wc -l)

          if [ $COMMIT_COUNT -eq 0 ]; then
            echo "is_first_time=true" >> $GITHUB_OUTPUT
            echo "This is $PR_AUTHOR's first contribution!"
          else
            echo "is_first_time=false" >> $GITHUB_OUTPUT
            echo "Author has $COMMIT_COUNT previous commits"
          fi

  your-action:
    needs: check-first-time
    if: needs.check-first-time.outputs.is_first_time == 'true'
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mastra
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.7.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: pnpm install

      - name: Prepare CLI package for publishing
        run: cd packages/cli && rm -rf node_modules && pnpm install --shamefully-hoist --ignore-scripts && cd ../..

      - name: Build core
        run: pnpm build:core

      - name: Install dane cli
        run: pnpm install -g @mastra/dane@alpha

      - name: Set Anthropic Key
        run: dane config --set ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}

      - name: create new contributor message
        run: dane publish
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
