// This file is auto-generated by @hey-api/openapi-ts

export const ScrapeResponseSchema = {
  type: 'object',
  properties: {
    success: {
      type: 'boolean',
    },
    warning: {
      type: 'string',
      nullable: true,
      description: 'Warning message to let you know of any issues.',
    },
    data: {
      type: 'object',
      properties: {
        markdown: {
          type: 'string',
          nullable: true,
          description: 'Markdown content of the page if the `markdown` format was specified (default)',
        },
        html: {
          type: 'string',
          nullable: true,
          description: 'HTML version of the content on page if the `html` format was specified',
        },
        rawHtml: {
          type: 'string',
          nullable: true,
          description: 'Raw HTML content of the page if the `rawHtml` format was specified',
        },
        links: {
          type: 'array',
          items: {
            type: 'string',
            format: 'uri',
          },
          nullable: true,
          description: 'Links on the page if the `links` format was specified',
        },
        screenshot: {
          type: 'string',
          nullable: true,
          description:
            'URL of the screenshot of the page if the `screenshot` or `screenshot@fullSize` format was specified',
        },
        metadata: {
          type: 'object',
          properties: {
            title: {
              type: 'string',
            },
            description: {
              type: 'string',
            },
            language: {
              type: 'string',
              nullable: true,
            },
            sourceURL: {
              type: 'string',
              format: 'uri',
            },
            '<any other metadata> ': {
              type: 'string',
            },
            statusCode: {
              type: 'integer',
              description: 'The status code of the page',
            },
            error: {
              type: 'string',
              nullable: true,
              description: 'The error message of the page',
            },
          },
        },
      },
    },
  },
} as const;

export const CrawlStatusResponseObjSchema = {
  type: 'object',
  properties: {
    markdown: {
      type: 'string',
      nullable: true,
      description: 'Markdown content of the page if the `markdown` format was specified (default)',
    },
    html: {
      type: 'string',
      nullable: true,
      description: 'HTML version of the content on page if the `html` format was specified',
    },
    rawHtml: {
      type: 'string',
      nullable: true,
      description: 'Raw HTML content of the page if the `rawHtml` format was specified',
    },
    links: {
      type: 'array',
      items: {
        type: 'string',
        format: 'uri',
      },
      nullable: true,
      description: 'Links on the page if the `links` format was specified',
    },
    screenshot: {
      type: 'string',
      nullable: true,
      description:
        'URL of the screenshot of the page if the `screenshot` or `screenshot@fullSize` format was specified',
    },
    metadata: {
      type: 'object',
      properties: {
        title: {
          type: 'string',
        },
        description: {
          type: 'string',
        },
        language: {
          type: 'string',
          nullable: true,
        },
        sourceURL: {
          type: 'string',
          format: 'uri',
        },
        '<any other metadata> ': {
          type: 'string',
        },
        statusCode: {
          type: 'integer',
          description: 'The status code of the page',
        },
        error: {
          type: 'string',
          nullable: true,
          description: 'The error message of the page',
        },
      },
    },
  },
} as const;

export const SearchResponseSchema = {
  type: 'object',
  properties: {
    success: {
      type: 'boolean',
    },
    data: {
      type: 'array',
      items: {
        markdown: {
          type: 'string',
          nullable: true,
          description: 'Markdown content of the page if the `markdown` format was specified (default)',
        },
        html: {
          type: 'string',
          nullable: true,
          description: 'HTML version of the content on page if the `html` format was specified',
        },
        rawHtml: {
          type: 'string',
          nullable: true,
          description: 'Raw HTML content of the page if the `rawHtml` format was specified',
        },
        links: {
          type: 'array',
          items: {
            type: 'string',
            format: 'uri',
          },
          nullable: true,
          description: 'Links on the page if the `links` format was specified',
        },
        screenshot: {
          type: 'string',
          nullable: true,
          description:
            'URL of the screenshot of the page if the `screenshot` or `screenshot@fullSize` format was specified',
        },
        metadata: {
          type: 'object',
          properties: {
            title: {
              type: 'string',
            },
            description: {
              type: 'string',
            },
            language: {
              type: 'string',
              nullable: true,
            },
            sourceURL: {
              type: 'string',
              format: 'uri',
            },
            '<any other metadata> ': {
              type: 'string',
            },
            statusCode: {
              type: 'integer',
              description: 'The status code of the page',
            },
            error: {
              type: 'string',
              nullable: true,
              description: 'The error message of the page',
            },
          },
        },
      },
    },
  },
} as const;

export const CrawlResponseSchema = {
  type: 'object',
  properties: {
    success: {
      type: 'boolean',
    },
    id: {
      type: 'string',
    },
    url: {
      type: 'string',
      format: 'uri',
    },
  },
} as const;
