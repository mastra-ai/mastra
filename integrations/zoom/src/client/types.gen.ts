// This file is auto-generated by @hey-api/openapi-ts

/**
 * The account object represents an account on Zoom. The account owner is the user who created the account or had an account created for them. You can read more about the Zoom account structure <a href='https://medium.com/zoom-developer-blog/a-brief-look-at-zoom-account-structures-1d19c745bf8a' target='_blank'>here</a>.
 */
export type Account = {
  /**
   * User's email address.
   */
  email: string;
  /**
   * User's first name.
   */
  first_name: string;
  /**
   * User's last name.
   */
  last_name: string;
  /**
   * Account options object.
   */
  options?: {
    /**
     * Toggle whether automatic billing renewal is on or off.
     */
    billing_auto_renew?: boolean;
    /**
     * Specify the IP addresses of the Meeting Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Meeting Connectors of a master account will be shared with the sub account.
     *
     *
     * **Note:** This option can only be used if the value of `share_mc` is set to `true`.
     */
    meeting_connector_list?: Array<string>;
    /**
     * Payee:<br>`master` - master account holder pays.<br>`sub` - Sub account holder pays.
     */
    pay_mode?: 'master' | 'sub';
    /**
     * Specify the IP addresses of the Room Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Room Connectors of a master account will be shared with the sub account.
     *
     *
     * **Note:** This option can only be used if the value of `share_rc` is set to `true`.
     */
    room_connector_list?: Array<string>;
    /**
     * Enable/disable the option for a sub account to use shared [Meeting Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector) that are set up by the master account. Meeting Connectors can only be used by On-prem users.
     */
    share_mc?: boolean;
    /**
     * Enable/disable the option for a sub account to use shared [Virtual Room Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector) that are set up by the master account. Virtual Room Connectors can only be used by On-prem users.
     */
    share_rc?: boolean;
  };
  /**
   * User's password.
   */
  password: string;
  /**
   * Account Vanity URL
   */
  vanity_url?: string;
};

/**
 * Payee:<br>`master` - master account holder pays.<br>`sub` - Sub account holder pays.
 */
export type pay_mode = 'master' | 'sub';

/**
 * List of Accounts.
 */
export type AccountList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of Account objects.
   */
  accounts?: Array<{
    /**
     * Account name.
     */
    account_name?: string;
    /**
     * Account Number of the account.
     */
    account_number?: string;
    /**
     * Account type.
     */
    account_type?: string;
    /**
     * Account creation date and time.
     */
    created_at?: string;
    /**
     * Account ID.
     */
    id?: string;
    /**
     * Account owner email.
     */
    owner_email?: string;
    /**
     * Account seats.
     */
    seats?: number;
    /**
     * Account subscription end date and time.
     */
    subscription_end_time?: string;
    /**
     * Account subscription start date and time.
     */
    subscription_start_time?: string;
  }>;
};

/**
 * Account object in the account list.
 */
export type AccountListItem = {
  /**
   * List of Account objects.
   */
  accounts?: Array<{
    /**
     * Account name.
     */
    account_name?: string;
    /**
     * Account Number of the account.
     */
    account_number?: string;
    /**
     * Account type.
     */
    account_type?: string;
    /**
     * Account creation date and time.
     */
    created_at?: string;
    /**
     * Account ID.
     */
    id?: string;
    /**
     * Account owner email.
     */
    owner_email?: string;
    /**
     * Account seats.
     */
    seats?: number;
    /**
     * Account subscription end date and time.
     */
    subscription_end_time?: string;
    /**
     * Account subscription start date and time.
     */
    subscription_start_time?: string;
  }>;
};

/**
 * Account options object.
 */
export type AccountOptions = {
  /**
   * Toggle whether automatic billing renewal is on or off.
   */
  billing_auto_renew?: boolean;
  /**
   * Specify the IP addresses of the Meeting Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Meeting Connectors of a master account will be shared with the sub account.
   *
   *
   * **Note:** This option can only be used if the value of `share_mc` is set to `true`.
   */
  meeting_connector_list?: Array<string>;
  /**
   * Payee:<br>`master` - master account holder pays.<br>`sub` - Sub account holder pays.
   */
  pay_mode?: 'master' | 'sub';
  /**
   * Specify the IP addresses of the Room Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Room Connectors of a master account will be shared with the sub account.
   *
   *
   * **Note:** This option can only be used if the value of `share_rc` is set to `true`.
   */
  room_connector_list?: Array<string>;
  /**
   * Enable/disable the option for a sub account to use shared [Meeting Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector) that are set up by the master account. Meeting Connectors can only be used by On-prem users.
   */
  share_mc?: boolean;
  /**
   * Enable/disable the option for a sub account to use shared [Virtual Room Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector) that are set up by the master account. Virtual Room Connectors can only be used by On-prem users.
   */
  share_rc?: boolean;
};

/**
 * Account plan object.
 */
export type AccountPlan = {
  /**
   * Account plan number of hosts.
   */
  hosts?: number;
  /**
   * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
   */
  type?: string;
};

/**
 * Account base plan object.
 */
export type AccountPlanBaseRequired = {
  /**
   * Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999.
   */
  hosts: number;
  /**
   * Account base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
   */
  type: string;
};

/**
 * Account plan object.
 */
export type AccountPlanRequired = {
  /**
   * Number of hosts for this plan.
   */
  hosts: number;
  /**
   * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
   */
  type: string;
};

/**
 * Account Plans object.
 */
export type AccountPlans = {
  /**
   * Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type</a>.
   */
  plan_audio?: {
    /**
     * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
     */
    callout_countries?: string;
    /**
     * Dedicated dial-In numbers.
     */
    ddi_numbers?: number;
    /**
     * Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the "ID" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table.
     */
    premium_countries?: string;
    /**
     * Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the "ID" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table.
     */
    tollfree_countries?: string;
    /**
     * Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type</a>.
     */
    type?: string;
  };
  /**
   * Account base plan object.
   */
  plan_base: {
    /**
     * Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999.
     */
    hosts: number;
    /**
     * Account base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type: string;
  };
  /**
   * Additional large meeting Plans.
   */
  plan_large_meeting?: Array<{
    /**
     * Account plan number of hosts.
     */
    hosts?: number;
    /**
     * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type?: string;
  }>;
  /**
   * Phone Plan Object
   */
  plan_phone?: {
    /**
     * Additional phone base plans.
     */
    plan_base?: {
      /**
       * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
       */
      callout_countries?: string;
      /**
       * Additional phone base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
       */
      type?: string;
    };
    /**
     * Additional phone calling plans.
     */
    plan_calling?: Array<{
      hosts?: number;
      /**
       * Additional phone calling <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
       */
      type?: string;
    }>;
    /**
     * Additional phone number plans.
     */
    plan_number?: Array<{
      hosts?: number;
      /**
       * Additional phone number <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
       */
      type?: string;
    }>;
  };
  /**
   * Additional cloud recording plan.
   */
  plan_recording?: string;
  /**
   * Account plan object.
   */
  plan_room_connector?: {
    /**
     * Account plan number of hosts.
     */
    hosts?: number;
    /**
     * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type?: string;
  };
  /**
   * Additional webinar plans.
   */
  plan_webinar?: Array<{
    /**
     * Account plan number of hosts.
     */
    hosts?: number;
    /**
     * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type?: string;
  }>;
  /**
   * Account plan object.
   */
  plan_zoom_rooms?: {
    /**
     * Account plan number of hosts.
     */
    hosts?: number;
    /**
     * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type?: string;
  };
};

export type AccountSettings = {
  /**
   * Account Settings: Notification.
   */
  email_notification?: {
    /**
     * Notify when an alternative host is set or removed from a meeting.
     */
    alternative_host_reminder?: boolean;
    /**
     * Notify the host and participants when a meeting is cancelled.
     */
    cancel_meeting_reminder?: boolean;
    /**
     * Notify host when cloud recording is available.
     */
    cloud_recording_avaliable_reminder?: boolean;
    /**
     * Notify the host when participants join the meeting before them.
     */
    jbh_reminder?: boolean;
    /**
     * Notify user when host licenses are running low.
     */
    low_host_count_reminder?: boolean;
    /**
     * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
     */
    schedule_for_reminder?: boolean;
  };
  /**
   * Account Settings: Feature.
   */
  feature?: {
    /**
     * Set the maximum number of participants a host can have in a single meeting.
     */
    meeting_capacity?: number;
  };
  /**
   * Account Settings: In Meeting.
   */
  in_meeting?: {
    /**
     * Identify guest participants in a meeting or webinar.
     */
    alert_guest_join?: boolean;
    /**
     * Allow live streaming.
     */
    allow_live_streaming?: boolean;
    /**
     * If the value of this field is set to `true`, meeting participants and webinar panelists can be allowed to rename themselves during a meeting or a webinar.
     *
     */
    allow_participants_to_rename?: boolean;
    /**
     * Show the Zoom desktop application when sharing screens.
     */
    allow_show_zoom_windows?: boolean;
    /**
     * Allow participants to use annotation tools to add information to shared screens.
     */
    annotation?: boolean;
    /**
     * Allow an anonymous Q&A in a webinar.
     */
    anonymous_question_answer?: boolean;
    /**
     * Allow host to put attendee on hold.
     *
     * **This field has been deprecated and is no longer supported.**
     */
    attendee_on_hold?: boolean;
    /**
     * Enable users to see and add contacts to the "auto-answer group" in the chat contact list. Any call from members of this group will automatically be answered.
     */
    auto_answer?: boolean;
    /**
     * Automatically save all in-meeting chats so that the host does not need to manually save the chat transcript after the meeting starts.
     */
    auto_saving_chat?: boolean;
    /**
     * Allow host to split meeting participants into separate, smaller rooms.
     */
    breakout_room?: boolean;
    /**
     * Allow meeting participants to send a message that is visible to all participants.
     */
    chat?: boolean;
    /**
     * Allow a host to type closed captions. Enable a host to assign a participant or third party device to add closed captions.
     */
    closed_caption?: boolean;
    /**
     * Allow the host to add co-hosts.
     */
    co_host?: boolean;
    /**
     * If set to `true`, account owners and admins on paid accounts can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
     */
    custom_data_center_regions?: boolean;
    /**
     * Custom live streaming.
     */
    custom_live_streaming_service?: boolean;
    /**
     * Custom service instructions.
     */
    custom_service_instructions?: string;
    /**
     * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
     *
     */
    data_center_regions?: 'EU' | 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA';
    /**
     * DSCP audio.
     */
    dscp_audio?: number;
    /**
     * DSCP marking.
     */
    dscp_marking?: boolean;
    /**
     * DSCP video.
     */
    dscp_video?: number;
    /**
     * Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).
     */
    e2e_encryption?: boolean;
    /**
     * Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.
     */
    entry_exit_chime?: 'host' | 'all' | 'none';
    /**
     * Allow another user to take control of your camera during a meeting.
     */
    far_end_camera_control?: boolean;
    /**
     * Add a "Feedback" tab to the Windows Settings or Mac Preferences dialog. Enable users to provide feedback to Zoom at the end of the meeting.
     */
    feedback?: boolean;
    /**
     * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled on the account or not.
     */
    file_transfer?: boolean;
    /**
     * Activate higher quality video for host and participants.
     * Please note: This will use more bandwidth.
     */
    group_hd?: boolean;
    /**
     * Enable or disable meeting reactions. <br>
     * `true`: Allow meeting participants to communicate without interrupting by reacting with an emoji that shows on their video.<br>
     * `false`: Do not enable meeting reactions.
     */
    meeting_reactions?: boolean;
    /**
     * Allow users to select original sound in their client settings.
     */
    original_audio?: boolean;
    /**
     * Peer to peer connection while only two people are in a meeting.
     */
    p2p_connetion?: boolean;
    /**
     * Peer to peer listening ports range.
     */
    p2p_ports?: boolean;
    /**
     * Add "Polls" to the meeting controls.
     */
    polling?: boolean;
    /**
     * The listening ports range, separated by a comma (ex 55,56). The ports range must be between 1 to 65535.
     */
    ports_range?: string;
    /**
     * Display a thumbs up or down survey at the end of each meeting.
     */
    post_meeting_feedback?: boolean;
    /**
     * Allow a meeting participant to send a private message to another participant.
     */
    private_chat?: boolean;
    /**
     * Record and play their own voice.
     */
    record_play_own_voice?: boolean;
    /**
     * Allow users to request remote control.
     */
    remote_control?: boolean;
    /**
     * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the account or not.
     */
    request_permission_to_unmute?: boolean;
    /**
     * Allow screen sharing.
     */
    screen_sharing?: boolean;
    /**
     * Only show the default email when sending email invites.
     */
    sending_default_email_invites?: boolean;
    /**
     * If the value of this field is set to `true`, you will allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is a workaround for participants who are unable to download, install, or run applications. Note that the meeting experience from the browser is limited.
     */
    show_a_join_from_your_browser_link?: boolean;
    /**
     * Always show the meeting control toolbar.
     */
    show_meeting_control_toolbar?: boolean;
    /**
     * Allow users to select stereo audio in their client settings.
     */
    stereo_audio?: boolean;
    /**
     * Use HTML formatted email for the Outlook plugin.
     */
    use_html_format_email?: boolean;
    /**
     * Allow users to replace their background with any selected image. Choose or upload an image in the Zoom desktop application settings.
     */
    virtual_background?: boolean;
    /**
     * Settings to manage virtual background.
     */
    virtual_background_settings?: {
      /**
       * Allow users to upload custom backgrounds.
       */
      allow_upload_custom?: boolean;
      /**
       * Allow use of videos for virtual backgrounds.
       */
      allow_videos?: boolean;
      /**
       * Enable virtual background.
       */
      enable?: boolean;
      files?: Array<{
        /**
         * Unique identifier of the file.
         */
        id?: string;
        /**
         * Indicates whether or not this file is the default virtual background file.
         */
        is_default?: boolean;
        /**
         * File name.
         */
        name?: string;
        /**
         * File size.
         */
        size?: string;
        /**
         * File type.
         */
        type?: string;
      }>;
    };
    /**
     * Add a watermark when viewing a shared screen.
     */
    watermark?: boolean;
    /**
     * Allow a Q&A in a webinar.
     */
    webinar_question_answer?: boolean;
    /**
     * Allow participants to share a whiteboard that includes annotation tools.
     */
    whiteboard?: boolean;
    /**
     * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
     * `host`: Only host can share the screen.<br>
     * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
     *
     */
    who_can_share_screen?: 'host' | 'all';
    /**
     * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
     * `host`: Only a host can share the screen when someone else is sharing.<br>
     * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
     *
     */
    who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
    /**
     * Workplace by facebook.
     */
    workplace_by_facebook?: boolean;
  };
  /**
   * Account Settings: Integration.
   */
  integration?: {
    /**
     * Enable users who join a meeting from their mobile device to share content from their Box account.
     */
    box?: boolean;
    /**
     * Enable users who join a meeting from their mobile device to share content from their Dropbox account.
     */
    dropbox?: boolean;
    /**
     * Enable meetings to be scheduled using Google Calendar.
     */
    google_calendar?: boolean;
    /**
     * Enable users who join a meeting from their mobile device to share content from their Google Drive.
     */
    google_drive?: boolean;
    /**
     * Enable users to control a connected Kubi device from within a Zoom meeting.
     */
    kubi?: boolean;
    /**
     * Enable users who join a meeting from their mobile device to share content from their Microsoft OneDrive account.
     */
    microsoft_one_drive?: boolean;
  };
  profile?: {
    recording_storage_location?: {
      /**
       * Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.
       *
       * Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
       */
      allowed_values?: Array<string>;
      /**
       * Abbreviated country code.
       */
      value?: string;
    };
  };
  /**
   * Account Settings: Recording.
   */
  recording?: {
    /**
     * Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.
     */
    account_user_access_recording?: boolean;
    /**
     * Allow recovery of deleted cloud recordings from trash.
     * If the value of this field is set to `true`, deleted cloud recordings will be kept in trash for 30 days after deletion and can be recovered within that period.
     */
    allow_recovery_deleted_cloud_recordings?: boolean;
    /**
     * [Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted with archiving solution access by the Zoom support team.
     */
    archive?: {
      /**
       * Enable the archiving feature.
       */
      enable?: boolean;
      settings?: {
        /**
         * Include in-meeting and/or in-webinar audio in the archive.
         */
        audio_file?: boolean;
        /**
         * Include closed caption or transcript in the archive.
         */
        cc_transcript_file?: boolean;
        /**
         * Include in-meeting chat in the archive.
         */
        chat_file?: boolean;
        /**
         * Include user email in in-meeting chat file.
         */
        chat_with_sender_email?: boolean;
        /**
         * Include in-meeting and/or in-webinar video in the archive.
         */
        video_file?: boolean;
      };
      /**
       * Archive types:
       *
       * * `1`: Only meetings are archived.<br>
       * * `2`: Only webinars are archived.<br>
       * * `3`: Both meetings and webinars are archived.
       */
      type?: 1 | 2 | 3;
    };
    /**
     * Allow Zoom to permanantly delete recordings automatically after a specified number of days.
     */
    auto_delete_cmr?: boolean;
    /**
     * When `auto_delete_cmr` function is 'true' this value will set the number of days before the auto deletion of cloud recordings.
     */
    auto_delete_cmr_days?: number;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Allow hosts to record and save the meeting in the cloud.
     */
    cloud_recording?: boolean;
    /**
     * Cloud recording downloads.
     */
    cloud_recording_download?: boolean;
    /**
     * Only the host can download cloud recordings.
     */
    cloud_recording_download_host?: boolean;
    /**
     * If the value of this field is set to `true`, hosts will be able to delete the recordings. If this option is set to `false`, the recordings cannot be deleted by the host and only admin can delete them.
     *
     */
    host_delete_cloud_recording?: boolean;
    /**
     * Setting to allow cloud recording access only from specific IP address ranges.
     *
     */
    ip_address_access_control?: {
      /**
       * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
       *
       *
       */
      enable?: boolean;
      /**
       * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
       *
       * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
       *
       *
       */
      ip_addresses_or_ranges?: string;
    };
    /**
     * Allow hosts and participants to record the meeting using a local file.
     */
    local_recording?: boolean;
    /**
     * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
     *
     */
    prevent_host_access_recording?: boolean;
    /**
     * Record an audio only file.
     */
    record_audio_file?: boolean;
    /**
     * Record the gallery view with a shared screen.
     */
    record_gallery_view?: boolean;
    /**
     * Record the active speaker with a shared screen.
     */
    record_speaker_view?: boolean;
    /**
     * Automatically transcribe the audio of the meeting or webinar to the cloud.
     */
    recording_audio_transcript?: boolean;
    /**
     * Show a disclaimer to participants before a recording starts
     *
     */
    recording_disclaimer?: boolean;
    /**
     * This object represents the minimum password requirements set for recordings via Account Recording Settings.
     */
    recording_password_requirement?: {
      /**
       * Indicates whether or not password must contain at least one alphabetical letter (a, b, c..).
       */
      have_letter?: boolean;
      /**
       * Indicates whether or not password must contain at least one number(1, 2, 3..).
       */
      have_number?: boolean;
      /**
       * Indicates whether or not password must contain at least one special character(!, @, #..).
       */
      have_special_character?: boolean;
      /**
       * Minimum required length for the password.
       */
      length?: number;
      /**
       * Indicates whether or not password must contain only numeric characters.
       */
      only_allow_numeric?: boolean;
    };
    /**
     * Require a passcode to access existing cloud recordings.
     */
    required_password_for_existing_cloud_recordings?: boolean;
    /**
     * Save the chat text from the meeting.
     */
    save_chat_text?: boolean;
    /**
     * Add a timestamp to the recording.
     */
    show_timestamp?: boolean;
  };
  /**
   * Account Settings: Schedule Meeting.
   */
  schedule_meeting?: {
    /**
     * Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.
     */
    audio_type?: 'both' | 'telephony' | 'voip' | 'thirdParty';
    /**
     * Only Zoom users who are signed in can join meetings.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with a specified domain can join the meeting.
     */
    enforce_login_domains?: string;
    /**
     * Only signed in users with a specific domain can join meetings.
     */
    enforce_login_with_domains?: boolean;
    /**
     * Require a password for Personal Meetings if attendees can join before host.
     */
    force_pmi_jbh_password?: boolean;
    /**
     * Start meetings with the host video on.
     */
    host_video?: boolean;
    /**
     * Allow participants to join the meeting before the host arrives.
     */
    join_before_host?: boolean;
    /**
     * Account wide meeting/webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
     */
    meeting_password_requirement?: {
      consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
      /**
       * If set to `true`, the password must contain at least 1 letter (such as a,b,c...).
       *
       */
      have_letter?: boolean;
      /**
       * If set to `true`, the password must contain at least 1 number (such as 1,2,3...).
       */
      have_number?: boolean;
      /**
       * If set to `true`, the password must have at least 1 special character (!,@,#...).
       */
      have_special_character?: boolean;
      /**
       * If set to `true`, the password must include both uppercase and lowercase characters.
       */
      have_upper_and_lower_characters?: boolean;
      /**
       * The minimum length that the meeting/webinar password needs to have.
       */
      length?: number;
      /**
       * If set to `true`, the password must only contain numbers and no other characters.
       */
      only_allow_numeric?: boolean;
      /**
       * If set to `true`, users will be informed if the provided password is weak.
       */
      weak_enhance_detection?: boolean;
    };
    /**
     * Always display "Zoom Meeting" as the meeting topic.
     */
    not_store_meeting_topic?: boolean;
    /**
     * Start meetings with the participant video on. Participants can change this setting during the meeting.
     */
    participant_video?: boolean;
    /**
     * Personal Meeting Setting.<br><br>
     * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
     * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
     * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
     *
     *
     *
     */
    personal_meeting?: boolean;
    /**
     * Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     *
     */
    require_password_for_instant_meetings?: boolean;
    /**
     * Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     *
     */
    require_password_for_pmi_meetings?: 'jbh_only' | 'all' | 'none';
    /**
     * Require a password for meetings which have already been scheduled
     *
     */
    require_password_for_scheduled_meetings?: boolean;
    /**
     * Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     */
    require_password_for_scheduling_new_meetings?: boolean;
    /**
     * Use Personal Meeting ID (PMI) when starting an instant meeting
     *
     */
    use_pmi_for_instant_meetings?: boolean;
    /**
     * Use Personal Meeting ID (PMI) when scheduling a meeting
     *
     */
    use_pmi_for_scheduled_meetings?: boolean;
  };
  /**
   * [Security settings](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) of an Account.
   */
  security?: {
    /**
     * Only account administrators can change a user's username and picture.
     */
    admin_change_name_pic?: boolean;
    /**
     * Hide billing information.
     */
    hide_billing_info?: boolean;
    /**
     * Allow users to import photos from a photo library on a  device.
     */
    import_photos_from_devices?: boolean;
    /**
     * This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users' Zoom login password.
     */
    password_requirement?: {
      /**
       *
       * Specify the max length of consecutive characters(abcde...) that can be used in a password.
       * If you set the value of this field to `0`, no restriction will be applied on consecutive characters.
       *
       * If you would like to set this restriction, you can specify a number between 4 and 8 that define the maximum allowed length for consecutive characters in a password.
       *
       * The max allowed length will be `n-1` where `n` refers to the value you provide for this field.  For instance, if you provide `4` as the value, there can only be a maximum of `3` consecutive characters in a password(example: abc1x@8fdh).
       */
      consecutive_characters_length?: number;
      /**
       * If the value of this field is set to `true`, the password must have at least one special character(!, @, #...).
       */
      have_special_character?: boolean;
      /**
       * Specify a minimum length for the password. The password length can be from a minimum of 9 characters, up to 14 characters. If you provide `0` as the value of this field, this field will be disabled and not be used and the basic password length requirement (minimum of 8 characters) will be applied for the requirement.
       */
      minimum_password_length?: number;
      /**
       * If the value of this field is set to `true`, user passwords will have to pass detection through a weak password dictionary in case hackers use simple passwords to sign in to your users’ accounts.
       */
      weak_enhance_detection?: boolean;
    };
    /**
     * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Client app after a set amount of time. <br>
     *
     * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Client. The value for the period of inactivity can be one of the following:<br>
     *
     * `5`: 5 minutes<br>
     * `10`: 10 minutes<br>
     * `15`: 15 minutes<br>
     * `30`: 30 minutes<br>
     * `45`: 45 minutes<br>
     * `60`: 60 minutes<br>
     * `90`: 90 minutes<br>
     * `120`: 120 minutes
     *
     */
    sign_again_period_for_inactivity_on_client?: number;
    /**
     * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Web Portal after a set amount of time. <br>
     *
     * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Web Portal. The value for the period of inactivity can be one of the following:<br>
     *
     * `5`: 5 minutes<br>
     * `10`: 10 minutes<br>
     * `15`: 15 minutes<br>
     * `30`: 30 minutes<br>
     * `60`: 60 minutes<br>
     * `120`: 120 minutes
     *
     *
     *
     *
     */
    sign_again_period_for_inactivity_on_web?: number;
    /**
     * Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
     * `all`: Two factor authentication will be enabled for all users in the account.<br>
     * `none`: Two factor authentication is disabled.<br>
     * `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
     * `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
     * `sign_in_with_two_factor_auth_roles` field.
     *
     */
    sign_in_with_two_factor_auth?: 'all' | 'group' | 'role' | 'none';
    /**
     * This field contains group IDs of groups that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `group`
     */
    sign_in_with_two_factor_auth_groups?: Array<string>;
    /**
     * This field contains role IDs of roles that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `role`.
     */
    sign_in_with_two_factor_auth_roles?: Array<string>;
  };
  /**
   * Account Settings: Telephony.
   */
  telephony?: {
    /**
     * Third party audio conference info.
     */
    audio_conference_info?: string;
    /**
     * Indicates where most of the participants call into or call from duriing a meeting.
     */
    telephony_regions?: {
      /**
       * Telephony region options provided by Zoom to select from.
       */
      allowed_values?: Array<string>;
      /**
       * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
       */
      selection_values?: Array<string>;
    };
    /**
     * Users can join the meeting using the existing third party audio configuration.
     */
    third_party_audio?: boolean;
  };
  /**
   * Account Settings: TSP.
   */
  tsp?: {
    /**
     * Call Out
     */
    call_out?: boolean;
    /**
     * Call Out Countries/Regions
     */
    call_out_countries?: Array<unknown>;
    /**
     * Display toll-free numbers
     */
    display_toll_free_numbers?: boolean;
    /**
     * Show international numbers link on the invitation email
     */
    show_international_numbers_link?: boolean;
  };
  /**
   * Account Settings: Zoom Rooms.
   */
  zoom_rooms?: {
    /**
     * Automatic start and stop for scheduled meetings.
     */
    auto_start_stop_scheduled_meetings?: boolean;
    /**
     * Cloud recording for instant meetings.
     */
    cmr_for_instant_meeting?: boolean;
    /**
     * Shift all meetings to private.
     */
    force_private_meeting?: boolean;
    /**
     * Hide host and meeting ID from private meetings.
     */
    hide_host_information?: boolean;
    /**
     * Display meeting list with calendar integration.
     */
    list_meetings_with_calendar?: boolean;
    /**
     * Start AirPlay service manually.
     */
    start_airplay_manually?: boolean;
    /**
     * Automatic direct sharing using an ultrasonic proximity signal.
     */
    ultrasonic?: boolean;
    /**
     * Upcoming meeting alert.
     */
    upcoming_meeting_alert?: boolean;
    /**
     * Weekly system restart.
     */
    weekly_system_restart?: boolean;
    /**
     * Zoom Room post meeting feedback.
     */
    zr_post_meeting_feedback?: boolean;
  };
};

/**
 * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
 *
 */
export type data_center_regions = 'EU' | 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA';

/**
 * Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.
 */
export type entry_exit_chime = 'host' | 'all' | 'none';

/**
 * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
 * `host`: Only host can share the screen.<br>
 * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
 *
 */
export type who_can_share_screen = 'host' | 'all';

/**
 * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
 * `host`: Only a host can share the screen when someone else is sharing.<br>
 * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
 *
 */
export type who_can_share_screen_when_someone_is_sharing = 'host' | 'all';

/**
 * Archive types:
 *
 * * `1`: Only meetings are archived.<br>
 * * `2`: Only webinars are archived.<br>
 * * `3`: Both meetings and webinars are archived.
 */
export type type = 1 | 2 | 3;

/**
 * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
 */
export type auto_recording = 'local' | 'cloud' | 'none';

/**
 * Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.
 */
export type audio_type = 'both' | 'telephony' | 'voip' | 'thirdParty';

export type consecutive_characters_length = 0 | 4 | 5 | 6 | 7 | 8;

/**
 * Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
 *
 */
export type require_password_for_pmi_meetings = 'jbh_only' | 'all' | 'none';

/**
 * Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
 * `all`: Two factor authentication will be enabled for all users in the account.<br>
 * `none`: Two factor authentication is disabled.<br>
 * `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
 * `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
 * `sign_in_with_two_factor_auth_roles` field.
 *
 */
export type sign_in_with_two_factor_auth = 'all' | 'group' | 'role' | 'none';

export type AccountSettingsAuthentication =
  | {
      /**
       * Meeting Authentication Options
       */
      authentication_options?: Array<{
        /**
         * Authentication default option
         */
        default_option?: boolean;
        /**
         * Authentication domians
         */
        domains?: string;
        /**
         * Authentication id
         */
        id?: string;
        /**
         * Authentication name
         */
        name?: string;
        /**
         *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
         * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
         * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
         * * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
         */
        type?: 'enforce_login' | 'enforce_login_with_same_account' | 'enforce_login_with_domains';
        /**
         * Authentication visible
         */
        visible?: boolean;
      }>;
      /**
       * Only authenticated users can join meetings
       */
      meeting_authentication?: boolean;
    }
  | {
      authentication_options?: Array<{
        /**
         * Authentication default option
         */
        default_option?: boolean;
        /**
         * Authentication domians
         */
        domains?: string;
        /**
         * Authentication id
         */
        id?: string;
        /**
         * Authentication name
         */
        name?: string;
        /**
         * Authentication type
         */
        type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
        /**
         * Authentication visible
         */
        visible?: boolean;
      }>;
      /**
       * Only authenticated users can view cloud recordings
       */
      recording_authentication?: boolean;
    };

export type AccountSettingsAuthenticationUpdate =
  | {
      /**
       * Meeting Authentication Options
       */
      authentication_option?: {
        /**
         * Specify the action that you would like to take via this API request:<br>
         * * `add` : Choose this value if you are adding an authentication option.
         * * `update`: Choose this value if you are updating an existing authentication option.
         * * `delete`: Choose this value if you are deleting an existing authentication option.
         */
        action?: 'update' | 'delete' | 'add';
        /**
         * Specify whether you would like to set this authentication option as the default option or not.
         */
        default_option?: boolean;
        /**
         * If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to join your meetings or webinars.
         */
        domains?: string;
        /**
         *  Authentication ID. If you are creating an authentication profile, you do not need to provide this field. The id field will be generated in the response once this API request is completed successfully. You can also use the Get Account Settings API with query parameter set to `meeting_authentication` to list the authentication id.<br><br>
         * Use this field or the `name` field to identify the associated authentication option that you would like to update or delete.
         */
        id?: string;
        /**
         * Unique name for the authentication option.
         */
        name?: string;
        /**
         *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
         * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
         * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
         * * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
         */
        type?: 'enforce_login' | 'enforce_login_with_same_account' | 'enforce_login_with_domains';
      };
      /**
       * If set to "true", only authenticated users can join meetings. The method for authentication can be defined in the "authentication_option".
       */
      meeting_authentication?: boolean;
    }
  | {
      /**
       * Specify the authentication options for this account.
       */
      authentication_option?: {
        /**
         * Specify the action that you would like to take via this API request:<br>
         * * `add` : Choose this value if you are adding an authentication option.
         * * `update`: Choose this value if you are updating an existing authentication option.
         * * `delete`: Choose this value if you are deleting an existing authentication option.
         */
        action?: 'update' | 'delete' | 'add';
        /**
         * Specify whether you would like to set this authentication option as the default option or not.
         */
        default_option?: boolean;
        /**
         * If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to view the recordings.
         */
        domains?: string;
        /**
         *  Authentication ID. If you are creating an authentication profile, you do not need to provide this field. The id field will be generated in the response once this API request is completed successfully. You can also use the Get Account Settings API with query parameter set to `meeting_authentication` to list the authentication id.<br><br>
         * Use this field or the `name` field to identify the associated authentication option that you would like to update or delete.
         */
        id?: string;
        /**
         * Unique name for the authentication option.
         */
        name?: string;
        /**
         * Specify one authentication type that is to be associated with this authentication configuration:<br>
         * * `internally`: This option allows you specify a rule that only signed in users within your account can view the recording.<br>
         * * `enforce_login`: This option allows any users to view the recording, as long as they are signed into their Zoom account.<br>
         * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can view the recording. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.
         *
         *
         */
        type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
      };
      /**
       * If set to `true`, only authenticated users can view the cloud recordings.<br><br>
       * The authentication profile **must first be set at the account level via the account settings**, and later can be disabled after enabling on the preferred level - i.e. user level using user settings or at group level via group settings  (if you do not want the settings to be enabled on the entire account).
       */
      recording_authentication?: boolean;
    };

/**
 * Specify the action that you would like to take via this API request:<br>
 * * `add` : Choose this value if you are adding an authentication option.
 * * `update`: Choose this value if you are updating an existing authentication option.
 * * `delete`: Choose this value if you are deleting an existing authentication option.
 */
export type action = 'update' | 'delete' | 'add';

/**
 *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
 * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
 * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
 * * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
 */
export type type2 = 'enforce_login' | 'enforce_login_with_same_account' | 'enforce_login_with_domains';

/**
 * Account Settings: Notification.
 */
export type AccountSettingsEmailNotification = {
  /**
   * Notify when an alternative host is set or removed from a meeting.
   */
  alternative_host_reminder?: boolean;
  /**
   * Notify the host and participants when a meeting is cancelled.
   */
  cancel_meeting_reminder?: boolean;
  /**
   * Notify host when cloud recording is available.
   */
  cloud_recording_avaliable_reminder?: boolean;
  /**
   * Notify the host when participants join the meeting before them.
   */
  jbh_reminder?: boolean;
  /**
   * Notify user when host licenses are running low.
   */
  low_host_count_reminder?: boolean;
  /**
   * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
   */
  schedule_for_reminder?: boolean;
};

/**
 * Account Settings: Feature.
 */
export type AccountSettingsFeature = {
  /**
   * Set the maximum number of participants a host can have in a single meeting.
   */
  meeting_capacity?: number;
};

/**
 * Account Settings: In Meeting.
 */
export type AccountSettingsInMeeting = {
  /**
   * Identify guest participants in a meeting or webinar.
   */
  alert_guest_join?: boolean;
  /**
   * Allow live streaming.
   */
  allow_live_streaming?: boolean;
  /**
   * If the value of this field is set to `true`, meeting participants and webinar panelists can be allowed to rename themselves during a meeting or a webinar.
   *
   */
  allow_participants_to_rename?: boolean;
  /**
   * Show the Zoom desktop application when sharing screens.
   */
  allow_show_zoom_windows?: boolean;
  /**
   * Allow participants to use annotation tools to add information to shared screens.
   */
  annotation?: boolean;
  /**
   * Allow an anonymous Q&A in a webinar.
   */
  anonymous_question_answer?: boolean;
  /**
   * Allow host to put attendee on hold.
   *
   * **This field has been deprecated and is no longer supported.**
   */
  attendee_on_hold?: boolean;
  /**
   * Enable users to see and add contacts to the "auto-answer group" in the chat contact list. Any call from members of this group will automatically be answered.
   */
  auto_answer?: boolean;
  /**
   * Automatically save all in-meeting chats so that the host does not need to manually save the chat transcript after the meeting starts.
   */
  auto_saving_chat?: boolean;
  /**
   * Allow host to split meeting participants into separate, smaller rooms.
   */
  breakout_room?: boolean;
  /**
   * Allow meeting participants to send a message that is visible to all participants.
   */
  chat?: boolean;
  /**
   * Allow a host to type closed captions. Enable a host to assign a participant or third party device to add closed captions.
   */
  closed_caption?: boolean;
  /**
   * Allow the host to add co-hosts.
   */
  co_host?: boolean;
  /**
   * If set to `true`, account owners and admins on paid accounts can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
   */
  custom_data_center_regions?: boolean;
  /**
   * Custom live streaming.
   */
  custom_live_streaming_service?: boolean;
  /**
   * Custom service instructions.
   */
  custom_service_instructions?: string;
  /**
   * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
   *
   */
  data_center_regions?: 'EU' | 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA';
  /**
   * DSCP audio.
   */
  dscp_audio?: number;
  /**
   * DSCP marking.
   */
  dscp_marking?: boolean;
  /**
   * DSCP video.
   */
  dscp_video?: number;
  /**
   * Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).
   */
  e2e_encryption?: boolean;
  /**
   * Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.
   */
  entry_exit_chime?: 'host' | 'all' | 'none';
  /**
   * Allow another user to take control of your camera during a meeting.
   */
  far_end_camera_control?: boolean;
  /**
   * Add a "Feedback" tab to the Windows Settings or Mac Preferences dialog. Enable users to provide feedback to Zoom at the end of the meeting.
   */
  feedback?: boolean;
  /**
   * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled on the account or not.
   */
  file_transfer?: boolean;
  /**
   * Activate higher quality video for host and participants.
   * Please note: This will use more bandwidth.
   */
  group_hd?: boolean;
  /**
   * Enable or disable meeting reactions. <br>
   * `true`: Allow meeting participants to communicate without interrupting by reacting with an emoji that shows on their video.<br>
   * `false`: Do not enable meeting reactions.
   */
  meeting_reactions?: boolean;
  /**
   * Allow users to select original sound in their client settings.
   */
  original_audio?: boolean;
  /**
   * Peer to peer connection while only two people are in a meeting.
   */
  p2p_connetion?: boolean;
  /**
   * Peer to peer listening ports range.
   */
  p2p_ports?: boolean;
  /**
   * Add "Polls" to the meeting controls.
   */
  polling?: boolean;
  /**
   * The listening ports range, separated by a comma (ex 55,56). The ports range must be between 1 to 65535.
   */
  ports_range?: string;
  /**
   * Display a thumbs up or down survey at the end of each meeting.
   */
  post_meeting_feedback?: boolean;
  /**
   * Allow a meeting participant to send a private message to another participant.
   */
  private_chat?: boolean;
  /**
   * Record and play their own voice.
   */
  record_play_own_voice?: boolean;
  /**
   * Allow users to request remote control.
   */
  remote_control?: boolean;
  /**
   * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the account or not.
   */
  request_permission_to_unmute?: boolean;
  /**
   * Allow screen sharing.
   */
  screen_sharing?: boolean;
  /**
   * Only show the default email when sending email invites.
   */
  sending_default_email_invites?: boolean;
  /**
   * If the value of this field is set to `true`, you will allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is a workaround for participants who are unable to download, install, or run applications. Note that the meeting experience from the browser is limited.
   */
  show_a_join_from_your_browser_link?: boolean;
  /**
   * Always show the meeting control toolbar.
   */
  show_meeting_control_toolbar?: boolean;
  /**
   * Allow users to select stereo audio in their client settings.
   */
  stereo_audio?: boolean;
  /**
   * Use HTML formatted email for the Outlook plugin.
   */
  use_html_format_email?: boolean;
  /**
   * Allow users to replace their background with any selected image. Choose or upload an image in the Zoom desktop application settings.
   */
  virtual_background?: boolean;
  /**
   * Settings to manage virtual background.
   */
  virtual_background_settings?: {
    /**
     * Allow users to upload custom backgrounds.
     */
    allow_upload_custom?: boolean;
    /**
     * Allow use of videos for virtual backgrounds.
     */
    allow_videos?: boolean;
    /**
     * Enable virtual background.
     */
    enable?: boolean;
    files?: Array<{
      /**
       * Unique identifier of the file.
       */
      id?: string;
      /**
       * Indicates whether or not this file is the default virtual background file.
       */
      is_default?: boolean;
      /**
       * File name.
       */
      name?: string;
      /**
       * File size.
       */
      size?: string;
      /**
       * File type.
       */
      type?: string;
    }>;
  };
  /**
   * Add a watermark when viewing a shared screen.
   */
  watermark?: boolean;
  /**
   * Allow a Q&A in a webinar.
   */
  webinar_question_answer?: boolean;
  /**
   * Allow participants to share a whiteboard that includes annotation tools.
   */
  whiteboard?: boolean;
  /**
   * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
   * `host`: Only host can share the screen.<br>
   * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
   *
   */
  who_can_share_screen?: 'host' | 'all';
  /**
   * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
   * `host`: Only a host can share the screen when someone else is sharing.<br>
   * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
   *
   */
  who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
  /**
   * Workplace by facebook.
   */
  workplace_by_facebook?: boolean;
};

/**
 * Account Settings: Integration.
 */
export type AccountSettingsIntegration = {
  /**
   * Enable users who join a meeting from their mobile device to share content from their Box account.
   */
  box?: boolean;
  /**
   * Enable users who join a meeting from their mobile device to share content from their Dropbox account.
   */
  dropbox?: boolean;
  /**
   * Enable meetings to be scheduled using Google Calendar.
   */
  google_calendar?: boolean;
  /**
   * Enable users who join a meeting from their mobile device to share content from their Google Drive.
   */
  google_drive?: boolean;
  /**
   * Enable users to control a connected Kubi device from within a Zoom meeting.
   */
  kubi?: boolean;
  /**
   * Enable users who join a meeting from their mobile device to share content from their Microsoft OneDrive account.
   */
  microsoft_one_drive?: boolean;
};

/**
 * Account Settings: Recording.
 */
export type AccountSettingsRecording = {
  /**
   * Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.
   */
  account_user_access_recording?: boolean;
  /**
   * Allow recovery of deleted cloud recordings from trash.
   * If the value of this field is set to `true`, deleted cloud recordings will be kept in trash for 30 days after deletion and can be recovered within that period.
   */
  allow_recovery_deleted_cloud_recordings?: boolean;
  /**
   * [Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted with archiving solution access by the Zoom support team.
   */
  archive?: {
    /**
     * Enable the archiving feature.
     */
    enable?: boolean;
    settings?: {
      /**
       * Include in-meeting and/or in-webinar audio in the archive.
       */
      audio_file?: boolean;
      /**
       * Include closed caption or transcript in the archive.
       */
      cc_transcript_file?: boolean;
      /**
       * Include in-meeting chat in the archive.
       */
      chat_file?: boolean;
      /**
       * Include user email in in-meeting chat file.
       */
      chat_with_sender_email?: boolean;
      /**
       * Include in-meeting and/or in-webinar video in the archive.
       */
      video_file?: boolean;
    };
    /**
     * Archive types:
     *
     * * `1`: Only meetings are archived.<br>
     * * `2`: Only webinars are archived.<br>
     * * `3`: Both meetings and webinars are archived.
     */
    type?: 1 | 2 | 3;
  };
  /**
   * Allow Zoom to permanantly delete recordings automatically after a specified number of days.
   */
  auto_delete_cmr?: boolean;
  /**
   * When `auto_delete_cmr` function is 'true' this value will set the number of days before the auto deletion of cloud recordings.
   */
  auto_delete_cmr_days?: number;
  /**
   * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
   */
  auto_recording?: 'local' | 'cloud' | 'none';
  /**
   * Allow hosts to record and save the meeting in the cloud.
   */
  cloud_recording?: boolean;
  /**
   * Cloud recording downloads.
   */
  cloud_recording_download?: boolean;
  /**
   * Only the host can download cloud recordings.
   */
  cloud_recording_download_host?: boolean;
  /**
   * If the value of this field is set to `true`, hosts will be able to delete the recordings. If this option is set to `false`, the recordings cannot be deleted by the host and only admin can delete them.
   *
   */
  host_delete_cloud_recording?: boolean;
  /**
   * Setting to allow cloud recording access only from specific IP address ranges.
   *
   */
  ip_address_access_control?: {
    /**
     * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
     *
     *
     */
    enable?: boolean;
    /**
     * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
     *
     * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
     *
     *
     */
    ip_addresses_or_ranges?: string;
  };
  /**
   * Allow hosts and participants to record the meeting using a local file.
   */
  local_recording?: boolean;
  /**
   * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
   *
   */
  prevent_host_access_recording?: boolean;
  /**
   * Record an audio only file.
   */
  record_audio_file?: boolean;
  /**
   * Record the gallery view with a shared screen.
   */
  record_gallery_view?: boolean;
  /**
   * Record the active speaker with a shared screen.
   */
  record_speaker_view?: boolean;
  /**
   * Automatically transcribe the audio of the meeting or webinar to the cloud.
   */
  recording_audio_transcript?: boolean;
  /**
   * Show a disclaimer to participants before a recording starts
   *
   */
  recording_disclaimer?: boolean;
  /**
   * This object represents the minimum password requirements set for recordings via Account Recording Settings.
   */
  recording_password_requirement?: {
    /**
     * Indicates whether or not password must contain at least one alphabetical letter (a, b, c..).
     */
    have_letter?: boolean;
    /**
     * Indicates whether or not password must contain at least one number(1, 2, 3..).
     */
    have_number?: boolean;
    /**
     * Indicates whether or not password must contain at least one special character(!, @, #..).
     */
    have_special_character?: boolean;
    /**
     * Minimum required length for the password.
     */
    length?: number;
    /**
     * Indicates whether or not password must contain only numeric characters.
     */
    only_allow_numeric?: boolean;
  };
  /**
   * Require a passcode to access existing cloud recordings.
   */
  required_password_for_existing_cloud_recordings?: boolean;
  /**
   * Save the chat text from the meeting.
   */
  save_chat_text?: boolean;
  /**
   * Add a timestamp to the recording.
   */
  show_timestamp?: boolean;
};

/**
 * Only authenticated users can view cloud recordings
 * The viewers need to authenticate prior to viewing the cloud recordings, hosts can choose one of the authentication methods when sharing a cloud recording.
 */
export type AccountSettingsRecordingAuthenticationUpdate = {
  authentication_option?: {
    action?: 'update' | 'add' | 'delete';
    default_option?: boolean;
    domains?: string;
    id?: string;
    name?: string;
    type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
  };
  recording_authentication?: boolean;
};

export type type3 = 'internally' | 'enforce_login' | 'enforce_login_with_domains';

/**
 * Account Settings: Schedule Meeting.
 */
export type AccountSettingsScheduleMeeting = {
  /**
   * Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.
   */
  audio_type?: 'both' | 'telephony' | 'voip' | 'thirdParty';
  /**
   * Only Zoom users who are signed in can join meetings.
   */
  enforce_login?: boolean;
  /**
   * Only signed in users with a specified domain can join the meeting.
   */
  enforce_login_domains?: string;
  /**
   * Only signed in users with a specific domain can join meetings.
   */
  enforce_login_with_domains?: boolean;
  /**
   * Require a password for Personal Meetings if attendees can join before host.
   */
  force_pmi_jbh_password?: boolean;
  /**
   * Start meetings with the host video on.
   */
  host_video?: boolean;
  /**
   * Allow participants to join the meeting before the host arrives.
   */
  join_before_host?: boolean;
  /**
   * Account wide meeting/webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
   */
  meeting_password_requirement?: {
    consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
    /**
     * If set to `true`, the password must contain at least 1 letter (such as a,b,c...).
     *
     */
    have_letter?: boolean;
    /**
     * If set to `true`, the password must contain at least 1 number (such as 1,2,3...).
     */
    have_number?: boolean;
    /**
     * If set to `true`, the password must have at least 1 special character (!,@,#...).
     */
    have_special_character?: boolean;
    /**
     * If set to `true`, the password must include both uppercase and lowercase characters.
     */
    have_upper_and_lower_characters?: boolean;
    /**
     * The minimum length that the meeting/webinar password needs to have.
     */
    length?: number;
    /**
     * If set to `true`, the password must only contain numbers and no other characters.
     */
    only_allow_numeric?: boolean;
    /**
     * If set to `true`, users will be informed if the provided password is weak.
     */
    weak_enhance_detection?: boolean;
  };
  /**
   * Always display "Zoom Meeting" as the meeting topic.
   */
  not_store_meeting_topic?: boolean;
  /**
   * Start meetings with the participant video on. Participants can change this setting during the meeting.
   */
  participant_video?: boolean;
  /**
   * Personal Meeting Setting.<br><br>
   * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
   * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
   * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
   *
   *
   *
   */
  personal_meeting?: boolean;
  /**
   * Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
   *
   */
  require_password_for_instant_meetings?: boolean;
  /**
   * Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
   *
   */
  require_password_for_pmi_meetings?: 'jbh_only' | 'all' | 'none';
  /**
   * Require a password for meetings which have already been scheduled
   *
   */
  require_password_for_scheduled_meetings?: boolean;
  /**
   * Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
   */
  require_password_for_scheduling_new_meetings?: boolean;
  /**
   * Use Personal Meeting ID (PMI) when starting an instant meeting
   *
   */
  use_pmi_for_instant_meetings?: boolean;
  /**
   * Use Personal Meeting ID (PMI) when scheduling a meeting
   *
   */
  use_pmi_for_scheduled_meetings?: boolean;
};

/**
 * [Security settings](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) of an Account.
 */
export type AccountSettingsSecurity = {
  /**
   * Only account administrators can change a user's username and picture.
   */
  admin_change_name_pic?: boolean;
  /**
   * Hide billing information.
   */
  hide_billing_info?: boolean;
  /**
   * Allow users to import photos from a photo library on a  device.
   */
  import_photos_from_devices?: boolean;
  /**
   * This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users' Zoom login password.
   */
  password_requirement?: {
    /**
     *
     * Specify the max length of consecutive characters(abcde...) that can be used in a password.
     * If you set the value of this field to `0`, no restriction will be applied on consecutive characters.
     *
     * If you would like to set this restriction, you can specify a number between 4 and 8 that define the maximum allowed length for consecutive characters in a password.
     *
     * The max allowed length will be `n-1` where `n` refers to the value you provide for this field.  For instance, if you provide `4` as the value, there can only be a maximum of `3` consecutive characters in a password(example: abc1x@8fdh).
     */
    consecutive_characters_length?: number;
    /**
     * If the value of this field is set to `true`, the password must have at least one special character(!, @, #...).
     */
    have_special_character?: boolean;
    /**
     * Specify a minimum length for the password. The password length can be from a minimum of 9 characters, up to 14 characters. If you provide `0` as the value of this field, this field will be disabled and not be used and the basic password length requirement (minimum of 8 characters) will be applied for the requirement.
     */
    minimum_password_length?: number;
    /**
     * If the value of this field is set to `true`, user passwords will have to pass detection through a weak password dictionary in case hackers use simple passwords to sign in to your users’ accounts.
     */
    weak_enhance_detection?: boolean;
  };
  /**
   * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Client app after a set amount of time. <br>
   *
   * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Client. The value for the period of inactivity can be one of the following:<br>
   *
   * `5`: 5 minutes<br>
   * `10`: 10 minutes<br>
   * `15`: 15 minutes<br>
   * `30`: 30 minutes<br>
   * `45`: 45 minutes<br>
   * `60`: 60 minutes<br>
   * `90`: 90 minutes<br>
   * `120`: 120 minutes
   *
   */
  sign_again_period_for_inactivity_on_client?: number;
  /**
   * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Web Portal after a set amount of time. <br>
   *
   * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Web Portal. The value for the period of inactivity can be one of the following:<br>
   *
   * `5`: 5 minutes<br>
   * `10`: 10 minutes<br>
   * `15`: 15 minutes<br>
   * `30`: 30 minutes<br>
   * `60`: 60 minutes<br>
   * `120`: 120 minutes
   *
   *
   *
   *
   */
  sign_again_period_for_inactivity_on_web?: number;
  /**
   * Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
   * `all`: Two factor authentication will be enabled for all users in the account.<br>
   * `none`: Two factor authentication is disabled.<br>
   * `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
   * `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
   * `sign_in_with_two_factor_auth_roles` field.
   *
   */
  sign_in_with_two_factor_auth?: 'all' | 'group' | 'role' | 'none';
  /**
   * This field contains group IDs of groups that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `group`
   */
  sign_in_with_two_factor_auth_groups?: Array<string>;
  /**
   * This field contains role IDs of roles that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `role`.
   */
  sign_in_with_two_factor_auth_roles?: Array<string>;
};

/**
 * Account Settings: TSP.
 */
export type AccountSettingsTSP = {
  /**
   * Call Out
   */
  call_out?: boolean;
  /**
   * Call Out Countries/Regions
   */
  call_out_countries?: Array<unknown>;
  /**
   * Display toll-free numbers
   */
  display_toll_free_numbers?: boolean;
  /**
   * Show international numbers link on the invitation email
   */
  show_international_numbers_link?: boolean;
};

/**
 * Account Settings: Telephony.
 */
export type AccountSettingsTelephony = {
  /**
   * Third party audio conference info.
   */
  audio_conference_info?: string;
  /**
   * Indicates where most of the participants call into or call from duriing a meeting.
   */
  telephony_regions?: {
    /**
     * Telephony region options provided by Zoom to select from.
     */
    allowed_values?: Array<string>;
    /**
     * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
     */
    selection_values?: Array<string>;
  };
  /**
   * Users can join the meeting using the existing third party audio configuration.
   */
  third_party_audio?: boolean;
};

/**
 * Account Settings Update: Telephony.
 */
export type AccountSettingsUpdateTelephony = {
  /**
   * Third party audio conference info.
   */
  audio_conference_info?: string;
  /**
   * Indicates where most of the participants call into or call from duriing a meeting.
   */
  telephony_regions?: {
    /**
     * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
     */
    selection_values?: Array<string>;
  };
  /**
   * Users can join the meeting using the existing third party audio configuration.
   */
  third_party_audio?: boolean;
};

/**
 * Account Settings: Zoom Rooms.
 */
export type AccountSettingsZoomRooms = {
  /**
   * Automatic start and stop for scheduled meetings.
   */
  auto_start_stop_scheduled_meetings?: boolean;
  /**
   * Cloud recording for instant meetings.
   */
  cmr_for_instant_meeting?: boolean;
  /**
   * Shift all meetings to private.
   */
  force_private_meeting?: boolean;
  /**
   * Hide host and meeting ID from private meetings.
   */
  hide_host_information?: boolean;
  /**
   * Display meeting list with calendar integration.
   */
  list_meetings_with_calendar?: boolean;
  /**
   * Start AirPlay service manually.
   */
  start_airplay_manually?: boolean;
  /**
   * Automatic direct sharing using an ultrasonic proximity signal.
   */
  ultrasonic?: boolean;
  /**
   * Upcoming meeting alert.
   */
  upcoming_meeting_alert?: boolean;
  /**
   * Weekly system restart.
   */
  weekly_system_restart?: boolean;
  /**
   * Zoom Room post meeting feedback.
   */
  zr_post_meeting_feedback?: boolean;
};

export type AccountUpdateSettings = {
  /**
   * Account Settings: Notification.
   */
  email_notification?: {
    /**
     * Notify when an alternative host is set or removed from a meeting.
     */
    alternative_host_reminder?: boolean;
    /**
     * Notify the host and participants when a meeting is cancelled.
     */
    cancel_meeting_reminder?: boolean;
    /**
     * Notify host when cloud recording is available.
     */
    cloud_recording_avaliable_reminder?: boolean;
    /**
     * Notify the host when participants join the meeting before them.
     */
    jbh_reminder?: boolean;
    /**
     * Notify user when host licenses are running low.
     */
    low_host_count_reminder?: boolean;
    /**
     * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
     */
    schedule_for_reminder?: boolean;
  };
  /**
   * Account Settings: Feature.
   */
  feature?: {
    /**
     * Set the maximum number of participants a host can have in a single meeting.
     */
    meeting_capacity?: number;
  };
  /**
   * Account Settings: In Meeting.
   */
  in_meeting?: {
    /**
     * Identify guest participants in a meeting or webinar.
     */
    alert_guest_join?: boolean;
    /**
     * Allow live streaming.
     */
    allow_live_streaming?: boolean;
    /**
     * If the value of this field is set to `true`, meeting participants and webinar panelists can be allowed to rename themselves during a meeting or a webinar.
     *
     */
    allow_participants_to_rename?: boolean;
    /**
     * Show the Zoom desktop application when sharing screens.
     */
    allow_show_zoom_windows?: boolean;
    /**
     * Allow participants to use annotation tools to add information to shared screens.
     */
    annotation?: boolean;
    /**
     * Allow an anonymous Q&A in a webinar.
     */
    anonymous_question_answer?: boolean;
    /**
     * Allow host to put attendee on hold.
     *
     * **This field has been deprecated and is no longer supported.**
     */
    attendee_on_hold?: boolean;
    /**
     * Enable users to see and add contacts to the "auto-answer group" in the chat contact list. Any call from members of this group will automatically be answered.
     */
    auto_answer?: boolean;
    /**
     * Automatically save all in-meeting chats so that the host does not need to manually save the chat transcript after the meeting starts.
     */
    auto_saving_chat?: boolean;
    /**
     * Allow host to split meeting participants into separate, smaller rooms.
     */
    breakout_room?: boolean;
    /**
     * Allow meeting participants to send a message that is visible to all participants.
     */
    chat?: boolean;
    /**
     * Allow a host to type closed captions. Enable a host to assign a participant or third party device to add closed captions.
     */
    closed_caption?: boolean;
    /**
     * Allow the host to add co-hosts.
     */
    co_host?: boolean;
    /**
     * If set to `true`, account owners and admins on paid accounts can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
     */
    custom_data_center_regions?: boolean;
    /**
     * Custom live streaming.
     */
    custom_live_streaming_service?: boolean;
    /**
     * Custom service instructions.
     */
    custom_service_instructions?: string;
    /**
     * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
     *
     */
    data_center_regions?: 'EU' | 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA';
    /**
     * DSCP audio.
     */
    dscp_audio?: number;
    /**
     * DSCP marking.
     */
    dscp_marking?: boolean;
    /**
     * DSCP video.
     */
    dscp_video?: number;
    /**
     * Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).
     */
    e2e_encryption?: boolean;
    /**
     * Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.
     */
    entry_exit_chime?: 'host' | 'all' | 'none';
    /**
     * Allow another user to take control of your camera during a meeting.
     */
    far_end_camera_control?: boolean;
    /**
     * Add a "Feedback" tab to the Windows Settings or Mac Preferences dialog. Enable users to provide feedback to Zoom at the end of the meeting.
     */
    feedback?: boolean;
    /**
     * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled on the account or not.
     */
    file_transfer?: boolean;
    /**
     * Activate higher quality video for host and participants.
     * Please note: This will use more bandwidth.
     */
    group_hd?: boolean;
    /**
     * Enable or disable meeting reactions. <br>
     * `true`: Allow meeting participants to communicate without interrupting by reacting with an emoji that shows on their video.<br>
     * `false`: Do not enable meeting reactions.
     */
    meeting_reactions?: boolean;
    /**
     * Allow users to select original sound in their client settings.
     */
    original_audio?: boolean;
    /**
     * Peer to peer connection while only two people are in a meeting.
     */
    p2p_connetion?: boolean;
    /**
     * Peer to peer listening ports range.
     */
    p2p_ports?: boolean;
    /**
     * Add "Polls" to the meeting controls.
     */
    polling?: boolean;
    /**
     * The listening ports range, separated by a comma (ex 55,56). The ports range must be between 1 to 65535.
     */
    ports_range?: string;
    /**
     * Display a thumbs up or down survey at the end of each meeting.
     */
    post_meeting_feedback?: boolean;
    /**
     * Allow a meeting participant to send a private message to another participant.
     */
    private_chat?: boolean;
    /**
     * Record and play their own voice.
     */
    record_play_own_voice?: boolean;
    /**
     * Allow users to request remote control.
     */
    remote_control?: boolean;
    /**
     * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the account or not.
     */
    request_permission_to_unmute?: boolean;
    /**
     * Allow screen sharing.
     */
    screen_sharing?: boolean;
    /**
     * Only show the default email when sending email invites.
     */
    sending_default_email_invites?: boolean;
    /**
     * If the value of this field is set to `true`, you will allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is a workaround for participants who are unable to download, install, or run applications. Note that the meeting experience from the browser is limited.
     */
    show_a_join_from_your_browser_link?: boolean;
    /**
     * Always show the meeting control toolbar.
     */
    show_meeting_control_toolbar?: boolean;
    /**
     * Allow users to select stereo audio in their client settings.
     */
    stereo_audio?: boolean;
    /**
     * Use HTML formatted email for the Outlook plugin.
     */
    use_html_format_email?: boolean;
    /**
     * Allow users to replace their background with any selected image. Choose or upload an image in the Zoom desktop application settings.
     */
    virtual_background?: boolean;
    /**
     * Settings to manage virtual background.
     */
    virtual_background_settings?: {
      /**
       * Allow users to upload custom backgrounds.
       */
      allow_upload_custom?: boolean;
      /**
       * Allow use of videos for virtual backgrounds.
       */
      allow_videos?: boolean;
      /**
       * Enable virtual background.
       */
      enable?: boolean;
      files?: Array<{
        /**
         * Unique identifier of the file.
         */
        id?: string;
        /**
         * Indicates whether or not this file is the default virtual background file.
         */
        is_default?: boolean;
        /**
         * File name.
         */
        name?: string;
        /**
         * File size.
         */
        size?: string;
        /**
         * File type.
         */
        type?: string;
      }>;
    };
    /**
     * Add a watermark when viewing a shared screen.
     */
    watermark?: boolean;
    /**
     * Allow a Q&A in a webinar.
     */
    webinar_question_answer?: boolean;
    /**
     * Allow participants to share a whiteboard that includes annotation tools.
     */
    whiteboard?: boolean;
    /**
     * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
     * `host`: Only host can share the screen.<br>
     * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
     *
     */
    who_can_share_screen?: 'host' | 'all';
    /**
     * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
     * `host`: Only a host can share the screen when someone else is sharing.<br>
     * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
     *
     */
    who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
    /**
     * Workplace by facebook.
     */
    workplace_by_facebook?: boolean;
  };
  /**
   * Account Settings: Integration.
   */
  integration?: {
    /**
     * Enable users who join a meeting from their mobile device to share content from their Box account.
     */
    box?: boolean;
    /**
     * Enable users who join a meeting from their mobile device to share content from their Dropbox account.
     */
    dropbox?: boolean;
    /**
     * Enable meetings to be scheduled using Google Calendar.
     */
    google_calendar?: boolean;
    /**
     * Enable users who join a meeting from their mobile device to share content from their Google Drive.
     */
    google_drive?: boolean;
    /**
     * Enable users to control a connected Kubi device from within a Zoom meeting.
     */
    kubi?: boolean;
    /**
     * Enable users who join a meeting from their mobile device to share content from their Microsoft OneDrive account.
     */
    microsoft_one_drive?: boolean;
  };
  profile?: {
    recording_storage_location?: {
      /**
       * Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.
       *
       * Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
       */
      allowed_values?: Array<string>;
      /**
       * Abbreviated country code.
       */
      value?: string;
    };
  };
  /**
   * Account Settings: Recording.
   */
  recording?: {
    /**
     * Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.
     */
    account_user_access_recording?: boolean;
    /**
     * Allow recovery of deleted cloud recordings from trash.
     * If the value of this field is set to `true`, deleted cloud recordings will be kept in trash for 30 days after deletion and can be recovered within that period.
     */
    allow_recovery_deleted_cloud_recordings?: boolean;
    /**
     * [Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted with archiving solution access by the Zoom support team.
     */
    archive?: {
      /**
       * Enable the archiving feature.
       */
      enable?: boolean;
      settings?: {
        /**
         * Include in-meeting and/or in-webinar audio in the archive.
         */
        audio_file?: boolean;
        /**
         * Include closed caption or transcript in the archive.
         */
        cc_transcript_file?: boolean;
        /**
         * Include in-meeting chat in the archive.
         */
        chat_file?: boolean;
        /**
         * Include user email in in-meeting chat file.
         */
        chat_with_sender_email?: boolean;
        /**
         * Include in-meeting and/or in-webinar video in the archive.
         */
        video_file?: boolean;
      };
      /**
       * Archive types:
       *
       * * `1`: Only meetings are archived.<br>
       * * `2`: Only webinars are archived.<br>
       * * `3`: Both meetings and webinars are archived.
       */
      type?: 1 | 2 | 3;
    };
    /**
     * Allow Zoom to permanantly delete recordings automatically after a specified number of days.
     */
    auto_delete_cmr?: boolean;
    /**
     * When `auto_delete_cmr` function is 'true' this value will set the number of days before the auto deletion of cloud recordings.
     */
    auto_delete_cmr_days?: number;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Allow hosts to record and save the meeting in the cloud.
     */
    cloud_recording?: boolean;
    /**
     * Cloud recording downloads.
     */
    cloud_recording_download?: boolean;
    /**
     * Only the host can download cloud recordings.
     */
    cloud_recording_download_host?: boolean;
    /**
     * If the value of this field is set to `true`, hosts will be able to delete the recordings. If this option is set to `false`, the recordings cannot be deleted by the host and only admin can delete them.
     *
     */
    host_delete_cloud_recording?: boolean;
    /**
     * Setting to allow cloud recording access only from specific IP address ranges.
     *
     */
    ip_address_access_control?: {
      /**
       * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
       *
       *
       */
      enable?: boolean;
      /**
       * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
       *
       * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
       *
       *
       */
      ip_addresses_or_ranges?: string;
    };
    /**
     * Allow hosts and participants to record the meeting using a local file.
     */
    local_recording?: boolean;
    /**
     * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
     *
     */
    prevent_host_access_recording?: boolean;
    /**
     * Record an audio only file.
     */
    record_audio_file?: boolean;
    /**
     * Record the gallery view with a shared screen.
     */
    record_gallery_view?: boolean;
    /**
     * Record the active speaker with a shared screen.
     */
    record_speaker_view?: boolean;
    /**
     * Automatically transcribe the audio of the meeting or webinar to the cloud.
     */
    recording_audio_transcript?: boolean;
    /**
     * Show a disclaimer to participants before a recording starts
     *
     */
    recording_disclaimer?: boolean;
    /**
     * This object represents the minimum password requirements set for recordings via Account Recording Settings.
     */
    recording_password_requirement?: {
      /**
       * Indicates whether or not password must contain at least one alphabetical letter (a, b, c..).
       */
      have_letter?: boolean;
      /**
       * Indicates whether or not password must contain at least one number(1, 2, 3..).
       */
      have_number?: boolean;
      /**
       * Indicates whether or not password must contain at least one special character(!, @, #..).
       */
      have_special_character?: boolean;
      /**
       * Minimum required length for the password.
       */
      length?: number;
      /**
       * Indicates whether or not password must contain only numeric characters.
       */
      only_allow_numeric?: boolean;
    };
    /**
     * Require a passcode to access existing cloud recordings.
     */
    required_password_for_existing_cloud_recordings?: boolean;
    /**
     * Save the chat text from the meeting.
     */
    save_chat_text?: boolean;
    /**
     * Add a timestamp to the recording.
     */
    show_timestamp?: boolean;
  };
  /**
   * Account Settings: Schedule Meeting.
   */
  schedule_meeting?: {
    /**
     * Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.
     */
    audio_type?: 'both' | 'telephony' | 'voip' | 'thirdParty';
    /**
     * Only Zoom users who are signed in can join meetings.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with a specified domain can join the meeting.
     */
    enforce_login_domains?: string;
    /**
     * Only signed in users with a specific domain can join meetings.
     */
    enforce_login_with_domains?: boolean;
    /**
     * Require a password for Personal Meetings if attendees can join before host.
     */
    force_pmi_jbh_password?: boolean;
    /**
     * Start meetings with the host video on.
     */
    host_video?: boolean;
    /**
     * Allow participants to join the meeting before the host arrives.
     */
    join_before_host?: boolean;
    /**
     * Account wide meeting/webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
     */
    meeting_password_requirement?: {
      consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
      /**
       * If set to `true`, the password must contain at least 1 letter (such as a,b,c...).
       *
       */
      have_letter?: boolean;
      /**
       * If set to `true`, the password must contain at least 1 number (such as 1,2,3...).
       */
      have_number?: boolean;
      /**
       * If set to `true`, the password must have at least 1 special character (!,@,#...).
       */
      have_special_character?: boolean;
      /**
       * If set to `true`, the password must include both uppercase and lowercase characters.
       */
      have_upper_and_lower_characters?: boolean;
      /**
       * The minimum length that the meeting/webinar password needs to have.
       */
      length?: number;
      /**
       * If set to `true`, the password must only contain numbers and no other characters.
       */
      only_allow_numeric?: boolean;
      /**
       * If set to `true`, users will be informed if the provided password is weak.
       */
      weak_enhance_detection?: boolean;
    };
    /**
     * Always display "Zoom Meeting" as the meeting topic.
     */
    not_store_meeting_topic?: boolean;
    /**
     * Start meetings with the participant video on. Participants can change this setting during the meeting.
     */
    participant_video?: boolean;
    /**
     * Personal Meeting Setting.<br><br>
     * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
     * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
     * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
     *
     *
     *
     */
    personal_meeting?: boolean;
    /**
     * Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     *
     */
    require_password_for_instant_meetings?: boolean;
    /**
     * Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     *
     */
    require_password_for_pmi_meetings?: 'jbh_only' | 'all' | 'none';
    /**
     * Require a password for meetings which have already been scheduled
     *
     */
    require_password_for_scheduled_meetings?: boolean;
    /**
     * Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     */
    require_password_for_scheduling_new_meetings?: boolean;
    /**
     * Use Personal Meeting ID (PMI) when starting an instant meeting
     *
     */
    use_pmi_for_instant_meetings?: boolean;
    /**
     * Use Personal Meeting ID (PMI) when scheduling a meeting
     *
     */
    use_pmi_for_scheduled_meetings?: boolean;
  };
  /**
   * [Security settings](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) of an Account.
   */
  security?: {
    /**
     * Only account administrators can change a user's username and picture.
     */
    admin_change_name_pic?: boolean;
    /**
     * Hide billing information.
     */
    hide_billing_info?: boolean;
    /**
     * Allow users to import photos from a photo library on a  device.
     */
    import_photos_from_devices?: boolean;
    /**
     * This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users' Zoom login password.
     */
    password_requirement?: {
      /**
       *
       * Specify the max length of consecutive characters(abcde...) that can be used in a password.
       * If you set the value of this field to `0`, no restriction will be applied on consecutive characters.
       *
       * If you would like to set this restriction, you can specify a number between 4 and 8 that define the maximum allowed length for consecutive characters in a password.
       *
       * The max allowed length will be `n-1` where `n` refers to the value you provide for this field.  For instance, if you provide `4` as the value, there can only be a maximum of `3` consecutive characters in a password(example: abc1x@8fdh).
       */
      consecutive_characters_length?: number;
      /**
       * If the value of this field is set to `true`, the password must have at least one special character(!, @, #...).
       */
      have_special_character?: boolean;
      /**
       * Specify a minimum length for the password. The password length can be from a minimum of 9 characters, up to 14 characters. If you provide `0` as the value of this field, this field will be disabled and not be used and the basic password length requirement (minimum of 8 characters) will be applied for the requirement.
       */
      minimum_password_length?: number;
      /**
       * If the value of this field is set to `true`, user passwords will have to pass detection through a weak password dictionary in case hackers use simple passwords to sign in to your users’ accounts.
       */
      weak_enhance_detection?: boolean;
    };
    /**
     * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Client app after a set amount of time. <br>
     *
     * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Client. The value for the period of inactivity can be one of the following:<br>
     *
     * `5`: 5 minutes<br>
     * `10`: 10 minutes<br>
     * `15`: 15 minutes<br>
     * `30`: 30 minutes<br>
     * `45`: 45 minutes<br>
     * `60`: 60 minutes<br>
     * `90`: 90 minutes<br>
     * `120`: 120 minutes
     *
     */
    sign_again_period_for_inactivity_on_client?: number;
    /**
     * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Web Portal after a set amount of time. <br>
     *
     * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Web Portal. The value for the period of inactivity can be one of the following:<br>
     *
     * `5`: 5 minutes<br>
     * `10`: 10 minutes<br>
     * `15`: 15 minutes<br>
     * `30`: 30 minutes<br>
     * `60`: 60 minutes<br>
     * `120`: 120 minutes
     *
     *
     *
     *
     */
    sign_again_period_for_inactivity_on_web?: number;
    /**
     * Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
     * `all`: Two factor authentication will be enabled for all users in the account.<br>
     * `none`: Two factor authentication is disabled.<br>
     * `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
     * `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
     * `sign_in_with_two_factor_auth_roles` field.
     *
     */
    sign_in_with_two_factor_auth?: 'all' | 'group' | 'role' | 'none';
    /**
     * This field contains group IDs of groups that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `group`
     */
    sign_in_with_two_factor_auth_groups?: Array<string>;
    /**
     * This field contains role IDs of roles that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `role`.
     */
    sign_in_with_two_factor_auth_roles?: Array<string>;
  };
  /**
   * Account Settings Update: Telephony.
   */
  telephony?: {
    /**
     * Third party audio conference info.
     */
    audio_conference_info?: string;
    /**
     * Indicates where most of the participants call into or call from duriing a meeting.
     */
    telephony_regions?: {
      /**
       * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
       */
      selection_values?: Array<string>;
    };
    /**
     * Users can join the meeting using the existing third party audio configuration.
     */
    third_party_audio?: boolean;
  };
  /**
   * Account Settings: TSP.
   */
  tsp?: {
    /**
     * Call Out
     */
    call_out?: boolean;
    /**
     * Call Out Countries/Regions
     */
    call_out_countries?: Array<unknown>;
    /**
     * Display toll-free numbers
     */
    display_toll_free_numbers?: boolean;
    /**
     * Show international numbers link on the invitation email
     */
    show_international_numbers_link?: boolean;
  };
  /**
   * Account Settings: Zoom Rooms.
   */
  zoom_rooms?: {
    /**
     * Automatic start and stop for scheduled meetings.
     */
    auto_start_stop_scheduled_meetings?: boolean;
    /**
     * Cloud recording for instant meetings.
     */
    cmr_for_instant_meeting?: boolean;
    /**
     * Shift all meetings to private.
     */
    force_private_meeting?: boolean;
    /**
     * Hide host and meeting ID from private meetings.
     */
    hide_host_information?: boolean;
    /**
     * Display meeting list with calendar integration.
     */
    list_meetings_with_calendar?: boolean;
    /**
     * Start AirPlay service manually.
     */
    start_airplay_manually?: boolean;
    /**
     * Automatic direct sharing using an ultrasonic proximity signal.
     */
    ultrasonic?: boolean;
    /**
     * Upcoming meeting alert.
     */
    upcoming_meeting_alert?: boolean;
    /**
     * Weekly system restart.
     */
    weekly_system_restart?: boolean;
    /**
     * Zoom Room post meeting feedback.
     */
    zr_post_meeting_feedback?: boolean;
  };
};

/**
 * Billing Contact object.
 */
export type BillingContact = {
  /**
   * Billing Contact's address.
   */
  address?: string;
  /**
   * Billing Contact's apartment/suite.
   */
  apt?: string;
  /**
   * Billing Contact's city.
   */
  city?: string;
  /**
   * Billing Contact's country.
   */
  country?: string;
  /**
   * Billing Contact's email address.
   */
  email?: string;
  /**
   * Billing Contact's first name.
   */
  first_name?: string;
  /**
   * Billing Contact's last name.
   */
  last_name?: string;
  /**
   * Billing Contact's phone number.
   */
  phone_number?: string;
  /**
   * Billing Contact's state.
   */
  state?: string;
  /**
   * Billing Contact's zip/postal code.
   */
  zip?: string;
};

/**
 * Billing Contact object.
 */
export type BillingContactRequired = {
  /**
   * Billing Contact's address.
   */
  address: string;
  /**
   * Billing Contact's apartment/suite.
   */
  apt?: string;
  /**
   * Billing Contact's city.
   */
  city: string;
  /**
   * Billing Contact's Country [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) in abbreviated format.
   */
  country: string;
  /**
   * Billing Contact's email address.
   */
  email: string;
  /**
   * Billing Contact's first name.
   */
  first_name: string;
  /**
   * Billing Contact's last name.
   */
  last_name: string;
  /**
   * Billing Contact's phone number.
   */
  phone_number: string;
  /**
   * Billing Contact's state.
   */
  state: string;
  /**
   * Billing Contact's zip/postal code.
   */
  zip: string;
};

/**
 * The channel object represents a Zoom chat [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-).
 */
export type Channel = {
  /**
   * Channel Id.
   */
  id?: string;
  /**
   * Name of the channel.
   */
  name?: string;
  /**
   * Type of the channel. The value can be one of the following:<br>
   * `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
   * `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
   * `3`: Public channel. Anyone can search for this channel and join the channel.<br>
   */
  type?: 1 | 2 | 3;
};

export type CloudArchivedFiles = {
  /**
   * An explanation about the purpose of this instance.
   */
  archive_files: Array<{
    /**
     * The URL where the archived file can be downloaded. To download the archived file of a meeting or a webinar hosted in your account, create a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example. Example: `https://{{base-domain}}/rec/archive/download/xxx?access_token={{Your-JWT}}`.<br>If a user has authorized and installed your OAuth app that supports archiving, use the user’s [OAuth access token(https://marketplace.zoom.us/docs/guides/auth/oauth) to download the file.<br>For example: `https://{{base-domain}}/rec/archive/download/xxx?access_token={{ OAuth Access Token }}`.
     */
    download_url: string;
    /**
     * The file extension of the recording.
     */
    file_extension: string;
    /**
     * The file size of the recording.
     */
    file_size: number;
    /**
     * The file type of the recording. The value of this field could be one of the following:`MP4`: Video file of the recording.<br>`M4A`: Audio-only file of the recording.<br>`TRANSCRIPT`: Transcription file of the recording in VTT format.<br>`CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording in VTT file format.<br>`CSV`: File containing polling data in csv format. See [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) for details.
     */
    file_type: string;
    /**
     * The unique identifier of the archived file.
     */
    id: string;
    /**
     * The value of this field can be one of the following:* `shared_screen_with_speaker_view(CC)`* `shared_screen_with_speaker_view`* `shared_screen_with_gallery_view`* `speaker_view`* `gallery_view`* `shared_screen`* `audio_only`* `audio_transcript`* `chat_file`,* `active_speaker`* `host_video`. See [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) for details.
     */
    recording_type: string;
    /**
     * Status of the archived file.
     */
    status: string;
  }>;
  /**
   * The duration.
   */
  duration: number;
  /**
   * The ID of the user who set as the host of the meeting.
   */
  host_id: string;
  /**
   * The Meeting ID, also known as the meeting number in long (int64) format.
   */
  id: number;
  /**
   * Number of recording files returned in the response of this API call.
   */
  recording_count: number;
  /**
   * Meeting start time.
   */
  start_time: string;
  /**
   * Timezone to format the meeting start time.
   */
  timezone: string;
  /**
   * The meeting topic.
   */
  topic: string;
  /**
   * Total size of the archive.
   */
  total_size: number;
  /**
   * The meeting type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
   */
  type: 1 | 2 | 3 | 8;
  /**
   * The Unique Meeting ID. Each meeting instance will generate its own Meeting UUID.
   */
  uuid: string;
};

/**
 * The meeting type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
 */
export type type4 = 1 | 2 | 3 | 8;

/**
 * Create Webinar settings.
 */
export type CreateWebinarSettings = {
  /**
   * Allow attendees to join from multiple devices.
   */
  allow_multiple_devices?: boolean;
  /**
   * Alternative host emails or IDs. Multiple values separated by comma.
   */
  alternative_hosts?: string;
  /**
   * The default value is `2`. To enable registration required, set the approval type to `0` or `1`.  Values include:<br>
   *
   * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
   */
  approval_type?: 0 | 1 | 2;
  /**
   * Send reminder email to attendees and panelists.
   */
  attendees_and_panelists_reminder_email_notification?: {
    /**
     * * `true`: Send reminder email to attendees and panelists.
     *
     * * `false`: Do not send reminder email to attendees and panelists.
     */
    enable?: boolean;
    /**
     * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
     */
    type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
  };
  /**
   * Determine how participants can join the audio portion of the meeting.
   */
  audio?: 'both' | 'telephony' | 'voip';
  /**
   * Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the Webinar. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains.
   */
  authentication_domains?: string;
  /**
   * Specify the authentication type for users to join a Webinar with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings).
   */
  authentication_option?: string;
  /**
   * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
   */
  auto_recording?: 'local' | 'cloud' | 'none';
  /**
   * Close registration after event date.
   */
  close_registration?: boolean;
  /**
   * Contact email for registration
   */
  contact_email?: string;
  /**
   * Contact name for registration
   */
  contact_name?: string;
  /**
   * Set the email language to one of the following:
   * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
   */
  email_language?: string;
  /**
   * Only signed-in users can join this meeting.
   *
   * **This field is deprecated and will not be supported in future.** <br><br> Instead of this field, use the "meeting_authentication", "authentication_option" and/or "authentication_domains" fields to establish the authentication mechanism for this Webinar.
   */
  enforce_login?: boolean;
  /**
   * Only signed-in users with specified domains can join meetings.
   *
   * **This field is deprecated and will not be supported in future.** <br><br> Instead of this field, use the "authentication_domains" field for this Webinar.
   */
  enforce_login_domains?: string;
  /**
   * Send follow-up email to absentees.
   */
  follow_up_absentees_email_notification?: {
    /**
     * * `true`: Send follow-up email to absentees.
     *
     * * `false`: Do not send follow-up email to absentees.
     */
    enable?: boolean;
    /**
     * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
     */
    type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
  };
  /**
   * Send follow-up email to attendees.
   */
  follow_up_attendees_email_notification?: {
    /**
     * * `true`: Send follow-up email to attendees.
     *
     * * `false`: Do not send follow-up email to attendees.
     */
    enable?: boolean;
    /**
     * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
     */
    type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
  };
  /**
   * List of global dial-in countries
   */
  global_dial_in_countries?: Array<string>;
  /**
   * Default to HD video.
   */
  hd_video?: boolean;
  /**
   * Start video when host joins webinar.
   */
  host_video?: boolean;
  /**
   * Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`.
   */
  meeting_authentication?: boolean;
  /**
   * Make the webinar on-demand
   */
  on_demand?: boolean;
  /**
   * * `true`: Send invitation email to panelists.
   *
   * * `false`: Do not send invitation email to panelists.
   */
  panelists_invitation_email_notification?: boolean;
  /**
   * Start video when panelists join webinar.
   */
  panelists_video?: boolean;
  /**
   * Zoom will open a survey page in attendees' browsers after leaving the webinar
   */
  post_webinar_survey?: boolean;
  /**
   * Enable practice session.
   */
  practice_session?: boolean;
  /**
   * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
   */
  question_and_answer?: {
    /**
     * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
     *
     * * `false`: Do not allow anonymous questions.
     */
    allow_anonymous_questions?: boolean;
    /**
     * Indicate whether you want attendees to be able to view answered questions only or view all questions.
     *
     * * `only`: Attendees are able to view answered questions only.
     *
     * *  `all`: Attendees are able to view all questions submitted in the Q&A.
     */
    answer_questions?: 'only' | 'all';
    /**
     * * `true`: Attendees can answer questions or leave a comment in the question thread.
     *
     * * `false`: Attendees can not answer questions or leave a comment in the question thread
     */
    attendees_can_comment?: boolean;
    /**
     * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
     *
     * * `false`: Attendees can not click the thumbs up butoon on questions.
     */
    attendees_can_upvote?: boolean;
    /**
     * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
     *
     * * `false`: Disable Q&A for webinar.
     */
    enable?: boolean;
  };
  /**
   * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
   */
  registrants_email_notification?: boolean;
  /**
   * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
   */
  registrants_restrict_number?: number;
  /**
   * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
   */
  registration_type?: 1 | 2 | 3;
  /**
   * Show social share buttons on the registration page.
   */
  show_share_button?: boolean;
  /**
   * Survey url for post webinar survey
   */
  survey_url?: string;
};

/**
 * The default value is `2`. To enable registration required, set the approval type to `0` or `1`.  Values include:<br>
 *
 * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
 */
export type approval_type = 0 | 1 | 2;

/**
 * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
 */
export type type5 = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;

/**
 * Determine how participants can join the audio portion of the meeting.
 */
export type audio = 'both' | 'telephony' | 'voip';

/**
 * Indicate whether you want attendees to be able to view answered questions only or view all questions.
 *
 * * `only`: Attendees are able to view answered questions only.
 *
 * *  `all`: Attendees are able to view all questions submitted in the Q&A.
 */
export type answer_questions = 'only' | 'all';

/**
 * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
 */
export type registration_type = 1 | 2 | 3;

/**
 * Custom Question.
 */
export type CustomQuestion = {
  title?: string;
  value?: string;
};

/**
 * DateTime Object.
 */
export type DateTime = {
  /**
   * Start Date.
   */
  from?: string;
  /**
   * End Date.
   */
  to?: string;
};

/**
 * The H.323/SIP device object.
 */
export type Device = {
  /**
   * Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.
   */
  encryption: 'auto' | 'yes' | 'no';
  /**
   * Device IP.
   */
  ip: string;
  /**
   * Device name.
   */
  name: string;
  /**
   * Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.
   */
  protocol: 'H.323' | 'SIP';
};

/**
 * Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.
 */
export type encryption = 'auto' | 'yes' | 'no';

/**
 * Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.
 */
export type protocol = 'H.323' | 'SIP';

/**
 * List of H.323/SIP Devices.
 */
export type DeviceList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of H.323/SIP Device objects.
   */
  devices?: Array<
    {
      /**
       * Device ID.
       */
      id?: string;
    } & {
      /**
       * Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.
       */
      encryption: 'auto' | 'yes' | 'no';
      /**
       * Device IP.
       */
      ip: string;
      /**
       * Device name.
       */
      name: string;
      /**
       * Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.
       */
      protocol: 'H.323' | 'SIP';
    }
  >;
};

/**
 * List of managed domains.
 */
export type DomainsList = {
  /**
   * List of managed domain objects.
   */
  domains?: Array<{
    /**
     * Domain name.
     */
    domain?: string;
    /**
     * Domain status.
     */
    status?: string;
  }>;
  /**
   * Total records.
   */
  total_records?: number;
};

/**
 * Group object.
 */
export type Group = {
  /**
   * Group name.
   */
  name?: string;
  /**
   * Total number of members in this group.
   */
  total_members?: number;
};

/**
 * List of Groups.
 */
export type GroupList = {
  /**
   * List of Group objects.
   */
  groups?: Array<
    {
      /**
       * Group ID.
       */
      id?: string;
    } & {
      /**
       * Group name.
       */
      name?: string;
      /**
       * Total number of members in this group.
       */
      total_members?: number;
    }
  >;
  /**
   * Total records.
   */
  total_records?: number;
};

/**
 * Group member object.
 */
export type GroupMember = {
  /**
   * User email.
   */
  email?: string;
  /**
   * User first name.
   */
  first_name?: string;
  /**
   * User ID.
   */
  id?: string;
  /**
   * User last name.
   */
  last_name?: string;
  /**
   * User type.<br>
   * `1` - Basic<br> `2` - Licensed<br>
   * `3` - On-prem
   */
  type?: number;
};

/**
 * List of Group Members.
 */
export type GroupMemberList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of Group member objects.
   */
  members?: Array<{
    /**
     * User email.
     */
    email?: string;
    /**
     * User first name.
     */
    first_name?: string;
    /**
     * User ID.
     */
    id?: string;
    /**
     * User last name.
     */
    last_name?: string;
    /**
     * User type.<br>
     * `1` - Basic<br> `2` - Licensed<br>
     * `3` - On-prem
     */
    type?: number;
  }>;
};

export type GroupUserSettingsAuthentication =
  | {
      /**
       * Meeting Authentication Options
       */
      authentication_options?: Array<{
        /**
         * Authentication default option
         */
        default_option?: boolean;
        /**
         * Authentication domains
         */
        domains?: string;
        /**
         * Authentication id
         */
        id?: string;
        /**
         * Authentication name
         */
        name?: string;
        /**
         *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
         * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
         * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
         * * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
         */
        type?: 'enforce_login' | 'enforce_login_with_same_account' | 'enforce_login_with_domains';
        /**
         * Authentication visible
         */
        visible?: boolean;
      }>;
      /**
       * Only authenticated users can join meetings
       */
      meeting_authentication?: boolean;
    }
  | {
      /**
       * Authentication Options
       */
      authentication_options?: Array<{
        /**
         * Authentication default option
         */
        default_option?: boolean;
        /**
         * Authentication domians
         */
        domains?: string;
        /**
         * Authentication id
         */
        id?: string;
        /**
         * Authentication name
         */
        name?: string;
        /**
         * Authentication type
         */
        type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
        /**
         * Authentication visible
         */
        visible?: boolean;
      }>;
      /**
       * Only authenticated users can view cloud recordings
       */
      recording_authentication?: boolean;
    };

export type GroupUserSettingsAuthenticationUpdate =
  | {
      /**
       * Meeting Authentication Options
       */
      authentication_option?: {
        /**
         * Authentication action
         */
        action?: 'update' | 'show' | 'hide';
        /**
         * Authentication default option
         */
        default_option?: boolean;
        /**
         * Authentication domains
         */
        domains?: string;
        /**
         * Authentication id
         */
        id?: string;
        /**
         * Authentication name
         */
        name?: string;
        /**
         *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
         * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
         * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
         * * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
         */
        type?: 'enforce_login' | 'enforce_login_with_same_account' | 'enforce_login_with_domains';
      };
      /**
       * Only authenticated users can join meetings
       */
      meeting_authentication?: boolean;
    }
  | {
      /**
       * Authentication Options
       */
      authentication_option?: {
        /**
         * Authentication action
         */
        action?: 'update' | 'show' | 'hide';
        /**
         * Authentication default option
         */
        default_option?: boolean;
        /**
         * Authentication domians
         */
        domians?: string;
        /**
         * Authentication id
         */
        id?: string;
        /**
         * Authentication name
         */
        name?: string;
        /**
         * Authentication type
         */
        type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
      };
      /**
       * Only authenticated users can view cloud recordings
       */
      recording_authentication?: boolean;
    };

/**
 * Authentication action
 */
export type action2 = 'update' | 'show' | 'hide';

/**
 * IM group object.
 */
export type IMGroup = {
  /**
   * Group name.
   */
  name?: string;
  /**
   * Total number of members in this group.
   */
  total_members?: number;
} & {
  /**
   * Members can search for others under same account.
   */
  search_by_account?: boolean;
  /**
   * Members can search for others in the same email domain.
   */
  search_by_domain?: boolean;
  /**
   * Members can search for others under same master account - including all sub accounts.
   */
  search_by_ma_account?: boolean;
  /**
   * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
   */
  type?: 'normal' | 'shared' | 'restricted';
};

/**
 * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
 */
export type type6 = 'normal' | 'shared' | 'restricted';

/**
 * List of IM Groups.
 */
export type IMGroupList = {
  /**
   * Total number of records returned.
   */
  total_records?: number;
} & {
  /**
   * List of group objects.
   */
  groups?: Array<
    {
      /**
       * IM group ID.
       */
      id?: string;
    } & ({
      /**
       * Group name.
       */
      name?: string;
      /**
       * Total number of members in this group.
       */
      total_members?: number;
    } & {
      /**
       * Members can search for others under same account.
       */
      search_by_account?: boolean;
      /**
       * Members can search for others in the same email domain.
       */
      search_by_domain?: boolean;
      /**
       * Members can search for others under same master account - including all sub accounts.
       */
      search_by_ma_account?: boolean;
      /**
       * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
       */
      type?: 'normal' | 'shared' | 'restricted';
    })
  >;
};

/**
 * Meeting object.
 */
export type Meeting = {
  /**
   * Meeting description.
   */
  agenda?: string;
  /**
   * Meeting duration (minutes). Used for scheduled meetings only.
   */
  duration?: number;
  /**
   * Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
   */
  recurrence?: {
    /**
     * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
     *
     * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
     *
     *
     */
    repeat_interval?: number;
    /**
     * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
  };
  /**
   * Meeting settings.
   */
  settings?: {
    /**
     * Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host's emails or IDs: multiple values are separated by a semicolon.
     */
    alternative_hosts?: string;
    /**
     * Flag to determine whether to send email notifications to alternative hosts, default value is true.
     */
    alternative_hosts_email_notification?: boolean;
    /**
     * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
     *
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Approve or block users from specific regions/countries from joining this meeting.
     *
     */
    approved_or_denied_countries_or_regions?: {
      /**
       * List of countries/regions from where participants can join this meeting.
       */
      approved_list?: Array<string>;
      /**
       * List of countries/regions from where participants can not join this meeting.
       */
      denied_list?: Array<string>;
      /**
       * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
       *
       * `false`: Setting disabled.
       */
      enable?: boolean;
      /**
       * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
       * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
       * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
       */
      method?: 'approve' | 'deny';
    };
    /**
     * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * The participants added here will receive unique meeting invite links and bypass authentication.
     */
    authentication_exception?: Array<{
      /**
       * Email address of the participant.
       */
      email?: string;
      /**
       * Name of the participant.
       */
      name?: string;
    }>;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Meeting authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
     */
    breakout_room?: {
      /**
       * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
       */
      enable?: boolean;
      /**
       * Create room(s).
       */
      rooms?: Array<{
        /**
         * Name of the breakout room.
         */
        name?: string;
        /**
         * Email addresses of the participants who are to be assigned to the breakout room.
         */
        participants?: Array<string>;
      }>;
    };
    /**
     * Close registration after event date
     */
    close_registration?: boolean;
    /**
     * Host meeting in China.
     */
    cn_meeting?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Custom keys and values assigned to the meeting.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the user.
       */
      key?: string;
      /**
       * Value of the custom key associated with the user.
       */
      value?: string;
    }>;
    /**
     * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
     * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
     *
     * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
     */
    encryption_type?: 'enhanced_encryption' | 'e2ee';
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login_domains?: string;
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Global Dial-in Countries/Regions
     */
    global_dial_in_numbers?: Array<{
      /**
       * City of the number, if any. For example, Chicago.
       */
      city?: string;
      /**
       * Country code. For example, BR.
       */
      country?: string;
      /**
       * Full name of country. For example, Brazil.
       */
      country_name?: string;
      /**
       * Phone number. For example, +1 2332357613.
       */
      number?: string;
      /**
       * Type of number.
       */
      type?: 'toll' | 'tollfree';
    }>;
    /**
     * Start video when the host joins the meeting.
     */
    host_video?: boolean;
    /**
     * Host meeting in India.
     */
    in_meeting?: boolean;
    /**
     * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
     *
     * *  `0`: Allow participant to join anytime.
     * *  `5`: Allow participant to join 5 minutes before meeting start time.
     * * `10`: Allow participant to join 10 minutes before meeting start time.
     */
    jbh_time?: 0 | 5 | 10;
    /**
     * Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
     */
    join_before_host?: boolean;
    language_interpretation?: {
      enable?: boolean;
      /**
       * Information associated with the interpreter.
       */
      interpreters?: Array<{
        /**
         * Email address of the interpreter.
         */
        email?: string;
        /**
         * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
         *
         * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
         */
        languages?: string;
      }>;
    };
    /**
     * `true`- Only authenticated users can join meetings.
     */
    meeting_authentication?: boolean;
    /**
     * Mute participants upon entry.
     */
    mute_upon_entry?: boolean;
    /**
     * Start video when participants join the meeting.
     */
    participant_video?: boolean;
    /**
     * Send confirmation email to registrants upon successful registration.
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the meeting registration page.
     * This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    show_share_button?: boolean;
    /**
     * Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
     */
    use_pmi?: boolean;
    /**
     * Enable waiting room
     */
    waiting_room?: boolean;
    /**
     * Add watermark when viewing a shared screen.
     */
    watermark?: boolean;
  };
  /**
   * Meeting start time. When using a format like "yyyy-MM-dd'T'HH:mm:ss'Z'", always use GMT time. When using a format like "yyyy-MM-dd'T'HH:mm:ss", you should use local time and specify the time zone. This is only used for scheduled meetings and recurring meetings with a fixed time.
   */
  start_time?: string;
  /**
   * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats.
   */
  timezone?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field?: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Meeting Type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
   */
  type?: 1 | 2 | 3 | 8;
};

/**
 * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
 */
export type monthly_week = -1 | 1 | 2 | 3 | 4;

/**
 * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
 *
 * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
 */
export type monthly_week_day = 1 | 2 | 3 | 4 | 5 | 6 | 7;

/**
 * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
 *
 * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
 */
export type weekly_days = '1' | '2' | '3' | '4' | '5' | '6' | '7';

/**
 * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
 * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
 * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
 */
export type method = 'approve' | 'deny';

/**
 * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
 * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
 *
 * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
 */
export type encryption_type = 'enhanced_encryption' | 'e2ee';

/**
 * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
 *
 * *  `0`: Allow participant to join anytime.
 * *  `5`: Allow participant to join 5 minutes before meeting start time.
 * * `10`: Allow participant to join 10 minutes before meeting start time.
 */
export type jbh_time = 0 | 5 | 10;

/**
 * Base object for meeting.
 */
export type MeetingCreate = {
  /**
   * Meeting description.
   */
  agenda?: string;
  /**
   * Meeting duration (minutes). Used for scheduled meetings only.
   */
  duration?: number;
  /**
   * Passcode to join the meeting. By default, passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ *] and can have a maximum of 10 characters.
   *
   * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
   */
  recurrence?: {
    /**
     * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
     *
     * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
     *
     *
     */
    repeat_interval?: number;
    /**
     * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
  };
  /**
   * If you would like to schedule this meeting for someone else in your account, provide the Zoom user id or email address of the user here.
   */
  schedule_for?: string;
  /**
   * Meeting settings.
   */
  settings?: {
    /**
     * Enable additional [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) for this meeting. Provide the value in the form of array of country code(s) for the countries which are available as data center regions in the [account settings](https://zoom.us/account/setting) but have been opt out of in the user settings. For instance, let's say that in your account settings, the data center regions that have been selected are Europe, Honkong, Australia, India, Latin America, Japan, China, United States,and Canada. The complete list of available data center regions for your account is: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]. In [user settings](https://zoom.us/profile/setting), you have opted out of India(IN) and Japan(TY) for meeting and webinar traffic routing. If you would like, you can still include India and Japan as additional data centers for this meeting using this field. To include India and Japan as additional data center regions, you would provide ["IN", "TY"] as the value.
     */
    additional_data_center_regions?: Array<string>;
    /**
     * If set to `true`, attendees will be allowed to join a meeting from multiple devices.
     *
     * **Note:** This setting is only applied for meetings that have enabled registration.
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host's emails or IDs: multiple values separated by a comma.
     */
    alternative_hosts?: string;
    /**
     * Flag to determine whether to send email notifications to alternative hosts, default value is true.
     */
    alternative_hosts_email_notification?: boolean;
    /**
     * The default value is `2`. To enable registration required, set the approval type to `0` or `1`. Values include:<br>
     *
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Approve or block users from specific regions/countries from joining this meeting.
     *
     */
    approved_or_denied_countries_or_regions?: {
      /**
       * List of countries/regions from where participants can join this meeting.
       */
      approved_list?: Array<string>;
      /**
       * List of countries/regions from where participants can not join this meeting.
       */
      denied_list?: Array<string>;
      /**
       * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
       *
       * `false`: Setting disabled.
       */
      enable?: boolean;
      /**
       * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
       * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
       * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
       */
      method?: 'approve' | 'deny';
    };
    /**
     * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the meeting. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains.
     */
    authentication_domains?: string;
    /**
     * Specify the authentication type for users to join a meeting with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings).
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
     */
    breakout_room?: {
      /**
       * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
       */
      enable?: boolean;
      /**
       * Create room(s).
       */
      rooms?: Array<{
        /**
         * Name of the breakout room.
         */
        name?: string;
        /**
         * Email addresses of the participants who are to be assigned to the breakout room.
         */
        participants?: Array<string>;
      }>;
    };
    /**
     * Close registration after event date
     */
    close_registration?: boolean;
    /**
     * Host meeting in China.
     */
    cn_meeting?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
     * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
     *
     * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
     */
    encryption_type?: 'enhanced_encryption' | 'e2ee';
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Start video when the host joins the meeting.
     */
    host_video?: boolean;
    /**
     * Host meeting in India.
     */
    in_meeting?: boolean;
    /**
     * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
     *
     * *  `0`: Allow participant to join anytime.
     * *  `5`: Allow participant to join 5 minutes before meeting start time.
     * * `10`: Allow participant to join 10 minutes before meeting start time.
     */
    jbh_time?: 0 | 5 | 10;
    /**
     * Allow participants to join the meeting before the host starts the meeting. This field can only used for scheduled or recurring meetings.
     *
     * **Note:** If waiting room is enabled, the **join before host** setting will be disabled.
     */
    join_before_host?: boolean;
    /**
     * Language interpretation [settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars#h_01EGGQFD3Q4BST3378SA762MJ1) for meetings.
     *
     * **Note:** This feature is only available on certain Webinar add-on, Education, Business and higher plans. If this feature is not enabled on the host's account, this setting will not be applied for the meeting.
     */
    language_interpretation?: {
      /**
       * Indicate whether or not you would like to enable [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars#h_01EGGQFD3Q4BST3378SA762MJ1) for this meeting.
       */
      enable?: boolean;
      /**
       * Information associated with the interpreter.
       */
      interpreters?: Array<{
        /**
         * Email address of the interpreter.
         */
        email?: string;
        /**
         * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
         *
         * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
         */
        languages?: string;
      }>;
    };
    /**
     * Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`.
     */
    meeting_authentication?: boolean;
    /**
     * Mute participants upon entry.
     */
    mute_upon_entry?: boolean;
    /**
     * Start video when participants join the meeting.
     */
    participant_video?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * If set to `true`, the registration page for the meeting will include social share buttons.
     *
     * **Note:** This setting is only applied for meetings that have enabled registration.
     */
    show_share_button?: boolean;
    /**
     * Use Personal Meeting ID instead of an automatically generated meeting ID. It can only be used for scheduled meetings, instant meetings and recurring meetings with no fixed time.
     */
    use_pmi?: boolean;
    /**
     * Enable waiting room. Note that if the value of this field is set to `true`, it will override and disable the `join_before_host` setting.
     */
    waiting_room?: boolean;
    /**
     * Add watermark when viewing a shared screen.
     */
    watermark?: boolean;
  };
  /**
   * Meeting start time. We support two formats for `start_time` - local time and GMT.<br>
   *
   * To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`. Example: "2020-03-31T12:02:00Z"
   *
   * To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.
   *
   * The `start_time` should only be used for scheduled and / or recurring webinars with fixed time.
   */
  start_time?: string;
  /**
   * Unique identifier of the **admin meeting template**. To create admin meeting templates, contact the Zoom support team.
   *
   * Use this field if you would like to [schedule the meeting from a admin meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb). You can retrieve the value of this field by calling the [List meeting templates](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/listmeetingtemplates) API.
   */
  template_id?: string;
  /**
   * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats.
   */
  timezone?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Label of the tracking field.
     */
    field: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Meeting Type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
   */
  type?: 1 | 2 | 3 | 8;
};

/**
 * Meeting object
 */
export type MeetingInfo = {
  /**
   * Agenda
   */
  agenda?: string;
  /**
   * The date and time at which this meeting was created.
   */
  created_at?: string;
  /**
   * Meeting duration.
   */
  duration?: number;
  /**
   * H.323/SIP room system password
   */
  h323_password?: string;
  /**
   * URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting.
   */
  join_url?: string;
  /**
   * Array of occurrence objects.
   */
  occurrences?: Array<{
    /**
     * Duration.
     */
    duration?: number;
    /**
     * Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences.
     */
    occurrence_id?: string;
    /**
     * Start time.
     */
    start_time?: string;
    /**
     * Occurrence status.
     */
    status?: string;
  }>;
  /**
   * Meeting password. Password may only contain the following characters: `[a-z A-Z 0-9 @ - _ * !]`
   *
   * If "Require a password when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the password field will be autogenerated in the response even if it is not provided in the API request.
   *
   *
   *
   */
  password?: string;
  /**
   * Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.
   */
  pmi?: number;
  /**
   * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
   */
  recurrence?: {
    /**
     * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
     *
     * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
     *
     *
     */
    repeat_interval?: number;
    /**
     * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
  };
  /**
   * Meeting settings.
   */
  settings?: {
    /**
     * Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host's emails or IDs: multiple values are separated by a semicolon.
     */
    alternative_hosts?: string;
    /**
     * Flag to determine whether to send email notifications to alternative hosts, default value is true.
     */
    alternative_hosts_email_notification?: boolean;
    /**
     * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
     *
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Approve or block users from specific regions/countries from joining this meeting.
     *
     */
    approved_or_denied_countries_or_regions?: {
      /**
       * List of countries/regions from where participants can join this meeting.
       */
      approved_list?: Array<string>;
      /**
       * List of countries/regions from where participants can not join this meeting.
       */
      denied_list?: Array<string>;
      /**
       * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
       *
       * `false`: Setting disabled.
       */
      enable?: boolean;
      /**
       * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
       * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
       * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
       */
      method?: 'approve' | 'deny';
    };
    /**
     * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * The participants added here will receive unique meeting invite links and bypass authentication.
     */
    authentication_exception?: Array<{
      /**
       * Email address of the participant.
       */
      email?: string;
      /**
       * Name of the participant.
       */
      name?: string;
    }>;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Meeting authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
     */
    breakout_room?: {
      /**
       * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
       */
      enable?: boolean;
      /**
       * Create room(s).
       */
      rooms?: Array<{
        /**
         * Name of the breakout room.
         */
        name?: string;
        /**
         * Email addresses of the participants who are to be assigned to the breakout room.
         */
        participants?: Array<string>;
      }>;
    };
    /**
     * Close registration after event date
     */
    close_registration?: boolean;
    /**
     * Host meeting in China.
     */
    cn_meeting?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Custom keys and values assigned to the meeting.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the user.
       */
      key?: string;
      /**
       * Value of the custom key associated with the user.
       */
      value?: string;
    }>;
    /**
     * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
     * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
     *
     * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
     */
    encryption_type?: 'enhanced_encryption' | 'e2ee';
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login_domains?: string;
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Global Dial-in Countries/Regions
     */
    global_dial_in_numbers?: Array<{
      /**
       * City of the number, if any. For example, Chicago.
       */
      city?: string;
      /**
       * Country code. For example, BR.
       */
      country?: string;
      /**
       * Full name of country. For example, Brazil.
       */
      country_name?: string;
      /**
       * Phone number. For example, +1 2332357613.
       */
      number?: string;
      /**
       * Type of number.
       */
      type?: 'toll' | 'tollfree';
    }>;
    /**
     * Start video when the host joins the meeting.
     */
    host_video?: boolean;
    /**
     * Host meeting in India.
     */
    in_meeting?: boolean;
    /**
     * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
     *
     * *  `0`: Allow participant to join anytime.
     * *  `5`: Allow participant to join 5 minutes before meeting start time.
     * * `10`: Allow participant to join 10 minutes before meeting start time.
     */
    jbh_time?: 0 | 5 | 10;
    /**
     * Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
     */
    join_before_host?: boolean;
    language_interpretation?: {
      enable?: boolean;
      /**
       * Information associated with the interpreter.
       */
      interpreters?: Array<{
        /**
         * Email address of the interpreter.
         */
        email?: string;
        /**
         * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
         *
         * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
         */
        languages?: string;
      }>;
    };
    /**
     * `true`- Only authenticated users can join meetings.
     */
    meeting_authentication?: boolean;
    /**
     * Mute participants upon entry.
     */
    mute_upon_entry?: boolean;
    /**
     * Start video when participants join the meeting.
     */
    participant_video?: boolean;
    /**
     * Send confirmation email to registrants upon successful registration.
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the meeting registration page.
     * This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    show_share_button?: boolean;
    /**
     * Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
     */
    use_pmi?: boolean;
    /**
     * Enable waiting room
     */
    waiting_room?: boolean;
    /**
     * Add watermark when viewing a shared screen.
     */
    watermark?: boolean;
  };
  /**
   * Meeting start date-time in UTC/GMT. Example: "2020-03-31T12:02:00Z"
   */
  start_time?: string;
  /**
   * URL to start the meeting. This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting.
   */
  start_url?: string;
  /**
   * Timezone to format start_time
   */
  timezone?: string;
  /**
   * Meeting topic
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Label of the tracking field.
     */
    field?: string;
    /**
     * Value for the field.
     */
    value?: string;
    /**
     * Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.
     *
     * `true`: Tracking field is visible. <br>
     *
     * `false`: Tracking field is not visible to the users in the meeting options in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only.
     */
    visible?: boolean;
  }>;
  /**
   * Meeting Type
   */
  type?: 1 | 2 | 3 | 8;
};

/**
 * Meeting object.
 */
export type MeetingInfoGet = {
  /**
   * Meeting description
   */
  agenda?: string;
  /**
   * Time of creation.
   */
  created_at?: string;
  /**
   * Meeting duration.
   */
  duration?: number;
  /**
   * Encrypted passcode for third party endpoints (H323/SIP).
   */
  encrypted_password?: string;
  /**
   * H.323/SIP room system passcode.
   */
  h323_password?: string;
  /**
   * URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting.
   */
  join_url?: string;
  /**
   * Array of occurrence objects.
   */
  occurrences?: Array<{
    /**
     * Duration.
     */
    duration?: number;
    /**
     * Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences.
     */
    occurrence_id?: string;
    /**
     * Start time.
     */
    start_time?: string;
    /**
     * Occurrence status.
     */
    status?: string;
  }>;
  /**
   * Meeting passcode.
   */
  password?: string;
  /**
   * Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.
   */
  pmi?: number;
  /**
   * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
   */
  recurrence?: {
    /**
     * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
     *
     * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
     *
     *
     */
    repeat_interval?: number;
    /**
     * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
  };
  /**
   * Meeting settings.
   */
  settings?: {
    /**
     * Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host's emails or IDs: multiple values are separated by a semicolon.
     */
    alternative_hosts?: string;
    /**
     * Flag to determine whether to send email notifications to alternative hosts, default value is true.
     */
    alternative_hosts_email_notification?: boolean;
    /**
     * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
     *
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Approve or block users from specific regions/countries from joining this meeting.
     *
     */
    approved_or_denied_countries_or_regions?: {
      /**
       * List of countries/regions from where participants can join this meeting.
       */
      approved_list?: Array<string>;
      /**
       * List of countries/regions from where participants can not join this meeting.
       */
      denied_list?: Array<string>;
      /**
       * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
       *
       * `false`: Setting disabled.
       */
      enable?: boolean;
      /**
       * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
       * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
       * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
       */
      method?: 'approve' | 'deny';
    };
    /**
     * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * The participants added here will receive unique meeting invite links and bypass authentication.
     */
    authentication_exception?: Array<{
      /**
       * Email address of the participant.
       */
      email?: string;
      /**
       * Name of the participant.
       */
      name?: string;
    }>;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Meeting authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
     */
    breakout_room?: {
      /**
       * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
       */
      enable?: boolean;
      /**
       * Create room(s).
       */
      rooms?: Array<{
        /**
         * Name of the breakout room.
         */
        name?: string;
        /**
         * Email addresses of the participants who are to be assigned to the breakout room.
         */
        participants?: Array<string>;
      }>;
    };
    /**
     * Close registration after event date
     */
    close_registration?: boolean;
    /**
     * Host meeting in China.
     */
    cn_meeting?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Custom keys and values assigned to the meeting.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the user.
       */
      key?: string;
      /**
       * Value of the custom key associated with the user.
       */
      value?: string;
    }>;
    /**
     * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
     * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
     *
     * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
     */
    encryption_type?: 'enhanced_encryption' | 'e2ee';
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login_domains?: string;
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Global Dial-in Countries/Regions
     */
    global_dial_in_numbers?: Array<{
      /**
       * City of the number, if any. For example, Chicago.
       */
      city?: string;
      /**
       * Country code. For example, BR.
       */
      country?: string;
      /**
       * Full name of country. For example, Brazil.
       */
      country_name?: string;
      /**
       * Phone number. For example, +1 2332357613.
       */
      number?: string;
      /**
       * Type of number.
       */
      type?: 'toll' | 'tollfree';
    }>;
    /**
     * Start video when the host joins the meeting.
     */
    host_video?: boolean;
    /**
     * Host meeting in India.
     */
    in_meeting?: boolean;
    /**
     * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
     *
     * *  `0`: Allow participant to join anytime.
     * *  `5`: Allow participant to join 5 minutes before meeting start time.
     * * `10`: Allow participant to join 10 minutes before meeting start time.
     */
    jbh_time?: 0 | 5 | 10;
    /**
     * Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
     */
    join_before_host?: boolean;
    language_interpretation?: {
      enable?: boolean;
      /**
       * Information associated with the interpreter.
       */
      interpreters?: Array<{
        /**
         * Email address of the interpreter.
         */
        email?: string;
        /**
         * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
         *
         * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
         */
        languages?: string;
      }>;
    };
    /**
     * `true`- Only authenticated users can join meetings.
     */
    meeting_authentication?: boolean;
    /**
     * Mute participants upon entry.
     */
    mute_upon_entry?: boolean;
    /**
     * Start video when participants join the meeting.
     */
    participant_video?: boolean;
    /**
     * Send confirmation email to registrants upon successful registration.
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the meeting registration page.
     * This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    show_share_button?: boolean;
    /**
     * Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
     */
    use_pmi?: boolean;
    /**
     * Enable waiting room
     */
    waiting_room?: boolean;
    /**
     * Add watermark when viewing a shared screen.
     */
    watermark?: boolean;
  };
  /**
   * Meeting start time in GMT/UTC. Start time will not be returned if the meeting is an **instant** meeting.
   *
   */
  start_time?: string;
  /**
   * <br><aside>The <code>start_url</code> of a Meeting is a URL using which a host or an alternative host can start the Meeting.
   *
   * The expiration time for the <code>start_url</code> field listed in the response of [Create a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate) is two hours for all regular users.
   *
   * For users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.
   *
   * For security reasons, to retrieve the updated value for the <code>start_url</code> field programmatically (after the expiry time), you must call the [Retrieve a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting) and refer to the value of the <code>start_url</code> field in the response.</aside><br>This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting.
   */
  start_url?: string;
  /**
   * Meeting status
   */
  status?: 'waiting' | 'started';
  /**
   * Timezone to format the meeting start time on the .
   */
  timezone?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Label of the tracking field.
     */
    field?: string;
    /**
     * Value for the field.
     */
    value?: string;
    /**
     * Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.
     *
     * `true`: Tracking field is visible. <br>
     *
     * `false`: Tracking field is not visible to the users when they look at the meeting details in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only.
     */
    visible?: boolean;
  }>;
  /**
   * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`4` - PMI Meeting<br>
   * `8` - Recurring meeting with a fixed time.
   */
  type?: 1 | 2 | 3 | 8;
};

/**
 * Meeting status
 */
export type status = 'waiting' | 'started';

/**
 * List of Meetings
 */
export type MeetingInstances = {
  /**
   * List of ended meeting instances.
   */
  meetings?: Array<{
    /**
     * Start time
     */
    start_time?: string;
    /**
     * Meeting UUID. Unique meeting ID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
     *
     *
     */
    uuid?: string;
  }>;
};

/**
 * Meeting invitation details.
 */
export type MeetingInvitation = {
  /**
   * Meeting invitation.
   */
  invitation?: string;
};

/**
 * List of meetings.
 */
export type MeetingList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of Meeting objects.
   */
  meetings?: Array<{
    /**
     * Meeting description. The length of agenda gets truncated to 250 characters when you list all meetings for a user. To view the complete agenda of a meeting, retrieve details for a single meeting [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting).
     */
    agenda?: string;
    /**
     * Time of creation.
     */
    created_at?: string;
    /**
     * Meeting duration.
     */
    duration?: number;
    /**
     * ID of the user who is set as the host of the meeting.
     */
    host_id?: string;
    /**
     * Meeting ID - also known as the meeting number in double (int64) format.
     */
    id?: number;
    /**
     * Join URL.
     */
    join_url?: string;
    /**
     * Meeting start time.
     */
    start_time?: string;
    /**
     * Timezone to format the meeting start time.
     */
    timezone?: string;
    /**
     * Meeting topic.
     */
    topic?: string;
    /**
     * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
     */
    type?: 1 | 2 | 3 | 8;
    /**
     * Unique Meeting ID. Each meeting instance will generate its own Meeting UUID.
     */
    uuid?: string;
  }>;
};

/**
 * Meeting live stream.
 */
export type MeetingLiveStream = {
  /**
   * The livestream page URL.
   */
  page_url?: string;
  /**
   * Stream name and key.
   */
  stream_key: string;
  /**
   * Streaming URL.
   */
  stream_url: string;
};

/**
 * Meeting live stream status.
 */
export type MeetingLiveStreamStatus = {
  /**
   * Update the status of a livestream.
   *
   * The value can be one of the following:<br>
   * `start`: Start a live stream. <br>
   * `stop`: Stop an ongoing live stream.
   */
  action?: 'start' | 'stop';
  /**
   * Update the settings of a live streaming session. The settings can only be updated for a live stream that has been stopped. You can not update the settings of an ongoing live stream.
   */
  settings?: {
    /**
     * Display the name of the active speaker during a live stream.
     */
    active_speaker_name?: boolean;
    /**
     * Display name of the live stream.
     */
    display_name?: string;
  };
};

/**
 * Update the status of a livestream.
 *
 * The value can be one of the following:<br>
 * `start`: Start a live stream. <br>
 * `stop`: Stop an ongoing live stream.
 */
export type action3 = 'start' | 'stop';

/**
 * Meeting metric details.
 */
export type MeetingMetric = {
  /**
   * Custom keys and values assigned to the meeting.
   */
  custom_keys?: Array<{
    /**
     * Custom key associated with the meetinh.
     */
    key?: string;
    /**
     * Value of the custom key associated with the meeting.
     */
    value?: string;
  }>;
  /**
   * Department of the host.
   */
  dept?: string;
  /**
   * Meeting duration.
   */
  duration?: string;
  /**
   * Email address of the host.
   */
  email?: string;
  /**
   * Meeting end time.
   */
  end_time?: string;
  /**
   * Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.
   */
  has_3rd_party_audio?: boolean;
  /**
   * Indicates whether or not the PSTN was used in the meeting.
   */
  has_pstn?: boolean;
  /**
   * Indicates whether or not the recording feature was used in the meeting.
   */
  has_recording?: boolean;
  /**
   * Indicates whether or not screenshare feature was used in the meeting.
   */
  has_screen_share?: boolean;
  /**
   * Indicates whether or not someone joined the meeting using SIP.
   */
  has_sip?: boolean;
  /**
   * Indicates whether or not video was used in the meeting.
   */
  has_video?: boolean;
  /**
   * Indicates whether or not VoIP was used in the meeting.
   */
  has_voip?: boolean;
  /**
   * Host display name.
   */
  host?: string;
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  /**
   * The number of Zoom Room participants in the meeting.
   */
  in_room_participants?: number;
  /**
   * Meeting participant count.
   */
  participants?: number;
  /**
   * Meeting start time.
   */
  start_time?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * License type of the user.
   */
  user_type?: string;
  /**
   * Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
   */
  uuid?: string;
};

/**
 * List of meeting recording registrant
 */
export type MeetingRecordingRegistrantList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of Registrant objects
   */
  registrants?: Array<
    {
      id?: string;
    } & {
      /**
       * Registrant's address.
       */
      address?: string;
      /**
       * Registrant's city.
       */
      city?: string;
      /**
       * A field that allows registrants to provide any questions or comments that they might have.
       */
      comments?: string;
      /**
       * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
       */
      country?: string;
      /**
       * Custom questions.
       */
      custom_questions?: Array<{
        title?: string;
        value?: string;
      }>;
      /**
       * A valid email address of the registrant.
       */
      email: string;
      /**
       * Registrant's first name.
       */
      first_name: string;
      /**
       * Registrant's Industry.
       */
      industry?: string;
      /**
       * Registrant's job title.
       */
      job_title?: string;
      /**
       * Registrant's last name.
       */
      last_name?: string;
      /**
       * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
       */
      no_of_employees?: string;
      /**
       * Registrant's Organization.
       */
      org?: string;
      /**
       * Registrant's Phone number.
       */
      phone?: string;
      /**
       * This field can be included to gauge interest of webinar attendees towards buying your product or service.
       *
       * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
       */
      purchasing_time_frame?: string;
      /**
       * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
       */
      role_in_purchase_process?: string;
      /**
       * Registrant's State/Province.
       */
      state?: string;
      /**
       * Registrant's Zip/Postal Code.
       */
      zip?: string;
    }
  >;
};

/**
 *  Registrant.
 */
export type MeetingRegistrant = {
  /**
   * Registrant's address.
   */
  address?: string;
  /**
   * Registrant's city.
   */
  city?: string;
  /**
   * A field that allows registrants to provide any questions or comments that they might have.
   */
  comments?: string;
  /**
   * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
   */
  country?: string;
  /**
   * Custom questions.
   */
  custom_questions?: Array<{
    title?: string;
    value?: string;
  }>;
  /**
   * A valid email address of the registrant.
   */
  email: string;
  /**
   * Registrant's first name.
   */
  first_name: string;
  /**
   * Registrant's Industry.
   */
  industry?: string;
  /**
   * Registrant's job title.
   */
  job_title?: string;
  /**
   * Registrant's last name.
   */
  last_name?: string;
  /**
   * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
   */
  no_of_employees?: string;
  /**
   * Registrant's Organization.
   */
  org?: string;
  /**
   * Registrant's Phone number.
   */
  phone?: string;
  /**
   * This field can be included to gauge interest of webinar attendees towards buying your product or service.
   *
   * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
   */
  purchasing_time_frame?: string;
  /**
   * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
   */
  role_in_purchase_process?: string;
  /**
   * Registrant's State/Province.
   */
  state?: string;
  /**
   * Registrant's Zip/Postal Code.
   */
  zip?: string;
};

/**
 * List of users.
 */
export type MeetingRegistrantList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of registrant objects.
   */
  registrants?: Array<
    {
      /**
       * Registrant ID.
       */
      id?: string;
    } & {
      /**
       * Registrant's address.
       */
      address?: string;
      /**
       * Registrant's city.
       */
      city?: string;
      /**
       * A field that allows registrants to provide any questions or comments that they might have.
       */
      comments?: string;
      /**
       * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
       */
      country?: string;
      /**
       * Custom questions.
       */
      custom_questions?: Array<{
        title?: string;
        value?: string;
      }>;
      /**
       * A valid email address of the registrant.
       */
      email: string;
      /**
       * Registrant's first name.
       */
      first_name: string;
      /**
       * Registrant's Industry.
       */
      industry?: string;
      /**
       * Registrant's job title.
       */
      job_title?: string;
      /**
       * Registrant's last name.
       */
      last_name?: string;
      /**
       * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
       */
      no_of_employees?: string;
      /**
       * Registrant's Organization.
       */
      org?: string;
      /**
       * Registrant's Phone number.
       */
      phone?: string;
      /**
       * This field can be included to gauge interest of webinar attendees towards buying your product or service.
       *
       * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
       */
      purchasing_time_frame?: string;
      /**
       * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
       */
      role_in_purchase_process?: string;
      /**
       * Registrant's State/Province.
       */
      state?: string;
      /**
       * Registrant's Zip/Postal Code.
       */
      zip?: string;
    } & {
      /**
       * The time at which the registrant registered.
       */
      create_time?: string;
      /**
       * The URL using which an approved registrant can join the webinar.
       */
      join_url?: string;
      /**
       * The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar.
       */
      status?: string;
    }
  >;
};

/**
 * Meeting Registrant Questions
 */
export type MeetingRegistrantQuestions = {
  /**
   * Array of Registrant Custom Questions
   */
  custom_questions?: Array<{
    /**
     * Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer.
     */
    answers?: Array<string>;
    /**
     * Indicates whether or not the custom question is required to be answered by participants or not.
     */
    required?: boolean;
    /**
     * Title of the custom question.
     */
    title?: string;
    /**
     * Type of the question being asked.
     */
    type?: 'short' | 'single';
  }>;
  /**
   * Array of Registrant Questions
   */
  questions?: Array<{
    /**
     * Field name of the question.
     */
    field_name?:
      | 'address'
      | 'city'
      | 'country'
      | 'zip'
      | 'state'
      | 'phone'
      | 'industry'
      | 'org'
      | 'job_title'
      | 'purchasing_time_frame'
      | 'role_in_purchase_process'
      | 'no_of_employees'
      | 'comments';
    /**
     * Indicates whether or not the displayed fields are required to be filled out by registrants.
     */
    required?: boolean;
  }>;
};

export type MeetingSecuritySettings = {
  meeting_security?: {
    /**
     * `true`: Require that all meetings are secured with at least one security option.
     *
     * This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
     */
    auto_security?: boolean;
    /**
     * If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
     *
     */
    embed_password_in_join_link?: boolean;
    /**
     * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
     * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
     *
     * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
     */
    encryption_type?: 'enhanced_encryption' | 'e2ee';
    /**
     * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
     */
    end_to_end_encrypted_meetings?: boolean;
    /**
     * If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.
     */
    meeting_password?: boolean;
    /**
     * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
     */
    meeting_password_requirement?: {
      consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
      /**
       * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
       *
       */
      have_letter?: boolean;
      /**
       * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
       */
      have_number?: boolean;
      /**
       * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
       */
      have_special_character?: boolean;
      /**
       * If set to `true`, the passcode must include both uppercase and lowercase characters.
       */
      have_upper_and_lower_characters?: boolean;
      /**
       * The minimum length that the meeting/webinar passcode needs to have.
       */
      length?: number;
      /**
       * If set to `true`, the passcode must only contain numbers and no other characters.
       */
      only_allow_numeric?: boolean;
      /**
       * If set to `true`, users will be informed if the provided passcode is weak.
       */
      weak_enhance_detection?: boolean;
    };
    /**
     * Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.
     */
    phone_password?: boolean;
    /**
     * If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
     *
     */
    pmi_password?: boolean;
    /**
     * Require a passcode for meetings which have already been scheduled.
     *
     */
    require_password_for_scheduled_meeting?: boolean;
    /**
     * Require a passcode for webinars which have already been scheduled.
     *
     */
    require_password_for_scheduled_webinar?: boolean;
    /**
     * When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
     *
     */
    waiting_room?: boolean;
    /**
     * Specify the settings to be applied if waiting room is enabled.
     */
    waiting_room_settings?: {
      /**
       *
       *
       * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
       * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
       */
      participants_to_place_in_waiting_room?: 0 | 1 | 2;
      /**
       * Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
       * `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
       *
       *
       *
       */
      users_who_can_admit_participants_from_waiting_room?: number;
      /**
       * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
       */
      whitelisted_domains_for_waiting_room?: string;
    };
    /**
     * If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
     *
     */
    webinar_password?: boolean;
  };
};

/**
 *
 *
 * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
 * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
 */
export type participants_to_place_in_waiting_room = 0 | 1 | 2;

/**
 * Meeting settings.
 */
export type MeetingSettings = {
  /**
   * Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
   */
  allow_multiple_devices?: boolean;
  /**
   * Alternative host's emails or IDs: multiple values are separated by a semicolon.
   */
  alternative_hosts?: string;
  /**
   * Flag to determine whether to send email notifications to alternative hosts, default value is true.
   */
  alternative_hosts_email_notification?: boolean;
  /**
   * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
   *
   * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
   */
  approval_type?: 0 | 1 | 2;
  /**
   * Approve or block users from specific regions/countries from joining this meeting.
   *
   */
  approved_or_denied_countries_or_regions?: {
    /**
     * List of countries/regions from where participants can join this meeting.
     */
    approved_list?: Array<string>;
    /**
     * List of countries/regions from where participants can not join this meeting.
     */
    denied_list?: Array<string>;
    /**
     * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
     *
     * `false`: Setting disabled.
     */
    enable?: boolean;
    /**
     * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
     * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
     * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
     */
    method?: 'approve' | 'deny';
  };
  /**
   * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
   */
  audio?: 'both' | 'telephony' | 'voip';
  /**
   * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
   */
  authentication_domains?: string;
  /**
   * The participants added here will receive unique meeting invite links and bypass authentication.
   */
  authentication_exception?: Array<{
    /**
     * Email address of the participant.
     */
    email?: string;
    /**
     * Name of the participant.
     */
    name?: string;
  }>;
  /**
   * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
   */
  authentication_name?: string;
  /**
   * Meeting authentication option id.
   */
  authentication_option?: string;
  /**
   * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
   */
  auto_recording?: 'local' | 'cloud' | 'none';
  /**
   * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
   */
  breakout_room?: {
    /**
     * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
     */
    enable?: boolean;
    /**
     * Create room(s).
     */
    rooms?: Array<{
      /**
       * Name of the breakout room.
       */
      name?: string;
      /**
       * Email addresses of the participants who are to be assigned to the breakout room.
       */
      participants?: Array<string>;
    }>;
  };
  /**
   * Close registration after event date
   */
  close_registration?: boolean;
  /**
   * Host meeting in China.
   */
  cn_meeting?: boolean;
  /**
   * Contact email for registration
   */
  contact_email?: string;
  /**
   * Contact name for registration
   */
  contact_name?: string;
  /**
   * Custom keys and values assigned to the meeting.
   */
  custom_keys?: Array<{
    /**
     * Custom key associated with the user.
     */
    key?: string;
    /**
     * Value of the custom key associated with the user.
     */
    value?: string;
  }>;
  /**
   * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
   * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
   *
   * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
   */
  encryption_type?: 'enhanced_encryption' | 'e2ee';
  /**
   * Only signed in users can join this meeting.
   *
   * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
   */
  enforce_login?: boolean;
  /**
   * Only signed in users with specified domains can join meetings.
   *
   * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
   */
  enforce_login_domains?: string;
  /**
   * List of global dial-in countries
   */
  global_dial_in_countries?: Array<string>;
  /**
   * Global Dial-in Countries/Regions
   */
  global_dial_in_numbers?: Array<{
    /**
     * City of the number, if any. For example, Chicago.
     */
    city?: string;
    /**
     * Country code. For example, BR.
     */
    country?: string;
    /**
     * Full name of country. For example, Brazil.
     */
    country_name?: string;
    /**
     * Phone number. For example, +1 2332357613.
     */
    number?: string;
    /**
     * Type of number.
     */
    type?: 'toll' | 'tollfree';
  }>;
  /**
   * Start video when the host joins the meeting.
   */
  host_video?: boolean;
  /**
   * Host meeting in India.
   */
  in_meeting?: boolean;
  /**
   * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
   *
   * *  `0`: Allow participant to join anytime.
   * *  `5`: Allow participant to join 5 minutes before meeting start time.
   * * `10`: Allow participant to join 10 minutes before meeting start time.
   */
  jbh_time?: 0 | 5 | 10;
  /**
   * Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
   */
  join_before_host?: boolean;
  language_interpretation?: {
    enable?: boolean;
    /**
     * Information associated with the interpreter.
     */
    interpreters?: Array<{
      /**
       * Email address of the interpreter.
       */
      email?: string;
      /**
       * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
       *
       * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
       */
      languages?: string;
    }>;
  };
  /**
   * `true`- Only authenticated users can join meetings.
   */
  meeting_authentication?: boolean;
  /**
   * Mute participants upon entry.
   */
  mute_upon_entry?: boolean;
  /**
   * Start video when participants join the meeting.
   */
  participant_video?: boolean;
  /**
   * Send confirmation email to registrants upon successful registration.
   */
  registrants_confirmation_email?: boolean;
  /**
   * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
   */
  registrants_email_notification?: boolean;
  /**
   * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
   */
  registration_type?: 1 | 2 | 3;
  /**
   * Show social share buttons on the meeting registration page.
   * This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
   */
  show_share_button?: boolean;
  /**
   * Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
   */
  use_pmi?: boolean;
  /**
   * Enable waiting room
   */
  waiting_room?: boolean;
  /**
   * Add watermark when viewing a shared screen.
   */
  watermark?: boolean;
};

/**
 * Meeting object
 */
export type MeetingUpdate = {
  /**
   * Meeting description.
   */
  agenda?: string;
  /**
   * Meeting duration (minutes). Used for scheduled meetings only.
   */
  duration?: number;
  /**
   * Meeting passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ *] and can have a maximum of 10 characters.
   *
   * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
   */
  recurrence?: {
    /**
     * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
     *
     * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
     *
     *
     */
    repeat_interval?: number;
    /**
     * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
  };
  settings?: {
    /**
     * Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host's emails or IDs: multiple values are separated by a semicolon.
     */
    alternative_hosts?: string;
    /**
     * Flag to determine whether to send email notifications to alternative hosts, default value is true.
     */
    alternative_hosts_email_notification?: boolean;
    /**
     * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
     *
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Approve or block users from specific regions/countries from joining this meeting.
     *
     */
    approved_or_denied_countries_or_regions?: {
      /**
       * List of countries/regions from where participants can join this meeting.
       */
      approved_list?: Array<string>;
      /**
       * List of countries/regions from where participants can not join this meeting.
       */
      denied_list?: Array<string>;
      /**
       * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
       *
       * `false`: Setting disabled.
       */
      enable?: boolean;
      /**
       * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
       * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
       * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
       */
      method?: 'approve' | 'deny';
    };
    /**
     * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * The participants added here will receive unique meeting invite links and bypass authentication.
     */
    authentication_exception?: Array<{
      /**
       * Email address of the participant.
       */
      email?: string;
      /**
       * Name of the participant.
       */
      name?: string;
    }>;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Meeting authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
     */
    breakout_room?: {
      /**
       * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
       */
      enable?: boolean;
      /**
       * Create room(s).
       */
      rooms?: Array<{
        /**
         * Name of the breakout room.
         */
        name?: string;
        /**
         * Email addresses of the participants who are to be assigned to the breakout room.
         */
        participants?: Array<string>;
      }>;
    };
    /**
     * Close registration after event date
     */
    close_registration?: boolean;
    /**
     * Host meeting in China.
     */
    cn_meeting?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Custom keys and values assigned to the meeting.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the user.
       */
      key?: string;
      /**
       * Value of the custom key associated with the user.
       */
      value?: string;
    }>;
    /**
     * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
     * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
     *
     * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
     */
    encryption_type?: 'enhanced_encryption' | 'e2ee';
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login_domains?: string;
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Global Dial-in Countries/Regions
     */
    global_dial_in_numbers?: Array<{
      /**
       * City of the number, if any. For example, Chicago.
       */
      city?: string;
      /**
       * Country code. For example, BR.
       */
      country?: string;
      /**
       * Full name of country. For example, Brazil.
       */
      country_name?: string;
      /**
       * Phone number. For example, +1 2332357613.
       */
      number?: string;
      /**
       * Type of number.
       */
      type?: 'toll' | 'tollfree';
    }>;
    /**
     * Start video when the host joins the meeting.
     */
    host_video?: boolean;
    /**
     * Host meeting in India.
     */
    in_meeting?: boolean;
    /**
     * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
     *
     * *  `0`: Allow participant to join anytime.
     * *  `5`: Allow participant to join 5 minutes before meeting start time.
     * * `10`: Allow participant to join 10 minutes before meeting start time.
     */
    jbh_time?: 0 | 5 | 10;
    /**
     * Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
     */
    join_before_host?: boolean;
    language_interpretation?: {
      enable?: boolean;
      /**
       * Information associated with the interpreter.
       */
      interpreters?: Array<{
        /**
         * Email address of the interpreter.
         */
        email?: string;
        /**
         * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
         *
         * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
         */
        languages?: string;
      }>;
    };
    /**
     * `true`- Only authenticated users can join meetings.
     */
    meeting_authentication?: boolean;
    /**
     * Mute participants upon entry.
     */
    mute_upon_entry?: boolean;
    /**
     * Start video when participants join the meeting.
     */
    participant_video?: boolean;
    /**
     * Send confirmation email to registrants upon successful registration.
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the meeting registration page.
     * This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    show_share_button?: boolean;
    /**
     * Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
     */
    use_pmi?: boolean;
    /**
     * Enable waiting room
     */
    waiting_room?: boolean;
    /**
     * Add watermark when viewing a shared screen.
     */
    watermark?: boolean;
  } & {
    /**
     * Send confirmation Email to Registrants
     */
    registrants_confirmation_email?: boolean;
  };
  /**
   * Meeting start time. When using a format like "yyyy-MM-dd'T'HH:mm:ss'Z'", always use GMT time. When using a format like "yyyy-MM-dd'T'HH:mm:ss", you should use local time and  specify the time zone. Only used for scheduled meetings and recurring meetings with a fixed time.
   */
  start_time?: string;
  /**
   * Unique identifier of the meeting template.
   *
   * Use this field if you would like to [schedule the meeting from a meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb). You can retrieve the value of this field by calling the [List meeting templates]() API.
   */
  template_id?: string;
  /**
   * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.
   */
  timezone?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field?: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with a fixed time.
   */
  type?: 1 | 2 | 3 | 8;
};

/**
 * Occurence object. This object is only returned for Recurring Webinars.
 */
export type Occurrence = {
  /**
   * Duration.
   */
  duration?: number;
  /**
   * Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences.
   */
  occurrence_id?: string;
  /**
   * Start time.
   */
  start_time?: string;
  /**
   * Occurrence status.
   */
  status?: string;
};

/**
 * Array of occurrence objects.
 */
export type Occurrences = Array<{
  /**
   * Duration.
   */
  duration?: number;
  /**
   * Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences.
   */
  occurrence_id?: string;
  /**
   * Start time.
   */
  start_time?: string;
  /**
   * Occurrence status.
   */
  status?: string;
}>;

/**
 * List of PAC accounts.
 */
export type PAC = {
  /**
   * Conference ID.
   */
  conference_id?: number;
  /**
   * List of dedicated dial-in numbers.
   */
  dedicated_dial_in_number?: Array<{
    /**
     * Country code.
     */
    country?: string;
    /**
     * Dial-in number: length is less than 16.
     */
    number?: string;
  }>;
  /**
   * List of global dial-in numbers.
   */
  global_dial_in_numbers?: Array<{
    /**
     * Country code.
     */
    country?: string;
    /**
     * Dial-in number: length is less than 16.
     */
    number?: string;
  }>;
  /**
   * Listen-Only passcode: numeric value - length is less than 6.
   */
  listen_only_password?: string;
  /**
   * Participant passcode: numeric value - length is less than 6.
   */
  participant_password?: string;
};

/**
 * Pagination Object.
 */
export type Pagination = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
};

/**
 * Pagination object.
 */
export type PaginationToken = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
};

/**
 * Pagination object.
 */
export type PaginationToken4IMChat = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The amount of records returns within a single API call.
   */
  page_size?: number;
};

/**
 * Pagination object.
 */
export type PaginationToken4Qos = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of items per page.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
};

/**
 * Panelist base object.
 */
export type Panelist = {
  /**
   * Panelist's email.
   */
  email?: string;
  /**
   * Panelist's full name.
   */
  name?: string;
};

/**
 * List of panelists.
 */
export type PanelistList = {
  /**
   * List of panelist objects.
   */
  panelists?: Array<
    {
      /**
       * Panelist's ID.
       */
      id?: string;
    } & {
      /**
       * Panelist's email.
       */
      email?: string;
      /**
       * Panelist's full name.
       */
      name?: string;
    } & {
      /**
       * Join URL.
       */
      join_url?: string;
    }
  >;
  /**
   * Total records.
   */
  total_records?: number;
};

/**
 * Phone Plan Object
 */
export type PhonePlan = {
  /**
   * Additional phone base plans.
   */
  plan_base?: {
    /**
     * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
     */
    callout_countries?: string;
    /**
     * Additional phone base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
     */
    type?: string;
  };
  /**
   * Additional phone calling plans.
   */
  plan_calling?: Array<{
    hosts?: number;
    /**
     * Additional phone calling <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
     */
    type?: string;
  }>;
  /**
   * Additional phone number plans.
   */
  plan_number?: Array<{
    hosts?: number;
    /**
     * Additional phone number <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
     */
    type?: string;
  }>;
};

/**
 * Poll
 */
export type Poll = {
  /**
   * Array of Polls
   */
  questions?: Array<{
    /**
     * Answers to the questions
     */
    answers?: Array<string>;
    /**
     * Question to be asked to the attendees.
     */
    name?: string;
    /**
     * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
     */
    type?: 'single' | 'multiple';
  }>;
  /**
   * Title for the poll.
   */
  title?: string;
};

/**
 * Poll List
 */
export type PollList = {
  /**
   * Array of Polls
   */
  polls?: Array<
    {
      /**
       * ID of Poll
       */
      id?: string;
      /**
       * Status of Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
       */
      status?: 'notstart' | 'started' | 'ended' | 'sharing';
    } & {
      /**
       * Array of Polls
       */
      questions?: Array<{
        /**
         * Answers to the questions
         */
        answers?: Array<string>;
        /**
         * Question to be asked to the attendees.
         */
        name?: string;
        /**
         * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
         */
        type?: 'single' | 'multiple';
      }>;
      /**
       * Title for the poll.
       */
      title?: string;
    }
  >;
  /**
   * The number of all records available across pages
   */
  total_records?: number;
};

export type Profile = {
  recording_storage_location?: {
    /**
     * Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.
     *
     * Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
     */
    allowed_values?: Array<string>;
    /**
     * Abbreviated country code.
     */
    value?: string;
  };
};

/**
 * Quality of Service object.
 */
export type QOSAudio = {
  /**
   * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
   */
  avg_loss?: string;
  /**
   * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
   */
  bitrate?: string;
  /**
   * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
   */
  jitter?: string;
  /**
   * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
   */
  latency?: string;
  /**
   * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
   */
  max_loss?: string;
};

/**
 * Participant QOS.
 */
export type QOSParticipant = {
  /**
   * The type of device using which the participant joined the meeting.
   */
  device?: string;
  /**
   * Participant's PC domain.
   */
  domain?: string;
  /**
   * Participant's hard disk ID.
   */
  harddisk_id?: string;
  /**
   * Participant's IP address.
   */
  ip_address?: string;
  /**
   * The time at which participant joined the meeting.
   */
  join_time?: string;
  /**
   * The time at which participant left the meeting.
   */
  leave_time?: string;
  /**
   * Participant's location.
   */
  location?: string;
  /**
   * Participant's MAC address.
   */
  mac_addr?: string;
  /**
   * Participant's PC name.
   */
  pc_name?: string;
  /**
   * Participant ID.
   */
  user_id?: string;
  /**
   * Participant display name.
   */
  user_name?: string;
  /**
   * Quality of service provided to the user.
   */
  user_qos?: Array<{
    /**
     * QoS metrics on screen shares by a participant who joined the meeting via a Cloud Room Connector.
     */
    as_device_from_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * QoS metrics on screen shares output being received by a participant who joined the meeting via a Cloud Room Connector.
     */
    as_device_to_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of service object.
     */
    as_input?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
    /**
     * Quality of service object.
     */
    as_output?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
    /**
     * QoS metrics on audio being sent by a participant who joined the meeting via a Cloud Room Connector.
     */
    audio_device_from_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * QoS metrics on audio received by a participant who joined the meeting via a Cloud Room Connector.
     */
    audio_device_to_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of Service object.
     */
    audio_input?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of Service object.
     */
    audio_output?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    cpu_usage?: {
      /**
       * System Maximum CPU Usage
       */
      system_max_cpu_usage?: string;
      /**
       * Zoom Average CPU Usage
       */
      zoom_avg_cpu_usage?: string;
      /**
       * Zoom Maximum CPU Usage
       */
      zoom_max_cpu_usage?: string;
      /**
       * Zoom Minimum CPU Usage
       */
      zoom_min_cpu_usage?: string;
    };
    /**
     * Date-time of QOS
     */
    date_time?: string;
    /**
     * QoS metrics on video input being sent from a Cloud Room Connector used by the participant to join the meeting.
     */
    video_device_from_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * QoS metrics on video output received by a participant who joined the meeting via a Cloud Room Connector.
     */
    video_device_to_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of service object.
     */
    video_input?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
    /**
     * Quality of service object.
     */
    video_output?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
  }>;
  /**
   * Participant's Zoom Client version.
   */
  version?: string;
};

/**
 * Participant QOS list.
 */
export type QOSParticipantList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of items per page.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of user objects.
   */
  participants?: Array<{
    /**
     * The type of device using which the participant joined the meeting.
     */
    device?: string;
    /**
     * Participant's PC domain.
     */
    domain?: string;
    /**
     * Participant's hard disk ID.
     */
    harddisk_id?: string;
    /**
     * Participant's IP address.
     */
    ip_address?: string;
    /**
     * The time at which participant joined the meeting.
     */
    join_time?: string;
    /**
     * The time at which participant left the meeting.
     */
    leave_time?: string;
    /**
     * Participant's location.
     */
    location?: string;
    /**
     * Participant's MAC address.
     */
    mac_addr?: string;
    /**
     * Participant's PC name.
     */
    pc_name?: string;
    /**
     * Participant ID.
     */
    user_id?: string;
    /**
     * Participant display name.
     */
    user_name?: string;
    /**
     * Quality of service provided to the user.
     */
    user_qos?: Array<{
      /**
       * QoS metrics on screen shares by a participant who joined the meeting via a Cloud Room Connector.
       */
      as_device_from_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * QoS metrics on screen shares output being received by a participant who joined the meeting via a Cloud Room Connector.
       */
      as_device_to_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of service object.
       */
      as_input?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
      /**
       * Quality of service object.
       */
      as_output?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
      /**
       * QoS metrics on audio being sent by a participant who joined the meeting via a Cloud Room Connector.
       */
      audio_device_from_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * QoS metrics on audio received by a participant who joined the meeting via a Cloud Room Connector.
       */
      audio_device_to_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of Service object.
       */
      audio_input?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of Service object.
       */
      audio_output?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      cpu_usage?: {
        /**
         * System Maximum CPU Usage
         */
        system_max_cpu_usage?: string;
        /**
         * Zoom Average CPU Usage
         */
        zoom_avg_cpu_usage?: string;
        /**
         * Zoom Maximum CPU Usage
         */
        zoom_max_cpu_usage?: string;
        /**
         * Zoom Minimum CPU Usage
         */
        zoom_min_cpu_usage?: string;
      };
      /**
       * Date-time of QOS
       */
      date_time?: string;
      /**
       * QoS metrics on video input being sent from a Cloud Room Connector used by the participant to join the meeting.
       */
      video_device_from_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * QoS metrics on video output received by a participant who joined the meeting via a Cloud Room Connector.
       */
      video_device_to_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of service object.
       */
      video_input?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
      /**
       * Quality of service object.
       */
      video_output?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
    }>;
    /**
     * Participant's Zoom Client version.
     */
    version?: string;
  }>;
};

/**
 * Quality of service object.
 */
export type QOSVideo = {
  /**
   * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
   */
  avg_loss?: string;
  /**
   * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
   */
  bitrate?: string;
  /**
   * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
   */
  jitter?: string;
  /**
   * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
   */
  latency?: string;
  /**
   * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
   */
  max_loss?: string;
} & {
  /**
   * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
   */
  frame_rate?: string;
  /**
   * The number of pixels in each dimension that can be displayed by your video camera.
   */
  resolution?: string;
};

/**
 * Quality of Service object.
 */
export type QoSPhone = {
  /**
   * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
   */
  avg_loss?: string;
  /**
   * The number of bits per second that can be transmitted along a digital network.
   */
  bitrate?: string;
  /**
   * The variation in the delay of received packets.
   */
  jitter?: string;
  /**
   * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
   */
  max_loss?: string;
  /**
   * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
   */
  mos?: string;
  /**
   * The amount of time it takes for a VoIP packet to travel from one point to another.
   */
  network_delay?: string;
};

/**
 * Recording file object.
 */
export type Recording = {
  /**
   * The time at which recording was deleted. Returned in the response only for trash query.
   */
  deleted_time?: string;
  /**
   * The URL using which the recording file can be downloaded. **To access a private or password protected cloud recording of a user in your account, you can use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example.**
   * <br>
   * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`
   *
   * **Similarly, if the user has installed your OAuth app that contains recording scope(s), you can also use the user's [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the Cloud Recording.**<br>
   *
   * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ OAuth Access Token }}`
   *
   *
   */
  download_url?: string;
  /**
   * The recording file size.
   */
  file_size?: number;
  /**
   * The recording file type. The value of this field could be one of the following:<br>
   * `MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording in JSON file format. To get a timeline file, the "Add a timestamp to the recording" setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.
   * <br> `TRANSCRIPT`: Transcription file of the recording in VTT format.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording in VTT file format.<br>`CSV`: File containing polling data in csv format.
   *
   * <br>
   *
   * A recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>
   * `id`, `status`, `file_size`, `recording_type`, and `play_url`.
   */
  file_type?: string;
  /**
   * The recording file ID. Included in the response of general query.
   */
  id?: string;
  /**
   * The meeting ID.
   */
  meeting_id?: string;
  /**
   * The URL using which a recording file can be played.
   */
  play_url?: string;
  /**
   * The recording end time. Response in general query.
   */
  recording_end?: string;
  /**
   * The recording start time.
   */
  recording_start?: string;
  /**
   * The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`active_speaker`<br>`poll`
   */
  recording_type?: string;
  /**
   * The recording status.
   */
  status?: 'completed';
};

/**
 * The recording status.
 */
export type status2 = 'completed';

/**
 * List of recording file.
 */
export type RecordingList = {
  /**
   * List of recording file.
   */
  recording_files?: Array<{
    /**
     * The time at which recording was deleted. Returned in the response only for trash query.
     */
    deleted_time?: string;
    /**
     * The URL using which the recording file can be downloaded. **To access a private or password protected cloud recording of a user in your account, you can use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example.**
     * <br>
     * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`
     *
     * **Similarly, if the user has installed your OAuth app that contains recording scope(s), you can also use the user's [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the Cloud Recording.**<br>
     *
     * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ OAuth Access Token }}`
     *
     *
     */
    download_url?: string;
    /**
     * The recording file size.
     */
    file_size?: number;
    /**
     * The recording file type. The value of this field could be one of the following:<br>
     * `MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording in JSON file format. To get a timeline file, the "Add a timestamp to the recording" setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.
     * <br> `TRANSCRIPT`: Transcription file of the recording in VTT format.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording in VTT file format.<br>`CSV`: File containing polling data in csv format.
     *
     * <br>
     *
     * A recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>
     * `id`, `status`, `file_size`, `recording_type`, and `play_url`.
     */
    file_type?: string;
    /**
     * The recording file ID. Included in the response of general query.
     */
    id?: string;
    /**
     * The meeting ID.
     */
    meeting_id?: string;
    /**
     * The URL using which a recording file can be played.
     */
    play_url?: string;
    /**
     * The recording end time. Response in general query.
     */
    recording_end?: string;
    /**
     * The recording start time.
     */
    recording_start?: string;
    /**
     * The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`active_speaker`<br>`poll`
     */
    recording_type?: string;
    /**
     * The recording status.
     */
    status?: 'completed';
  }>;
};

/**
 * The recording meeting object.
 */
export type RecordingMeeting = {
  /**
   * Unique Identifier of the user account.
   */
  account_id?: string;
  /**
   * Meeting duration.
   */
  duration?: number;
  /**
   * ID of the user set as host of meeting.
   */
  host_id?: string;
  /**
   * Meeting ID - also known as the meeting number.
   */
  id?: string;
  /**
   * Number of recording files returned in the response of this API call.
   */
  recording_count?: string;
  /**
   * The time at which the meeting started.
   */
  start_time?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Total size of the recording.
   */
  total_size?: string;
  /**
   * Type of the meeting that was recorded.
   *
   * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
   */
  type?: string;
  /**
   * Unique Meeting Identifier. Each instance of the meeting will have its own UUID.
   */
  uuid?: string;
} & {
  /**
   * List of recording file.
   */
  recording_files?: Array<{
    /**
     * The time at which recording was deleted. Returned in the response only for trash query.
     */
    deleted_time?: string;
    /**
     * The URL using which the recording file can be downloaded. **To access a private or password protected cloud recording of a user in your account, you can use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example.**
     * <br>
     * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`
     *
     * **Similarly, if the user has installed your OAuth app that contains recording scope(s), you can also use the user's [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the Cloud Recording.**<br>
     *
     * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ OAuth Access Token }}`
     *
     *
     */
    download_url?: string;
    /**
     * The recording file size.
     */
    file_size?: number;
    /**
     * The recording file type. The value of this field could be one of the following:<br>
     * `MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording in JSON file format. To get a timeline file, the "Add a timestamp to the recording" setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.
     * <br> `TRANSCRIPT`: Transcription file of the recording in VTT format.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording in VTT file format.<br>`CSV`: File containing polling data in csv format.
     *
     * <br>
     *
     * A recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>
     * `id`, `status`, `file_size`, `recording_type`, and `play_url`.
     */
    file_type?: string;
    /**
     * The recording file ID. Included in the response of general query.
     */
    id?: string;
    /**
     * The meeting ID.
     */
    meeting_id?: string;
    /**
     * The URL using which a recording file can be played.
     */
    play_url?: string;
    /**
     * The recording end time. Response in general query.
     */
    recording_end?: string;
    /**
     * The recording start time.
     */
    recording_start?: string;
    /**
     * The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`active_speaker`<br>`poll`
     */
    recording_type?: string;
    /**
     * The recording status.
     */
    status?: 'completed';
  }>;
};

/**
 * List of recordings.
 */
export type RecordingMeetingList = {
  /**
   * Start Date.
   */
  from?: string;
  /**
   * End Date.
   */
  to?: string;
} & {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of recordings.
   */
  meetings?: Array<
    {
      /**
       * Unique Identifier of the user account.
       */
      account_id?: string;
      /**
       * Meeting duration.
       */
      duration?: number;
      /**
       * ID of the user set as host of meeting.
       */
      host_id?: string;
      /**
       * Meeting ID - also known as the meeting number.
       */
      id?: string;
      /**
       * Number of recording files returned in the response of this API call.
       */
      recording_count?: string;
      /**
       * The time at which the meeting started.
       */
      start_time?: string;
      /**
       * Meeting topic.
       */
      topic?: string;
      /**
       * Total size of the recording.
       */
      total_size?: string;
      /**
       * Type of the meeting that was recorded.
       *
       * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
       */
      type?: string;
      /**
       * Unique Meeting Identifier. Each instance of the meeting will have its own UUID.
       */
      uuid?: string;
    } & {
      /**
       * List of recording file.
       */
      recording_files?: Array<{
        /**
         * The time at which recording was deleted. Returned in the response only for trash query.
         */
        deleted_time?: string;
        /**
         * The URL using which the recording file can be downloaded. **To access a private or password protected cloud recording of a user in your account, you can use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example.**
         * <br>
         * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`
         *
         * **Similarly, if the user has installed your OAuth app that contains recording scope(s), you can also use the user's [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the Cloud Recording.**<br>
         *
         * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ OAuth Access Token }}`
         *
         *
         */
        download_url?: string;
        /**
         * The recording file size.
         */
        file_size?: number;
        /**
         * The recording file type. The value of this field could be one of the following:<br>
         * `MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording in JSON file format. To get a timeline file, the "Add a timestamp to the recording" setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.
         * <br> `TRANSCRIPT`: Transcription file of the recording in VTT format.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording in VTT file format.<br>`CSV`: File containing polling data in csv format.
         *
         * <br>
         *
         * A recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>
         * `id`, `status`, `file_size`, `recording_type`, and `play_url`.
         */
        file_type?: string;
        /**
         * The recording file ID. Included in the response of general query.
         */
        id?: string;
        /**
         * The meeting ID.
         */
        meeting_id?: string;
        /**
         * The URL using which a recording file can be played.
         */
        play_url?: string;
        /**
         * The recording end time. Response in general query.
         */
        recording_end?: string;
        /**
         * The recording start time.
         */
        recording_start?: string;
        /**
         * The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`active_speaker`<br>`poll`
         */
        recording_type?: string;
        /**
         * The recording status.
         */
        status?: 'completed';
      }>;
    }
  >;
};

/**
 * List of Recording Registration
 */
export type RecordingRegistrantList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of Registrant objects
   */
  registrants?: Array<
    {
      id?: string;
    } & {
      /**
       * Registrant's address.
       */
      address?: string;
      /**
       * Registrant's city.
       */
      city?: string;
      /**
       * A field that allows registrants to provide any questions or comments that they might have.
       */
      comments?: string;
      /**
       * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
       */
      country?: string;
      /**
       * Custom questions.
       */
      custom_questions?: Array<{
        title?: string;
        value?: string;
      }>;
      /**
       * A valid email address of the registrant.
       */
      email: string;
      /**
       * Registrant's first name.
       */
      first_name: string;
      /**
       * Registrant's Industry.
       */
      industry?: string;
      /**
       * Registrant's job title.
       */
      job_title?: string;
      /**
       * Registrant's last name.
       */
      last_name?: string;
      /**
       * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
       */
      no_of_employees?: string;
      /**
       * Registrant's Organization.
       */
      org?: string;
      /**
       * Registrant's Phone number.
       */
      phone?: string;
      /**
       * This field can be included to gauge interest of webinar attendees towards buying your product or service.
       *
       * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
       */
      purchasing_time_frame?: string;
      /**
       * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
       */
      role_in_purchase_process?: string;
      /**
       * Registrant's State/Province.
       */
      state?: string;
      /**
       * Registrant's Zip/Postal Code.
       */
      zip?: string;
    }
  >;
};

/**
 * Recording Registrant Questions
 */
export type RecordingRegistrantQuestions = {
  /**
   * Array of Registrant Custom Questions
   */
  custom_questions?: Array<{
    /**
     * Answer choices for the question. Can not be used with Short answer type.
     */
    answers?: Array<string>;
    /**
     * State whether registrants are required to answer custom questions or not.
     */
    required?: boolean;
    /**
     * Title of the question.
     */
    title?: string;
    /**
     * The type of registration question and answers.
     */
    type?: 'short' | 'single' | 'multiple';
  }>;
  /**
   * Array of Registrant Questions
   */
  questions?: Array<{
    /**
     * Field name.
     */
    field_name?:
      | 'last_name'
      | 'address'
      | 'city'
      | 'country'
      | 'zip'
      | 'state'
      | 'phone'
      | 'industry'
      | 'org'
      | 'job_title'
      | 'purchasing_time_frame'
      | 'role_in_purchase_process'
      | 'no_of_employees'
      | 'comments';
    /**
     * State whether the field is required to be answered by the registrant or not.
     */
    required?: boolean;
  }>;
};

/**
 * Registrant Status
 */
export type RecordingRegistrantStatus = {
  action: 'approve' | 'deny';
  /**
   * List of registrants
   */
  registrants?: Array<{
    id?: string;
  }>;
};

export type action4 = 'approve' | 'deny';

export type RecordingSettings = {
  /**
   * Approval type for the registration.<br>
   * `0`- Automatically approve the registration when a user registers.<br>
   * `1` - Manually approve or deny the registration of a user.<br>
   * `2` - No registration required to view the recording.
   */
  approval_type?: 0 | 1 | 2;
  /**
   * Authentication domains.
   */
  authentication_domains?: string;
  /**
   * Authentication Options.
   */
  authentication_option?: string;
  /**
   * Determine whether registration  isrequired to view the recording.
   */
  on_demand?: boolean;
  /**
   * Enable password protection for the recording by setting a password. The password must have a minimum of **eight** characters with a mix of numbers, letters and special characters.<br><br>
   * **Note:** If the account owner or the admin has set minimum password strength requirements for recordings via Account Settings, the password value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
   */
  password?: string;
  /**
   * Only authenticated users can view.
   */
  recording_authentication?: boolean;
  /**
   * Send an email to host when someone registers to view the recording. This applies for On-demand recordings only.
   */
  send_email_to_host?: boolean;
  /**
   * Determine how the meeting recording is shared.
   */
  share_recording?: 'publicly' | 'internally' | 'none';
  /**
   * Show social share buttons on registration page. This applies for On-demand recordings only.
   */
  show_social_share_buttons?: boolean;
  /**
   * Name of the recording.
   */
  topic?: string;
  /**
   * Determine whether a viewer can download the recording file or not.
   */
  viewer_download?: boolean;
};

/**
 * Determine how the meeting recording is shared.
 */
export type share_recording = 'publicly' | 'internally' | 'none';

/**
 * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
 */
export type Recurrence = {
  /**
   * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
   */
  end_date_time?: string;
  /**
   * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
   */
  end_times?: number;
  /**
   * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
   *
   * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
   */
  monthly_day?: number;
  /**
   * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
   */
  monthly_week?: -1 | 1 | 2 | 3 | 4;
  /**
   * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
   *
   * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
   */
  monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
  /**
   * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
   *
   * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
   *
   *
   */
  repeat_interval?: number;
  /**
   * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
   */
  type: 1 | 2 | 3;
  /**
   * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
   *
   * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
   */
  weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
};

/**
 * Registrant base object.
 */
export type Registrant = {
  /**
   * Registrant's address.
   */
  address?: string;
  /**
   * Registrant's city.
   */
  city?: string;
  /**
   * A field that allows registrants to provide any questions or comments that they might have.
   */
  comments?: string;
  /**
   * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
   */
  country?: string;
  /**
   * Custom questions.
   */
  custom_questions?: Array<{
    title?: string;
    value?: string;
  }>;
  /**
   * A valid email address of the registrant.
   */
  email: string;
  /**
   * Registrant's first name.
   */
  first_name: string;
  /**
   * Registrant's Industry.
   */
  industry?: string;
  /**
   * Registrant's job title.
   */
  job_title?: string;
  /**
   * Registrant's last name.
   */
  last_name?: string;
  /**
   * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
   */
  no_of_employees?: string;
  /**
   * Registrant's Organization.
   */
  org?: string;
  /**
   * Registrant's Phone number.
   */
  phone?: string;
  /**
   * This field can be included to gauge interest of webinar attendees towards buying your product or service.
   *
   * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
   */
  purchasing_time_frame?: string;
  /**
   * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
   */
  role_in_purchase_process?: string;
  /**
   * Registrant's State/Province.
   */
  state?: string;
  /**
   * Registrant's Zip/Postal Code.
   */
  zip?: string;
};

/**
 * List of users.
 */
export type RegistrantList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of registrant objects.
   */
  registrants?: Array<
    {
      /**
       * Registrant ID.
       */
      id?: string;
    } & {
      /**
       * Registrant's address.
       */
      address?: string;
      /**
       * Registrant's city.
       */
      city?: string;
      /**
       * A field that allows registrants to provide any questions or comments that they might have.
       */
      comments?: string;
      /**
       * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
       */
      country?: string;
      /**
       * Custom questions.
       */
      custom_questions?: Array<{
        title?: string;
        value?: string;
      }>;
      /**
       * A valid email address of the registrant.
       */
      email: string;
      /**
       * Registrant's first name.
       */
      first_name: string;
      /**
       * Registrant's Industry.
       */
      industry?: string;
      /**
       * Registrant's job title.
       */
      job_title?: string;
      /**
       * Registrant's last name.
       */
      last_name?: string;
      /**
       * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
       */
      no_of_employees?: string;
      /**
       * Registrant's Organization.
       */
      org?: string;
      /**
       * Registrant's Phone number.
       */
      phone?: string;
      /**
       * This field can be included to gauge interest of webinar attendees towards buying your product or service.
       *
       * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
       */
      purchasing_time_frame?: string;
      /**
       * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
       */
      role_in_purchase_process?: string;
      /**
       * Registrant's State/Province.
       */
      state?: string;
      /**
       * Registrant's Zip/Postal Code.
       */
      zip?: string;
    } & {
      /**
       * The time at which the registrant registered.
       */
      create_time?: string;
      /**
       * The URL using which an approved registrant can join the webinar.
       */
      join_url?: string;
      /**
       * The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar.
       */
      status?: string;
    }
  >;
};

export type RegistrantStatus = {
  /**
   * Registrant Status:<br>`approve` - Approve registrant.<br>`cancel` - Cancel previously approved registrant's registration.<br>`deny` - Deny registrant.
   */
  action: 'approve' | 'cancel' | 'deny';
  /**
   * List of registrants.
   */
  registrants?: Array<{
    email?: string;
    id?: string;
  }>;
};

/**
 * Registrant Status:<br>`approve` - Approve registrant.<br>`cancel` - Cancel previously approved registrant's registration.<br>`deny` - Deny registrant.
 */
export type action5 = 'approve' | 'cancel' | 'deny';

/**
 * List of Roles
 */
export type RoleList = {
  /**
   * List of Roles objects
   */
  roles?: Array<{
    /**
     * Role Description
     */
    description?: string;
    /**
     * Role Id
     */
    id?: string;
    /**
     * Role Name
     */
    name?: string;
    /**
     * Total members in this role
     */
    total_members?: number;
  }>;
  /**
   * The number of all records available across pages
   */
  total_records?: number;
};

/**
 * Add Role Members
 */
export type RoleMembersAdd = {
  /**
   * List of Role's members
   */
  members?: Array<{
    /**
     * User email address. Must have id or email, if given id, the email is ignored.
     */
    email?: string;
    /**
     * User ID
     */
    id?: string;
  }>;
};

/**
 * List of a Role Members
 */
export type RoleMembersList = {
  /**
   * List of a Role Members
   */
  members?: Array<{
    /**
     * Member Department
     */
    department?: string;
    /**
     * Member Email
     */
    email?: string;
    /**
     * Member First Name
     */
    first_name?: string;
    /**
     * Member ID
     */
    id?: string;
    /**
     * Member Last Name
     */
    last_name?: string;
    /**
     * Member Type
     */
    type?: number;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
};

/**
 * Base object for sessions.
 */
export type Session = {
  /**
   * Meeting description.
   */
  agenda?: string;
  /**
   * Meeting duration (minutes). Used for scheduled meetings only.
   */
  duration?: number;
  /**
   * Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
   */
  recurrence?: {
    /**
     * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
     *
     * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
     *
     *
     */
    repeat_interval?: number;
    /**
     * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
  };
  /**
   * Meeting settings.
   */
  settings?: {
    /**
     * Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host's emails or IDs: multiple values are separated by a semicolon.
     */
    alternative_hosts?: string;
    /**
     * Flag to determine whether to send email notifications to alternative hosts, default value is true.
     */
    alternative_hosts_email_notification?: boolean;
    /**
     * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
     *
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Approve or block users from specific regions/countries from joining this meeting.
     *
     */
    approved_or_denied_countries_or_regions?: {
      /**
       * List of countries/regions from where participants can join this meeting.
       */
      approved_list?: Array<string>;
      /**
       * List of countries/regions from where participants can not join this meeting.
       */
      denied_list?: Array<string>;
      /**
       * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
       *
       * `false`: Setting disabled.
       */
      enable?: boolean;
      /**
       * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
       * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
       * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
       */
      method?: 'approve' | 'deny';
    };
    /**
     * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * The participants added here will receive unique meeting invite links and bypass authentication.
     */
    authentication_exception?: Array<{
      /**
       * Email address of the participant.
       */
      email?: string;
      /**
       * Name of the participant.
       */
      name?: string;
    }>;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Meeting authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
     */
    breakout_room?: {
      /**
       * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
       */
      enable?: boolean;
      /**
       * Create room(s).
       */
      rooms?: Array<{
        /**
         * Name of the breakout room.
         */
        name?: string;
        /**
         * Email addresses of the participants who are to be assigned to the breakout room.
         */
        participants?: Array<string>;
      }>;
    };
    /**
     * Close registration after event date
     */
    close_registration?: boolean;
    /**
     * Host meeting in China.
     */
    cn_meeting?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Custom keys and values assigned to the meeting.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the user.
       */
      key?: string;
      /**
       * Value of the custom key associated with the user.
       */
      value?: string;
    }>;
    /**
     * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
     * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
     *
     * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
     */
    encryption_type?: 'enhanced_encryption' | 'e2ee';
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login_domains?: string;
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Global Dial-in Countries/Regions
     */
    global_dial_in_numbers?: Array<{
      /**
       * City of the number, if any. For example, Chicago.
       */
      city?: string;
      /**
       * Country code. For example, BR.
       */
      country?: string;
      /**
       * Full name of country. For example, Brazil.
       */
      country_name?: string;
      /**
       * Phone number. For example, +1 2332357613.
       */
      number?: string;
      /**
       * Type of number.
       */
      type?: 'toll' | 'tollfree';
    }>;
    /**
     * Start video when the host joins the meeting.
     */
    host_video?: boolean;
    /**
     * Host meeting in India.
     */
    in_meeting?: boolean;
    /**
     * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
     *
     * *  `0`: Allow participant to join anytime.
     * *  `5`: Allow participant to join 5 minutes before meeting start time.
     * * `10`: Allow participant to join 10 minutes before meeting start time.
     */
    jbh_time?: 0 | 5 | 10;
    /**
     * Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
     */
    join_before_host?: boolean;
    language_interpretation?: {
      enable?: boolean;
      /**
       * Information associated with the interpreter.
       */
      interpreters?: Array<{
        /**
         * Email address of the interpreter.
         */
        email?: string;
        /**
         * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
         *
         * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
         */
        languages?: string;
      }>;
    };
    /**
     * `true`- Only authenticated users can join meetings.
     */
    meeting_authentication?: boolean;
    /**
     * Mute participants upon entry.
     */
    mute_upon_entry?: boolean;
    /**
     * Start video when participants join the meeting.
     */
    participant_video?: boolean;
    /**
     * Send confirmation email to registrants upon successful registration.
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the meeting registration page.
     * This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    show_share_button?: boolean;
    /**
     * Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
     */
    use_pmi?: boolean;
    /**
     * Enable waiting room
     */
    waiting_room?: boolean;
    /**
     * Add watermark when viewing a shared screen.
     */
    watermark?: boolean;
  };
  /**
   * Meeting start time. When using a format like "yyyy-MM-dd'T'HH:mm:ss'Z'", always use GMT time. When using a format like "yyyy-MM-dd'T'HH:mm:ss", you should use local time and specify the time zone. This is only used for scheduled meetings and recurring meetings with a fixed time.
   */
  start_time?: string;
  /**
   * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats.
   */
  timezone?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field?: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Meeting Type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
   */
  type?: 1 | 2 | 3 | 8;
};

/**
 * Base object for sessions.
 */
export type SessionUpdate = {
  /**
   * Meeting description.
   */
  agenda?: string;
  /**
   * Meeting duration (minutes). Used for scheduled meetings only.
   */
  duration?: number;
  /**
   * Meeting passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ *] and can have a maximum of 10 characters.
   *
   * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
   */
  recurrence?: {
    /**
     * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
     *
     * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
     *
     *
     */
    repeat_interval?: number;
    /**
     * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
  };
  settings?: {
    /**
     * Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host's emails or IDs: multiple values are separated by a semicolon.
     */
    alternative_hosts?: string;
    /**
     * Flag to determine whether to send email notifications to alternative hosts, default value is true.
     */
    alternative_hosts_email_notification?: boolean;
    /**
     * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
     *
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Approve or block users from specific regions/countries from joining this meeting.
     *
     */
    approved_or_denied_countries_or_regions?: {
      /**
       * List of countries/regions from where participants can join this meeting.
       */
      approved_list?: Array<string>;
      /**
       * List of countries/regions from where participants can not join this meeting.
       */
      denied_list?: Array<string>;
      /**
       * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
       *
       * `false`: Setting disabled.
       */
      enable?: boolean;
      /**
       * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
       * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
       * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
       */
      method?: 'approve' | 'deny';
    };
    /**
     * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * The participants added here will receive unique meeting invite links and bypass authentication.
     */
    authentication_exception?: Array<{
      /**
       * Email address of the participant.
       */
      email?: string;
      /**
       * Name of the participant.
       */
      name?: string;
    }>;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Meeting authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
     */
    breakout_room?: {
      /**
       * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
       */
      enable?: boolean;
      /**
       * Create room(s).
       */
      rooms?: Array<{
        /**
         * Name of the breakout room.
         */
        name?: string;
        /**
         * Email addresses of the participants who are to be assigned to the breakout room.
         */
        participants?: Array<string>;
      }>;
    };
    /**
     * Close registration after event date
     */
    close_registration?: boolean;
    /**
     * Host meeting in China.
     */
    cn_meeting?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Custom keys and values assigned to the meeting.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the user.
       */
      key?: string;
      /**
       * Value of the custom key associated with the user.
       */
      value?: string;
    }>;
    /**
     * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
     * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
     *
     * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
     */
    encryption_type?: 'enhanced_encryption' | 'e2ee';
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login_domains?: string;
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Global Dial-in Countries/Regions
     */
    global_dial_in_numbers?: Array<{
      /**
       * City of the number, if any. For example, Chicago.
       */
      city?: string;
      /**
       * Country code. For example, BR.
       */
      country?: string;
      /**
       * Full name of country. For example, Brazil.
       */
      country_name?: string;
      /**
       * Phone number. For example, +1 2332357613.
       */
      number?: string;
      /**
       * Type of number.
       */
      type?: 'toll' | 'tollfree';
    }>;
    /**
     * Start video when the host joins the meeting.
     */
    host_video?: boolean;
    /**
     * Host meeting in India.
     */
    in_meeting?: boolean;
    /**
     * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
     *
     * *  `0`: Allow participant to join anytime.
     * *  `5`: Allow participant to join 5 minutes before meeting start time.
     * * `10`: Allow participant to join 10 minutes before meeting start time.
     */
    jbh_time?: 0 | 5 | 10;
    /**
     * Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
     */
    join_before_host?: boolean;
    language_interpretation?: {
      enable?: boolean;
      /**
       * Information associated with the interpreter.
       */
      interpreters?: Array<{
        /**
         * Email address of the interpreter.
         */
        email?: string;
        /**
         * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
         *
         * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
         */
        languages?: string;
      }>;
    };
    /**
     * `true`- Only authenticated users can join meetings.
     */
    meeting_authentication?: boolean;
    /**
     * Mute participants upon entry.
     */
    mute_upon_entry?: boolean;
    /**
     * Start video when participants join the meeting.
     */
    participant_video?: boolean;
    /**
     * Send confirmation email to registrants upon successful registration.
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the meeting registration page.
     * This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    show_share_button?: boolean;
    /**
     * Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
     */
    use_pmi?: boolean;
    /**
     * Enable waiting room
     */
    waiting_room?: boolean;
    /**
     * Add watermark when viewing a shared screen.
     */
    watermark?: boolean;
  } & {
    /**
     * Send confirmation Email to Registrants
     */
    registrants_confirmation_email?: boolean;
  };
  /**
   * Meeting start time. When using a format like "yyyy-MM-dd'T'HH:mm:ss'Z'", always use GMT time. When using a format like "yyyy-MM-dd'T'HH:mm:ss", you should use local time and  specify the time zone. Only used for scheduled meetings and recurring meetings with a fixed time.
   */
  start_time?: string;
  /**
   * Unique identifier of the meeting template.
   *
   * Use this field if you would like to [schedule the meeting from a meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb). You can retrieve the value of this field by calling the [List meeting templates]() API.
   */
  template_id?: string;
  /**
   * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.
   */
  timezone?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field?: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with a fixed time.
   */
  type?: 1 | 2 | 3 | 8;
};

/**
 * Base webinar object for sessions.
 */
export type SessionWebinar = {
  /**
   * Webinar description.
   */
  agenda?: string;
  /**
   * Webinar duration (minutes). Used for scheduled webinars only.
   */
  duration?: number;
  /**
   * Webinar Passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time.
   */
  recurrence?: {
    /**
     * Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the webinar will recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months.
     */
    repeat_interval?: number;
    /**
     * Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `"1"` as the value of this field.  <br><br> **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     *
     *
     */
    weekly_days?: string;
  };
  /**
   * Webinar settings.
   */
  settings?: {
    /**
     * Allow attendees to join from multiple devices.
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host emails or IDs. Multiple values separated by comma.
     */
    alternative_hosts?: string;
    /**
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Send reminder email to attendees and panelists.
     */
    attendees_and_panelists_reminder_email_notification?: {
      /**
       * * `true`: Send reminder email to attendees and panelists.
       *
       * * `false`: Do not send reminder email to attendees and panelists.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Determine how participants can join the audio portion of the webinar.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Webinar authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Close registration after event date.
     */
    close_registration?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Set the email language to one of the following:
     * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
     */
    email_language?: string;
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login_domains?: string;
    /**
     * Send follow-up email to absentees.
     */
    follow_up_absentees_email_notification?: {
      /**
       * * `true`: Send follow-up email to absentees.
       *
       * * `false`: Do not send follow-up email to absentees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Send follow-up email to attendees.
     */
    follow_up_attendees_email_notification?: {
      /**
       * * `true`: Send follow-up email to attendees.
       *
       * * `false`: Do not send follow-up email to attendees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Default to HD video.
     */
    hd_video?: boolean;
    /**
     * Start video when host joins webinar.
     */
    host_video?: boolean;
    /**
     * `true`- Only authenticated users can join Webinar.
     */
    meeting_authentication?: boolean;
    /**
     * Send notification email to registrants when the host updates a webinar.
     */
    notify_registrants?: boolean;
    /**
     * Make the webinar on-demand
     */
    on_demand?: boolean;
    /**
     * * `true`: Send invitation email to panelists.
     *
     * * `false`: Do not send invitation email to panelists.
     */
    panelists_invitation_email_notification?: boolean;
    /**
     * Start video when panelists join webinar.
     */
    panelists_video?: boolean;
    /**
     * Zoom will open a survey page in attendees' browsers after leaving the webinar
     */
    post_webinar_survey?: boolean;
    /**
     * Enable practice session.
     */
    practice_session?: boolean;
    /**
     * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
     */
    question_and_answer?: {
      /**
       * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
       *
       * * `false`: Do not allow anonymous questions.
       */
      allow_anonymous_questions?: boolean;
      /**
       * Indicate whether you want attendees to be able to view answered questions only or view all questions.
       *
       * * `only`: Attendees are able to view answered questions only.
       *
       * *  `all`: Attendees are able to view all questions submitted in the Q&A.
       */
      answer_questions?: 'only' | 'all';
      /**
       * * `true`: Attendees can answer questions or leave a comment in the question thread.
       *
       * * `false`: Attendees can not answer questions or leave a comment in the question thread
       */
      attendees_can_comment?: boolean;
      /**
       * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
       *
       * * `false`: Attendees can not click the thumbs up butoon on questions.
       */
      attendees_can_upvote?: boolean;
      /**
       * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
       *
       * * `false`: Disable Q&A for webinar.
       */
      enable?: boolean;
    };
    /**
     * Send confirmation email to registrants
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
     */
    registrants_restrict_number?: number;
    /**
     * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the registration page.
     */
    show_share_button?: boolean;
    /**
     * Survey url for post webinar survey
     */
    survey_url?: string;
  };
  /**
   * Webinar start time. We support two formats for `start_time` - local time and GMT.<br>
   *
   * To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.
   *
   * To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.
   *
   * The `start_time` should only be used for scheduled and / or recurring webinars with fixed time.
   */
  start_time?: string;
  /**
   * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.
   */
  timezone?: string;
  /**
   * Webinar topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field?: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
   */
  type?: 5 | 6 | 9;
};

/**
 * Base webinar object for sessions.
 */
export type SessionWebinarUpdate = {
  /**
   * Webinar description.
   */
  agenda?: string;
  /**
   * Webinar duration (minutes). Used for scheduled webinar only.
   */
  duration?: number;
  /**
   * [Webinar passcode](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords). By default, passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ * !] and can have a maximum of 10 characters.
   *
   * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
   *
   * If "**Require a passcode when scheduling new meetings**" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>
   *
   *
   *
   *
   *
   *
   *
   *
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
   */
  recurrence?: {
    /**
     * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
     *
     * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
     *
     *
     */
    repeat_interval?: number;
    /**
     * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
  };
  settings?: {
    /**
     * Allow attendees to join from multiple devices.
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host emails or IDs. Multiple values separated by comma.
     */
    alternative_hosts?: string;
    /**
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Send reminder email to attendees and panelists.
     */
    attendees_and_panelists_reminder_email_notification?: {
      /**
       * * `true`: Send reminder email to attendees and panelists.
       *
       * * `false`: Do not send reminder email to attendees and panelists.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Determine how participants can join the audio portion of the webinar.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Webinar authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Close registration after event date.
     */
    close_registration?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Set the email language to one of the following:
     * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
     */
    email_language?: string;
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login_domains?: string;
    /**
     * Send follow-up email to absentees.
     */
    follow_up_absentees_email_notification?: {
      /**
       * * `true`: Send follow-up email to absentees.
       *
       * * `false`: Do not send follow-up email to absentees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Send follow-up email to attendees.
     */
    follow_up_attendees_email_notification?: {
      /**
       * * `true`: Send follow-up email to attendees.
       *
       * * `false`: Do not send follow-up email to attendees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Default to HD video.
     */
    hd_video?: boolean;
    /**
     * Start video when host joins webinar.
     */
    host_video?: boolean;
    /**
     * `true`- Only authenticated users can join Webinar.
     */
    meeting_authentication?: boolean;
    /**
     * Send notification email to registrants when the host updates a webinar.
     */
    notify_registrants?: boolean;
    /**
     * Make the webinar on-demand
     */
    on_demand?: boolean;
    /**
     * * `true`: Send invitation email to panelists.
     *
     * * `false`: Do not send invitation email to panelists.
     */
    panelists_invitation_email_notification?: boolean;
    /**
     * Start video when panelists join webinar.
     */
    panelists_video?: boolean;
    /**
     * Zoom will open a survey page in attendees' browsers after leaving the webinar
     */
    post_webinar_survey?: boolean;
    /**
     * Enable practice session.
     */
    practice_session?: boolean;
    /**
     * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
     */
    question_and_answer?: {
      /**
       * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
       *
       * * `false`: Do not allow anonymous questions.
       */
      allow_anonymous_questions?: boolean;
      /**
       * Indicate whether you want attendees to be able to view answered questions only or view all questions.
       *
       * * `only`: Attendees are able to view answered questions only.
       *
       * *  `all`: Attendees are able to view all questions submitted in the Q&A.
       */
      answer_questions?: 'only' | 'all';
      /**
       * * `true`: Attendees can answer questions or leave a comment in the question thread.
       *
       * * `false`: Attendees can not answer questions or leave a comment in the question thread
       */
      attendees_can_comment?: boolean;
      /**
       * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
       *
       * * `false`: Attendees can not click the thumbs up butoon on questions.
       */
      attendees_can_upvote?: boolean;
      /**
       * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
       *
       * * `false`: Disable Q&A for webinar.
       */
      enable?: boolean;
    };
    /**
     * Send confirmation email to registrants
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
     */
    registrants_restrict_number?: number;
    /**
     * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the registration page.
     */
    show_share_button?: boolean;
    /**
     * Survey url for post webinar survey
     */
    survey_url?: string;
  } & {
    /**
     * Send confirmation email to registrants.
     */
    registrants_confirmation_email?: boolean;
  };
  /**
   * Webinar start time, in the format "yyyy-MM-dd'T'HH:mm:ss'Z'." Should be in GMT time. In the format "yyyy-MM-dd'T'HH:mm:ss." This should be in local time and the timezone should be specified. Only used for scheduled webinars and recurring webinars with a fixed time.
   */
  start_time?: string;
  /**
   * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.
   */
  timezone?: string;
  /**
   * Webinar topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field?: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Webinar Types:<br>`5` - webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
   */
  type?: 5 | 6 | 9;
};

export type SettingsUpdateTelephony = {
  /**
   * Third party audio conference info.
   */
  audio_conference_info?: string;
  /**
   * Show the international numbers link on the invitation email.
   */
  show_international_numbers_link?: boolean;
  /**
   * Indicates where most of the participants call into or call from duriing a meeting.
   */
  telephony_regions?: {
    /**
     * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
     */
    selection_values?: Array<string>;
  };
  /**
   * Third party audio conference.
   */
  third_party_audio?: boolean;
};

/**
 * List of TSP accounts.
 */
export type TSP = {
  /**
   * Conference code: numeric value, length is less than 16.
   */
  conference_code: string;
  /**
   * List of dial in numbers.
   */
  dial_in_numbers?: Array<{
    /**
     * Country code.
     */
    code?: string;
    /**
     * Country Label, if passed, will display in place of code.
     */
    country_label?: string;
    /**
     * Dial-in number: length is less than 16.
     */
    number?: string;
    /**
     * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>
     * `media_link` - Media link.
     */
    type?: 'toll' | 'tollfree' | 'media_link';
  }>;
  /**
   * Leader PIN: numeric value, length is less than 16.
   */
  leader_pin: string;
  /**
   * Telephony bridge
   */
  tsp_bridge?: 'US_TSP_TB' | 'EU_TSP_TB';
};

/**
 * Telephony bridge
 */
export type tsp_bridge = 'US_TSP_TB' | 'EU_TSP_TB';

/**
 * Tracking Field
 */
export type TrackingField = {
  /**
   * Label/ Name for the tracking field.
   */
  field?: string;
  /**
   * Array of recommended values
   */
  recommended_values?: Array<string>;
  /**
   * Tracking Field Required
   */
  required?: boolean;
  /**
   * Tracking Field Visible
   */
  visible?: boolean;
};

/**
 * Tracking Field List
 */
export type TrackingFieldList = {
  /**
   * The number of all records available across pages
   */
  total_records?: number;
  /**
   * Array of Tracking Fields
   */
  tracking_fields?: Array<
    {
      /**
       * ID of Tracking Field
       */
      id?: string;
    } & {
      /**
       * Label/ Name for the tracking field.
       */
      field?: string;
      /**
       * Array of recommended values
       */
      recommended_values?: Array<string>;
      /**
       * Tracking Field Required
       */
      required?: boolean;
      /**
       * Tracking Field Visible
       */
      visible?: boolean;
    }
  >;
};

/**
 * The user object represents a specific user on Zoom.
 */
export type User = {
  /**
   * User create time.
   */
  created_at?: string;
  /**
   * Department.
   */
  dept?: string;
  /**
   * User's email address.
   */
  email: string;
  /**
   * User's first name.
   */
  first_name?: string;
  /**
   * User last login client version.
   */
  last_client_version?: string;
  /**
   * User last login time.
   */
  last_login_time?: string;
  /**
   * User's last name.
   */
  last_name?: string;
  /**
   * Personal meeting ID.
   */
  pmi?: number;
  /**
   * User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name.
   */
  role_name?: string;
  /**
   * The time zone of the user.
   */
  timezone?: string;
  /**
   * User's plan type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
   */
  type: 1 | 2 | 3 | 99;
  /**
   * Use Personal Meeting ID for instant meetings.
   */
  use_pmi?: boolean;
};

/**
 * User's plan type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
 */
export type type7 = 1 | 2 | 3 | 99;

/**
 * List of user's assistants.
 */
export type UserAssistantsList = {
  /**
   * List of User's assistants.
   */
  assistants?: Array<{
    /**
     * Assistant's email address.
     */
    email?: string;
    /**
     * Assistant's user ID.
     */
    id?: string;
  }>;
};

/**
 * List of users.
 */
export type UserList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of user objects.
   */
  users?: Array<
    {
      /**
       * User ID.
       */
      id?: string;
    } & {
      /**
       * User create time.
       */
      created_at?: string;
      /**
       * Department.
       */
      dept?: string;
      /**
       * User's email address.
       */
      email: string;
      /**
       * User's first name.
       */
      first_name?: string;
      /**
       * User last login client version.
       */
      last_client_version?: string;
      /**
       * User last login time.
       */
      last_login_time?: string;
      /**
       * User's last name.
       */
      last_name?: string;
      /**
       * Personal meeting ID.
       */
      pmi?: number;
      /**
       * User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name.
       */
      role_name?: string;
      /**
       * The time zone of the user.
       */
      timezone?: string;
      /**
       * User's plan type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
       */
      type: 1 | 2 | 3 | 99;
      /**
       * Use Personal Meeting ID for instant meetings.
       */
      use_pmi?: boolean;
    } & {
      group_ids?: Array<string>;
      im_group_ids?: Array<string>;
    }
  >;
};

export type UserPermissions = {
  /**
   * List of user permissions.
   */
  permissions?: Array<string>;
};

/**
 * List of user's schedulers.
 */
export type UserSchedulersList = {
  /**
   * List of users for whom the current user can schedule meetings.
   */
  schedulers?: Array<{
    /**
     * Email address of the scheduler.
     */
    email?: string;
    /**
     * Unique Identifier (User ID) of the Scheduler.
     */
    id?: string;
    /**
     * PMI of the meeting host in long (int64) format.
     */
    pmi?: number;
  }>;
};

export type UserSettings = {
  email_notification?: {
    /**
     * When an alternative host is set or removed from a meeting.
     */
    alternative_host_reminder?: boolean;
    /**
     * When a meeting is cancelled.
     */
    cancel_meeting_reminder?: boolean;
    /**
     * When attendees join meeting before host.
     */
    jbh_reminder?: boolean;
    /**
     * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
     */
    schedule_for_reminder?: boolean;
  };
  feature?: {
    /**
     * Host meeting in China.
     */
    cn_meeting?: boolean;
    /**
     * Host meeting in India.
     */
    in_meeting?: boolean;
    /**
     * Large meeting feature.
     */
    large_meeting?: boolean;
    /**
     * Large meeting capacity: can be 500 or 1000, depending on if the user has a large meeting capacity plan subscription or not.
     */
    large_meeting_capacity?: number;
    /**
     * User’s meeting capacity.
     */
    meeting_capacity?: number;
    /**
     * Webinar feature.
     */
    webinar?: boolean;
    /**
     * Webinar capacity: can be 100, 500, 1000, 3000, 5000 or 10000, depending on if the user has a webinar capacity plan subscription or not.
     */
    webinar_capacity?: number;
    /**
     * Zoom phone feature.
     */
    zoom_phone?: boolean;
  };
  in_meeting?: {
    /**
     * Allow live streaming.
     */
    allow_live_streaming?: boolean;
    /**
     * Allow participants to use annotation tools.
     */
    annotation?: boolean;
    /**
     * Allow host to put attendee on hold.
     *
     * **This field has been deprecated and is no longer supported.**
     */
    attendee_on_hold?: boolean;
    /**
     * Auto save all in-meeting chats.
     */
    auto_saving_chat?: boolean;
    /**
     * Allow host to split meeting participants into separate breakout rooms.
     */
    breakout_room?: boolean;
    /**
     * Enable chat during meeting for all participants.
     */
    chat?: boolean;
    /**
     * Enable closed captions.
     */
    closed_caption?: boolean;
    /**
     * Allow the host to add co-hosts.
     */
    co_host?: boolean;
    /**
     * If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting your real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
     */
    custom_data_center_regions?: boolean;
    /**
     * Allow custom live streaming.
     */
    custom_live_streaming_service?: boolean;
    /**
     * Custom service instructions.
     */
    custom_service_instructions?: string;
    /**
     * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["DE", "NL", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
     *
     */
    data_center_regions?: 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA' | 'DE' | 'NL' | 'LA';
    /**
     * Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).
     */
    e2e_encryption?: boolean;
    /**
     * Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.
     */
    entry_exit_chime?: 'host' | 'all' | 'none';
    /**
     * Allow another user to take control of the camera.
     */
    far_end_camera_control?: boolean;
    /**
     * Enable option to send feedback to Zoom at the end of the meeting.
     */
    feedback?: boolean;
    /**
     * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the user or not.
     */
    file_transfer?: boolean;
    /**
     * Enable group HD video.
     */
    group_hd?: boolean;
    /**
     * Enable non-verbal feedback through screens.
     */
    non_verbal_feedback?: boolean;
    /**
     * Add polls to the meeting controls.
     */
    polling?: boolean;
    /**
     * Enable 1:1 private chat between participants during meetings.
     */
    private_chat?: boolean;
    /**
     * Record and play their own voice.
     */
    record_play_voice?: boolean;
    /**
     * Enable remote control during screensharing.
     */
    remote_control?: boolean;
    /**
     * Allow host to provide 1:1 remote support to a participant.
     */
    remote_support?: boolean;
    /**
     * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the user or not.
     */
    request_permission_to_unmute?: boolean;
    /**
     * Allow host and participants to share their screen or content during meetings
     *
     */
    screen_sharing?: boolean;
    /**
     * Share dual camera (deprecated).
     */
    share_dual_camera?: boolean;
    /**
     * Always show meeting controls during a meeting.
     */
    show_meeting_control_toolbar?: boolean;
    /**
     * Enable virtual background.
     */
    virtual_background?: boolean;
    /**
     * Settings to manage virtual background.
     */
    virtual_background_settings?: {
      /**
       * Allow user to upload custom backgrounds.
       */
      allow_upload_custom?: boolean;
      /**
       * Allow use of videos for virtual backgrounds.
       */
      allow_videos?: boolean;
      /**
       * Enable virtual background.
       */
      enable?: boolean;
      files?: Array<{
        /**
         * Unique identifier of the file.
         */
        id?: string;
        /**
         * Indicates whether or not this file is the default virtual background file.
         */
        is_default?: boolean;
        /**
         * File name.
         */
        name?: string;
        /**
         * File size.
         */
        size?: string;
        /**
         * File type.
         */
        type?: string;
      }>;
    };
    /**
     * Enable Waiting room - if enabled, attendees can only join after host approves.
     */
    waiting_room?: boolean;
    /**
     * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
     * `host`: Only host can share the screen.<br>
     * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
     *
     */
    who_can_share_screen?: 'host' | 'all';
    /**
     * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
     * `host`: Only a host can share the screen when someone else is sharing.<br>
     * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
     *
     */
    who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
    /**
     * Allow livestreaming by host through Workplace by Facebook.
     */
    workplace_by_facebook?: boolean;
  };
  profile?: {
    recording_storage_location?: {
      /**
       * Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.
       *
       * Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
       */
      allowed_values?: Array<string>;
      /**
       * Abbreviated country code.
       */
      value?: string;
    };
  };
  recording?: {
    /**
     * Ask host to confirm the disclaimer.
     */
    ask_host_to_confirm_disclaimer?: boolean;
    /**
     * This field can be used if `recording_disclaimer` is set to true. This field indicates whether or not you would like to ask participants for consent when a recording starts. The value can be one of the following:<br>
     * * `true`: Ask participants for consent when a recording starts. <br>
     * * `false`: Do not ask participants for consent when a recording starts.
     */
    ask_participants_to_consent_disclaimer?: boolean;
    /**
     * Auto delete cloud recordings.
     */
    auto_delete_cmr?: boolean;
    /**
     * A specified number of days of auto delete cloud recordings.
     */
    auto_delete_cmr_days?: number;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Cloud recording.
     */
    cloud_recording?: boolean;
    /**
     * Host can pause/stop the auto recording in the cloud.
     */
    host_pause_stop_recording?: boolean;
    /**
     * Setting to allow cloud recording access only from specific IP address ranges.
     *
     */
    ip_address_access_control?: {
      /**
       * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
       *
       *
       */
      enable?: boolean;
      /**
       * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
       *
       * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
       *
       *
       */
      ip_addresses_or_ranges?: string;
    };
    /**
     * Local recording.
     */
    local_recording?: boolean;
    /**
     * Record an audio only file.
     */
    record_audio_file?: boolean;
    /**
     * Record the gallery view.
     */
    record_gallery_view?: boolean;
    /**
     * Record the active speaker view.
     */
    record_speaker_view?: boolean;
    /**
     * Audio transcript.
     */
    recording_audio_transcript?: boolean;
    /**
     * Show a disclaimer to participants before a recording starts
     *
     */
    recording_disclaimer?: boolean;
    /**
     * This object represents the minimum passcode requirements set for recordings via Account Recording Settings.
     */
    recording_password_requirement?: {
      /**
       * Indicates whether or not passcode must contain at least one alphabetical letter (a, b, c..).
       */
      have_letter?: boolean;
      /**
       * Indicates whether or not passcode must contain at least one number(1, 2, 3..).
       */
      have_number?: boolean;
      /**
       * Indicates whether or not passcode must contain at least one special character(!, @, #..).
       */
      have_special_character?: boolean;
      /**
       * Minimum required length for the passcode.
       */
      length?: number;
      /**
       * Indicates whether or not passcode must contain only numeric characters.
       */
      only_allow_numeric?: boolean;
    };
    /**
     * Save chat text from the meeting.
     */
    save_chat_text?: boolean;
    /**
     * Show timestamp on video.
     */
    show_timestamp?: boolean;
  };
  schedule_meeting?: {
    /**
     * Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.
     */
    audio_type?: 'both' | 'telephony' | 'voip' | 'thirdParty';
    /**
     * Passcode for already scheduled meetings
     *
     */
    default_password_for_scheduled_meetings?: string;
    /**
     * If the value is set to `true`, the meeting passcode will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the passcode.
     *
     */
    embed_password_in_join_link?: boolean;
    /**
     * Require a passcode for personal meetings if attendees can join before host.
     */
    force_pmi_jbh_password?: boolean;
    /**
     * Start meetings with host video on.
     */
    host_video?: boolean;
    /**
     * Join the meeting before host arrives.
     */
    join_before_host?: boolean;
    /**
     * Account wide meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
     */
    meeting_password_requirement?: {
      consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
      /**
       * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
       *
       */
      have_letter?: boolean;
      /**
       * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
       */
      have_number?: boolean;
      /**
       * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
       */
      have_special_character?: boolean;
      /**
       * If set to `true`, the passcode must include both uppercase and lowercase characters.
       */
      have_upper_and_lower_characters?: boolean;
      /**
       * The minimum length that the meeting/webinar passcode needs to have.
       */
      length?: number;
      /**
       * If set to `true`, the passcode must only contain numbers and no other characters.
       */
      only_allow_numeric?: boolean;
      /**
       * If set to `true`, users will be informed if the provided passcode is weak.
       */
      weak_enhance_detection?: boolean;
    };
    /**
     * Start meetings with participants video on.
     */
    participants_video?: boolean;
    /**
     * Personal Meeting Setting.<br><br>
     * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
     * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
     * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
     *
     *
     *
     */
    personal_meeting?: boolean;
    /**
     * PMI passcode
     *
     */
    pmi_password?: string;
    /**
     * Generate and require passcode for participants joining by phone.
     */
    pstn_password_protected?: boolean;
    /**
     * Require a passcode for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     *
     */
    require_password_for_instant_meetings?: boolean;
    /**
     * Require a passcode for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     *
     */
    require_password_for_pmi_meetings?: 'jbh_only' | 'all' | 'none';
    /**
     * Require a passcode for meetings which have already been scheduled
     *
     */
    require_password_for_scheduled_meetings?: boolean;
    /**
     * Require a passcode when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     *
     */
    require_password_for_scheduling_new_meetings?: boolean;
    /**
     * Use Personal Meeting ID (PMI) when starting an instant meeting
     *
     */
    use_pmi_for_instant_meetings?: boolean;
    /**
     * Use Personal Meeting ID (PMI) when scheduling a meeting
     *
     */
    use_pmi_for_scheduled_meetings?: boolean;
  };
  telephony?: {
    /**
     * Third party audio conference info.
     */
    audio_conference_info?: string;
    /**
     * Show the international numbers link on the invitation email.
     */
    show_international_numbers_link?: boolean;
    /**
     * Indicates where most of the participants call into or call from duriing a meeting.
     */
    telephony_regions?: {
      /**
       * Telephony region options provided by Zoom to select from.
       */
      allowed_values?: Array<string>;
      /**
       * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
       */
      selection_values?: Array<string>;
    };
    /**
     * Third party audio conference.
     */
    third_party_audio?: boolean;
  };
  /**
   * Account Settings: TSP.
   */
  tsp?: {
    /**
     * Call Out
     */
    call_out?: boolean;
    /**
     * Call Out Countries/Regions
     */
    call_out_countries?: Array<unknown>;
    /**
     * Show international numbers link on the invitation email
     */
    show_international_numbers_link?: boolean;
  };
};

/**
 * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["DE", "NL", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
 *
 */
export type data_center_regions2 = 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA' | 'DE' | 'NL' | 'LA';

export type UserSettingsEmailNotification = {
  /**
   * When an alternative host is set or removed from a meeting.
   */
  alternative_host_reminder?: boolean;
  /**
   * When a meeting is cancelled.
   */
  cancel_meeting_reminder?: boolean;
  /**
   * When attendees join meeting before host.
   */
  jbh_reminder?: boolean;
  /**
   * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
   */
  schedule_for_reminder?: boolean;
};

export type UserSettingsFeature = {
  /**
   * Host meeting in China.
   */
  cn_meeting?: boolean;
  /**
   * Host meeting in India.
   */
  in_meeting?: boolean;
  /**
   * Large meeting feature.
   */
  large_meeting?: boolean;
  /**
   * Large meeting capacity: can be 500 or 1000, depending on if the user has a large meeting capacity plan subscription or not.
   */
  large_meeting_capacity?: number;
  /**
   * User’s meeting capacity.
   */
  meeting_capacity?: number;
  /**
   * Webinar feature.
   */
  webinar?: boolean;
  /**
   * Webinar capacity: can be 100, 500, 1000, 3000, 5000 or 10000, depending on if the user has a webinar capacity plan subscription or not.
   */
  webinar_capacity?: number;
  /**
   * Zoom phone feature.
   */
  zoom_phone?: boolean;
};

export type UserSettingsFeatureUpdate = {
  /**
   * Enable [large meeting](https://support.zoom.us/hc/en-us/articles/201362823-What-is-a-Large-Meeting-) feature for the user.
   */
  large_meeting?: boolean;
  /**
   * Set the meeting capacity for the user if the user has **Large meeting** feature enabled. The value for the field can be either 500 or 1000.
   */
  large_meeting_capacity?: number;
  /**
   * Set a user's meeting capacity. User’s meeting capacity denotes the maximum number of participants that can join a meeting scheduled by the user.
   */
  meeting_capacity?: number;
  /**
   * Enable Webinar feature for the user.
   */
  webinar?: boolean;
  /**
   * Set the Webinar capacity for a user who has the Webinar feature enabled. The value of this field can be 100, 500, 1000, 3000, 5000 or 10000.
   */
  webinar_capacity?: number;
  /**
   * Zoom phone feature.
   */
  zoom_phone?: boolean;
};

export type UserSettingsInMeeting = {
  /**
   * Allow live streaming.
   */
  allow_live_streaming?: boolean;
  /**
   * Allow participants to use annotation tools.
   */
  annotation?: boolean;
  /**
   * Allow host to put attendee on hold.
   *
   * **This field has been deprecated and is no longer supported.**
   */
  attendee_on_hold?: boolean;
  /**
   * Auto save all in-meeting chats.
   */
  auto_saving_chat?: boolean;
  /**
   * Allow host to split meeting participants into separate breakout rooms.
   */
  breakout_room?: boolean;
  /**
   * Enable chat during meeting for all participants.
   */
  chat?: boolean;
  /**
   * Enable closed captions.
   */
  closed_caption?: boolean;
  /**
   * Allow the host to add co-hosts.
   */
  co_host?: boolean;
  /**
   * If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting your real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
   */
  custom_data_center_regions?: boolean;
  /**
   * Allow custom live streaming.
   */
  custom_live_streaming_service?: boolean;
  /**
   * Custom service instructions.
   */
  custom_service_instructions?: string;
  /**
   * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["DE", "NL", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
   *
   */
  data_center_regions?: 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA' | 'DE' | 'NL' | 'LA';
  /**
   * Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).
   */
  e2e_encryption?: boolean;
  /**
   * Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.
   */
  entry_exit_chime?: 'host' | 'all' | 'none';
  /**
   * Allow another user to take control of the camera.
   */
  far_end_camera_control?: boolean;
  /**
   * Enable option to send feedback to Zoom at the end of the meeting.
   */
  feedback?: boolean;
  /**
   * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the user or not.
   */
  file_transfer?: boolean;
  /**
   * Enable group HD video.
   */
  group_hd?: boolean;
  /**
   * Enable non-verbal feedback through screens.
   */
  non_verbal_feedback?: boolean;
  /**
   * Add polls to the meeting controls.
   */
  polling?: boolean;
  /**
   * Enable 1:1 private chat between participants during meetings.
   */
  private_chat?: boolean;
  /**
   * Record and play their own voice.
   */
  record_play_voice?: boolean;
  /**
   * Enable remote control during screensharing.
   */
  remote_control?: boolean;
  /**
   * Allow host to provide 1:1 remote support to a participant.
   */
  remote_support?: boolean;
  /**
   * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the user or not.
   */
  request_permission_to_unmute?: boolean;
  /**
   * Allow host and participants to share their screen or content during meetings
   *
   */
  screen_sharing?: boolean;
  /**
   * Share dual camera (deprecated).
   */
  share_dual_camera?: boolean;
  /**
   * Always show meeting controls during a meeting.
   */
  show_meeting_control_toolbar?: boolean;
  /**
   * Enable virtual background.
   */
  virtual_background?: boolean;
  /**
   * Settings to manage virtual background.
   */
  virtual_background_settings?: {
    /**
     * Allow user to upload custom backgrounds.
     */
    allow_upload_custom?: boolean;
    /**
     * Allow use of videos for virtual backgrounds.
     */
    allow_videos?: boolean;
    /**
     * Enable virtual background.
     */
    enable?: boolean;
    files?: Array<{
      /**
       * Unique identifier of the file.
       */
      id?: string;
      /**
       * Indicates whether or not this file is the default virtual background file.
       */
      is_default?: boolean;
      /**
       * File name.
       */
      name?: string;
      /**
       * File size.
       */
      size?: string;
      /**
       * File type.
       */
      type?: string;
    }>;
  };
  /**
   * Enable Waiting room - if enabled, attendees can only join after host approves.
   */
  waiting_room?: boolean;
  /**
   * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
   * `host`: Only host can share the screen.<br>
   * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
   *
   */
  who_can_share_screen?: 'host' | 'all';
  /**
   * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
   * `host`: Only a host can share the screen when someone else is sharing.<br>
   * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
   *
   */
  who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
  /**
   * Allow livestreaming by host through Workplace by Facebook.
   */
  workplace_by_facebook?: boolean;
};

export type UserSettingsRecording = {
  /**
   * Ask host to confirm the disclaimer.
   */
  ask_host_to_confirm_disclaimer?: boolean;
  /**
   * This field can be used if `recording_disclaimer` is set to true. This field indicates whether or not you would like to ask participants for consent when a recording starts. The value can be one of the following:<br>
   * * `true`: Ask participants for consent when a recording starts. <br>
   * * `false`: Do not ask participants for consent when a recording starts.
   */
  ask_participants_to_consent_disclaimer?: boolean;
  /**
   * Auto delete cloud recordings.
   */
  auto_delete_cmr?: boolean;
  /**
   * A specified number of days of auto delete cloud recordings.
   */
  auto_delete_cmr_days?: number;
  /**
   * Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.
   */
  auto_recording?: 'local' | 'cloud' | 'none';
  /**
   * Cloud recording.
   */
  cloud_recording?: boolean;
  /**
   * Host can pause/stop the auto recording in the cloud.
   */
  host_pause_stop_recording?: boolean;
  /**
   * Setting to allow cloud recording access only from specific IP address ranges.
   *
   */
  ip_address_access_control?: {
    /**
     * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
     *
     *
     */
    enable?: boolean;
    /**
     * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
     *
     * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
     *
     *
     */
    ip_addresses_or_ranges?: string;
  };
  /**
   * Local recording.
   */
  local_recording?: boolean;
  /**
   * Record an audio only file.
   */
  record_audio_file?: boolean;
  /**
   * Record the gallery view.
   */
  record_gallery_view?: boolean;
  /**
   * Record the active speaker view.
   */
  record_speaker_view?: boolean;
  /**
   * Audio transcript.
   */
  recording_audio_transcript?: boolean;
  /**
   * Show a disclaimer to participants before a recording starts
   *
   */
  recording_disclaimer?: boolean;
  /**
   * This object represents the minimum passcode requirements set for recordings via Account Recording Settings.
   */
  recording_password_requirement?: {
    /**
     * Indicates whether or not passcode must contain at least one alphabetical letter (a, b, c..).
     */
    have_letter?: boolean;
    /**
     * Indicates whether or not passcode must contain at least one number(1, 2, 3..).
     */
    have_number?: boolean;
    /**
     * Indicates whether or not passcode must contain at least one special character(!, @, #..).
     */
    have_special_character?: boolean;
    /**
     * Minimum required length for the passcode.
     */
    length?: number;
    /**
     * Indicates whether or not passcode must contain only numeric characters.
     */
    only_allow_numeric?: boolean;
  };
  /**
   * Save chat text from the meeting.
   */
  save_chat_text?: boolean;
  /**
   * Show timestamp on video.
   */
  show_timestamp?: boolean;
};

export type UserSettingsScheduleMeeting = {
  /**
   * Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.
   */
  audio_type?: 'both' | 'telephony' | 'voip' | 'thirdParty';
  /**
   * Passcode for already scheduled meetings
   *
   */
  default_password_for_scheduled_meetings?: string;
  /**
   * If the value is set to `true`, the meeting passcode will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the passcode.
   *
   */
  embed_password_in_join_link?: boolean;
  /**
   * Require a passcode for personal meetings if attendees can join before host.
   */
  force_pmi_jbh_password?: boolean;
  /**
   * Start meetings with host video on.
   */
  host_video?: boolean;
  /**
   * Join the meeting before host arrives.
   */
  join_before_host?: boolean;
  /**
   * Account wide meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
   */
  meeting_password_requirement?: {
    consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
    /**
     * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
     *
     */
    have_letter?: boolean;
    /**
     * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
     */
    have_number?: boolean;
    /**
     * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
     */
    have_special_character?: boolean;
    /**
     * If set to `true`, the passcode must include both uppercase and lowercase characters.
     */
    have_upper_and_lower_characters?: boolean;
    /**
     * The minimum length that the meeting/webinar passcode needs to have.
     */
    length?: number;
    /**
     * If set to `true`, the passcode must only contain numbers and no other characters.
     */
    only_allow_numeric?: boolean;
    /**
     * If set to `true`, users will be informed if the provided passcode is weak.
     */
    weak_enhance_detection?: boolean;
  };
  /**
   * Start meetings with participants video on.
   */
  participants_video?: boolean;
  /**
   * Personal Meeting Setting.<br><br>
   * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
   * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
   * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
   *
   *
   *
   */
  personal_meeting?: boolean;
  /**
   * PMI passcode
   *
   */
  pmi_password?: string;
  /**
   * Generate and require passcode for participants joining by phone.
   */
  pstn_password_protected?: boolean;
  /**
   * Require a passcode for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
   *
   */
  require_password_for_instant_meetings?: boolean;
  /**
   * Require a passcode for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
   *
   */
  require_password_for_pmi_meetings?: 'jbh_only' | 'all' | 'none';
  /**
   * Require a passcode for meetings which have already been scheduled
   *
   */
  require_password_for_scheduled_meetings?: boolean;
  /**
   * Require a passcode when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
   *
   */
  require_password_for_scheduling_new_meetings?: boolean;
  /**
   * Use Personal Meeting ID (PMI) when starting an instant meeting
   *
   */
  use_pmi_for_instant_meetings?: boolean;
  /**
   * Use Personal Meeting ID (PMI) when scheduling a meeting
   *
   */
  use_pmi_for_scheduled_meetings?: boolean;
};

/**
 * Account Settings: TSP.
 */
export type UserSettingsTSP = {
  /**
   * Call Out
   */
  call_out?: boolean;
  /**
   * Call Out Countries/Regions
   */
  call_out_countries?: Array<unknown>;
  /**
   * Show international numbers link on the invitation email
   */
  show_international_numbers_link?: boolean;
};

export type UserSettingsTelephony = {
  /**
   * Third party audio conference info.
   */
  audio_conference_info?: string;
  /**
   * Show the international numbers link on the invitation email.
   */
  show_international_numbers_link?: boolean;
  /**
   * Indicates where most of the participants call into or call from duriing a meeting.
   */
  telephony_regions?: {
    /**
     * Telephony region options provided by Zoom to select from.
     */
    allowed_values?: Array<string>;
    /**
     * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
     */
    selection_values?: Array<string>;
  };
  /**
   * Third party audio conference.
   */
  third_party_audio?: boolean;
};

export type UserSettingsUpdate = {
  email_notification?: {
    /**
     * When an alternative host is set or removed from a meeting.
     */
    alternative_host_reminder?: boolean;
    /**
     * When a meeting is cancelled.
     */
    cancel_meeting_reminder?: boolean;
    /**
     * When attendees join meeting before host.
     */
    jbh_reminder?: boolean;
    /**
     * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
     */
    schedule_for_reminder?: boolean;
  };
  feature?: {
    /**
     * Enable [large meeting](https://support.zoom.us/hc/en-us/articles/201362823-What-is-a-Large-Meeting-) feature for the user.
     */
    large_meeting?: boolean;
    /**
     * Set the meeting capacity for the user if the user has **Large meeting** feature enabled. The value for the field can be either 500 or 1000.
     */
    large_meeting_capacity?: number;
    /**
     * Set a user's meeting capacity. User’s meeting capacity denotes the maximum number of participants that can join a meeting scheduled by the user.
     */
    meeting_capacity?: number;
    /**
     * Enable Webinar feature for the user.
     */
    webinar?: boolean;
    /**
     * Set the Webinar capacity for a user who has the Webinar feature enabled. The value of this field can be 100, 500, 1000, 3000, 5000 or 10000.
     */
    webinar_capacity?: number;
    /**
     * Zoom phone feature.
     */
    zoom_phone?: boolean;
  };
  in_meeting?: {
    /**
     * Allow live streaming.
     */
    allow_live_streaming?: boolean;
    /**
     * Allow participants to use annotation tools.
     */
    annotation?: boolean;
    /**
     * Allow host to put attendee on hold.
     *
     * **This field has been deprecated and is no longer supported.**
     */
    attendee_on_hold?: boolean;
    /**
     * Auto save all in-meeting chats.
     */
    auto_saving_chat?: boolean;
    /**
     * Allow host to split meeting participants into separate breakout rooms.
     */
    breakout_room?: boolean;
    /**
     * Enable chat during meeting for all participants.
     */
    chat?: boolean;
    /**
     * Enable closed captions.
     */
    closed_caption?: boolean;
    /**
     * Allow the host to add co-hosts.
     */
    co_host?: boolean;
    /**
     * If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting your real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
     */
    custom_data_center_regions?: boolean;
    /**
     * Allow custom live streaming.
     */
    custom_live_streaming_service?: boolean;
    /**
     * Custom service instructions.
     */
    custom_service_instructions?: string;
    /**
     * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["DE", "NL", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
     *
     */
    data_center_regions?: 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA' | 'DE' | 'NL' | 'LA';
    /**
     * Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).
     */
    e2e_encryption?: boolean;
    /**
     * Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.
     */
    entry_exit_chime?: 'host' | 'all' | 'none';
    /**
     * Allow another user to take control of the camera.
     */
    far_end_camera_control?: boolean;
    /**
     * Enable option to send feedback to Zoom at the end of the meeting.
     */
    feedback?: boolean;
    /**
     * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the user or not.
     */
    file_transfer?: boolean;
    /**
     * Enable group HD video.
     */
    group_hd?: boolean;
    /**
     * Enable non-verbal feedback through screens.
     */
    non_verbal_feedback?: boolean;
    /**
     * Add polls to the meeting controls.
     */
    polling?: boolean;
    /**
     * Enable 1:1 private chat between participants during meetings.
     */
    private_chat?: boolean;
    /**
     * Record and play their own voice.
     */
    record_play_voice?: boolean;
    /**
     * Enable remote control during screensharing.
     */
    remote_control?: boolean;
    /**
     * Allow host to provide 1:1 remote support to a participant.
     */
    remote_support?: boolean;
    /**
     * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the user or not.
     */
    request_permission_to_unmute?: boolean;
    /**
     * Allow host and participants to share their screen or content during meetings
     *
     */
    screen_sharing?: boolean;
    /**
     * Share dual camera (deprecated).
     */
    share_dual_camera?: boolean;
    /**
     * Always show meeting controls during a meeting.
     */
    show_meeting_control_toolbar?: boolean;
    /**
     * Enable virtual background.
     */
    virtual_background?: boolean;
    /**
     * Settings to manage virtual background.
     */
    virtual_background_settings?: {
      /**
       * Allow user to upload custom backgrounds.
       */
      allow_upload_custom?: boolean;
      /**
       * Allow use of videos for virtual backgrounds.
       */
      allow_videos?: boolean;
      /**
       * Enable virtual background.
       */
      enable?: boolean;
      files?: Array<{
        /**
         * Unique identifier of the file.
         */
        id?: string;
        /**
         * Indicates whether or not this file is the default virtual background file.
         */
        is_default?: boolean;
        /**
         * File name.
         */
        name?: string;
        /**
         * File size.
         */
        size?: string;
        /**
         * File type.
         */
        type?: string;
      }>;
    };
    /**
     * Enable Waiting room - if enabled, attendees can only join after host approves.
     */
    waiting_room?: boolean;
    /**
     * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
     * `host`: Only host can share the screen.<br>
     * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
     *
     */
    who_can_share_screen?: 'host' | 'all';
    /**
     * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
     * `host`: Only a host can share the screen when someone else is sharing.<br>
     * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
     *
     */
    who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
    /**
     * Allow livestreaming by host through Workplace by Facebook.
     */
    workplace_by_facebook?: boolean;
  };
  profile?: {
    recording_storage_location?: {
      /**
       * Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.
       *
       * Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
       */
      allowed_values?: Array<string>;
      /**
       * Abbreviated country code.
       */
      value?: string;
    };
  };
  recording?: {
    /**
     * Ask host to confirm the disclaimer.
     */
    ask_host_to_confirm_disclaimer?: boolean;
    /**
     * This field can be used if `recording_disclaimer` is set to true. This field indicates whether or not you would like to ask participants for consent when a recording starts. The value can be one of the following:<br>
     * * `true`: Ask participants for consent when a recording starts. <br>
     * * `false`: Do not ask participants for consent when a recording starts.
     */
    ask_participants_to_consent_disclaimer?: boolean;
    /**
     * Auto delete cloud recordings.
     */
    auto_delete_cmr?: boolean;
    /**
     * A specified number of days of auto delete cloud recordings.
     */
    auto_delete_cmr_days?: number;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Cloud recording.
     */
    cloud_recording?: boolean;
    /**
     * Host can pause/stop the auto recording in the cloud.
     */
    host_pause_stop_recording?: boolean;
    /**
     * Setting to allow cloud recording access only from specific IP address ranges.
     *
     */
    ip_address_access_control?: {
      /**
       * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
       *
       *
       */
      enable?: boolean;
      /**
       * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
       *
       * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
       *
       *
       */
      ip_addresses_or_ranges?: string;
    };
    /**
     * Local recording.
     */
    local_recording?: boolean;
    /**
     * Record an audio only file.
     */
    record_audio_file?: boolean;
    /**
     * Record the gallery view.
     */
    record_gallery_view?: boolean;
    /**
     * Record the active speaker view.
     */
    record_speaker_view?: boolean;
    /**
     * Audio transcript.
     */
    recording_audio_transcript?: boolean;
    /**
     * Show a disclaimer to participants before a recording starts
     *
     */
    recording_disclaimer?: boolean;
    /**
     * This object represents the minimum passcode requirements set for recordings via Account Recording Settings.
     */
    recording_password_requirement?: {
      /**
       * Indicates whether or not passcode must contain at least one alphabetical letter (a, b, c..).
       */
      have_letter?: boolean;
      /**
       * Indicates whether or not passcode must contain at least one number(1, 2, 3..).
       */
      have_number?: boolean;
      /**
       * Indicates whether or not passcode must contain at least one special character(!, @, #..).
       */
      have_special_character?: boolean;
      /**
       * Minimum required length for the passcode.
       */
      length?: number;
      /**
       * Indicates whether or not passcode must contain only numeric characters.
       */
      only_allow_numeric?: boolean;
    };
    /**
     * Save chat text from the meeting.
     */
    save_chat_text?: boolean;
    /**
     * Show timestamp on video.
     */
    show_timestamp?: boolean;
  };
  schedule_meeting?: {
    /**
     * Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.
     */
    audio_type?: 'both' | 'telephony' | 'voip' | 'thirdParty';
    /**
     * Passcode for already scheduled meetings
     *
     */
    default_password_for_scheduled_meetings?: string;
    /**
     * If the value is set to `true`, the meeting passcode will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the passcode.
     *
     */
    embed_password_in_join_link?: boolean;
    /**
     * Require a passcode for personal meetings if attendees can join before host.
     */
    force_pmi_jbh_password?: boolean;
    /**
     * Start meetings with host video on.
     */
    host_video?: boolean;
    /**
     * Join the meeting before host arrives.
     */
    join_before_host?: boolean;
    /**
     * Account wide meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
     */
    meeting_password_requirement?: {
      consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
      /**
       * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
       *
       */
      have_letter?: boolean;
      /**
       * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
       */
      have_number?: boolean;
      /**
       * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
       */
      have_special_character?: boolean;
      /**
       * If set to `true`, the passcode must include both uppercase and lowercase characters.
       */
      have_upper_and_lower_characters?: boolean;
      /**
       * The minimum length that the meeting/webinar passcode needs to have.
       */
      length?: number;
      /**
       * If set to `true`, the passcode must only contain numbers and no other characters.
       */
      only_allow_numeric?: boolean;
      /**
       * If set to `true`, users will be informed if the provided passcode is weak.
       */
      weak_enhance_detection?: boolean;
    };
    /**
     * Start meetings with participants video on.
     */
    participants_video?: boolean;
    /**
     * Personal Meeting Setting.<br><br>
     * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
     * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
     * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
     *
     *
     *
     */
    personal_meeting?: boolean;
    /**
     * PMI passcode
     *
     */
    pmi_password?: string;
    /**
     * Generate and require passcode for participants joining by phone.
     */
    pstn_password_protected?: boolean;
    /**
     * Require a passcode for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     *
     */
    require_password_for_instant_meetings?: boolean;
    /**
     * Require a passcode for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     *
     */
    require_password_for_pmi_meetings?: 'jbh_only' | 'all' | 'none';
    /**
     * Require a passcode for meetings which have already been scheduled
     *
     */
    require_password_for_scheduled_meetings?: boolean;
    /**
     * Require a passcode when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     *
     */
    require_password_for_scheduling_new_meetings?: boolean;
    /**
     * Use Personal Meeting ID (PMI) when starting an instant meeting
     *
     */
    use_pmi_for_instant_meetings?: boolean;
    /**
     * Use Personal Meeting ID (PMI) when scheduling a meeting
     *
     */
    use_pmi_for_scheduled_meetings?: boolean;
  };
  telephony?: {
    /**
     * Third party audio conference info.
     */
    audio_conference_info?: string;
    /**
     * Show the international numbers link on the invitation email.
     */
    show_international_numbers_link?: boolean;
    /**
     * Indicates where most of the participants call into or call from duriing a meeting.
     */
    telephony_regions?: {
      /**
       * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
       */
      selection_values?: Array<string>;
    };
    /**
     * Third party audio conference.
     */
    third_party_audio?: boolean;
  };
  /**
   * Account Settings: TSP.
   */
  tsp?: {
    /**
     * Call Out
     */
    call_out?: boolean;
    /**
     * Call Out Countries/Regions
     */
    call_out_countries?: Array<unknown>;
    /**
     * Show international numbers link on the invitation email
     */
    show_international_numbers_link?: boolean;
  };
};

/**
 * The user update object represents a user on Zoom.
 */
export type UserUpdate = {
  /**
   * Kaltura user ID.
   */
  cms_user_id?: string;
  /**
   * User's company.
   */
  company?: string;
  /**
   * Custom attribute(s) of the user.
   */
  custom_attributes?: {
    /**
     * Identifier for the custom attribute.
     */
    key?: string;
    /**
     * Name of the custom attribute.
     */
    name?: string;
    /**
     * Value of the custom attribute.
     */
    value?: string;
  };
  /**
   * Department for user profile: use for report.
   */
  dept?: string;
  /**
   * User's first name. Cannot contain more than 5 Chinese characters.
   */
  first_name?: string;
  /**
   * Provide unique identifier of the group that you would like to add a [pending user](https://support.zoom.us/hc/en-us/articles/201363183-Managing-users#h_13c87a2a-ecd6-40ad-be61-a9935e660edb) to. The value of this field can be retrieved from [List Groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.
   */
  group_id?: string;
  /**
   * Host key. It should be a 6-10 digit number.
   */
  host_key?: string;
  /**
   * User's job title.
   */
  job_title?: string;
  /**
   * language
   */
  language?: string;
  /**
   * User's last name. Cannot contain more than 5 Chinese characters.
   */
  last_name?: string;
  /**
   * User's location.
   */
  location?: string;
  /**
   * The manager for the user.
   */
  manager?: string;
  /**
   * **Note:** This field has been **deprecated** and will not be supported in the future. Use the **country** field of the **phone_numbers** object instead to select the country for the phone number.
   *
   *
   *
   * [Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `phone_number` field is a Brazil based number, the value of the `phone_country` field should be `BR`.
   */
  phone_country?: string;
  /**
   * **Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead to assign phone number(s) to a user.
   *
   *
   * Phone number of the user. To update a phone number, you must also provide the `phone_country` field.
   */
  phone_number?: string;
  phone_numbers?: {
    /**
     * Country code of the phone number. For example, for United States phone numbers, the value of this field should be "+1".
     */
    code?: string;
    /**
     * [Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `number` field is a Brazil based number, the value of the `country` field should be `BR`.
     */
    country?: string;
    /**
     * Phone number of the user.
     */
    number?: string;
  };
  /**
   * Personal meeting ID: length must be 10.
   */
  pmi?: number;
  /**
   * The time zone ID for a user profile. For this parameter value please refer to the ID value in the [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list.
   */
  timezone?: string;
  /**
   * User types:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
   */
  type?: 1 | 2 | 3 | 99;
  /**
   * Use Personal Meeting ID for instant meetings.
   */
  use_pmi?: boolean;
  /**
   * Personal meeting room name.
   */
  vanity_name?: string;
};

/**
 * Webinar object.
 */
export type Webinar = {
  /**
   * Webinar description.
   */
  agenda?: string;
  /**
   * Webinar duration (minutes). Used for scheduled webinars only.
   */
  duration?: number;
  /**
   * Webinar Passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time.
   */
  recurrence?: {
    /**
     * Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the webinar will recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months.
     */
    repeat_interval?: number;
    /**
     * Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `"1"` as the value of this field.  <br><br> **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     *
     *
     */
    weekly_days?: string;
  };
  /**
   * Webinar settings.
   */
  settings?: {
    /**
     * Allow attendees to join from multiple devices.
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host emails or IDs. Multiple values separated by comma.
     */
    alternative_hosts?: string;
    /**
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Send reminder email to attendees and panelists.
     */
    attendees_and_panelists_reminder_email_notification?: {
      /**
       * * `true`: Send reminder email to attendees and panelists.
       *
       * * `false`: Do not send reminder email to attendees and panelists.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Determine how participants can join the audio portion of the webinar.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Webinar authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Close registration after event date.
     */
    close_registration?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Set the email language to one of the following:
     * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
     */
    email_language?: string;
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login_domains?: string;
    /**
     * Send follow-up email to absentees.
     */
    follow_up_absentees_email_notification?: {
      /**
       * * `true`: Send follow-up email to absentees.
       *
       * * `false`: Do not send follow-up email to absentees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Send follow-up email to attendees.
     */
    follow_up_attendees_email_notification?: {
      /**
       * * `true`: Send follow-up email to attendees.
       *
       * * `false`: Do not send follow-up email to attendees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Default to HD video.
     */
    hd_video?: boolean;
    /**
     * Start video when host joins webinar.
     */
    host_video?: boolean;
    /**
     * `true`- Only authenticated users can join Webinar.
     */
    meeting_authentication?: boolean;
    /**
     * Send notification email to registrants when the host updates a webinar.
     */
    notify_registrants?: boolean;
    /**
     * Make the webinar on-demand
     */
    on_demand?: boolean;
    /**
     * * `true`: Send invitation email to panelists.
     *
     * * `false`: Do not send invitation email to panelists.
     */
    panelists_invitation_email_notification?: boolean;
    /**
     * Start video when panelists join webinar.
     */
    panelists_video?: boolean;
    /**
     * Zoom will open a survey page in attendees' browsers after leaving the webinar
     */
    post_webinar_survey?: boolean;
    /**
     * Enable practice session.
     */
    practice_session?: boolean;
    /**
     * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
     */
    question_and_answer?: {
      /**
       * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
       *
       * * `false`: Do not allow anonymous questions.
       */
      allow_anonymous_questions?: boolean;
      /**
       * Indicate whether you want attendees to be able to view answered questions only or view all questions.
       *
       * * `only`: Attendees are able to view answered questions only.
       *
       * *  `all`: Attendees are able to view all questions submitted in the Q&A.
       */
      answer_questions?: 'only' | 'all';
      /**
       * * `true`: Attendees can answer questions or leave a comment in the question thread.
       *
       * * `false`: Attendees can not answer questions or leave a comment in the question thread
       */
      attendees_can_comment?: boolean;
      /**
       * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
       *
       * * `false`: Attendees can not click the thumbs up butoon on questions.
       */
      attendees_can_upvote?: boolean;
      /**
       * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
       *
       * * `false`: Disable Q&A for webinar.
       */
      enable?: boolean;
    };
    /**
     * Send confirmation email to registrants
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
     */
    registrants_restrict_number?: number;
    /**
     * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the registration page.
     */
    show_share_button?: boolean;
    /**
     * Survey url for post webinar survey
     */
    survey_url?: string;
  };
  /**
   * Webinar start time. We support two formats for `start_time` - local time and GMT.<br>
   *
   * To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.
   *
   * To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.
   *
   * The `start_time` should only be used for scheduled and / or recurring webinars with fixed time.
   */
  start_time?: string;
  /**
   * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.
   */
  timezone?: string;
  /**
   * Webinar topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field?: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
   */
  type?: 5 | 6 | 9;
};

/**
 * Webinar object.
 */
export type WebinarInfo = {
  /**
   * Webinar agenda.
   */
  agenda?: string;
  /**
   * Create time.
   */
  created_at?: string;
  /**
   * Webinar duration.
   */
  duration?: number;
  /**
   * URL to join the Webinar. This URL should only be shared with the users who should be invited to the Webinar.
   */
  join_url?: string;
  /**
   * Array of occurrence objects.
   */
  occurrences?: Array<{
    /**
     * Duration.
     */
    duration?: number;
    /**
     * Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences.
     */
    occurrence_id?: string;
    /**
     * Start time.
     */
    start_time?: string;
    /**
     * Occurrence status.
     */
    status?: string;
  }>;
  /**
   * Webinar passcode.
   *
   * If "Require a passcode when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>
   * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
   *
   *
   *
   *
   *
   *
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time.
   */
  recurrence?: {
    /**
     * Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the webinar will recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months.
     */
    repeat_interval?: number;
    /**
     * Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `"1"` as the value of this field.  <br><br> **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     *
     *
     */
    weekly_days?: string;
  };
  /**
   * Webinar settings.
   */
  settings?: {
    /**
     * Allow attendees to join from multiple devices.
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host emails or IDs. Multiple values separated by comma.
     */
    alternative_hosts?: string;
    /**
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Send reminder email to attendees and panelists.
     */
    attendees_and_panelists_reminder_email_notification?: {
      /**
       * * `true`: Send reminder email to attendees and panelists.
       *
       * * `false`: Do not send reminder email to attendees and panelists.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Determine how participants can join the audio portion of the webinar.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Webinar authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Close registration after event date.
     */
    close_registration?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Set the email language to one of the following:
     * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
     */
    email_language?: string;
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login_domains?: string;
    /**
     * Send follow-up email to absentees.
     */
    follow_up_absentees_email_notification?: {
      /**
       * * `true`: Send follow-up email to absentees.
       *
       * * `false`: Do not send follow-up email to absentees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Send follow-up email to attendees.
     */
    follow_up_attendees_email_notification?: {
      /**
       * * `true`: Send follow-up email to attendees.
       *
       * * `false`: Do not send follow-up email to attendees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Default to HD video.
     */
    hd_video?: boolean;
    /**
     * Start video when host joins webinar.
     */
    host_video?: boolean;
    /**
     * `true`- Only authenticated users can join Webinar.
     */
    meeting_authentication?: boolean;
    /**
     * Send notification email to registrants when the host updates a webinar.
     */
    notify_registrants?: boolean;
    /**
     * Make the webinar on-demand
     */
    on_demand?: boolean;
    /**
     * * `true`: Send invitation email to panelists.
     *
     * * `false`: Do not send invitation email to panelists.
     */
    panelists_invitation_email_notification?: boolean;
    /**
     * Start video when panelists join webinar.
     */
    panelists_video?: boolean;
    /**
     * Zoom will open a survey page in attendees' browsers after leaving the webinar
     */
    post_webinar_survey?: boolean;
    /**
     * Enable practice session.
     */
    practice_session?: boolean;
    /**
     * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
     */
    question_and_answer?: {
      /**
       * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
       *
       * * `false`: Do not allow anonymous questions.
       */
      allow_anonymous_questions?: boolean;
      /**
       * Indicate whether you want attendees to be able to view answered questions only or view all questions.
       *
       * * `only`: Attendees are able to view answered questions only.
       *
       * *  `all`: Attendees are able to view all questions submitted in the Q&A.
       */
      answer_questions?: 'only' | 'all';
      /**
       * * `true`: Attendees can answer questions or leave a comment in the question thread.
       *
       * * `false`: Attendees can not answer questions or leave a comment in the question thread
       */
      attendees_can_comment?: boolean;
      /**
       * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
       *
       * * `false`: Attendees can not click the thumbs up butoon on questions.
       */
      attendees_can_upvote?: boolean;
      /**
       * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
       *
       * * `false`: Disable Q&A for webinar.
       */
      enable?: boolean;
    };
    /**
     * Send confirmation email to registrants
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
     */
    registrants_restrict_number?: number;
    /**
     * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the registration page.
     */
    show_share_button?: boolean;
    /**
     * Survey url for post webinar survey
     */
    survey_url?: string;
  };
  /**
   * Webinar start time in GMT/UTC.
   */
  start_time?: string;
  /**
   * <br><aside>The <code>start_url</code> of a Webinar is a URL using which a host or an alternative host can start the Webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the Webinar.
   *
   * The expiration time for the <code>start_url</code> field listed in the response of [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate) is two hours for all regular users.
   *
   * For users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.
   *
   * For security reasons, to retrieve the latest value for the <code>start_url</code> field programmatically (after expiry), you must call the [Retrieve a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar) and refer to the value of the <code>start_url</code> field in the response.</aside><br><br><br>
   */
  start_url?: string;
  /**
   * Time zone to format start_time.
   */
  timezone?: string;
  /**
   * Webinar topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field?: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
   */
  type?: 5 | 6 | 9;
};

/**
 * List of webinars.
 */
export type WebinarInstances = {
  /**
   * List of ended webinar instances.
   */
  webinars?: Array<{
    /**
     * Start time.
     */
    start_time?: string;
    /**
     * Webinar UUID.
     */
    uuid?: string;
  }>;
};

/**
 * List of webinars.
 */
export type WebinarList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of webinar objects.
   */
  webinars?: Array<{
    /**
     * Webinar Description. The length of agenda gets truncated to 250 characters when you list all webinars for a user. To view the complete agenda, retrieve details for a single webinar [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar).
     */
    agenda?: string;
    /**
     * Time of webinar creation.
     */
    created_at?: string;
    /**
     * Meeting duration.
     */
    duration?: number;
    /**
     * ID of the host of the webinar.
     */
    host_id?: string;
    /**
     * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
     */
    id?: number;
    /**
     * Join URL of the webinar (using which others can join the webinar).
     */
    join_url?: string;
    /**
     * Scheduled start time of the Webinar.
     */
    start_time?: string;
    /**
     * [Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) for the Webinar.
     */
    timezone?: string;
    /**
     * Meeting topic.
     */
    topic?: string;
    /**
     * Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
     */
    type?: string;
    /**
     * Unique identifier of a Webinar. Each webinar instance will generate its own UUID. Once a Webinar ends, the value of uuid for the same webinar will be different from when it was scheduled.
     */
    uuid?: string;
  }>;
};

/**
 * Webinar metric details.
 */
export type WebinarMetric = {
  /**
   * Custom keys and values assigned to the Webinar.
   */
  custom_keys?: Array<{
    /**
     * Custom key associated with the Webinar.
     */
    key?: string;
    /**
     * Value of the custom key associated with the Webinar.
     */
    value?: string;
  }>;
  /**
   * Department of the host.
   */
  dept?: string;
  /**
   * Webinar duration, formatted as hh:mm:ss, for example: `10:00` for ten minutes.
   */
  duration?: string;
  /**
   * User email.
   */
  email?: string;
  /**
   * Webinar end time.
   */
  end_time?: string;
  /**
   * Indicates whether or not TSP was used for the Webinar.
   */
  has_3rd_party_audio?: boolean;
  /**
   * Indicates whether or not PSTN was used for the Webinar.
   */
  has_pstn?: boolean;
  /**
   * Indicates whether or not recording was used for the Webinar.
   */
  has_recording?: boolean;
  /**
   * Indicates whether or not screen sharing was used for the Webinar.
   */
  has_screen_share?: boolean;
  /**
   * Indicates whether or not SIP was used for the Webinar.
   */
  has_sip?: boolean;
  /**
   * Indicates whether or not video was used for the Webinar.
   */
  has_video?: boolean;
  /**
   * Indicates whether or not VoIP was used for the Webinar.
   */
  has_voip?: boolean;
  /**
   * User display name.
   */
  host?: string;
  /**
   * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
   */
  id?: number;
  /**
   * Webinar participant count.
   */
  participants?: number;
  /**
   * Webinar start time.
   */
  start_time?: string;
  /**
   * Webinar topic.
   */
  topic?: string;
  /**
   * User type.
   */
  user_type?: string;
  /**
   * Webinar UUID.
   */
  uuid?: string;
};

/**
 * Webinar panelist.
 */
export type WebinarPanelist = {
  /**
   * List of panelist objects.
   */
  panelists?: Array<{
    /**
     * Panelist's email.
     */
    email?: string;
    /**
     * Panelist's full name.
     */
    name?: string;
  }>;
};

/**
 * Webinar panelist.
 */
export type WebinarPanelistList = {
  /**
   * List of panelist objects.
   */
  panelists?: Array<
    {
      /**
       * Panelist's ID.
       */
      id?: string;
    } & {
      /**
       * Panelist's email.
       */
      email?: string;
      /**
       * Panelist's full name.
       */
      name?: string;
    } & {
      /**
       * Join URL.
       */
      join_url?: string;
    }
  >;
  /**
   * Total records.
   */
  total_records?: number;
};

/**
 * Webinar registrant.
 */
export type WebinarRegistrant = {
  /**
   * Registrant's address.
   */
  address?: string;
  /**
   * Registrant's city.
   */
  city?: string;
  /**
   * A field that allows registrants to provide any questions or comments that they might have.
   */
  comments?: string;
  /**
   * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
   */
  country?: string;
  /**
   * Custom questions.
   */
  custom_questions?: Array<{
    title?: string;
    value?: string;
  }>;
  /**
   * A valid email address of the registrant.
   */
  email: string;
  /**
   * Registrant's first name.
   */
  first_name: string;
  /**
   * Registrant's Industry.
   */
  industry?: string;
  /**
   * Registrant's job title.
   */
  job_title?: string;
  /**
   * Registrant's last name.
   */
  last_name?: string;
  /**
   * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
   */
  no_of_employees?: string;
  /**
   * Registrant's Organization.
   */
  org?: string;
  /**
   * Registrant's Phone number.
   */
  phone?: string;
  /**
   * This field can be included to gauge interest of webinar attendees towards buying your product or service.
   *
   * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
   */
  purchasing_time_frame?: string;
  /**
   * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
   */
  role_in_purchase_process?: string;
  /**
   * Registrant's State/Province.
   */
  state?: string;
  /**
   * Registrant's Zip/Postal Code.
   */
  zip?: string;
};

/**
 * List of users.
 */
export type WebinarRegistrantList = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of registrant objects.
   */
  registrants?: Array<
    {
      /**
       * Registrant ID.
       */
      id?: string;
    } & {
      /**
       * Registrant's address.
       */
      address?: string;
      /**
       * Registrant's city.
       */
      city?: string;
      /**
       * A field that allows registrants to provide any questions or comments that they might have.
       */
      comments?: string;
      /**
       * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
       */
      country?: string;
      /**
       * Custom questions.
       */
      custom_questions?: Array<{
        title?: string;
        value?: string;
      }>;
      /**
       * A valid email address of the registrant.
       */
      email: string;
      /**
       * Registrant's first name.
       */
      first_name: string;
      /**
       * Registrant's Industry.
       */
      industry?: string;
      /**
       * Registrant's job title.
       */
      job_title?: string;
      /**
       * Registrant's last name.
       */
      last_name?: string;
      /**
       * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
       */
      no_of_employees?: string;
      /**
       * Registrant's Organization.
       */
      org?: string;
      /**
       * Registrant's Phone number.
       */
      phone?: string;
      /**
       * This field can be included to gauge interest of webinar attendees towards buying your product or service.
       *
       * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
       */
      purchasing_time_frame?: string;
      /**
       * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
       */
      role_in_purchase_process?: string;
      /**
       * Registrant's State/Province.
       */
      state?: string;
      /**
       * Registrant's Zip/Postal Code.
       */
      zip?: string;
    } & {
      /**
       * The time at which the registrant registered.
       */
      create_time?: string;
      /**
       * The URL using which an approved registrant can join the webinar.
       */
      join_url?: string;
      /**
       * The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar.
       */
      status?: string;
    }
  >;
};

/**
 * Webinar Registrant Questions
 */
export type WebinarRegistrantQuestions = {
  /**
   * Array of Registrant Custom Questions.
   */
  custom_questions?: Array<{
    /**
     * An array of answer choices. Can't be used for short answer type.
     */
    answers?: Array<string>;
    /**
     * State whether or not the custom question is required to be answered by a registrant.
     */
    required?: boolean;
    /**
     * Custom question.
     */
    title?: string;
    /**
     * The question-answer type.
     */
    type?: 'short' | 'single_radio' | 'single_dropdown' | 'multiple';
  }>;
  /**
   * Array of registration fields whose values should be provided by registrants during registration.
   */
  questions?: Array<{
    /**
     * Field name
     */
    field_name?:
      | 'last_name'
      | 'address'
      | 'city'
      | 'country'
      | 'zip'
      | 'state'
      | 'phone'
      | 'industry'
      | 'org'
      | 'job_title'
      | 'purchasing_time_frame'
      | 'role_in_purchase_process'
      | 'no_of_employees'
      | 'comments';
    /**
     * State whether the selected fields are required or optional.
     */
    required?: boolean;
  }>;
};

/**
 * Webinar settings.
 */
export type WebinarSettings = {
  /**
   * Allow attendees to join from multiple devices.
   */
  allow_multiple_devices?: boolean;
  /**
   * Alternative host emails or IDs. Multiple values separated by comma.
   */
  alternative_hosts?: string;
  /**
   * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
   */
  approval_type?: 0 | 1 | 2;
  /**
   * Send reminder email to attendees and panelists.
   */
  attendees_and_panelists_reminder_email_notification?: {
    /**
     * * `true`: Send reminder email to attendees and panelists.
     *
     * * `false`: Do not send reminder email to attendees and panelists.
     */
    enable?: boolean;
    /**
     * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
     */
    type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
  };
  /**
   * Determine how participants can join the audio portion of the webinar.
   */
  audio?: 'both' | 'telephony' | 'voip';
  /**
   * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
   */
  authentication_domains?: string;
  /**
   * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
   */
  authentication_name?: string;
  /**
   * Webinar authentication option id.
   */
  authentication_option?: string;
  /**
   * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
   */
  auto_recording?: 'local' | 'cloud' | 'none';
  /**
   * Close registration after event date.
   */
  close_registration?: boolean;
  /**
   * Contact email for registration
   */
  contact_email?: string;
  /**
   * Contact name for registration
   */
  contact_name?: string;
  /**
   * Set the email language to one of the following:
   * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
   */
  email_language?: string;
  /**
   * Only signed in users can join this meeting.
   *
   * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
   */
  enforce_login?: boolean;
  /**
   * Only signed in users with specified domains can join meetings.
   *
   * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
   */
  enforce_login_domains?: string;
  /**
   * Send follow-up email to absentees.
   */
  follow_up_absentees_email_notification?: {
    /**
     * * `true`: Send follow-up email to absentees.
     *
     * * `false`: Do not send follow-up email to absentees.
     */
    enable?: boolean;
    /**
     * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
     */
    type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
  };
  /**
   * Send follow-up email to attendees.
   */
  follow_up_attendees_email_notification?: {
    /**
     * * `true`: Send follow-up email to attendees.
     *
     * * `false`: Do not send follow-up email to attendees.
     */
    enable?: boolean;
    /**
     * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
     */
    type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
  };
  /**
   * List of global dial-in countries
   */
  global_dial_in_countries?: Array<string>;
  /**
   * Default to HD video.
   */
  hd_video?: boolean;
  /**
   * Start video when host joins webinar.
   */
  host_video?: boolean;
  /**
   * `true`- Only authenticated users can join Webinar.
   */
  meeting_authentication?: boolean;
  /**
   * Send notification email to registrants when the host updates a webinar.
   */
  notify_registrants?: boolean;
  /**
   * Make the webinar on-demand
   */
  on_demand?: boolean;
  /**
   * * `true`: Send invitation email to panelists.
   *
   * * `false`: Do not send invitation email to panelists.
   */
  panelists_invitation_email_notification?: boolean;
  /**
   * Start video when panelists join webinar.
   */
  panelists_video?: boolean;
  /**
   * Zoom will open a survey page in attendees' browsers after leaving the webinar
   */
  post_webinar_survey?: boolean;
  /**
   * Enable practice session.
   */
  practice_session?: boolean;
  /**
   * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
   */
  question_and_answer?: {
    /**
     * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
     *
     * * `false`: Do not allow anonymous questions.
     */
    allow_anonymous_questions?: boolean;
    /**
     * Indicate whether you want attendees to be able to view answered questions only or view all questions.
     *
     * * `only`: Attendees are able to view answered questions only.
     *
     * *  `all`: Attendees are able to view all questions submitted in the Q&A.
     */
    answer_questions?: 'only' | 'all';
    /**
     * * `true`: Attendees can answer questions or leave a comment in the question thread.
     *
     * * `false`: Attendees can not answer questions or leave a comment in the question thread
     */
    attendees_can_comment?: boolean;
    /**
     * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
     *
     * * `false`: Attendees can not click the thumbs up butoon on questions.
     */
    attendees_can_upvote?: boolean;
    /**
     * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
     *
     * * `false`: Disable Q&A for webinar.
     */
    enable?: boolean;
  };
  /**
   * Send confirmation email to registrants
   */
  registrants_confirmation_email?: boolean;
  /**
   * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
   */
  registrants_email_notification?: boolean;
  /**
   * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
   */
  registrants_restrict_number?: number;
  /**
   * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
   */
  registration_type?: 1 | 2 | 3;
  /**
   * Show social share buttons on the registration page.
   */
  show_share_button?: boolean;
  /**
   * Survey url for post webinar survey
   */
  survey_url?: string;
};

/**
 * Webinar object
 */
export type WebinarUpdate = {
  /**
   * Webinar description.
   */
  agenda?: string;
  /**
   * Webinar duration (minutes). Used for scheduled webinar only.
   */
  duration?: number;
  /**
   * [Webinar passcode](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords). By default, passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ * !] and can have a maximum of 10 characters.
   *
   * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
   *
   * If "**Require a passcode when scheduling new meetings**" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>
   *
   *
   *
   *
   *
   *
   *
   *
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
   */
  recurrence?: {
    /**
     * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
     *
     * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
     *
     *
     */
    repeat_interval?: number;
    /**
     * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
  };
  settings?: {
    /**
     * Allow attendees to join from multiple devices.
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host emails or IDs. Multiple values separated by comma.
     */
    alternative_hosts?: string;
    /**
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Send reminder email to attendees and panelists.
     */
    attendees_and_panelists_reminder_email_notification?: {
      /**
       * * `true`: Send reminder email to attendees and panelists.
       *
       * * `false`: Do not send reminder email to attendees and panelists.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Determine how participants can join the audio portion of the webinar.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Webinar authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Close registration after event date.
     */
    close_registration?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Set the email language to one of the following:
     * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
     */
    email_language?: string;
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login_domains?: string;
    /**
     * Send follow-up email to absentees.
     */
    follow_up_absentees_email_notification?: {
      /**
       * * `true`: Send follow-up email to absentees.
       *
       * * `false`: Do not send follow-up email to absentees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Send follow-up email to attendees.
     */
    follow_up_attendees_email_notification?: {
      /**
       * * `true`: Send follow-up email to attendees.
       *
       * * `false`: Do not send follow-up email to attendees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Default to HD video.
     */
    hd_video?: boolean;
    /**
     * Start video when host joins webinar.
     */
    host_video?: boolean;
    /**
     * `true`- Only authenticated users can join Webinar.
     */
    meeting_authentication?: boolean;
    /**
     * Send notification email to registrants when the host updates a webinar.
     */
    notify_registrants?: boolean;
    /**
     * Make the webinar on-demand
     */
    on_demand?: boolean;
    /**
     * * `true`: Send invitation email to panelists.
     *
     * * `false`: Do not send invitation email to panelists.
     */
    panelists_invitation_email_notification?: boolean;
    /**
     * Start video when panelists join webinar.
     */
    panelists_video?: boolean;
    /**
     * Zoom will open a survey page in attendees' browsers after leaving the webinar
     */
    post_webinar_survey?: boolean;
    /**
     * Enable practice session.
     */
    practice_session?: boolean;
    /**
     * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
     */
    question_and_answer?: {
      /**
       * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
       *
       * * `false`: Do not allow anonymous questions.
       */
      allow_anonymous_questions?: boolean;
      /**
       * Indicate whether you want attendees to be able to view answered questions only or view all questions.
       *
       * * `only`: Attendees are able to view answered questions only.
       *
       * *  `all`: Attendees are able to view all questions submitted in the Q&A.
       */
      answer_questions?: 'only' | 'all';
      /**
       * * `true`: Attendees can answer questions or leave a comment in the question thread.
       *
       * * `false`: Attendees can not answer questions or leave a comment in the question thread
       */
      attendees_can_comment?: boolean;
      /**
       * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
       *
       * * `false`: Attendees can not click the thumbs up butoon on questions.
       */
      attendees_can_upvote?: boolean;
      /**
       * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
       *
       * * `false`: Disable Q&A for webinar.
       */
      enable?: boolean;
    };
    /**
     * Send confirmation email to registrants
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
     */
    registrants_restrict_number?: number;
    /**
     * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the registration page.
     */
    show_share_button?: boolean;
    /**
     * Survey url for post webinar survey
     */
    survey_url?: string;
  } & {
    /**
     * Send confirmation email to registrants.
     */
    registrants_confirmation_email?: boolean;
  };
  /**
   * Webinar start time, in the format "yyyy-MM-dd'T'HH:mm:ss'Z'." Should be in GMT time. In the format "yyyy-MM-dd'T'HH:mm:ss." This should be in local time and the timezone should be specified. Only used for scheduled webinars and recurring webinars with a fixed time.
   */
  start_time?: string;
  /**
   * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.
   */
  timezone?: string;
  /**
   * Webinar topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field?: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Webinar Types:<br>`5` - webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
   */
  type?: 5 | 6 | 9;
};

/**
 * Zoom room.
 */
export type ZoomRoom = {
  /**
   * Zoom room email type.
   */
  account_type?: string;
  /**
   * Zoom calendar name.
   */
  calender_name?: string;
  /**
   * Zoom room camera.
   */
  camera?: string;
  /**
   * Zoom room device IP.
   */
  device_ip?: string;
  /**
   * Zoom room email.
   */
  email?: string;
  health?: string;
  /**
   * Zoom room ID.
   */
  id?: string;
  /**
   * Zoom Room issues.
   */
  issues?: Array<string>;
  /**
   * Zoom room last start time.
   */
  last_start_time?: string;
  /**
   * Zoom room location.
   */
  location?: string;
  /**
   * Zoom room microphone.
   */
  microphone?: string;
  /**
   * Zoom room name.
   */
  room_name?: string;
  /**
   * Zoom room speaker.
   */
  speaker?: string;
  /**
   * Zoom room status.
   */
  status?: string;
};

/**
 * Zoom Room List
 */
export type ZoomRoomList = {
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of Zoom Rooms
   */
  zoom_rooms?: Array<{
    /**
     * Zoom room email type.
     */
    account_type?: string;
    /**
     * Zoom calendar name.
     */
    calender_name?: string;
    /**
     * Zoom room camera.
     */
    camera?: string;
    /**
     * Zoom room device IP.
     */
    device_ip?: string;
    /**
     * Zoom room email.
     */
    email?: string;
    health?: string;
    /**
     * Zoom room ID.
     */
    id?: string;
    /**
     * Zoom Room issues.
     */
    issues?: Array<string>;
    /**
     * Zoom room last start time.
     */
    last_start_time?: string;
    /**
     * Zoom room location.
     */
    location?: string;
    /**
     * Zoom room microphone.
     */
    microphone?: string;
    /**
     * Zoom room name.
     */
    room_name?: string;
    /**
     * Zoom room speaker.
     */
    speaker?: string;
    /**
     * Zoom room status.
     */
    status?: string;
  }>;
};

export type authenticationusersettings =
  | {
      /**
       * Meeting Authentication Options
       */
      authentication_option?: {
        /**
         * Specify the action that you would like to take via this API request:<br>
         * * `add` : Choose this value if you are adding an authentication option.
         * * `update`: Choose this value if you are updating an existing authentication option.
         * * `delete`: Choose this value if you are deleting an existing authentication option.
         */
        action?: 'update' | 'delete' | 'add';
        /**
         * Specify whether you would like to set this authentication option as the default option or not.
         */
        default_option?: boolean;
        /**
         * If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to join your meetings or webinars.
         */
        domains?: string;
        /**
         *  Authentication ID. You can get the ID from Get User Settings API with query parameter `option` set to `meeting_authentication`.<br><br>
         * Use this field or the `name` field to identify the associated authentication option that you would like to update.
         */
        id?: string;
        /**
         * Unique name for the authentication option.
         */
        name?: string;
        /**
         *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
         * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
         * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.
         */
        type?: 'enforce_login' | 'enforce_login_with_domains';
      };
      /**
       * If set to "true", only authenticated users can join meetings. The method for authentication can be defined in the "authentication_option".
       */
      meeting_authentication?: boolean;
    }
  | {
      /**
       * Specify the authentication options for this account.
       */
      authentication_option?: {
        /**
         * Specify the action that you would like to take via this API request:<br>
         *
         * * `update`: Choose this value if you are updating an existing authentication option.
         * * `show` : Choose this value if you would like this option to be one of the authentication options that the host can use for sharing the recording settings.
         * * `hide`:  Choose this value if you would like this option to not be made available to the host for recording sharing settings.
         */
        action?: 'update' | 'delete' | 'add';
        /**
         * Specify whether you would like to set this authentication option as the default option or not.
         */
        default_option?: boolean;
        /**
         * If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to view the recordings.
         */
        domains?: string;
        /**
         *  Authentication ID. You can get the ID from Get User Settings API with query parameter `option` set to `recording_authentication`.<br><br>
         *
         * Use this field or the `name` field to identify the associated authentication option that you would like to update or delete.
         */
        id?: string;
        /**
         * Unique name for the authentication option.
         */
        name?: string;
        /**
         * Specify one authentication type that is to be associated with this authentication configuration:<br>
         * * `internally`: This option allows you specify a rule that only signed in users within your account can view the recording.<br>
         * * `enforce_login`: This option allows any users to view the recording, as long as they are signed into their Zoom account.<br>
         * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can view the recording. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.
         *
         *
         */
        type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
      };
      /**
       * If set to `true`, only authenticated users can view the cloud recordings.<br><br>
       * The authentication profile **must first be set at the account level via the account settings**, and later can be disabled after enabling on the preferred level - i.e. user level using user settings or at group level via group settings  (if you do not want the settings to be enabled on the entire account).
       */
      recording_authentication?: boolean;
    };

/**
 *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
 * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
 * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.
 */
export type type8 = 'enforce_login' | 'enforce_login_with_domains';

/**
 * Base webinar object for sessions.
 */
export type create_webinar = {
  /**
   * Webinar description.
   */
  agenda?: string;
  /**
   * Webinar duration (minutes). Used for scheduled webinars only.
   */
  duration?: number;
  /**
   * Webinar passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters.
   *
   * If "Require a passcode when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>
   *
   * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
   *
   *
   *
   *
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time.
   */
  recurrence?: {
    /**
     * Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the webinar will recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months.
     */
    repeat_interval?: number;
    /**
     * Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `"1"` as the value of this field.  <br><br> **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     *
     *
     */
    weekly_days?: string;
  };
  /**
   * Create Webinar settings.
   */
  settings?: {
    /**
     * Allow attendees to join from multiple devices.
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host emails or IDs. Multiple values separated by comma.
     */
    alternative_hosts?: string;
    /**
     * The default value is `2`. To enable registration required, set the approval type to `0` or `1`.  Values include:<br>
     *
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Send reminder email to attendees and panelists.
     */
    attendees_and_panelists_reminder_email_notification?: {
      /**
       * * `true`: Send reminder email to attendees and panelists.
       *
       * * `false`: Do not send reminder email to attendees and panelists.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Determine how participants can join the audio portion of the meeting.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the Webinar. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains.
     */
    authentication_domains?: string;
    /**
     * Specify the authentication type for users to join a Webinar with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings).
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Close registration after event date.
     */
    close_registration?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Set the email language to one of the following:
     * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
     */
    email_language?: string;
    /**
     * Only signed-in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in future.** <br><br> Instead of this field, use the "meeting_authentication", "authentication_option" and/or "authentication_domains" fields to establish the authentication mechanism for this Webinar.
     */
    enforce_login?: boolean;
    /**
     * Only signed-in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in future.** <br><br> Instead of this field, use the "authentication_domains" field for this Webinar.
     */
    enforce_login_domains?: string;
    /**
     * Send follow-up email to absentees.
     */
    follow_up_absentees_email_notification?: {
      /**
       * * `true`: Send follow-up email to absentees.
       *
       * * `false`: Do not send follow-up email to absentees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Send follow-up email to attendees.
     */
    follow_up_attendees_email_notification?: {
      /**
       * * `true`: Send follow-up email to attendees.
       *
       * * `false`: Do not send follow-up email to attendees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Default to HD video.
     */
    hd_video?: boolean;
    /**
     * Start video when host joins webinar.
     */
    host_video?: boolean;
    /**
     * Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`.
     */
    meeting_authentication?: boolean;
    /**
     * Make the webinar on-demand
     */
    on_demand?: boolean;
    /**
     * * `true`: Send invitation email to panelists.
     *
     * * `false`: Do not send invitation email to panelists.
     */
    panelists_invitation_email_notification?: boolean;
    /**
     * Start video when panelists join webinar.
     */
    panelists_video?: boolean;
    /**
     * Zoom will open a survey page in attendees' browsers after leaving the webinar
     */
    post_webinar_survey?: boolean;
    /**
     * Enable practice session.
     */
    practice_session?: boolean;
    /**
     * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
     */
    question_and_answer?: {
      /**
       * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
       *
       * * `false`: Do not allow anonymous questions.
       */
      allow_anonymous_questions?: boolean;
      /**
       * Indicate whether you want attendees to be able to view answered questions only or view all questions.
       *
       * * `only`: Attendees are able to view answered questions only.
       *
       * *  `all`: Attendees are able to view all questions submitted in the Q&A.
       */
      answer_questions?: 'only' | 'all';
      /**
       * * `true`: Attendees can answer questions or leave a comment in the question thread.
       *
       * * `false`: Attendees can not answer questions or leave a comment in the question thread
       */
      attendees_can_comment?: boolean;
      /**
       * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
       *
       * * `false`: Attendees can not click the thumbs up butoon on questions.
       */
      attendees_can_upvote?: boolean;
      /**
       * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
       *
       * * `false`: Disable Q&A for webinar.
       */
      enable?: boolean;
    };
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
     */
    registrants_restrict_number?: number;
    /**
     * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the registration page.
     */
    show_share_button?: boolean;
    /**
     * Survey url for post webinar survey
     */
    survey_url?: string;
  };
  /**
   * Webinar start time. We support two formats for `start_time` - local time and GMT.<br>
   *
   * To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.
   *
   * To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.
   *
   * The `start_time` should only be used for scheduled and / or recurring webinars with fixed time.
   */
  start_time?: string;
  /**
   * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats.
   */
  timezone?: string;
  /**
   * Webinar topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
   */
  type?: 5 | 6 | 9;
};

/**
 * Meeting metric details.
 */
export type listmeetingmetrics = {
  /**
   * Custom keys and values assigned to the meeting.
   */
  custom_keys?: Array<{
    /**
     * Custom key associated with the meeting.
     */
    key?: string;
    /**
     * Value of the custom key associated with the meeting.
     */
    value?: string;
  }>;
  /**
   * Department of the host.
   */
  dept?: string;
  /**
   * Meeting duration. Formatted as hh:mm:ss, for example: `16:08` for 16 minutes and 8 seconds.
   */
  duration?: string;
  /**
   * Email address of the host.
   */
  email?: string;
  /**
   * Meeting end time.
   */
  end_time?: string;
  /**
   * Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.
   */
  has_3rd_party_audio?: boolean;
  /**
   * Indicates whether or not the PSTN was used in the meeting.
   */
  has_pstn?: boolean;
  /**
   * Indicates whether or not the recording feature was used in the meeting.
   */
  has_recording?: boolean;
  /**
   * Indicates whether or not screenshare feature was used in the meeting.
   */
  has_screen_share?: boolean;
  /**
   * Indicates whether or not someone joined the meeting using SIP.
   */
  has_sip?: boolean;
  /**
   * Indicates whether or not video was used in the meeting.
   */
  has_video?: boolean;
  /**
   * Indicates whether or not VoIP was used in the meeting.
   */
  has_voip?: boolean;
  /**
   * Host display name.
   */
  host?: string;
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  /**
   * The number of Zoom Room participants in the meeting.
   */
  in_room_participants?: number;
  /**
   * Meeting participant count.
   */
  participants?: number;
  /**
   * Meeting start time.
   */
  start_time?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Tracking fields and values assigned to the meeting.
   */
  tracking_fields?: Array<{
    /**
     * Label of the tracking field.
     */
    field?: string;
    /**
     * Value of the tracking field.
     */
    value?: string;
  }>;
  /**
   * License type of the user.
   */
  user_type?: string;
  /**
   * Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
   */
  uuid?: string;
};

/**
 * Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time.
 */
export type recurrence_webinar = {
  /**
   * Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
   */
  end_date_time?: string;
  /**
   * Select how many times the webinar will recur before it is canceled. (Cannot be used with "end_date_time".)
   */
  end_times?: number;
  /**
   * Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.
   *
   * For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
   */
  monthly_day?: number;
  /**
   * Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
   */
  monthly_week?: -1 | 1 | 2 | 3 | 4;
  /**
   * Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
   */
  monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
  /**
   * Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
   *
   * For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months.
   */
  repeat_interval?: number;
  /**
   * Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
   */
  type: 1 | 2 | 3;
  /**
   * Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `"1"` as the value of this field.  <br><br> **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
   *
   * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
   *
   *
   */
  weekly_days?: string;
};

export type tsp_global_dial_in = {
  /**
   * The global dial-in URL for a TSP enabled account. The URL must be valid with a max-length of 512 characters.
   */
  audio_url?: string;
};

/**
 * The account ID.
 */
export type ParameterAccountId = string;

/**
 * The device ID.
 */
export type ParameterDeviceId = string;

/**
 * Feedback Detail Id
 */
export type ParameterFeedbackId = string;

/**
 * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
 */
export type ParameterFromDate = string;

/**
 * The group ID.<br>
 * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
 */
export type ParameterGroupId = string;

/**
 * `0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.
 */
export type ParameterLoginType = '0' | '1' | '99' | '100' | '101';

/**
 * Query Metadata of Recording if an On-Premise Meeting Connector was used for the meeting.
 */
export type ParameterMc = string;

/**
 * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
 *
 * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
 */
export type ParameterMeetingId = number;

/**
 * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
 *
 * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
 */
export type ParameterMeetingId4Metrics = string;

/**
 * To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance.
 *
 * To get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance.
 *
 * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID before making an API request.
 */
export type ParameterMeetingId4Recording = string;

/**
 * The meeting ID or UUID.
 */
export type ParameterMeetingIdNumber = string;

/**
 * The meeting types: <br>`scheduled` - This includes all valid past meetings (unexpired), live meetings and upcoming scheduled meetings. It is equivalent to the combined list of "Previous Meetings" and "Upcoming Meetings" displayed in the user's [Meetings page](https://zoom.us/meeting) on the Zoom Web Portal.<br>`live` - All the ongoing meetings.<br>`upcoming` - All upcoming meetings including live meetings.
 */
export type ParameterMeetingType = 'scheduled' | 'live' | 'upcoming';

/**
 * Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>
 *
 * If you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.
 */
export type ParameterMeetingTypePast = 'past' | 'pastOne' | 'live';

/**
 * The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.
 */
export type ParameterMeetingTypePast2 = 'past' | 'pastOne' | 'live';

/**
 * The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.<br>`live` - Live meetings.
 */
export type ParameterMeetingTypePast3 = 'past' | 'pastOne' | 'live';

/**
 * The meeting UUID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it.
 */
export type ParameterMeetingUUID = string;

/**
 * The member ID.
 */
export type ParameterMemberId = string;

/**
 * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
 */
export type ParameterNextPageToken = string;

/**
 * The meeting occurrence ID.
 */
export type ParameterOccurrenceId = string;

/**
 *
 * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
 *
 * The page number of the current page in the returned records.
 */
export type ParameterPageNumber = number;

/**
 * The number of records returned within a single API call.
 */
export type ParameterPageSize = number;

/**
 * The number of items returned per page.
 */
export type ParameterPageSize4Qos = number;

/**
 * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.
 */
export type ParameterPageToken = string;

/**
 * Participant ID.
 */
export type ParameterParticipantId = string;

/**
 * The recording delete actions:<br>`trash` - Move recording to trash.<br>`delete` - Delete recording permanently.
 */
export type ParameterRecordingDeleteAction = 'trash' | 'delete';

/**
 * The recording ID.
 */
export type ParameterRecordingId = string;

/**
 * The registrant ID.
 */
export type ParameterRegistrantId = string;

/**
 * The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.
 */
export type ParameterRegistrantStatus = 'pending' | 'approved' | 'denied';

/**
 * The role ID
 */
export type ParameterRoleId = string;

/**
 * IM chat session ID.
 */
export type ParameterSessionId = string;

/**
 * TSP account ID.
 */
export type ParameterTSPId = 1 | 2;

/**
 * End date.
 */
export type ParameterToDate = string;

/**
 * The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details.
 */
export type ParameterTrackingSourceId = string;

/**
 * Transfer email.
 */
export type ParameterTransferEmail = string;

/**
 * Transfer meeting.
 */
export type ParameterTransferMeeting = boolean;

/**
 * Transfer recording.
 */
export type ParameterTransferRecording = boolean;

/**
 * Transfer webinar.
 */
export type ParameterTransferWebinar = boolean;

/**
 * Query trash.
 * `true`: List recordings from trash.<br> `false`: Do not list recordings from the trash.<br> The default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve.
 */
export type ParameterTrash = boolean;

/**
 * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
 */
export type ParameterUserId = string;

/**
 * The webhook ID.
 */
export type ParameterWebhookId = string;

/**
 * The webinar ID in "**long**" format(represented as int64 data type in JSON).
 */
export type ParameterWebinarId = number;

/**
 * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
 *
 * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
 */
export type ParameterWebinarId4Metrics = string;

/**
 * The webinar type.
 */
export type ParameterWebinarTypePast = 'past' | 'live';

/**
 * The webinar type.
 */
export type ParameterWebinarTypePast2 = 'past' | 'live';

/**
 * The Webinar UUID. Each Webinar instance will generate its own Webinar UUID (i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.
 */
export type ParameterWebinarUUID = string;

/**
 * The Zoom room ID.
 */
export type ParameterZoomRoomId = string;

/**
 * The type of Cloud recording that you would like to retrieve from the trash. The value can be one of the following:<br>
 * `meeting_recordings`: List all meeting recordings from the trash.<br>
 * `recording_file`: List all individual recording files from the trash.
 */
export type Parametertrash_type = string;

export type AccountsData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     *
     * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
     *
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type AccountsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of Account objects.
   */
  accounts?: Array<{
    /**
     * Account name.
     */
    account_name?: string;
    /**
     * Account Number of the account.
     */
    account_number?: string;
    /**
     * Account type.
     */
    account_type?: string;
    /**
     * Account creation date and time.
     */
    created_at?: string;
    /**
     * Account ID.
     */
    id?: string;
    /**
     * Account owner email.
     */
    owner_email?: string;
    /**
     * Account seats.
     */
    seats?: number;
    /**
     * Account subscription end date and time.
     */
    subscription_end_time?: string;
    /**
     * Account subscription start date and time.
     */
    subscription_start_time?: string;
  }>;
};

export type AccountsError = unknown;

export type AccountCreateData = {
  /**
   * Account.
   */
  body: {
    /**
     * Name of the account. If you do not provide a value for this field, by default, the value will be set as a concatenation of "first_name" and "last_name".
     */
    account_name?: string;
    /**
     * User's email address.
     */
    email: string;
    /**
     * User's first name.
     */
    first_name: string;
    /**
     * User's last name.
     */
    last_name: string;
    /**
     * Account options object.
     */
    options?: {
      /**
       * Toggle whether automatic billing renewal is on or off.
       */
      billing_auto_renew?: boolean;
      /**
       * Specify the IP addresses of the Meeting Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Meeting Connectors of a master account will be shared with the sub account.
       *
       *
       * **Note:** This option can only be used if the value of `share_mc` is set to `true`.
       */
      meeting_connector_list?: Array<string>;
      /**
       * Payee:<br>`master` - master account holder pays.<br>`sub` - Sub account holder pays.
       */
      pay_mode?: 'master' | 'sub';
      /**
       * Specify the IP addresses of the Room Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Room Connectors of a master account will be shared with the sub account.
       *
       *
       * **Note:** This option can only be used if the value of `share_rc` is set to `true`.
       */
      room_connector_list?: Array<string>;
      /**
       * Enable/disable the option for a sub account to use shared [Meeting Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector) that are set up by the master account. Meeting Connectors can only be used by On-prem users.
       */
      share_mc?: boolean;
      /**
       * Enable/disable the option for a sub account to use shared [Virtual Room Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector) that are set up by the master account. Virtual Room Connectors can only be used by On-prem users.
       */
      share_rc?: boolean;
    };
    /**
     * User's password.
     *
     * **Note:** If the account owner or admin has enabled [enhanced password requirements](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_fa9186e4-6818-4f7a-915c-2e25c19f0acd), the value provided in this field must meet those requirements. These requirements can be retrieved by calling the [Get Account Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) and referring to the `password_requirement` field present in the `security` object.
     */
    password: string;
  };
};

export type AccountCreateResponse = {
  /**
   * Account created date time.
   */
  created_at?: string;
  /**
   * Account ID.
   */
  id?: string;
  /**
   * Account owner email.
   */
  owner_email?: string;
  /**
   * Account owner ID.
   */
  owner_id?: string;
};

export type AccountCreateError = unknown;

export type AccountDisassociateData = {
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
};

export type AccountDisassociateResponse = any;

export type AccountDisassociateError = unknown;

export type AccountData = {
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
};

export type AccountResponse = {
  /**
   * Account creation date and time.
   */
  created_at?: string;
  /**
   * Account ID.
   */
  id?: string;
  /**
   * Account options object.
   */
  options?: {
    /**
     * Toggle whether automatic billing renewal is on or off.
     */
    billing_auto_renew?: boolean;
    /**
     * Specify the IP addresses of the Meeting Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Meeting Connectors of a master account will be shared with the sub account.
     *
     *
     * **Note:** This option can only be used if the value of `share_mc` is set to `true`.
     */
    meeting_connector_list?: Array<string>;
    /**
     * Payee:<br>`master` - master account holder pays.<br>`sub` - Sub account holder pays.
     */
    pay_mode?: 'master' | 'sub';
    /**
     * Specify the IP addresses of the Room Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Room Connectors of a master account will be shared with the sub account.
     *
     *
     * **Note:** This option can only be used if the value of `share_rc` is set to `true`.
     */
    room_connector_list?: Array<string>;
    /**
     * Enable/disable the option for a sub account to use shared [Meeting Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector) that are set up by the master account. Meeting Connectors can only be used by On-prem users.
     */
    share_mc?: boolean;
    /**
     * Enable/disable the option for a sub account to use shared [Virtual Room Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector) that are set up by the master account. Virtual Room Connectors can only be used by On-prem users.
     */
    share_rc?: boolean;
  };
  /**
   * Account owner email.
   */
  owner_email?: string;
  /**
   * Account owner ID.
   */
  owner_id?: string;
  /**
   * Account Vanity URL
   */
  vanity_url?: string;
};

export type AccountError = unknown;

export type AccountBillingData = {
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
};

export type AccountBillingResponse = {
  /**
   * Billing Contact's address.
   */
  address: string;
  /**
   * Billing Contact's apartment/suite.
   */
  apt?: string;
  /**
   * Billing Contact's city.
   */
  city: string;
  /**
   * Billing Contact's Country [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) in abbreviated format.
   */
  country: string;
  /**
   * Billing Contact's email address.
   */
  email: string;
  /**
   * Billing Contact's first name.
   */
  first_name: string;
  /**
   * Billing Contact's last name.
   */
  last_name: string;
  /**
   * Billing Contact's phone number.
   */
  phone_number: string;
  /**
   * Billing Contact's state.
   */
  state: string;
  /**
   * Billing Contact's zip/postal code.
   */
  zip: string;
};

export type AccountBillingError = unknown;

export type AccountBillingUpdateData = {
  body: {
    /**
     * Billing Contact's address.
     */
    address?: string;
    /**
     * Billing Contact's apartment/suite.
     */
    apt?: string;
    /**
     * Billing Contact's city.
     */
    city?: string;
    /**
     * Billing Contact's country.
     */
    country?: string;
    /**
     * Billing Contact's email address.
     */
    email?: string;
    /**
     * Billing Contact's first name.
     */
    first_name?: string;
    /**
     * Billing Contact's last name.
     */
    last_name?: string;
    /**
     * Billing Contact's phone number.
     */
    phone_number?: string;
    /**
     * Billing Contact's state.
     */
    state?: string;
    /**
     * Billing Contact's zip/postal code.
     */
    zip?: string;
  };
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
};

export type AccountBillingUpdateResponse = unknown | any;

export type AccountBillingUpdateError = unknown;

export type AccountBillingInvoicesData = {
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
  query?: {
    /**
     * Start date for the invoice query in `yyyy-mm-dd` format. The date range defined by the “from” and “to” parameters should not exceed one year. The range defined should fall within the past three years.
     *
     */
    from?: string;
    /**
     * End date for the invoice query in `yyyy-mm-dd` format
     */
    to?: string;
  };
};

export type AccountBillingInvoicesResponse = {
  /**
   * Currency used in the invoice.
   */
  currency?: string;
  invoices?: Array<{
    /**
     * The remaining balance of the invoice after all payments, adjustments, and refunds are applied.
     *
     *
     */
    balance?: number;
    /**
     * The date by which the payment for this invoice is due.
     *
     *
     */
    due_date?: string;
    /**
     * Unique identifier of the invoice.
     */
    id?: string;
    /**
     * The date when the invoice was generated.
     *
     */
    invoice_date?: string;
    /**
     * Invoice number.
     */
    invoice_number?: string;
    /**
     * Status of the invoice.
     */
    status?: string;
    /**
     * This date is used to determine which charges are to be billed. All charges that are to be billed on this date or prior will be included in the invoice.
     *
     */
    target_date?: string;
    /**
     * Tax amount.
     */
    tax_amount?: number;
    /**
     * Total invoice amount.
     */
    total_amount?: number;
  }>;
};

export type AccountBillingInvoicesError = unknown;

export type GetAccountBillingInvoiceData = {
  path: {
    /**
     * The account ID.
     */
    accountId: string;
    /**
     * The invoice ID.
     */
    invoiceId: string;
  };
};

export type GetAccountBillingInvoiceResponse = {
  /**
   * The remaining balance of the invoice after all payments, adjustments, and refunds are applied.
   *
   *
   */
  balance?: number;
  /**
   * Billing currency.
   */
  currency?: string;
  /**
   * The date by which the payment for this invoice is due.
   *
   *
   */
  due_date?: string;
  /**
   * Unique identifier of the invoice.
   */
  id?: string;
  /**
   * The date when the invoice was generated.
   *
   */
  invoice_date?: string;
  invoice_items?: Array<{
    /**
     * Description for the charge.
     */
    charge_name?: string;
    /**
     * Identifier for the charge.
     */
    charge_number?: string;
    /**
     * Charge type.
     */
    charge_type?: string;
    /**
     * Billing end date.
     */
    end_date?: string;
    /**
     * Quantity.
     */
    quantity?: number;
    /**
     * Billing start date.
     */
    start_date?: string;
    /**
     * Tax amount.
     */
    tax_amount?: number;
    /**
     * Total amount.
     */
    total_amount?: number;
  }>;
  /**
   * Invoice number.
   */
  invoice_number?: string;
  /**
   * Status of the invoice.
   */
  status?: string;
  /**
   * This date is used to determine which charges are to be billed. All charges that are to be billed on this date or prior will be included in the invoice.
   *
   */
  target_date?: string;
  /**
   * Tax amount.
   */
  tax_amount?: number;
  /**
   * Total invoice amount.
   */
  total_amount?: number;
};

export type GetAccountBillingInvoiceError = unknown;

export type GetAccountLockSettingsData = {
  path: {
    /**
     * Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide "me" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field.
     */
    accountId: string;
  };
  query?: {
    /**
     * Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
     * {
     * "schedule_meeting": {
     * "host_video": false
     * }
     * }
     * <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
     */
    custom_query_fields?: string;
    /**
     * `meeting_security`: Use this query parameter to view meeting security settings applied on the account.<br>
     */
    option?: string;
  };
};

export type GetAccountLockSettingsResponse =
  | {
      email_notification?: {
        /**
         * Notify the alternative host who is set or removed.
         */
        alternative_host_reminder?: boolean;
        /**
         * Notify host and participants when the meeting is cancelled.
         */
        cancel_meeting_reminder?: boolean;
        /**
         * Notify host when cloud recording is available.
         */
        cloud_recording_available_reminder?: boolean;
        /**
         * Notify host when participants join the meeting before them.
         */
        jbh_reminder?: boolean;
        /**
         * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
         */
        schedule_for_host_reminder?: boolean;
      };
      in_meeting?: {
        /**
         * Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
         */
        alert_guest_join?: boolean;
        /**
         * Show Zoom windows during screen share.
         */
        allow_show_zoom_windows?: boolean;
        /**
         * Allow participants to use annotation tools to add information to shared screens.
         */
        annotation?: boolean;
        anonymous_question_answer?: boolean;
        /**
         * Allow host to put attendee on hold.
         *
         * **This field has been deprecated and is no longer supported.**
         */
        attendee_on_hold?: boolean;
        /**
         * Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
         */
        auto_answer?: boolean;
        /**
         * Automatically save all in-meeting chats.
         */
        auto_saving_chat?: boolean;
        /**
         * Allow host to split meeting participants into separate, smaller rooms.
         */
        breakout_room?: boolean;
        /**
         * Allow meeting participants to send chat message visible to all participants.
         */
        chat?: boolean;
        /**
         * Allow host to type closed captions or assign a participant/third party device to add closed captions.
         */
        closed_caption?: boolean;
        /**
         * Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
         */
        co_host?: boolean;
        /**
         * Displays whether or not custom [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) have been selected for meetings/webinars hosted by the account.
         */
        custom_data_center_regions?: boolean;
        /**
         * Enable DSCP marking for signaling and media packets. (Default is 56 for audio, 40 for video, and 40 for signaling.)
         */
        dscp_marking?: boolean;
        /**
         * Require that all meetings are encrypted using AES.
         */
        e2e_encryption?: boolean;
        /**
         * Play sound when participants join or leave.
         */
        entry_exit_chime?: string;
        /**
         * Allow another user to take control of the camera during a meeting.
         */
        far_end_camera_control?: boolean;
        /**
         * Enable users to provide feedback to Zoom at the end of the meeting.
         */
        feedback?: boolean;
        /**
         * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for all users on the account or not.
         */
        file_transfer?: boolean;
        /**
         * Enable higher quality video for host and participants. This will require more bandwidth.
         */
        group_hd?: boolean;
        /**
         * Allow users to select original sound during a meeting.
         */
        original_audio?: boolean;
        /**
         * Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
         */
        polling?: boolean;
        /**
         * Display end-of-meeting experience feedback survey.
         */
        post_meeting_feedback?: boolean;
        /**
         * Allow meeting participants to send a private 1:1 message to another participant.
         */
        private_chat?: boolean;
        /**
         * During screen sharing, allow the person who is sharing to let others control the shared content.
         */
        remote_control?: boolean;
        /**
         * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option is enabled and locked for the account or not.
         */
        request_permission_to_unmute?: boolean;
        /**
         * Allow host and participants to share their screen or content during meetings.
         */
        screen_sharing?: boolean;
        /**
         * Allow users to invite participants by email only by default.
         */
        sending_default_email_invites?: boolean;
        /**
         * Always show meeting controls during a meeting.
         */
        show_meeting_control_toolbar?: boolean;
        /**
         * Allow users to select stereo audio during a meeting.
         */
        stereo_audio?: boolean;
        /**
         * Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
         */
        use_html_format_email?: boolean;
        /**
         * Enable virtual background.
         */
        virtual_background?: boolean;
        /**
         * Allow attendees to ask questions for the host and panelists to answer in the webinar.
         */
        webinar_question_answer?: boolean;
        /**
         * Allow participants to share a whiteboard that includes annotation tools.
         */
        whiteboard?: boolean;
      };
      recording?: {
        /**
         * Make cloud recordings accessible to account members only.
         */
        account_user_access_recording?: boolean;
        /**
         * Allow Zoom to automatically delete recordings permanently after a specified number of days.
         */
        auto_delete_cmr?: boolean;
        /**
         * Record meetings automatically as they start.
         */
        auto_recording?: string;
        /**
         * Allow hosts to record and save the meeting / webinar in the cloud.
         */
        cloud_recording?: boolean;
        /**
         * Allow anyone with a link to the cloud recording to download.
         */
        cloud_recording_download?: boolean;
        /**
         * Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.
         */
        host_delete_cloud_recording?: boolean;
        /**
         * Setting to allow cloud recording access only from specific IP address ranges.
         *
         */
        ip_address_access_control?: {
          /**
           * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
           *
           *
           */
          enable?: boolean;
          /**
           * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
           *
           * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
           *
           *
           */
          ip_addresses_or_ranges?: string;
        };
        /**
         * Allow hosts and participants to record the meeting to a local file.
         */
        local_recording?: boolean;
        /**
         * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
         *
         *
         */
        prevent_host_access_recording?: boolean;
        /**
         * Only authenticated users can view cloud recordings
         */
        recording_authentication?: string;
      };
      schedule_meeting?: {
        /**
         * Determine how participants can join the audio portion of the meeting.
         */
        audio_type?: boolean;
        /**
         * If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.
         *
         */
        embed_password_in_join_link?: boolean;
        /**
         * Allow only signed-in users to join meetings.
         *
         */
        enforce_login?: boolean;
        /**
         * Specify the domains from which users can join a meeting.
         *
         */
        enforce_login_domains?: string;
        /**
         * Allow only signed-in users with specified domains to join meetings.
         *
         */
        enforce_login_with_domains?: boolean;
        /**
         * Start meetings with host video on.
         */
        host_video?: boolean;
        /**
         * Allow participants to join the meeting before the host arrives
         */
        join_before_host?: boolean;
        /**
         * Only authenticated users can join meetings
         */
        meeting_authentication?: boolean;
        /**
         * Hide actual meeting topic and display "Zoom Meeting" for your scheduled meetings
         */
        not_store_meeting_topic?: boolean;
        /**
         * Start meetings with participant video on.
         */
        participant_video?: boolean;
        /**
         * Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
         */
        require_password_for_instant_meetings?: boolean;
        /**
         * Require participants to enter password for PMI meetings. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
         */
        require_password_for_pmi_meetings?: boolean;
        /**
         * This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
         */
        require_password_for_scheduling_new_meetings?: boolean;
      };
      telephony?: {
        telephony_regions?: boolean;
        /**
         * Allow users to join the meeting using the existing 3rd party audio configuration.
         */
        third_party_audio?: boolean;
      };
      tsp?: {
        call_out?: boolean;
        show_international_numbers_link?: boolean;
      };
    }
  | {
      meeting_security?: {
        /**
         * `true`: Require that all meetings are secured with at least one security option.
         *
         * This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
         */
        auto_security?: boolean;
        /**
         * If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
         *
         */
        embed_password_in_join_link?: boolean;
        /**
         * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
         * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
         *
         * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
         */
        encryption_type?: 'enhanced_encryption' | 'e2ee';
        /**
         * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
         */
        end_to_end_encrypted_meetings?: boolean;
        /**
         * If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.
         */
        meeting_password?: boolean;
        /**
         * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
         */
        meeting_password_requirement?: {
          consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
          /**
           * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
           *
           */
          have_letter?: boolean;
          /**
           * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
           */
          have_number?: boolean;
          /**
           * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
           */
          have_special_character?: boolean;
          /**
           * If set to `true`, the passcode must include both uppercase and lowercase characters.
           */
          have_upper_and_lower_characters?: boolean;
          /**
           * The minimum length that the meeting/webinar passcode needs to have.
           */
          length?: number;
          /**
           * If set to `true`, the passcode must only contain numbers and no other characters.
           */
          only_allow_numeric?: boolean;
          /**
           * If set to `true`, users will be informed if the provided passcode is weak.
           */
          weak_enhance_detection?: boolean;
        };
        /**
         * Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.
         */
        phone_password?: boolean;
        /**
         * If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
         *
         */
        pmi_password?: boolean;
        /**
         * Require a passcode for meetings which have already been scheduled.
         *
         */
        require_password_for_scheduled_meeting?: boolean;
        /**
         * Require a passcode for webinars which have already been scheduled.
         *
         */
        require_password_for_scheduled_webinar?: boolean;
        /**
         * When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
         *
         */
        waiting_room?: boolean;
        /**
         * Specify the settings to be applied if waiting room is enabled.
         */
        waiting_room_settings?: {
          /**
           *
           *
           * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
           * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
           */
          participants_to_place_in_waiting_room?: 0 | 1 | 2;
          /**
           * Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
           * `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
           *
           *
           *
           */
          users_who_can_admit_participants_from_waiting_room?: number;
          /**
           * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
           */
          whitelisted_domains_for_waiting_room?: string;
        };
        /**
         * If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
         *
         */
        webinar_password?: boolean;
      };
    };

export type GetAccountLockSettingsError = unknown;

export type UpdateAccountLockSettingsData = {
  body?:
    | {
        email_notification?: {
          /**
           * Notify the alternative host who is set or removed.
           */
          alternative_host_reminder?: boolean;
          /**
           * Notify host and participants when the meeting is cancelled.
           */
          cancel_meeting_reminder?: boolean;
          /**
           * Notify host when cloud recording is available.
           */
          cloud_recording_available_reminder?: boolean;
          /**
           * Notify host when participants join the meeting before them.
           */
          jbh_reminder?: boolean;
          /**
           * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
           */
          schedule_for_host_reminder?: boolean;
        };
        in_meeting?: {
          /**
           * Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
           */
          alert_guest_join?: boolean;
          /**
           * Show Zoom windows during screen share.
           */
          allow_show_zoom_windows?: boolean;
          /**
           * Allow participants to use annotation tools to add information to shared screens.
           */
          annotation?: boolean;
          anonymous_question_answer?: boolean;
          /**
           * Allow host to put attendee on hold.
           *
           * **This field has been deprecated and is no longer supported.**
           */
          attendee_on_hold?: boolean;
          /**
           * Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
           */
          auto_answer?: boolean;
          /**
           * Automatically save all in-meeting chats.
           */
          auto_saving_chat?: boolean;
          /**
           * Allow host to split meeting participants into separate, smaller rooms.
           */
          breakout_room?: boolean;
          /**
           * Allow meeting participants to send chat message visible to all participants.
           */
          chat?: boolean;
          /**
           * Allow host to type closed captions or assign a participant/third party device to add closed captions.
           */
          closed_caption?: boolean;
          /**
           * Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
           */
          co_host?: boolean;
          /**
           * If set to `true`, account owners and admins on paid accounts can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field in the account settings. If set to `false`, the regions cannot be customized and the default regions will be used.
           */
          custom_data_center_regions?: boolean;
          /**
           * Allow users to select stereo audio during a meeting.
           */
          dscp_marking?: boolean;
          /**
           * Require that all meetings are encrypted using AES.
           */
          e2e_encryption?: boolean;
          /**
           * Play sound when participants join or leave.
           */
          entry_exit_chime?: string;
          /**
           * Allow another user to take control of the camera during a meeting.
           */
          far_end_camera_control?: boolean;
          /**
           * Enable users to provide feedback to Zoom at the end of the meeting.
           */
          feedback?: boolean;
          /**
           * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for all users on the account or not.
           */
          file_transfer?: boolean;
          /**
           * Enable higher quality video for host and participants. This will require more bandwidth.
           */
          group_hd?: boolean;
          /**
           * Allow users to select original sound during a meeting.
           */
          original_audio?: boolean;
          /**
           * Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
           */
          polling?: boolean;
          /**
           * Display end-of-meeting experience feedback survey.
           */
          post_meeting_feedback?: boolean;
          /**
           * Allow meeting participants to send a private 1:1 message to another participant.
           */
          private_chat?: boolean;
          /**
           * During screen sharing, allow the person who is sharing to let others control the shared content.
           */
          remote_control?: boolean;
          /**
           * Indicate whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option should be enabled and locked for the account or not.
           */
          request_permission_to_unmute?: boolean;
          /**
           * Allow host and participants to share their screen or content during meetings.
           */
          screen_sharing?: boolean;
          /**
           * Allow users to invite participants by email only by default.
           */
          sending_default_email_invites?: boolean;
          /**
           * Always show meeting controls during a meeting.
           */
          show_meeting_control_toolbar?: boolean;
          /**
           * Allow users to select stereo audio during a meeting.
           */
          stereo_audio?: boolean;
          /**
           * Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
           */
          use_html_format_email?: boolean;
          /**
           * Enable virtual background.
           */
          virtual_background?: boolean;
          webinar_question_answer?: boolean;
          /**
           * Allow participants to share a whiteboard that includes annotation tools.
           */
          whiteboard?: boolean;
        };
        recording?: {
          /**
           * Make cloud recordings accessible to account members only.
           */
          account_user_access_recording?: boolean;
          /**
           * Allow Zoom to automatically delete recordings permanently after a specified number of days.
           */
          auto_delete_cmr?: boolean;
          /**
           * Record meetings automatically as they start.
           */
          auto_recording?: string;
          /**
           * Allow hosts to record and save the meeting / webinar in the cloud.
           */
          cloud_recording?: boolean;
          /**
           * Allow anyone with a link to the cloud recording to download.
           */
          cloud_recording_download?: boolean;
          /**
           * Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.
           */
          host_delete_cloud_recording?: boolean;
          /**
           * Setting to allow cloud recording access only from specific IP address ranges.
           *
           */
          ip_address_access_control?: {
            /**
             * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
             *
             *
             */
            enable?: boolean;
            /**
             * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
             *
             * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
             *
             *
             */
            ip_addresses_or_ranges?: string;
          };
          /**
           * Allow hosts and participants to record the meeting to a local file.
           */
          local_recording?: boolean;
          /**
           * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
           *
           *
           */
          prevent_host_access_recording?: boolean;
          recording_authentication?: string;
        };
        schedule_meeting?: {
          /**
           * Determine how participants can join the audio portion of the meeting.
           */
          audio_type?: boolean;
          /**
           * If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.
           *
           */
          embed_password_in_join_link?: boolean;
          /**
           * Participants must always sign in before joining the scheduled meeting.
           */
          enforce_login?: boolean;
          enforce_login_domains?: string;
          enforce_login_with_domains?: boolean;
          /**
           * Start meetings with host video on.
           */
          host_video?: boolean;
          /**
           * Allow participants to join the meeting before the host arrives
           */
          join_before_host?: boolean;
          meeting_authentication?: boolean;
          not_store_meeting_topic?: boolean;
          /**
           * Start meetings with participant video on.
           */
          participant_video?: boolean;
          /**
           * Turn the lock setting on or off for the **Enable Personal Meeting ID** setting for an entire account.<br><br>
           * `true`: Turn the **"Enable Personal Meeting ID"** setting **on** for all users in the account. Users can choose to use personal meeting ID for their meetings. <br><br>
           * `false`: Turn **off** the **"Enable Personal Meeting ID"** setting. **If this setting is [disabled](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link?flash_digest=eb7ac62d8c7fb4daf285916e3e15d87537806133#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a), meetings that were scheduled with PMI by the users in the account will be invalid. Users will have to update previously scheduled PMI meetings.**<br><br>
           * For Zoom Phone only: If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
           *
           *
           *
           */
          personal_meeting?: boolean;
          /**
           * Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
           */
          require_password_for_instant_meetings?: boolean;
          /**
           * Require participants to enter password for PMI meetings. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
           */
          require_password_for_pmi_meetings?: boolean;
          /**
           * This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
           */
          require_password_for_scheduling_new_meetings?: boolean;
        };
        telephony?: {
          telephony_regions?: boolean;
          /**
           * Allow users to join the meeting using the existing 3rd party audio configuration.
           */
          third_party_audio?: boolean;
        };
        tsp?: {
          call_out?: boolean;
          show_international_numbers_link?: boolean;
        };
      }
    | {
        meeting_security?: {
          /**
           * `true`: Require that all meetings are secured with at least one security option.
           *
           * This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
           */
          auto_security?: boolean;
          /**
           * If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
           *
           */
          embed_password_in_join_link?: boolean;
          /**
           * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
           * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
           *
           * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
           */
          encryption_type?: 'enhanced_encryption' | 'e2ee';
          /**
           * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
           */
          end_to_end_encrypted_meetings?: boolean;
          /**
           * If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.
           */
          meeting_password?: boolean;
          /**
           * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
           */
          meeting_password_requirement?: {
            consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
            /**
             * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
             *
             */
            have_letter?: boolean;
            /**
             * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
             */
            have_number?: boolean;
            /**
             * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
             */
            have_special_character?: boolean;
            /**
             * If set to `true`, the passcode must include both uppercase and lowercase characters.
             */
            have_upper_and_lower_characters?: boolean;
            /**
             * The minimum length that the meeting/webinar passcode needs to have.
             */
            length?: number;
            /**
             * If set to `true`, the passcode must only contain numbers and no other characters.
             */
            only_allow_numeric?: boolean;
            /**
             * If set to `true`, users will be informed if the provided passcode is weak.
             */
            weak_enhance_detection?: boolean;
          };
          /**
           * Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.
           */
          phone_password?: boolean;
          /**
           * If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
           *
           */
          pmi_password?: boolean;
          /**
           * Require a passcode for meetings which have already been scheduled.
           *
           */
          require_password_for_scheduled_meeting?: boolean;
          /**
           * Require a passcode for webinars which have already been scheduled.
           *
           */
          require_password_for_scheduled_webinar?: boolean;
          /**
           * When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
           *
           */
          waiting_room?: boolean;
          /**
           * Specify the settings to be applied if waiting room is enabled.
           */
          waiting_room_settings?: {
            /**
             *
             *
             * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
             * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
             */
            participants_to_place_in_waiting_room?: 0 | 1 | 2;
            /**
             * Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
             * `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
             *
             *
             *
             */
            users_who_can_admit_participants_from_waiting_room?: number;
            /**
             * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
             */
            whitelisted_domains_for_waiting_room?: string;
          };
          /**
           * If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
           *
           */
          webinar_password?: boolean;
        };
      };
  path: {
    /**
     * Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide "me" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field.
     */
    accountId: string;
  };
};

export type UpdateAccountLockSettingsResponse =
  | unknown
  | {
      [key: string]: unknown;
    };

export type UpdateAccountLockSettingsError = unknown;

export type AccountManagedDomainData = {
  path: {
    /**
     * Unique Identifier of the account. To retrieve locked settings of the master account or a regular account, provide "me" as the value of this field. <br> To retrieve locked settings of a sub account, provide the Account ID of the sub account in this field.
     */
    accountId: string;
  };
};

export type AccountManagedDomainResponse = {
  /**
   * List of managed domain objects.
   */
  domains?: Array<{
    /**
     * Domain name.
     */
    domain?: string;
    /**
     * Domain status.
     */
    status?: string;
  }>;
  /**
   * Total records.
   */
  total_records?: number;
};

export type AccountManagedDomainError = unknown;

export type AccountOptionsUpdateData = {
  body: {
    /**
     * Toggle whether automatic billing renewal is on or off.
     */
    billing_auto_renew?: boolean;
    /**
     * Specify the IP addresses of the Meeting Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Meeting Connectors of a master account will be shared with the sub account.
     *
     *
     * **Note:** This option can only be used if the value of `share_mc` is set to `true`.
     */
    meeting_connector_list?: Array<string>;
    /**
     * Payee:<br>`master` - master account holder pays.<br>`sub` - Sub account holder pays.
     */
    pay_mode?: 'master' | 'sub';
    /**
     * Specify the IP addresses of the Room Connectors that you would like to share with the sub account. Multiple values can be separated by comma. If no value is provided in this field, all the Room Connectors of a master account will be shared with the sub account.
     *
     *
     * **Note:** This option can only be used if the value of `share_rc` is set to `true`.
     */
    room_connector_list?: Array<string>;
    /**
     * Enable/disable the option for a sub account to use shared [Meeting Connector(s)](https://support.zoom.us/hc/en-us/articles/201363093-Getting-Started-with-the-Meeting-Connector) that are set up by the master account. Meeting Connectors can only be used by On-prem users.
     */
    share_mc?: boolean;
    /**
     * Enable/disable the option for a sub account to use shared [Virtual Room Connector(s)](https://support.zoom.us/hc/en-us/articles/202134758-Getting-Started-With-Virtual-Room-Connector) that are set up by the master account. Virtual Room Connectors can only be used by On-prem users.
     */
    share_rc?: boolean;
  };
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
};

export type AccountOptionsUpdateResponse = unknown | any;

export type AccountOptionsUpdateError = unknown;

export type UpdateAccountOwnerData = {
  body?: {
    /**
     * Email address of the new owner.
     */
    email: string;
  };
  path: {
    /**
     * Account Id of the account.
     */
    accountId: string;
  };
};

export type UpdateAccountOwnerResponse = unknown;

export type UpdateAccountOwnerError = unknown;

export type UpdatePhoneSettingsData = {
  body?: {
    byoc?: {
      /**
       * Set the value of this field to `true` to allow a sub account to add BYOC numbers from the Zoom web admin portal.
       */
      enable?: boolean;
    };
  };
  path: {
    /**
     * Unique identifier of the sub account.
     */
    accountId: string;
  };
};

export type UpdatePhoneSettingsResponse = unknown;

export type UpdatePhoneSettingsError = unknown;

export type SetUpAccountData = {
  body?: {
    /**
     * Specify emergency address for the account.
     */
    emergency_address: {
      /**
       * Specify the street address.
       */
      address_line1: string;
      /**
       * Specify any building number, floor number, or unit number.
       */
      address_line2?: string;
      /**
       * City of the emergency address. Required or optional dependent on different countries.
       */
      city?: string;
      /**
       * Specify the two letter [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) (Alpha-2 code in ISO-3166).
       */
      country: string;
      /**
       * State code of the emergency address. Required or optional dependent on the country and state.
       */
      state_code?: string;
      /**
       * Zip code of the emergency address. Required or optional dependent on different countries.
       */
      zip?: string;
    };
    /**
     * Specify extension number that will be associated with the owner of the account.
     */
    extension_number: string;
  };
  path: {
    /**
     * Unique identifier of the account.
     */
    accountId: string;
  };
};

export type SetUpAccountResponse = unknown;

export type SetUpAccountError = unknown;

export type PostPhoneSipTrunkData = {
  body?: {
    /**
     * SIP trunk configurations.
     */
    sip_trunks?: Array<{
      /**
       * The account associated to the carrier.
       */
      carrier_account?: string;
      /**
       * Unique identifier of the master account's SIP trunk.
       */
      id?: string;
      /**
       * The name of the SIP Trunk. If this is not used, the master SIP Trunk name will be the default.
       *
       */
      name?: string;
    }>;
  };
  path: {
    /**
     * Unique identifier of the account.
     */
    accountId: string;
  };
};

export type PostPhoneSipTrunkResponse = {
  sip_trunks?: Array<{
    /**
     * Carrier account.
     */
    carrier_account?: string;
    /**
     * Unique identifier of the SIP trunk of the sub account.
     */
    id?: string;
    /**
     * Name of the SIP trunk.
     */
    name?: string;
  }>;
};

export type PostPhoneSipTrunkError = unknown;

export type UpdatePhoneSipTrunkData = {
  body?: {
    /**
     * Account associated with the carrier.
     */
    carrier_account?: string;
    /**
     * Name of the SIP Trunk.
     */
    name?: string;
  };
  path: {
    /**
     * Unique identifier of the sub account.
     */
    accountId: string;
    /**
     * Unique identifier of the SIP trunk.
     */
    sipTrunkId: string;
  };
};

export type UpdatePhoneSipTrunkResponse = unknown;

export type UpdatePhoneSipTrunkError = unknown;

export type AccountPlansData = {
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
};

export type AccountPlansResponse = {
  /**
   * Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type.</a>
   */
  plan_audio?: {
    /**
     * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
     */
    callout_countries?: string;
    /**
     * Dedicated dial-In numbers.
     */
    ddi_numbers?: number;
    /**
     * Next invoice date for the plan.
     */
    next_invoice_date?: string;
    /**
     * Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the "ID" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table.
     */
    premium_countries?: string;
    /**
     * Date at which the plan became effective on the account.
     */
    service_effective_date?: string;
    /**
     * Status of the plan.
     */
    status?: 'active' | 'cancel' | 'expired';
    /**
     * Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the "ID" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table.
     */
    tollfree_countries?: string;
    /**
     * Additional audio conferencing <a href="/api-reference/other-references/plans">plan type.</a>
     */
    type?: string;
  };
  plan_base?: {
    /**
     * Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999.
     */
    hosts?: number;
    /**
     * Next invoice date for the plan.
     */
    next_invoice_date?: string;
    /**
     * Date at which the plan became effective on the account.
     */
    service_effective_date?: string;
    /**
     * Status of the plan.
     */
    status?: 'active' | 'cancel' | 'expired';
    /**
     * Account base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type?: string;
  };
  plan_large_meeting?: Array<{
    /**
     * Account plan number of hosts.
     */
    hosts?: number;
    /**
     * Next invoice date for the plan.
     */
    next_invoice_date?: string;
    /**
     * Date at which the plan became effective on the account.
     */
    service_effective_date?: string;
    /**
     * Status of the plan.
     */
    status?: 'active' | 'cancel' | 'expired';
    /**
     * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type?: string;
  }>;
  /**
   * Phone Plan Object
   */
  plan_phone?: {
    /**
     * Additional phone base plans.
     */
    plan_base?: {
      /**
       * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
       */
      callout_countries?: string;
      /**
       * Next invoice date for the plan.
       */
      next_invoice_date?: string;
      /**
       * Date at which the plan became effective on the account.
       */
      service_effective_date?: string;
      /**
       * Status of the plan.
       */
      status?: 'active' | 'cancel' | 'expired';
      /**
       * Additional phone base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
       */
      type?: string;
    };
    /**
     * Additional phone calling plans.
     */
    plan_calling?: Array<{
      hosts?: number;
      /**
       * Next invoice date for the plan.
       */
      next_invoice_date?: string;
      /**
       * Date at which the plan became effective on the account.
       */
      service_effective_date?: string;
      /**
       * Status of the plan.
       */
      status?: 'active' | 'cancel' | 'expired';
      /**
       * Additional phone calling <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
       */
      type?: string;
    }>;
    /**
     * Additional phone number plans.
     */
    plan_number?: Array<{
      hosts?: number;
      /**
       * Next invoice date for the plan.
       */
      next_invoice_date?: string;
      /**
       * Date at which the plan became effective on the account.
       */
      service_effective_date?: string;
      /**
       * Status of the plan.
       */
      status?: 'active' | 'cancel' | 'expired';
      /**
       * Additional phone number <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
       */
      type?: string;
    }>;
  };
  /**
   * Additional Cloud Recording plan.
   */
  plan_recording?: string;
  /**
   * Next invoice date of Additional Cloud Recording plan.
   */
  plan_recording_next_invoice_date?: string;
  /**
   * Plan start date of Additional Cloud Recording plan.
   */
  plan_recording_service_effective_date?: string;
  /**
   * Status of additional Cloud Recording plan.
   */
  plan_recording_status?: 'Active' | 'Cancelled';
  plan_room_connector?: {
    /**
     * Account plan number of hosts.
     */
    hosts?: number;
    /**
     * Next invoice date for the plan.
     */
    next_invoice_date?: string;
    /**
     * Date at which the plan became effective on the account.
     */
    service_effective_date?: string;
    /**
     * Status of the plan.
     */
    status?: 'active' | 'cancel' | 'expired';
    /**
     * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type?: string;
  };
  plan_webinar?: Array<{
    /**
     * Account plan number of hosts.
     */
    hosts?: number;
    /**
     * Next invoice date for the plan.
     */
    next_invoice_date?: string;
    /**
     * Date at which the plan became effective on the account.
     */
    service_effective_date?: string;
    /**
     * Status of the plan.
     */
    status?: 'active' | 'cancel' | 'expired';
    /**
     * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type?: string;
  }>;
  plan_zoom_rooms?: {
    /**
     * Account plan number of hosts.
     */
    hosts?: number;
    /**
     * Next invoice date for the plan.
     */
    next_invoice_date?: string;
    /**
     * Date at which the plan became effective on the account.
     */
    service_effective_date?: string;
    /**
     * Status of the plan.
     */
    status?: 'active' | 'cancel' | 'expired';
    /**
     * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type?: string;
  };
};

export type AccountPlansError = unknown;

export type AccountPlanCreateData = {
  body: {
    /**
     * Billing Contact object.
     */
    contact?: {
      /**
       * Billing Contact's address.
       */
      address: string;
      /**
       * Billing Contact's apartment/suite.
       */
      apt?: string;
      /**
       * Billing Contact's city.
       */
      city: string;
      /**
       * Billing Contact's Country [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) in abbreviated format.
       */
      country: string;
      /**
       * Billing Contact's email address.
       */
      email: string;
      /**
       * Billing Contact's first name.
       */
      first_name: string;
      /**
       * Billing Contact's last name.
       */
      last_name: string;
      /**
       * Billing Contact's phone number.
       */
      phone_number: string;
      /**
       * Billing Contact's state.
       */
      state: string;
      /**
       * Billing Contact's zip/postal code.
       */
      zip: string;
    };
  } & {
    /**
     * Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type</a>.
     */
    plan_audio?: {
      /**
       * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
       */
      callout_countries?: string;
      /**
       * Dedicated dial-In numbers.
       */
      ddi_numbers?: number;
      /**
       * Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the "ID" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table.
       */
      premium_countries?: string;
      /**
       * Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the "ID" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table.
       */
      tollfree_countries?: string;
      /**
       * Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type</a>.
       */
      type?: string;
    };
    /**
     * Account base plan object.
     */
    plan_base: {
      /**
       * Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999.
       */
      hosts: number;
      /**
       * Account base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
       */
      type: string;
    };
    /**
     * Additional large meeting Plans.
     */
    plan_large_meeting?: Array<{
      /**
       * Account plan number of hosts.
       */
      hosts?: number;
      /**
       * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
       */
      type?: string;
    }>;
    /**
     * Phone Plan Object
     */
    plan_phone?: {
      /**
       * Additional phone base plans.
       */
      plan_base?: {
        /**
         * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
         */
        callout_countries?: string;
        /**
         * Additional phone base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
         */
        type?: string;
      };
      /**
       * Additional phone calling plans.
       */
      plan_calling?: Array<{
        hosts?: number;
        /**
         * Additional phone calling <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
         */
        type?: string;
      }>;
      /**
       * Additional phone number plans.
       */
      plan_number?: Array<{
        hosts?: number;
        /**
         * Additional phone number <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
         */
        type?: string;
      }>;
    };
    /**
     * Additional cloud recording plan.
     */
    plan_recording?: string;
    /**
     * Account plan object.
     */
    plan_room_connector?: {
      /**
       * Account plan number of hosts.
       */
      hosts?: number;
      /**
       * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
       */
      type?: string;
    };
    /**
     * Additional webinar plans.
     */
    plan_webinar?: Array<{
      /**
       * Account plan number of hosts.
       */
      hosts?: number;
      /**
       * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
       */
      type?: string;
    }>;
    /**
     * Account plan object.
     */
    plan_zoom_rooms?: {
      /**
       * Account plan number of hosts.
       */
      hosts?: number;
      /**
       * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
       */
      type?: string;
    };
  };
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
};

export type AccountPlanCreateResponse =
  | unknown
  | {
      /**
       * Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type</a>.
       */
      plan_audio?: {
        /**
         * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
         */
        callout_countries?: string;
        /**
         * Dedicated dial-In numbers.
         */
        ddi_numbers?: number;
        /**
         * Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the "ID" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table.
         */
        premium_countries?: string;
        /**
         * Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the "ID" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table.
         */
        tollfree_countries?: string;
        /**
         * Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type</a>.
         */
        type?: string;
      };
      /**
       * Account base plan object.
       */
      plan_base: {
        /**
         * Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999.
         */
        hosts: number;
        /**
         * Account base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
         */
        type: string;
      };
      /**
       * Additional large meeting Plans.
       */
      plan_large_meeting?: Array<{
        /**
         * Account plan number of hosts.
         */
        hosts?: number;
        /**
         * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
         */
        type?: string;
      }>;
      /**
       * Phone Plan Object
       */
      plan_phone?: {
        /**
         * Additional phone base plans.
         */
        plan_base?: {
          /**
           * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
           */
          callout_countries?: string;
          /**
           * Additional phone base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
           */
          type?: string;
        };
        /**
         * Additional phone calling plans.
         */
        plan_calling?: Array<{
          hosts?: number;
          /**
           * Additional phone calling <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
           */
          type?: string;
        }>;
        /**
         * Additional phone number plans.
         */
        plan_number?: Array<{
          hosts?: number;
          /**
           * Additional phone number <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
           */
          type?: string;
        }>;
      };
      /**
       * Additional cloud recording plan.
       */
      plan_recording?: string;
      /**
       * Account plan object.
       */
      plan_room_connector?: {
        /**
         * Account plan number of hosts.
         */
        hosts?: number;
        /**
         * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
         */
        type?: string;
      };
      /**
       * Additional webinar plans.
       */
      plan_webinar?: Array<{
        /**
         * Account plan number of hosts.
         */
        hosts?: number;
        /**
         * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
         */
        type?: string;
      }>;
      /**
       * Account plan object.
       */
      plan_zoom_rooms?: {
        /**
         * Account plan number of hosts.
         */
        hosts?: number;
        /**
         * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
         */
        type?: string;
      };
    };

export type AccountPlanCreateError = unknown;

export type AccountPlanAddonCreateData = {
  body:
    | {
        /**
         * Number of hosts for this plan.
         */
        hosts: number;
        /**
         * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
         */
        type: string;
      }
    | {
        /**
         * Phone Plan Object
         */
        plan_details: {
          /**
           * Additional phone base plans.
           */
          plan_base?: {
            /**
             * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
             */
            callout_countries?: string;
            /**
             * Additional phone base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
             */
            type?: string;
          };
          /**
           * Additional phone calling plans.
           */
          plan_calling?: Array<{
            hosts?: number;
            /**
             * Additional phone calling <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
             */
            type?: string;
          }>;
          /**
           * Additional phone number plans.
           */
          plan_number?: Array<{
            hosts?: number;
            /**
             * Additional phone number <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
             */
            type?: string;
          }>;
        };
        /**
         * Zoom Phone Plan `plan_phone`
         */
        type: string;
      };
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
};

export type AccountPlanAddonCreateResponse = unknown;

export type AccountPlanAddonCreateError = unknown;

export type AccountPlanAddonUpdateData = {
  body: {
    /**
     * Number of hosts for this plan.
     */
    hosts: number;
    /**
     * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type: string;
  };
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
};

export type AccountPlanAddonUpdateResponse = unknown | any;

export type AccountPlanAddonUpdateError = unknown;

export type AccountPlanAddonCancelData = {
  body?: {
    /**
     * The action that needs to be taken for this sub account. Value must be set to "cancel".
     */
    action?: 'cancel';
    /**
     * Additional comments about the cancellation decision.
     */
    comment?: string;
    /**
     * The reason for the cancellation of plan. Reason options:<br>`1` - I am no longer working remote.<br>`2` - I had challenges getting the support I needed.<br>`3` - Features in the Basic Free Plan are sufficient.<br>`4` - The expense is too high.<br>`5` - I purchased the wrong product.<br> `6` - Paid purchase not needed right now, will repurchase in the future.
     */
    reason?: 1 | 2 | 3 | 4 | 5 | 6;
    /**
     * Plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans).
     */
    type?: string;
  };
  path: {
    accountId: string;
  };
};

export type AccountPlanAddonCancelResponse = unknown;

export type AccountPlanAddonCancelError = unknown;

export type AccountPlanBaseUpdateData = {
  body: {
    /**
     * Account base plan number of hosts. For a Pro Plan please select a value between 1 and 9. For a Business Plan please select a value between 10 and 49. For a Education Plan please select a value between 20 and 149. For a Free Trial Plan please select a value between 1 and 9999.
     */
    hosts: number;
    /**
     * Account base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
     */
    type: string;
  };
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
};

export type AccountPlanBaseUpdateResponse = unknown | any;

export type AccountPlanBaseUpdateError = unknown;

export type AccountPlanBaseDeleteData = {
  body?: {
    /**
     * The action that needs to be taken for this sub account. Value must be set to "cancel".
     */
    action: string;
    /**
     * Additional comments about the cancellation decision.
     */
    comment?: string;
    /**
     * The reason for the cancellation of plan. Reason options:<br>`1` - I am no longer working remote.<br>`2` - I had challenges getting the support I needed.<br>`3` - Features in the Basic Free Plan are sufficient.<br>`4` - The expense is too high.<br>`5` - I purchased the wrong product.<br> `6` - Paid purchase not needed right now, will repurchase in the future.
     */
    reason?: 1 | 2 | 3 | 4 | 5 | 6;
  };
  path: {
    accountId: string;
  };
};

export type AccountPlanBaseDeleteResponse =
  | unknown
  | {
      [key: string]: unknown;
    };

export type AccountPlanBaseDeleteError = unknown;

export type GetPlanUsageData = {
  path: {
    accountId: string;
  };
};

export type GetPlanUsageResponse = {
  /**
   * The base plan subscribed for the sub account.
   */
  plan_base?: Array<{
    /**
     * Number of hosts under the base plan.
     */
    hosts?: number;
    /**
     * Type of the base plan.
     */
    type?: string;
    /**
     * Total number of usage of this plan.
     */
    usage?: number;
  }>;
  /**
   * Large Meeting Plan
   */
  plan_large_meeting?: Array<{
    /**
     * Number of hosts in this plan.
     */
    hosts?: number;
    /**
     * Large meeting Plan Type
     */
    type?: string;
    /**
     * Number of usages for this account plan.
     */
    usage?: number;
  }>;
  /**
   * Recording Plan
   */
  plan_recording?: {
    /**
     * Recording free storage.
     */
    free_storage?: string;
    /**
     * Amount of free storage used.
     */
    free_storage_usage?: string;
    /**
     * Recording plan storage.
     */
    plan_storage?: string;
    plan_storage_exceed?: string;
    /**
     * Recording storage usage.
     */
    plan_storage_usage?: string;
    /**
     * Recording plan type.
     */
    type?: string;
  };
  /**
   * [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.
   */
  plan_united?: {
    /**
     * Number of licenses purchased.
     */
    hosts?: number;
    /**
     * Name of the plan.
     */
    name?: string;
    /**
     * Plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-united-plans).
     */
    type?: string;
    /**
     * Number of licenses that are already being used.
     */
    usage?: number;
  };
  /**
   * Webinar Plan
   */
  plan_webinar?: Array<{
    /**
     * The number of hosts in this plan.
     */
    hosts?: number;
    /**
     * The type of Webinar plan for the account.
     */
    type?: string;
    /**
     * The total number of plan usage.
     */
    usage?: number;
  }>;
  /**
   * Zoom Rooms Plan
   */
  plan_zoom_rooms?: Array<{
    /**
     * The number of hosts in this plan.
     */
    hosts?: number;
    /**
     * THe plan type for Zoom room plan.
     */
    type?: string;
    /**
     * The total number of usage for this plan.
     */
    usage?: number;
  }>;
};

export type GetPlanUsageError = unknown;

export type GetAccountCloudRecordingData = {
  path: {
    /**
     * Unique identifier of the account.
     */
    accountId: string;
  };
  query?: {
    /**
     * The start date in UTC for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of 'from' field will be “2020-06-30” and the value of the 'to' field will be “2020-07-01”.
     */
    from?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * The end date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month.
     */
    to?: string;
  };
};

export type GetAccountCloudRecordingResponse = {
  /**
   * The start date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of 'from' field will be “2020-06-30” and the value of the 'to' field will be “2020-07-01”.
   */
  from?: string;
  /**
   * Meetings Object
   */
  meetings?: Array<{
    /**
     * The scheduled duration of the meeting.
     */
    duration?: number;
    /**
     * User ID of the user who is set as the host of the meeting.
     */
    host_id?: string;
    /**
     * Meeting ID - Unique Identifier of a meeting, also known as Meeting Number.
     */
    id?: string;
    /**
     * The total number of recordings retrieved from the account.
     */
    recording_count?: number;
    /**
     * Recording files object
     */
    recording_files?: Array<{
      /**
       * The URL using which the recording can be downloaded
       */
      download_url?: string;
      /**
       * The size of the recording file in bytes.
       */
      file_size?: number;
      /**
       * The recording file type. The value of this field could be one of the following:<br>
       * * `MP4`: Video file of the recording.<br>
       * * `M4A` Audio-only file of the recording.<br>
       * * `TB`: Timestamp file of the recording in JSON format.<br>
       * * `TRANSCRIPT`: Transcription file of the recording in VTT format.<br>
       * * `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>
       * * `CC`: File containing closed captions of the recording in VTT file format.<br>
       * * `CSV`: File containing polling data in csv format.
       *
       * A recording file object with file type of either `CC` or `TB` **does not have** the following properties:<br>
       * `id`, `status`, `file_size`, `recording_type`, and `play_url`.
       */
      file_type?: 'MP4' | 'M4A' | 'CHAT' | 'TRANSCRIPT' | 'CC' | 'CSV' | 'TB';
      /**
       * Recording ID. Identifier for the recording.
       */
      id?: string;
      /**
       * Universally unique identifier of the meeting instance that was being recorded.
       */
      meeting_id?: string;
      /**
       * The URL using which recording can be played.
       */
      play_url?: string;
      /**
       * The date and time at which the recording ended.
       */
      recording_end?: string;
      /**
       * The date and time at which the recording started.
       */
      recording_start?: string;
      /**
       * The recording type. The value of this field can be one of the following:<br>
       * * `shared_screen_with_speaker_view(CC)`
       * * `shared_screen_with_speaker_view`
       * * `shared_screen_with_gallery_view`
       * * `shared_screen`
       * * `active_speaker`
       * * `gallery_view`
       * * `audio_only`
       * * `audio_transcript`
       * * `chat_file`
       * * `host_video`
       * * `closed_caption`
       * * `poll`
       * * `timeline`
       * * `thumbnail`
       *
       */
      recording_type?:
        | 'shared_screen_with_speaker_view(CC)'
        | 'shared_screen_with_speaker_view'
        | 'shared_screen_with_gallery_view'
        | 'active_speaker'
        | 'gallery_view'
        | 'shared_screen'
        | 'audio_only'
        | 'audio_transcript'
        | 'chat_file'
        | 'poll'
        | 'host_video'
        | 'closed_caption'
        | 'timeline'
        | 'thumbnail';
      /**
       * The status of the recording, either `completed` or `processing`.
       */
      status?: 'completed' | 'processing';
    }>;
    /**
     * The date and time at which the meeting started.
     */
    start_time?: string;
    /**
     * Meeting topic.
     */
    topic?: string;
    /**
     * The total size of the meeting in bytes.
     */
    total_size?: number;
    /**
     * Universally Unique Identifier of a meeting instance. Each meeting instance will have its own meeting UUID.
     */
    uuid?: string;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The end date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month.
   */
  to?: string;
  /**
   * Total number of records found for this request across all pages.
   */
  total_records?: number;
};

export type GetAccountCloudRecordingError = unknown;

export type AccountSettingsData = {
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
  query?: {
    /**
     * Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
     * {
     * "schedule_meeting": {
     * "host_video": false
     * }
     * }
     * <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
     */
    custom_query_fields?: string;
    /**
     * `meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the account.<br>`security`: Use this query parameter to view security settings such as password requirements for user login, two factor authentication etc., applied on the account.<br>
     * `meeting_security`: Use this query parameter to view meeting security settings applied on the account.<br>
     */
    option?: 'meeting_authentication' | 'recording_authentication';
  };
};

export type AccountSettingsResponse =
  | {
      /**
       * Account Settings: Notification.
       */
      email_notification?: {
        /**
         * Notify when an alternative host is set or removed from a meeting.
         */
        alternative_host_reminder?: boolean;
        /**
         * Notify the host and participants when a meeting is cancelled.
         */
        cancel_meeting_reminder?: boolean;
        /**
         * Notify host when cloud recording is available.
         */
        cloud_recording_avaliable_reminder?: boolean;
        /**
         * Notify the host when participants join the meeting before them.
         */
        jbh_reminder?: boolean;
        /**
         * Notify user when host licenses are running low.
         */
        low_host_count_reminder?: boolean;
        /**
         * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
         */
        schedule_for_reminder?: boolean;
      };
      /**
       * Account Settings: Feature.
       */
      feature?: {
        /**
         * Set the maximum number of participants a host can have in a single meeting.
         */
        meeting_capacity?: number;
      };
      /**
       * Account Settings: In Meeting.
       */
      in_meeting?: {
        /**
         * Identify guest participants in a meeting or webinar.
         */
        alert_guest_join?: boolean;
        /**
         * Allow live streaming.
         */
        allow_live_streaming?: boolean;
        /**
         * If the value of this field is set to `true`, meeting participants and webinar panelists can be allowed to rename themselves during a meeting or a webinar.
         *
         */
        allow_participants_to_rename?: boolean;
        /**
         * Show the Zoom desktop application when sharing screens.
         */
        allow_show_zoom_windows?: boolean;
        /**
         * Allow participants to use annotation tools to add information to shared screens.
         */
        annotation?: boolean;
        /**
         * Allow an anonymous Q&A in a webinar.
         */
        anonymous_question_answer?: boolean;
        /**
         * Allow host to put attendee on hold.
         *
         * **This field has been deprecated and is no longer supported.**
         */
        attendee_on_hold?: boolean;
        /**
         * Enable users to see and add contacts to the "auto-answer group" in the chat contact list. Any call from members of this group will automatically be answered.
         */
        auto_answer?: boolean;
        /**
         * Automatically save all in-meeting chats so that the host does not need to manually save the chat transcript after the meeting starts.
         */
        auto_saving_chat?: boolean;
        /**
         * Allow host to split meeting participants into separate, smaller rooms.
         */
        breakout_room?: boolean;
        /**
         * Allow meeting participants to send a message that is visible to all participants.
         */
        chat?: boolean;
        /**
         * Allow a host to type closed captions. Enable a host to assign a participant or third party device to add closed captions.
         */
        closed_caption?: boolean;
        /**
         * Allow the host to add co-hosts.
         */
        co_host?: boolean;
        /**
         * If set to `true`, account owners and admins on paid accounts can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
         */
        custom_data_center_regions?: boolean;
        /**
         * Custom live streaming.
         */
        custom_live_streaming_service?: boolean;
        /**
         * Custom service instructions.
         */
        custom_service_instructions?: string;
        /**
         * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
         *
         */
        data_center_regions?: 'EU' | 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA';
        /**
         * DSCP audio.
         */
        dscp_audio?: number;
        /**
         * DSCP marking.
         */
        dscp_marking?: boolean;
        /**
         * DSCP video.
         */
        dscp_video?: number;
        /**
         * Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).
         */
        e2e_encryption?: boolean;
        /**
         * Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.
         */
        entry_exit_chime?: 'host' | 'all' | 'none';
        /**
         * Allow another user to take control of your camera during a meeting.
         */
        far_end_camera_control?: boolean;
        /**
         * Add a "Feedback" tab to the Windows Settings or Mac Preferences dialog. Enable users to provide feedback to Zoom at the end of the meeting.
         */
        feedback?: boolean;
        /**
         * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled on the account or not.
         */
        file_transfer?: boolean;
        /**
         * Activate higher quality video for host and participants.
         * Please note: This will use more bandwidth.
         */
        group_hd?: boolean;
        /**
         * Enable or disable meeting reactions. <br>
         * `true`: Allow meeting participants to communicate without interrupting by reacting with an emoji that shows on their video.<br>
         * `false`: Do not enable meeting reactions.
         */
        meeting_reactions?: boolean;
        /**
         * Allow users to select original sound in their client settings.
         */
        original_audio?: boolean;
        /**
         * Peer to peer connection while only two people are in a meeting.
         */
        p2p_connetion?: boolean;
        /**
         * Peer to peer listening ports range.
         */
        p2p_ports?: boolean;
        /**
         * Add "Polls" to the meeting controls.
         */
        polling?: boolean;
        /**
         * The listening ports range, separated by a comma (ex 55,56). The ports range must be between 1 to 65535.
         */
        ports_range?: string;
        /**
         * Display a thumbs up or down survey at the end of each meeting.
         */
        post_meeting_feedback?: boolean;
        /**
         * Allow a meeting participant to send a private message to another participant.
         */
        private_chat?: boolean;
        /**
         * Record and play their own voice.
         */
        record_play_own_voice?: boolean;
        /**
         * Allow users to request remote control.
         */
        remote_control?: boolean;
        /**
         * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the account or not.
         */
        request_permission_to_unmute?: boolean;
        /**
         * Allow screen sharing.
         */
        screen_sharing?: boolean;
        /**
         * Only show the default email when sending email invites.
         */
        sending_default_email_invites?: boolean;
        /**
         * If the value of this field is set to `true`, you will allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is a workaround for participants who are unable to download, install, or run applications. Note that the meeting experience from the browser is limited.
         */
        show_a_join_from_your_browser_link?: boolean;
        /**
         * Always show the meeting control toolbar.
         */
        show_meeting_control_toolbar?: boolean;
        /**
         * Allow users to select stereo audio in their client settings.
         */
        stereo_audio?: boolean;
        /**
         * Use HTML formatted email for the Outlook plugin.
         */
        use_html_format_email?: boolean;
        /**
         * Allow users to replace their background with any selected image. Choose or upload an image in the Zoom desktop application settings.
         */
        virtual_background?: boolean;
        /**
         * Settings to manage virtual background.
         */
        virtual_background_settings?: {
          /**
           * Allow users to upload custom backgrounds.
           */
          allow_upload_custom?: boolean;
          /**
           * Allow use of videos for virtual backgrounds.
           */
          allow_videos?: boolean;
          /**
           * Enable virtual background.
           */
          enable?: boolean;
          files?: Array<{
            /**
             * Unique identifier of the file.
             */
            id?: string;
            /**
             * Indicates whether or not this file is the default virtual background file.
             */
            is_default?: boolean;
            /**
             * File name.
             */
            name?: string;
            /**
             * File size.
             */
            size?: string;
            /**
             * File type.
             */
            type?: string;
          }>;
        };
        /**
         * Add a watermark when viewing a shared screen.
         */
        watermark?: boolean;
        /**
         * Allow a Q&A in a webinar.
         */
        webinar_question_answer?: boolean;
        /**
         * Allow participants to share a whiteboard that includes annotation tools.
         */
        whiteboard?: boolean;
        /**
         * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
         * `host`: Only host can share the screen.<br>
         * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
         *
         */
        who_can_share_screen?: 'host' | 'all';
        /**
         * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
         * `host`: Only a host can share the screen when someone else is sharing.<br>
         * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
         *
         */
        who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
        /**
         * Workplace by facebook.
         */
        workplace_by_facebook?: boolean;
      };
      /**
       * Account Settings: Integration.
       */
      integration?: {
        /**
         * Enable users who join a meeting from their mobile device to share content from their Box account.
         */
        box?: boolean;
        /**
         * Enable users who join a meeting from their mobile device to share content from their Dropbox account.
         */
        dropbox?: boolean;
        /**
         * Enable meetings to be scheduled using Google Calendar.
         */
        google_calendar?: boolean;
        /**
         * Enable users who join a meeting from their mobile device to share content from their Google Drive.
         */
        google_drive?: boolean;
        /**
         * Enable users to control a connected Kubi device from within a Zoom meeting.
         */
        kubi?: boolean;
        /**
         * Enable users who join a meeting from their mobile device to share content from their Microsoft OneDrive account.
         */
        microsoft_one_drive?: boolean;
      };
      profile?: {
        recording_storage_location?: {
          /**
           * Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.
           *
           * Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
           */
          allowed_values?: Array<string>;
          /**
           * Abbreviated country code.
           */
          value?: string;
        };
      };
      /**
       * Account Settings: Recording.
       */
      recording?: {
        /**
         * Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.
         */
        account_user_access_recording?: boolean;
        /**
         * Allow recovery of deleted cloud recordings from trash.
         * If the value of this field is set to `true`, deleted cloud recordings will be kept in trash for 30 days after deletion and can be recovered within that period.
         */
        allow_recovery_deleted_cloud_recordings?: boolean;
        /**
         * [Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted with archiving solution access by the Zoom support team.
         */
        archive?: {
          /**
           * Enable the archiving feature.
           */
          enable?: boolean;
          settings?: {
            /**
             * Include in-meeting and/or in-webinar audio in the archive.
             */
            audio_file?: boolean;
            /**
             * Include closed caption or transcript in the archive.
             */
            cc_transcript_file?: boolean;
            /**
             * Include in-meeting chat in the archive.
             */
            chat_file?: boolean;
            /**
             * Include user email in in-meeting chat file.
             */
            chat_with_sender_email?: boolean;
            /**
             * Include in-meeting and/or in-webinar video in the archive.
             */
            video_file?: boolean;
          };
          /**
           * Archive types:
           *
           * * `1`: Only meetings are archived.<br>
           * * `2`: Only webinars are archived.<br>
           * * `3`: Both meetings and webinars are archived.
           */
          type?: 1 | 2 | 3;
        };
        /**
         * Allow Zoom to permanantly delete recordings automatically after a specified number of days.
         */
        auto_delete_cmr?: boolean;
        /**
         * When `auto_delete_cmr` function is 'true' this value will set the number of days before the auto deletion of cloud recordings.
         */
        auto_delete_cmr_days?: number;
        /**
         * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
         */
        auto_recording?: 'local' | 'cloud' | 'none';
        /**
         * Allow hosts to record and save the meeting in the cloud.
         */
        cloud_recording?: boolean;
        /**
         * Cloud recording downloads.
         */
        cloud_recording_download?: boolean;
        /**
         * Only the host can download cloud recordings.
         */
        cloud_recording_download_host?: boolean;
        /**
         * If the value of this field is set to `true`, hosts will be able to delete the recordings. If this option is set to `false`, the recordings cannot be deleted by the host and only admin can delete them.
         *
         */
        host_delete_cloud_recording?: boolean;
        /**
         * Setting to allow cloud recording access only from specific IP address ranges.
         *
         */
        ip_address_access_control?: {
          /**
           * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
           *
           *
           */
          enable?: boolean;
          /**
           * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
           *
           * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
           *
           *
           */
          ip_addresses_or_ranges?: string;
        };
        /**
         * Allow hosts and participants to record the meeting using a local file.
         */
        local_recording?: boolean;
        /**
         * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
         *
         */
        prevent_host_access_recording?: boolean;
        /**
         * Record an audio only file.
         */
        record_audio_file?: boolean;
        /**
         * Record the gallery view with a shared screen.
         */
        record_gallery_view?: boolean;
        /**
         * Record the active speaker with a shared screen.
         */
        record_speaker_view?: boolean;
        /**
         * Automatically transcribe the audio of the meeting or webinar to the cloud.
         */
        recording_audio_transcript?: boolean;
        /**
         * Show a disclaimer to participants before a recording starts
         *
         */
        recording_disclaimer?: boolean;
        /**
         * This object represents the minimum password requirements set for recordings via Account Recording Settings.
         */
        recording_password_requirement?: {
          /**
           * Indicates whether or not password must contain at least one alphabetical letter (a, b, c..).
           */
          have_letter?: boolean;
          /**
           * Indicates whether or not password must contain at least one number(1, 2, 3..).
           */
          have_number?: boolean;
          /**
           * Indicates whether or not password must contain at least one special character(!, @, #..).
           */
          have_special_character?: boolean;
          /**
           * Minimum required length for the password.
           */
          length?: number;
          /**
           * Indicates whether or not password must contain only numeric characters.
           */
          only_allow_numeric?: boolean;
        };
        /**
         * Require a passcode to access existing cloud recordings.
         */
        required_password_for_existing_cloud_recordings?: boolean;
        /**
         * Save the chat text from the meeting.
         */
        save_chat_text?: boolean;
        /**
         * Add a timestamp to the recording.
         */
        show_timestamp?: boolean;
      };
      /**
       * Account Settings: Schedule Meeting.
       */
      schedule_meeting?: {
        /**
         * Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.
         */
        audio_type?: 'both' | 'telephony' | 'voip' | 'thirdParty';
        /**
         * Only Zoom users who are signed in can join meetings.
         */
        enforce_login?: boolean;
        /**
         * Only signed in users with a specified domain can join the meeting.
         */
        enforce_login_domains?: string;
        /**
         * Only signed in users with a specific domain can join meetings.
         */
        enforce_login_with_domains?: boolean;
        /**
         * Require a password for Personal Meetings if attendees can join before host.
         */
        force_pmi_jbh_password?: boolean;
        /**
         * Start meetings with the host video on.
         */
        host_video?: boolean;
        /**
         * Allow participants to join the meeting before the host arrives.
         */
        join_before_host?: boolean;
        /**
         * Account wide meeting/webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
         */
        meeting_password_requirement?: {
          consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
          /**
           * If set to `true`, the password must contain at least 1 letter (such as a,b,c...).
           *
           */
          have_letter?: boolean;
          /**
           * If set to `true`, the password must contain at least 1 number (such as 1,2,3...).
           */
          have_number?: boolean;
          /**
           * If set to `true`, the password must have at least 1 special character (!,@,#...).
           */
          have_special_character?: boolean;
          /**
           * If set to `true`, the password must include both uppercase and lowercase characters.
           */
          have_upper_and_lower_characters?: boolean;
          /**
           * The minimum length that the meeting/webinar password needs to have.
           */
          length?: number;
          /**
           * If set to `true`, the password must only contain numbers and no other characters.
           */
          only_allow_numeric?: boolean;
          /**
           * If set to `true`, users will be informed if the provided password is weak.
           */
          weak_enhance_detection?: boolean;
        };
        /**
         * Always display "Zoom Meeting" as the meeting topic.
         */
        not_store_meeting_topic?: boolean;
        /**
         * Start meetings with the participant video on. Participants can change this setting during the meeting.
         */
        participant_video?: boolean;
        /**
         * Personal Meeting Setting.<br><br>
         * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
         * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
         * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
         *
         *
         *
         */
        personal_meeting?: boolean;
        /**
         * Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
         *
         */
        require_password_for_instant_meetings?: boolean;
        /**
         * Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
         *
         */
        require_password_for_pmi_meetings?: 'jbh_only' | 'all' | 'none';
        /**
         * Require a password for meetings which have already been scheduled
         *
         */
        require_password_for_scheduled_meetings?: boolean;
        /**
         * Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
         */
        require_password_for_scheduling_new_meetings?: boolean;
        /**
         * Use Personal Meeting ID (PMI) when starting an instant meeting
         *
         */
        use_pmi_for_instant_meetings?: boolean;
        /**
         * Use Personal Meeting ID (PMI) when scheduling a meeting
         *
         */
        use_pmi_for_scheduled_meetings?: boolean;
      };
      /**
       * [Security settings](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) of an Account.
       */
      security?: {
        /**
         * Only account administrators can change a user's username and picture.
         */
        admin_change_name_pic?: boolean;
        /**
         * Hide billing information.
         */
        hide_billing_info?: boolean;
        /**
         * Allow users to import photos from a photo library on a  device.
         */
        import_photos_from_devices?: boolean;
        /**
         * This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users' Zoom login password.
         */
        password_requirement?: {
          /**
           *
           * Specify the max length of consecutive characters(abcde...) that can be used in a password.
           * If you set the value of this field to `0`, no restriction will be applied on consecutive characters.
           *
           * If you would like to set this restriction, you can specify a number between 4 and 8 that define the maximum allowed length for consecutive characters in a password.
           *
           * The max allowed length will be `n-1` where `n` refers to the value you provide for this field.  For instance, if you provide `4` as the value, there can only be a maximum of `3` consecutive characters in a password(example: abc1x@8fdh).
           */
          consecutive_characters_length?: number;
          /**
           * If the value of this field is set to `true`, the password must have at least one special character(!, @, #...).
           */
          have_special_character?: boolean;
          /**
           * Specify a minimum length for the password. The password length can be from a minimum of 9 characters, up to 14 characters. If you provide `0` as the value of this field, this field will be disabled and not be used and the basic password length requirement (minimum of 8 characters) will be applied for the requirement.
           */
          minimum_password_length?: number;
          /**
           * If the value of this field is set to `true`, user passwords will have to pass detection through a weak password dictionary in case hackers use simple passwords to sign in to your users’ accounts.
           */
          weak_enhance_detection?: boolean;
        };
        /**
         * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Client app after a set amount of time. <br>
         *
         * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Client. The value for the period of inactivity can be one of the following:<br>
         *
         * `5`: 5 minutes<br>
         * `10`: 10 minutes<br>
         * `15`: 15 minutes<br>
         * `30`: 30 minutes<br>
         * `45`: 45 minutes<br>
         * `60`: 60 minutes<br>
         * `90`: 90 minutes<br>
         * `120`: 120 minutes
         *
         */
        sign_again_period_for_inactivity_on_client?: number;
        /**
         * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Web Portal after a set amount of time. <br>
         *
         * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Web Portal. The value for the period of inactivity can be one of the following:<br>
         *
         * `5`: 5 minutes<br>
         * `10`: 10 minutes<br>
         * `15`: 15 minutes<br>
         * `30`: 30 minutes<br>
         * `60`: 60 minutes<br>
         * `120`: 120 minutes
         *
         *
         *
         *
         */
        sign_again_period_for_inactivity_on_web?: number;
        /**
         * Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
         * `all`: Two factor authentication will be enabled for all users in the account.<br>
         * `none`: Two factor authentication is disabled.<br>
         * `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
         * `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
         * `sign_in_with_two_factor_auth_roles` field.
         *
         */
        sign_in_with_two_factor_auth?: 'all' | 'group' | 'role' | 'none';
        /**
         * This field contains group IDs of groups that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `group`
         */
        sign_in_with_two_factor_auth_groups?: Array<string>;
        /**
         * This field contains role IDs of roles that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `role`.
         */
        sign_in_with_two_factor_auth_roles?: Array<string>;
      };
      /**
       * Account Settings: Telephony.
       */
      telephony?: {
        /**
         * Third party audio conference info.
         */
        audio_conference_info?: string;
        /**
         * Indicates where most of the participants call into or call from duriing a meeting.
         */
        telephony_regions?: {
          /**
           * Telephony region options provided by Zoom to select from.
           */
          allowed_values?: Array<string>;
          /**
           * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
           */
          selection_values?: Array<string>;
        };
        /**
         * Users can join the meeting using the existing third party audio configuration.
         */
        third_party_audio?: boolean;
      };
      /**
       * Account Settings: TSP.
       */
      tsp?: {
        /**
         * Call Out
         */
        call_out?: boolean;
        /**
         * Call Out Countries/Regions
         */
        call_out_countries?: Array<unknown>;
        /**
         * Display toll-free numbers
         */
        display_toll_free_numbers?: boolean;
        /**
         * Show international numbers link on the invitation email
         */
        show_international_numbers_link?: boolean;
      };
      /**
       * Account Settings: Zoom Rooms.
       */
      zoom_rooms?: {
        /**
         * Automatic start and stop for scheduled meetings.
         */
        auto_start_stop_scheduled_meetings?: boolean;
        /**
         * Cloud recording for instant meetings.
         */
        cmr_for_instant_meeting?: boolean;
        /**
         * Shift all meetings to private.
         */
        force_private_meeting?: boolean;
        /**
         * Hide host and meeting ID from private meetings.
         */
        hide_host_information?: boolean;
        /**
         * Display meeting list with calendar integration.
         */
        list_meetings_with_calendar?: boolean;
        /**
         * Start AirPlay service manually.
         */
        start_airplay_manually?: boolean;
        /**
         * Automatic direct sharing using an ultrasonic proximity signal.
         */
        ultrasonic?: boolean;
        /**
         * Upcoming meeting alert.
         */
        upcoming_meeting_alert?: boolean;
        /**
         * Weekly system restart.
         */
        weekly_system_restart?: boolean;
        /**
         * Zoom Room post meeting feedback.
         */
        zr_post_meeting_feedback?: boolean;
      };
    }
  | (
      | {
          /**
           * Meeting Authentication Options
           */
          authentication_options?: Array<{
            /**
             * Authentication default option
             */
            default_option?: boolean;
            /**
             * Authentication domians
             */
            domains?: string;
            /**
             * Authentication id
             */
            id?: string;
            /**
             * Authentication name
             */
            name?: string;
            /**
             *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
             * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
             * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
             * * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
             */
            type?: 'enforce_login' | 'enforce_login_with_same_account' | 'enforce_login_with_domains';
            /**
             * Authentication visible
             */
            visible?: boolean;
          }>;
          /**
           * Only authenticated users can join meetings
           */
          meeting_authentication?: boolean;
        }
      | {
          authentication_options?: Array<{
            /**
             * Authentication default option
             */
            default_option?: boolean;
            /**
             * Authentication domians
             */
            domains?: string;
            /**
             * Authentication id
             */
            id?: string;
            /**
             * Authentication name
             */
            name?: string;
            /**
             * Authentication type
             */
            type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
            /**
             * Authentication visible
             */
            visible?: boolean;
          }>;
          /**
           * Only authenticated users can view cloud recordings
           */
          recording_authentication?: boolean;
        }
    )
  | {
      /**
       * Only account administrators can change a user's username and picture.
       */
      admin_change_name_pic?: boolean;
      /**
       * Hide billing information.
       */
      hide_billing_info?: boolean;
      /**
       * Allow users to import photos from a photo library on a  device.
       */
      import_photos_from_devices?: boolean;
      /**
       * This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users' Zoom login password.
       */
      password_requirement?: {
        /**
         *
         * Specify the max length of consecutive characters(abcde...) that can be used in a password.
         * If you set the value of this field to `0`, no restriction will be applied on consecutive characters.
         *
         * If you would like to set this restriction, you can specify a number between 4 and 8 that define the maximum allowed length for consecutive characters in a password.
         *
         * The max allowed length will be `n-1` where `n` refers to the value you provide for this field.  For instance, if you provide `4` as the value, there can only be a maximum of `3` consecutive characters in a password(example: abc1x@8fdh).
         */
        consecutive_characters_length?: number;
        /**
         * If the value of this field is set to `true`, the password must have at least one special character(!, @, #...).
         */
        have_special_character?: boolean;
        /**
         * Specify a minimum length for the password. The password length can be from a minimum of 9 characters, up to 14 characters. If you provide `0` as the value of this field, this field will be disabled and not be used and the basic password length requirement (minimum of 8 characters) will be applied for the requirement.
         */
        minimum_password_length?: number;
        /**
         * If the value of this field is set to `true`, user passwords will have to pass detection through a weak password dictionary in case hackers use simple passwords to sign in to your users’ accounts.
         */
        weak_enhance_detection?: boolean;
      };
      /**
       * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Client app after a set amount of time. <br>
       *
       * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Client. The value for the period of inactivity can be one of the following:<br>
       *
       * `5`: 5 minutes<br>
       * `10`: 10 minutes<br>
       * `15`: 15 minutes<br>
       * `30`: 30 minutes<br>
       * `45`: 45 minutes<br>
       * `60`: 60 minutes<br>
       * `90`: 90 minutes<br>
       * `120`: 120 minutes
       *
       */
      sign_again_period_for_inactivity_on_client?: number;
      /**
       * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Web Portal after a set amount of time. <br>
       *
       * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Web Portal. The value for the period of inactivity can be one of the following:<br>
       *
       * `5`: 5 minutes<br>
       * `10`: 10 minutes<br>
       * `15`: 15 minutes<br>
       * `30`: 30 minutes<br>
       * `60`: 60 minutes<br>
       * `120`: 120 minutes
       *
       *
       *
       *
       */
      sign_again_period_for_inactivity_on_web?: number;
      /**
       * Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
       * `all`: Two factor authentication will be enabled for all users in the account.<br>
       * `none`: Two factor authentication is disabled.<br>
       * `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
       * `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
       * `sign_in_with_two_factor_auth_roles` field.
       *
       */
      sign_in_with_two_factor_auth?: 'all' | 'group' | 'role' | 'none';
      /**
       * This field contains group IDs of groups that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `group`
       */
      sign_in_with_two_factor_auth_groups?: Array<string>;
      /**
       * This field contains role IDs of roles that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `role`.
       */
      sign_in_with_two_factor_auth_roles?: Array<string>;
    }
  | {
      meeting_security?: {
        /**
         * `true`: Require that all meetings are secured with at least one security option.
         *
         * This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
         */
        auto_security?: boolean;
        /**
         * If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
         *
         */
        embed_password_in_join_link?: boolean;
        /**
         * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
         * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
         *
         * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
         */
        encryption_type?: 'enhanced_encryption' | 'e2ee';
        /**
         * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
         */
        end_to_end_encrypted_meetings?: boolean;
        /**
         * If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.
         */
        meeting_password?: boolean;
        /**
         * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
         */
        meeting_password_requirement?: {
          consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
          /**
           * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
           *
           */
          have_letter?: boolean;
          /**
           * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
           */
          have_number?: boolean;
          /**
           * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
           */
          have_special_character?: boolean;
          /**
           * If set to `true`, the passcode must include both uppercase and lowercase characters.
           */
          have_upper_and_lower_characters?: boolean;
          /**
           * The minimum length that the meeting/webinar passcode needs to have.
           */
          length?: number;
          /**
           * If set to `true`, the passcode must only contain numbers and no other characters.
           */
          only_allow_numeric?: boolean;
          /**
           * If set to `true`, users will be informed if the provided passcode is weak.
           */
          weak_enhance_detection?: boolean;
        };
        /**
         * Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.
         */
        phone_password?: boolean;
        /**
         * If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
         *
         */
        pmi_password?: boolean;
        /**
         * Require a passcode for meetings which have already been scheduled.
         *
         */
        require_password_for_scheduled_meeting?: boolean;
        /**
         * Require a passcode for webinars which have already been scheduled.
         *
         */
        require_password_for_scheduled_webinar?: boolean;
        /**
         * When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
         *
         */
        waiting_room?: boolean;
        /**
         * Specify the settings to be applied if waiting room is enabled.
         */
        waiting_room_settings?: {
          /**
           *
           *
           * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
           * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
           */
          participants_to_place_in_waiting_room?: 0 | 1 | 2;
          /**
           * Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
           * `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
           *
           *
           *
           */
          users_who_can_admit_participants_from_waiting_room?: number;
          /**
           * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
           */
          whitelisted_domains_for_waiting_room?: string;
        };
        /**
         * If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
         *
         */
        webinar_password?: boolean;
      };
    };

export type AccountSettingsError = unknown;

export type AccountSettingsUpdateData = {
  body:
    | {
        /**
         * Account Settings: Notification.
         */
        email_notification?: {
          /**
           * Notify when an alternative host is set or removed from a meeting.
           */
          alternative_host_reminder?: boolean;
          /**
           * Notify the host and participants when a meeting is cancelled.
           */
          cancel_meeting_reminder?: boolean;
          /**
           * Notify host when cloud recording is available.
           */
          cloud_recording_avaliable_reminder?: boolean;
          /**
           * Notify the host when participants join the meeting before them.
           */
          jbh_reminder?: boolean;
          /**
           * Notify user when host licenses are running low.
           */
          low_host_count_reminder?: boolean;
          /**
           * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
           */
          schedule_for_reminder?: boolean;
        };
        /**
         * Account Settings: Feature.
         */
        feature?: {
          /**
           * Set the maximum number of participants a host can have in a single meeting.
           */
          meeting_capacity?: number;
        };
        /**
         * Account Settings: In Meeting.
         */
        in_meeting?: {
          /**
           * Identify guest participants in a meeting or webinar.
           */
          alert_guest_join?: boolean;
          /**
           * Allow live streaming.
           */
          allow_live_streaming?: boolean;
          /**
           * If the value of this field is set to `true`, meeting participants and webinar panelists can be allowed to rename themselves during a meeting or a webinar.
           *
           */
          allow_participants_to_rename?: boolean;
          /**
           * Show the Zoom desktop application when sharing screens.
           */
          allow_show_zoom_windows?: boolean;
          /**
           * Allow participants to use annotation tools to add information to shared screens.
           */
          annotation?: boolean;
          /**
           * Allow an anonymous Q&A in a webinar.
           */
          anonymous_question_answer?: boolean;
          /**
           * Allow host to put attendee on hold.
           *
           * **This field has been deprecated and is no longer supported.**
           */
          attendee_on_hold?: boolean;
          /**
           * Enable users to see and add contacts to the "auto-answer group" in the chat contact list. Any call from members of this group will automatically be answered.
           */
          auto_answer?: boolean;
          /**
           * Automatically save all in-meeting chats so that the host does not need to manually save the chat transcript after the meeting starts.
           */
          auto_saving_chat?: boolean;
          /**
           * Allow host to split meeting participants into separate, smaller rooms.
           */
          breakout_room?: boolean;
          /**
           * Allow meeting participants to send a message that is visible to all participants.
           */
          chat?: boolean;
          /**
           * Allow a host to type closed captions. Enable a host to assign a participant or third party device to add closed captions.
           */
          closed_caption?: boolean;
          /**
           * Allow the host to add co-hosts.
           */
          co_host?: boolean;
          /**
           * If set to `true`, account owners and admins on paid accounts can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
           */
          custom_data_center_regions?: boolean;
          /**
           * Custom live streaming.
           */
          custom_live_streaming_service?: boolean;
          /**
           * Custom service instructions.
           */
          custom_service_instructions?: string;
          /**
           * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
           *
           */
          data_center_regions?: 'EU' | 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA';
          /**
           * DSCP audio.
           */
          dscp_audio?: number;
          /**
           * DSCP marking.
           */
          dscp_marking?: boolean;
          /**
           * DSCP video.
           */
          dscp_video?: number;
          /**
           * Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).
           */
          e2e_encryption?: boolean;
          /**
           * Play sound when participants join or leave.<br>`host` - Heard by host only.<br>`all` - Heard by host and all attendees.<br>`none` - Disable.
           */
          entry_exit_chime?: 'host' | 'all' | 'none';
          /**
           * Allow another user to take control of your camera during a meeting.
           */
          far_end_camera_control?: boolean;
          /**
           * Add a "Feedback" tab to the Windows Settings or Mac Preferences dialog. Enable users to provide feedback to Zoom at the end of the meeting.
           */
          feedback?: boolean;
          /**
           * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled on the account or not.
           */
          file_transfer?: boolean;
          /**
           * Activate higher quality video for host and participants.
           * Please note: This will use more bandwidth.
           */
          group_hd?: boolean;
          /**
           * Enable or disable meeting reactions. <br>
           * `true`: Allow meeting participants to communicate without interrupting by reacting with an emoji that shows on their video.<br>
           * `false`: Do not enable meeting reactions.
           */
          meeting_reactions?: boolean;
          /**
           * Allow users to select original sound in their client settings.
           */
          original_audio?: boolean;
          /**
           * Peer to peer connection while only two people are in a meeting.
           */
          p2p_connetion?: boolean;
          /**
           * Peer to peer listening ports range.
           */
          p2p_ports?: boolean;
          /**
           * Add "Polls" to the meeting controls.
           */
          polling?: boolean;
          /**
           * The listening ports range, separated by a comma (ex 55,56). The ports range must be between 1 to 65535.
           */
          ports_range?: string;
          /**
           * Display a thumbs up or down survey at the end of each meeting.
           */
          post_meeting_feedback?: boolean;
          /**
           * Allow a meeting participant to send a private message to another participant.
           */
          private_chat?: boolean;
          /**
           * Record and play their own voice.
           */
          record_play_own_voice?: boolean;
          /**
           * Allow users to request remote control.
           */
          remote_control?: boolean;
          /**
           * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the account or not.
           */
          request_permission_to_unmute?: boolean;
          /**
           * Allow screen sharing.
           */
          screen_sharing?: boolean;
          /**
           * Only show the default email when sending email invites.
           */
          sending_default_email_invites?: boolean;
          /**
           * If the value of this field is set to `true`, you will allow participants to join a meeting directly from their browser and bypass the Zoom application download process. This is a workaround for participants who are unable to download, install, or run applications. Note that the meeting experience from the browser is limited.
           */
          show_a_join_from_your_browser_link?: boolean;
          /**
           * Always show the meeting control toolbar.
           */
          show_meeting_control_toolbar?: boolean;
          /**
           * Allow users to select stereo audio in their client settings.
           */
          stereo_audio?: boolean;
          /**
           * Use HTML formatted email for the Outlook plugin.
           */
          use_html_format_email?: boolean;
          /**
           * Allow users to replace their background with any selected image. Choose or upload an image in the Zoom desktop application settings.
           */
          virtual_background?: boolean;
          /**
           * Settings to manage virtual background.
           */
          virtual_background_settings?: {
            /**
             * Allow users to upload custom backgrounds.
             */
            allow_upload_custom?: boolean;
            /**
             * Allow use of videos for virtual backgrounds.
             */
            allow_videos?: boolean;
            /**
             * Enable virtual background.
             */
            enable?: boolean;
            files?: Array<{
              /**
               * Unique identifier of the file.
               */
              id?: string;
              /**
               * Indicates whether or not this file is the default virtual background file.
               */
              is_default?: boolean;
              /**
               * File name.
               */
              name?: string;
              /**
               * File size.
               */
              size?: string;
              /**
               * File type.
               */
              type?: string;
            }>;
          };
          /**
           * Add a watermark when viewing a shared screen.
           */
          watermark?: boolean;
          /**
           * Allow a Q&A in a webinar.
           */
          webinar_question_answer?: boolean;
          /**
           * Allow participants to share a whiteboard that includes annotation tools.
           */
          whiteboard?: boolean;
          /**
           * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
           * `host`: Only host can share the screen.<br>
           * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
           *
           */
          who_can_share_screen?: 'host' | 'all';
          /**
           * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
           * `host`: Only a host can share the screen when someone else is sharing.<br>
           * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
           *
           */
          who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
          /**
           * Workplace by facebook.
           */
          workplace_by_facebook?: boolean;
        };
        /**
         * Account Settings: Integration.
         */
        integration?: {
          /**
           * Enable users who join a meeting from their mobile device to share content from their Box account.
           */
          box?: boolean;
          /**
           * Enable users who join a meeting from their mobile device to share content from their Dropbox account.
           */
          dropbox?: boolean;
          /**
           * Enable meetings to be scheduled using Google Calendar.
           */
          google_calendar?: boolean;
          /**
           * Enable users who join a meeting from their mobile device to share content from their Google Drive.
           */
          google_drive?: boolean;
          /**
           * Enable users to control a connected Kubi device from within a Zoom meeting.
           */
          kubi?: boolean;
          /**
           * Enable users who join a meeting from their mobile device to share content from their Microsoft OneDrive account.
           */
          microsoft_one_drive?: boolean;
        };
        profile?: {
          recording_storage_location?: {
            /**
             * Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.
             *
             * Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
             */
            allowed_values?: Array<string>;
            /**
             * Abbreviated country code.
             */
            value?: string;
          };
        };
        /**
         * Account Settings: Recording.
         */
        recording?: {
          /**
           * Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.
           */
          account_user_access_recording?: boolean;
          /**
           * Allow recovery of deleted cloud recordings from trash.
           * If the value of this field is set to `true`, deleted cloud recordings will be kept in trash for 30 days after deletion and can be recovered within that period.
           */
          allow_recovery_deleted_cloud_recordings?: boolean;
          /**
           * [Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted with archiving solution access by the Zoom support team.
           */
          archive?: {
            /**
             * Enable the archiving feature.
             */
            enable?: boolean;
            settings?: {
              /**
               * Include in-meeting and/or in-webinar audio in the archive.
               */
              audio_file?: boolean;
              /**
               * Include closed caption or transcript in the archive.
               */
              cc_transcript_file?: boolean;
              /**
               * Include in-meeting chat in the archive.
               */
              chat_file?: boolean;
              /**
               * Include user email in in-meeting chat file.
               */
              chat_with_sender_email?: boolean;
              /**
               * Include in-meeting and/or in-webinar video in the archive.
               */
              video_file?: boolean;
            };
            /**
             * Archive types:
             *
             * * `1`: Only meetings are archived.<br>
             * * `2`: Only webinars are archived.<br>
             * * `3`: Both meetings and webinars are archived.
             */
            type?: 1 | 2 | 3;
          };
          /**
           * Allow Zoom to permanantly delete recordings automatically after a specified number of days.
           */
          auto_delete_cmr?: boolean;
          /**
           * When `auto_delete_cmr` function is 'true' this value will set the number of days before the auto deletion of cloud recordings.
           */
          auto_delete_cmr_days?: number;
          /**
           * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
           */
          auto_recording?: 'local' | 'cloud' | 'none';
          /**
           * Allow hosts to record and save the meeting in the cloud.
           */
          cloud_recording?: boolean;
          /**
           * Cloud recording downloads.
           */
          cloud_recording_download?: boolean;
          /**
           * Only the host can download cloud recordings.
           */
          cloud_recording_download_host?: boolean;
          /**
           * If the value of this field is set to `true`, hosts will be able to delete the recordings. If this option is set to `false`, the recordings cannot be deleted by the host and only admin can delete them.
           *
           */
          host_delete_cloud_recording?: boolean;
          /**
           * Setting to allow cloud recording access only from specific IP address ranges.
           *
           */
          ip_address_access_control?: {
            /**
             * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
             *
             *
             */
            enable?: boolean;
            /**
             * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
             *
             * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
             *
             *
             */
            ip_addresses_or_ranges?: string;
          };
          /**
           * Allow hosts and participants to record the meeting using a local file.
           */
          local_recording?: boolean;
          /**
           * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
           *
           */
          prevent_host_access_recording?: boolean;
          /**
           * Record an audio only file.
           */
          record_audio_file?: boolean;
          /**
           * Record the gallery view with a shared screen.
           */
          record_gallery_view?: boolean;
          /**
           * Record the active speaker with a shared screen.
           */
          record_speaker_view?: boolean;
          /**
           * Automatically transcribe the audio of the meeting or webinar to the cloud.
           */
          recording_audio_transcript?: boolean;
          /**
           * Show a disclaimer to participants before a recording starts
           *
           */
          recording_disclaimer?: boolean;
          /**
           * This object represents the minimum password requirements set for recordings via Account Recording Settings.
           */
          recording_password_requirement?: {
            /**
             * Indicates whether or not password must contain at least one alphabetical letter (a, b, c..).
             */
            have_letter?: boolean;
            /**
             * Indicates whether or not password must contain at least one number(1, 2, 3..).
             */
            have_number?: boolean;
            /**
             * Indicates whether or not password must contain at least one special character(!, @, #..).
             */
            have_special_character?: boolean;
            /**
             * Minimum required length for the password.
             */
            length?: number;
            /**
             * Indicates whether or not password must contain only numeric characters.
             */
            only_allow_numeric?: boolean;
          };
          /**
           * Require a passcode to access existing cloud recordings.
           */
          required_password_for_existing_cloud_recordings?: boolean;
          /**
           * Save the chat text from the meeting.
           */
          save_chat_text?: boolean;
          /**
           * Add a timestamp to the recording.
           */
          show_timestamp?: boolean;
        };
        /**
         * Account Settings: Schedule Meeting.
         */
        schedule_meeting?: {
          /**
           * Determine how participants can join the audio portion of the meeting.<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - 3rd party audio conference.
           */
          audio_type?: 'both' | 'telephony' | 'voip' | 'thirdParty';
          /**
           * Only Zoom users who are signed in can join meetings.
           */
          enforce_login?: boolean;
          /**
           * Only signed in users with a specified domain can join the meeting.
           */
          enforce_login_domains?: string;
          /**
           * Only signed in users with a specific domain can join meetings.
           */
          enforce_login_with_domains?: boolean;
          /**
           * Require a password for Personal Meetings if attendees can join before host.
           */
          force_pmi_jbh_password?: boolean;
          /**
           * Start meetings with the host video on.
           */
          host_video?: boolean;
          /**
           * Allow participants to join the meeting before the host arrives.
           */
          join_before_host?: boolean;
          /**
           * Account wide meeting/webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
           */
          meeting_password_requirement?: {
            consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
            /**
             * If set to `true`, the password must contain at least 1 letter (such as a,b,c...).
             *
             */
            have_letter?: boolean;
            /**
             * If set to `true`, the password must contain at least 1 number (such as 1,2,3...).
             */
            have_number?: boolean;
            /**
             * If set to `true`, the password must have at least 1 special character (!,@,#...).
             */
            have_special_character?: boolean;
            /**
             * If set to `true`, the password must include both uppercase and lowercase characters.
             */
            have_upper_and_lower_characters?: boolean;
            /**
             * The minimum length that the meeting/webinar password needs to have.
             */
            length?: number;
            /**
             * If set to `true`, the password must only contain numbers and no other characters.
             */
            only_allow_numeric?: boolean;
            /**
             * If set to `true`, users will be informed if the provided password is weak.
             */
            weak_enhance_detection?: boolean;
          };
          /**
           * Always display "Zoom Meeting" as the meeting topic.
           */
          not_store_meeting_topic?: boolean;
          /**
           * Start meetings with the participant video on. Participants can change this setting during the meeting.
           */
          participant_video?: boolean;
          /**
           * Personal Meeting Setting.<br><br>
           * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
           * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
           * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
           *
           *
           *
           */
          personal_meeting?: boolean;
          /**
           * Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
           *
           */
          require_password_for_instant_meetings?: boolean;
          /**
           * Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
           *
           */
          require_password_for_pmi_meetings?: 'jbh_only' | 'all' | 'none';
          /**
           * Require a password for meetings which have already been scheduled
           *
           */
          require_password_for_scheduled_meetings?: boolean;
          /**
           * Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
           */
          require_password_for_scheduling_new_meetings?: boolean;
          /**
           * Use Personal Meeting ID (PMI) when starting an instant meeting
           *
           */
          use_pmi_for_instant_meetings?: boolean;
          /**
           * Use Personal Meeting ID (PMI) when scheduling a meeting
           *
           */
          use_pmi_for_scheduled_meetings?: boolean;
        };
        /**
         * [Security settings](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) of an Account.
         */
        security?: {
          /**
           * Only account administrators can change a user's username and picture.
           */
          admin_change_name_pic?: boolean;
          /**
           * Hide billing information.
           */
          hide_billing_info?: boolean;
          /**
           * Allow users to import photos from a photo library on a  device.
           */
          import_photos_from_devices?: boolean;
          /**
           * This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users' Zoom login password.
           */
          password_requirement?: {
            /**
             *
             * Specify the max length of consecutive characters(abcde...) that can be used in a password.
             * If you set the value of this field to `0`, no restriction will be applied on consecutive characters.
             *
             * If you would like to set this restriction, you can specify a number between 4 and 8 that define the maximum allowed length for consecutive characters in a password.
             *
             * The max allowed length will be `n-1` where `n` refers to the value you provide for this field.  For instance, if you provide `4` as the value, there can only be a maximum of `3` consecutive characters in a password(example: abc1x@8fdh).
             */
            consecutive_characters_length?: number;
            /**
             * If the value of this field is set to `true`, the password must have at least one special character(!, @, #...).
             */
            have_special_character?: boolean;
            /**
             * Specify a minimum length for the password. The password length can be from a minimum of 9 characters, up to 14 characters. If you provide `0` as the value of this field, this field will be disabled and not be used and the basic password length requirement (minimum of 8 characters) will be applied for the requirement.
             */
            minimum_password_length?: number;
            /**
             * If the value of this field is set to `true`, user passwords will have to pass detection through a weak password dictionary in case hackers use simple passwords to sign in to your users’ accounts.
             */
            weak_enhance_detection?: boolean;
          };
          /**
           * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Client app after a set amount of time. <br>
           *
           * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Client. The value for the period of inactivity can be one of the following:<br>
           *
           * `5`: 5 minutes<br>
           * `10`: 10 minutes<br>
           * `15`: 15 minutes<br>
           * `30`: 30 minutes<br>
           * `45`: 45 minutes<br>
           * `60`: 60 minutes<br>
           * `90`: 90 minutes<br>
           * `120`: 120 minutes
           *
           */
          sign_again_period_for_inactivity_on_client?: number;
          /**
           * Settings for User Sign In interval requirements after a period of inactivity. If enabled, this setting forces automatic logout of users in Zoom Web Portal after a set amount of time. <br>
           *
           * If this setting is disabled, the value of this field will be `0`. If the setting is enabled, the value of this field will indicate the **period of inactivity** in minutes after which, an inactive user will be automatically logged out of the Zoom Web Portal. The value for the period of inactivity can be one of the following:<br>
           *
           * `5`: 5 minutes<br>
           * `10`: 10 minutes<br>
           * `15`: 15 minutes<br>
           * `30`: 30 minutes<br>
           * `60`: 60 minutes<br>
           * `120`: 120 minutes
           *
           *
           *
           *
           */
          sign_again_period_for_inactivity_on_web?: number;
          /**
           * Settings for 2FA( [two factor authentication](https://support.zoom.us/hc/en-us/articles/360038247071) ). The value can be one of the following:
           * `all`: Two factor authentication will be enabled for all users in the account.<br>
           * `none`: Two factor authentication is disabled.<br>
           * `group`: Two factor authentication will be enabled for users belonging to specific groups. If 2FA is enabled for certain groups, the group IDs of the group(s) will be provided in the `sign_in_with_two_factor_auth_groups` field.<br>
           * `role`: Two factor authentication will be enabled only for users assigned with specific roles in the account. If 2FA is enabled for specific roles, the role IDs will be provided in the
           * `sign_in_with_two_factor_auth_roles` field.
           *
           */
          sign_in_with_two_factor_auth?: 'all' | 'group' | 'role' | 'none';
          /**
           * This field contains group IDs of groups that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `group`
           */
          sign_in_with_two_factor_auth_groups?: Array<string>;
          /**
           * This field contains role IDs of roles that have 2FA enabled. This field is only returned if the value of `sign_in_with_two_factor_auth` is `role`.
           */
          sign_in_with_two_factor_auth_roles?: Array<string>;
        };
        /**
         * Account Settings Update: Telephony.
         */
        telephony?: {
          /**
           * Third party audio conference info.
           */
          audio_conference_info?: string;
          /**
           * Indicates where most of the participants call into or call from duriing a meeting.
           */
          telephony_regions?: {
            /**
             * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
             */
            selection_values?: Array<string>;
          };
          /**
           * Users can join the meeting using the existing third party audio configuration.
           */
          third_party_audio?: boolean;
        };
        /**
         * Account Settings: TSP.
         */
        tsp?: {
          /**
           * Call Out
           */
          call_out?: boolean;
          /**
           * Call Out Countries/Regions
           */
          call_out_countries?: Array<unknown>;
          /**
           * Display toll-free numbers
           */
          display_toll_free_numbers?: boolean;
          /**
           * Show international numbers link on the invitation email
           */
          show_international_numbers_link?: boolean;
        };
        /**
         * Account Settings: Zoom Rooms.
         */
        zoom_rooms?: {
          /**
           * Automatic start and stop for scheduled meetings.
           */
          auto_start_stop_scheduled_meetings?: boolean;
          /**
           * Cloud recording for instant meetings.
           */
          cmr_for_instant_meeting?: boolean;
          /**
           * Shift all meetings to private.
           */
          force_private_meeting?: boolean;
          /**
           * Hide host and meeting ID from private meetings.
           */
          hide_host_information?: boolean;
          /**
           * Display meeting list with calendar integration.
           */
          list_meetings_with_calendar?: boolean;
          /**
           * Start AirPlay service manually.
           */
          start_airplay_manually?: boolean;
          /**
           * Automatic direct sharing using an ultrasonic proximity signal.
           */
          ultrasonic?: boolean;
          /**
           * Upcoming meeting alert.
           */
          upcoming_meeting_alert?: boolean;
          /**
           * Weekly system restart.
           */
          weekly_system_restart?: boolean;
          /**
           * Zoom Room post meeting feedback.
           */
          zr_post_meeting_feedback?: boolean;
        };
      }
    | (
        | {
            /**
             * Meeting Authentication Options
             */
            authentication_option?: {
              /**
               * Specify the action that you would like to take via this API request:<br>
               * * `add` : Choose this value if you are adding an authentication option.
               * * `update`: Choose this value if you are updating an existing authentication option.
               * * `delete`: Choose this value if you are deleting an existing authentication option.
               */
              action?: 'update' | 'delete' | 'add';
              /**
               * Specify whether you would like to set this authentication option as the default option or not.
               */
              default_option?: boolean;
              /**
               * If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to join your meetings or webinars.
               */
              domains?: string;
              /**
               *  Authentication ID. If you are creating an authentication profile, you do not need to provide this field. The id field will be generated in the response once this API request is completed successfully. You can also use the Get Account Settings API with query parameter set to `meeting_authentication` to list the authentication id.<br><br>
               * Use this field or the `name` field to identify the associated authentication option that you would like to update or delete.
               */
              id?: string;
              /**
               * Unique name for the authentication option.
               */
              name?: string;
              /**
               *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
               * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
               * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
               * * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
               */
              type?: 'enforce_login' | 'enforce_login_with_same_account' | 'enforce_login_with_domains';
            };
            /**
             * If set to "true", only authenticated users can join meetings. The method for authentication can be defined in the "authentication_option".
             */
            meeting_authentication?: boolean;
          }
        | {
            /**
             * Specify the authentication options for this account.
             */
            authentication_option?: {
              /**
               * Specify the action that you would like to take via this API request:<br>
               * * `add` : Choose this value if you are adding an authentication option.
               * * `update`: Choose this value if you are updating an existing authentication option.
               * * `delete`: Choose this value if you are deleting an existing authentication option.
               */
              action?: 'update' | 'delete' | 'add';
              /**
               * Specify whether you would like to set this authentication option as the default option or not.
               */
              default_option?: boolean;
              /**
               * If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to view the recordings.
               */
              domains?: string;
              /**
               *  Authentication ID. If you are creating an authentication profile, you do not need to provide this field. The id field will be generated in the response once this API request is completed successfully. You can also use the Get Account Settings API with query parameter set to `meeting_authentication` to list the authentication id.<br><br>
               * Use this field or the `name` field to identify the associated authentication option that you would like to update or delete.
               */
              id?: string;
              /**
               * Unique name for the authentication option.
               */
              name?: string;
              /**
               * Specify one authentication type that is to be associated with this authentication configuration:<br>
               * * `internally`: This option allows you specify a rule that only signed in users within your account can view the recording.<br>
               * * `enforce_login`: This option allows any users to view the recording, as long as they are signed into their Zoom account.<br>
               * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can view the recording. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.
               *
               *
               */
              type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
            };
            /**
             * If set to `true`, only authenticated users can view the cloud recordings.<br><br>
             * The authentication profile **must first be set at the account level via the account settings**, and later can be disabled after enabling on the preferred level - i.e. user level using user settings or at group level via group settings  (if you do not want the settings to be enabled on the entire account).
             */
            recording_authentication?: boolean;
          }
      )
    | {
        meeting_security?: {
          /**
           * `true`: Require that all meetings are secured with at least one security option.
           *
           * This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
           */
          auto_security?: boolean;
          /**
           * If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
           *
           */
          embed_password_in_join_link?: boolean;
          /**
           * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
           * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
           *
           * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
           */
          encryption_type?: 'enhanced_encryption' | 'e2ee';
          /**
           * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
           */
          end_to_end_encrypted_meetings?: boolean;
          /**
           * If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.
           */
          meeting_password?: boolean;
          /**
           * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
           */
          meeting_password_requirement?: {
            consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
            /**
             * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
             *
             */
            have_letter?: boolean;
            /**
             * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
             */
            have_number?: boolean;
            /**
             * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
             */
            have_special_character?: boolean;
            /**
             * If set to `true`, the passcode must include both uppercase and lowercase characters.
             */
            have_upper_and_lower_characters?: boolean;
            /**
             * The minimum length that the meeting/webinar passcode needs to have.
             */
            length?: number;
            /**
             * If set to `true`, the passcode must only contain numbers and no other characters.
             */
            only_allow_numeric?: boolean;
            /**
             * If set to `true`, users will be informed if the provided passcode is weak.
             */
            weak_enhance_detection?: boolean;
          };
          /**
           * Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.
           */
          phone_password?: boolean;
          /**
           * If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
           *
           */
          pmi_password?: boolean;
          /**
           * Require a passcode for meetings which have already been scheduled.
           *
           */
          require_password_for_scheduled_meeting?: boolean;
          /**
           * Require a passcode for webinars which have already been scheduled.
           *
           */
          require_password_for_scheduled_webinar?: boolean;
          /**
           * When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
           *
           */
          waiting_room?: boolean;
          /**
           * Specify the settings to be applied if waiting room is enabled.
           */
          waiting_room_settings?: {
            /**
             *
             *
             * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
             * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
             */
            participants_to_place_in_waiting_room?: 0 | 1 | 2;
            /**
             * Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
             * `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
             *
             *
             *
             */
            users_who_can_admit_participants_from_waiting_room?: number;
            /**
             * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
             */
            whitelisted_domains_for_waiting_room?: string;
          };
          /**
           * If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
           *
           */
          webinar_password?: boolean;
        };
      };
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
  query?: {
    option?: 'meeting_authentication' | 'recording_authentication' | 'security' | 'meeting_security';
  };
};

export type AccountSettingsUpdateResponse = unknown | any;

export type AccountSettingsUpdateError = unknown;

export type DelVbData = {
  path: {
    accountId: string;
  };
  query?: {
    /**
     * Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field.
     */
    file_ids?: string;
  };
};

export type DelVbResponse = any;

export type DelVbError = unknown;

export type UploadVbData = {
  body?: {
    /**
     * Provide the file's path here.
     */
    file?: string;
  };
  path: {
    /**
     * Unique identifier of the account.
     */
    accountId: string;
  };
};

export type UploadVbResponse = {
  /**
   * Unique identifier of the file.
   */
  id?: string;
  /**
   * Indicates whether or not this file is the default virtual background file.
   */
  is_default?: boolean;
  /**
   * File name.
   */
  name?: string;
  /**
   * File size.
   */
  size?: string;
  /**
   * File type.
   */
  type?: string;
};

export type UploadVbError = unknown;

export type ListInternalCalloutCountriesData = {
  path: {
    /**
     * Unique identifier of the account. To list Call-out enabled countries to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a master account, provide `me` as the value of the `accountId` path parameter.
     */
    accountId: string;
  };
};

export type ListInternalCalloutCountriesResponse = {
  callout_countries?: Array<{
    /**
     * Country code.
     */
    code?: string;
    /**
     * Two letter country Id.
     */
    id?: string;
    /**
     * Name of the country.
     */
    name?: string;
  }>;
  /**
   * The total number of records returned.
   */
  total_records?: number;
};

export type ListInternalCalloutCountriesError = unknown;

export type AddCalloutCountriesData = {
  body?: {
    /**
     * List of callout countries.
     */
    callout_countries: Array<{
      /**
       * Two letter country code of the  call-out country.
       */
      id: string;
    }>;
  };
  path: {
    /**
     * Unique identifier of the account. To add Call-out enabled countries to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add Call-out enabled countries to a master account, provide `me` as the value of the `accountId` path parameter.
     */
    accountId: string;
  };
};

export type AddCalloutCountriesResponse = {
  /**
   * List of Call-out countries.
   */
  callout_countries?: Array<{
    /**
     * Country code for Phone number.
     */
    code?: string;
    /**
     * Country ID.
     */
    id?: string;
    /**
     * Name of the country.
     */
    name?: string;
  }>;
};

export type AddCalloutCountriesError = unknown;

export type DeleteInternalCallOutCountryData = {
  path: {
    /**
     * Unique Identifier of the Account.<br>
     * To remove Call-out country from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To remove Call-out country from a master account, provide `me` as the value of the `accountId` path parameter.
     */
    accountId: string;
    /**
     * Two lettered Id of the country.
     */
    countryId: string;
  };
};

export type DeleteInternalCallOutCountryResponse = unknown;

export type DeleteInternalCallOutCountryError = unknown;

export type ListInternalNumbersData = {
  path: {
    /**
     * Unique identifier of the account. To list internal numbers of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list internal numbers of a  master account, provide `me` as the value of the `accountId` path parameter.
     */
    accountId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type ListInternalNumbersResponse = {
  internal_numbers?: Array<{
    /**
     * Control whether the number can be used to attend 3rd party meetings.
     */
    allow_for_external_meetings?: boolean;
    /**
     * Specify whether this number can be used by users to join a meeting or not. <br>
     * * `true` : This number can be used to join a meeting. <br>
     * *  `false`: This number can not be used to join a meeting.
     *
     * Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
     */
    allow_join?: boolean;
    /**
     * Two letter country code of the country.
     */
    country: string;
    /**
     * Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`.
     */
    display_number: string;
    /**
     * A short description for the phone number.
     */
    labels: string;
    /**
     * Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
     */
    languages: 'en-GB' | 'en-US' | 'de-DE';
    /**
     * Phone number in E164 format.
     */
    number: string;
    /**
     * Type of phone number. <br>
     * The value can be one of the following:<br>
     * * `0` : toll <br>
     * * `1` : tollfree
     */
    type: 0 | 1;
    /**
     * Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
     * * `true`: Make the number visible. <br>
     * * `false`: Hide the number.
     */
    visible?: boolean;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records that you specified to get in the response per page.
   */
  page_size?: number;
  /**
   * The total number of records returned.
   */
  total_records?: number;
};

export type ListInternalNumbersError = unknown;

export type AddInternalNumbersData = {
  body?: {
    internal_numbers?: Array<{
      /**
       * Control whether the number can be used to attend 3rd party meetings.
       */
      allow_for_external_meetings?: boolean;
      /**
       * Specify whether this number can be used by users to join a meeting or not. <br>
       * * `true` : This number can be used to join a meeting. <br>
       * *  `false`: This number can not be used to join a meeting.
       *
       * Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
       */
      allow_join?: boolean;
      /**
       * Two letter country code of the country.
       */
      country: string;
      /**
       * Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`.
       */
      display_number: string;
      /**
       * A short description for the phone number.
       */
      labels: string;
      /**
       * Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
       */
      languages: 'en-GB' | 'en-US' | 'de-DE';
      /**
       * Phone number in E164 format.
       */
      number: string;
      /**
       * Type of phone number. <br>
       * The value can be one of the following:<br>
       * * `0` : toll <br>
       * * `1` : tollfree
       */
      type: 0 | 1;
      /**
       * Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
       * * `true`: Make the number visible. <br>
       * * `false`: Hide the number.
       */
      visible?: boolean;
    }>;
  };
  path: {
    /**
     * Unique identifier of the account.<br>To add internal numbers to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add internal numbers to a master account, provide `me` as the value of the `accountId` path parameter.
     */
    accountId: string;
  };
};

export type AddInternalNumbersResponse = {
  internal_numbers?: Array<{
    /**
     * Control whether the number can be used to attend 3rd party meetings.
     */
    allow_for_external_meetings?: boolean;
    /**
     * Specify whether this number can be used by users to join a meeting or not. <br>
     * * `true` : This number can be used to join a meeting. <br>
     * *  `false`: This number can not be used to join a meeting.
     *
     * Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
     */
    allow_join?: boolean;
    /**
     * Two letter country code of the country.
     */
    country: string;
    /**
     * Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`.
     */
    display_number: string;
    /**
     * Unique identifier of the internal number.
     */
    id?: string;
    /**
     * A short description for the phone number.
     */
    labels: string;
    /**
     * Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
     */
    languages: 'en-GB' | 'en-US' | 'de-DE';
    /**
     * Phone number in E164 format.
     */
    number: string;
    /**
     * Type of phone number. <br>
     * The value can be one of the following:<br>
     * * `0` : toll <br>
     * * `1` : tollfree
     */
    type: 0 | 1;
    /**
     * Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
     * * `true`: Make the number visible. <br>
     * * `false`: Hide the number.
     */
    visible?: boolean;
  }>;
};

export type AddInternalNumbersError = unknown;

export type DeleteInternalNumberData = {
  path: {
    /**
     * Unique Identifier of the account. To delete an internal number from a sub account, provide the account ID of the sub account in the `accountId` path parameter. To delete an internal number from a master account, provide `me` as the value of the `accountId` path parameter.
     */
    accountId: string;
    /**
     * Unique identifier of the phone number. This value can be retrieved by calling the List Internal Numbers API.
     */
    numberId: string;
  };
};

export type DeleteInternalNumberResponse = unknown;

export type DeleteInternalNumberError = unknown;

export type DeleteAllSipNumbersData = {
  path: {
    /**
     * Account ID of the sub account from which the numbers are to be deleted. This can be retrieved from [List sub accounts](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/account) API.
     */
    accountId: string;
  };
};

export type DeleteAllSipNumbersResponse = unknown;

export type DeleteAllSipNumbersError = unknown;

export type AssignSipTrunkNumbersData = {
  body?: {
    /**
     * Phone number(s) to be assigned to the sub account.
     */
    phone_numbers?: Array<string>;
  };
  path: {
    /**
     * Unique Identifier of the sub account.
     */
    accountId: string;
  };
};

export type AssignSipTrunkNumbersResponse = unknown;

export type AssignSipTrunkNumbersError = unknown;

export type AssignSipConfigData = {
  body?: {
    /**
     * Enable or delete the configuration.<br> The values can be one of the following:<br> `true`: Enable configuration.<br> `false`: Delete configuration
     */
    enable?: boolean;
    /**
     * If the value of this option is set to `true`, the call-out numbers provided by the Zoom carrier partners will be displayed in the account's list of available call-out numbers in the Zoom Web Portal and Zoom Client.
     */
    show_callout_internal_number?: boolean;
    /**
     * If the value of this option is set to `0`, the call-out countries list provided by Zoom will be [displayed](https://support.zoom.us/hc/en-us/articles/200942859-Using-telephone-call-out) in the account's list of available call-out countries.
     *
     * If the value of this option is set to `1`, the Zoom provided call-out countries will be hidden from the user's account.<br>
     *
     * If the value of this option is set to `2`, all Zoom provided countries will be deleted and only internal countries (provided by carrier partners) will be used.
     */
    show_zoom_provided_callout_countries?: number;
    /**
     * If the value of this option is set to `0`, the numbers provided by Zoom will be displayed in the account's list of available call-out and call-in numbers in the Zoom Web Portal and Zoom Client.
     *
     * If the value of this option is set to `1`, the Zoom provided numbers will be shown in the Zoom Web Portal but will not be used unless specified by the user.<br>
     *
     * If the value of this option is set to `2`, all Zoom provided numbers will be deleted and only internal numbers (provided by carrier partners) will be used.
     */
    show_zoom_provided_numbers?: 0 | 1 | 2;
  };
  path: {
    accountId: string;
  };
};

export type AssignSipConfigResponse = unknown;

export type AssignSipConfigError = unknown;

export type ListSipTrunksData = {
  path: {
    /**
     * Unique Identifier of the Account. To retrieve SIP trunks assigned to a sub account, provide the account ID of the sub account in the as the value of this field. To retrieve SIP trunks of a master account, provide `me` as the value of this field.
     */
    accountId: string;
  };
};

export type ListSipTrunksResponse = {
  sip_trunks?: Array<{
    /**
     * DNIS of the SIP trunk.
     */
    dnis?: string;
    /**
     * Unique identifier of the sip trunk.
     */
    id?: string;
    /**
     * Name assigned to the SIP trunk.
     */
    name?: string;
    /**
     * Prefix of the SIP Connected Audio phone number.
     */
    number_prefix?: string;
    /**
     * Outbound caller Id assigned to the trunk.
     */
    outbound_caller_id?: string;
    /**
     * IP address or domain of the SIP trunk.
     */
    sip_server_address?: string;
  }>;
  /**
   * Total number of records returned.
   */
  total_records?: number;
};

export type ListSipTrunksError = unknown;

export type AssignSipTrunksData = {
  body?: {
    /**
     * Array of one or more SIP Trunk objects.
     */
    sip_trunks?: Array<{
      /**
       * DNIS of the sub account. The prefix of the DNIS (i.e. the first five digits of the DNIS value) must match the DNIS prefix of the master account. To retrieve the DNIS prefix of a master account's SIP Trunk, use the List SIP Trunks API and refer to the first five digits in the `dnis` value.
       *
       * For example, if the DNIS of the master account is 1888812345, the DNIS of the sub account must comprise of "18888" + "random_number". The maximum allowed length of the DNIS is 8.
       */
      dnis?: string;
      /**
       * Unique identifier of the SIP trunk that will be assigned to the sub account. The value of this field can be retrieved by listing the SIP Trunks of a master account using List SIP Trunks API.
       */
      id?: string;
      /**
       * Assign an outbound caller Id to the trunk.
       */
      outbound_caller_id?: string;
    }>;
  };
  path: {
    /**
     * Unique Identifier of the sub account.
     */
    accountId: string;
  };
};

export type AssignSipTrunksResponse = {
  sip_trunks?: Array<{
    /**
     * DNIS - identifier for the SIP trunk enabled account.
     */
    dnis?: string;
    /**
     * Unique identifier of the SIP trunk.
     */
    id?: string;
    /**
     * Name of the SIP trunk.
     */
    name?: string;
    /**
     * If the value of this field is `"0"`, it means that all the calls will be routed through this special line. All other values indicate the prefix of the phone number.
     */
    number_prefix?: string;
    /**
     * IP Address or domain of the SIP trunk.
     */
    sip_server_address?: string;
  }>;
};

export type AssignSipTrunksError = unknown;

export type DeleteSipTrunkData = {
  path: {
    /**
     * Unique identifier of the sub account.
     */
    accountId: string;
    /**
     * Unique identifier of the SIP Trunk that was previously assigned to a sub account. To retrieve the value of this field, use the List SIP Trunks API.
     */
    trunkId: string;
  };
};

export type DeleteSipTrunkResponse = {
  [key: string]: unknown;
};

export type DeleteSipTrunkError = unknown;

export type AccountTrustedDomainData = {
  path: {
    /**
     * The account ID.
     */
    accountId: string;
  };
};

export type AccountTrustedDomainResponse = {
  /**
   * List of trusted domains
   */
  trusted_domains?: Array<string>;
};

export type AccountTrustedDomainError = unknown;

export type SwitchUserAccountData = {
  body?: {
    /**
     * The Account ID of the account to which you would like move the user to.
     */
    account_id: string;
  };
  path: {
    accountId: string;
    userId: string;
  };
};

export type SwitchUserAccountResponse = unknown;

export type SwitchUserAccountError = unknown;

export type DownloadInvoicePdfData = {
  path: {
    invoiceId: string;
  };
};

export type DownloadInvoicePdfResponse = unknown;

export type DownloadInvoicePdfError = unknown;

export type ListArchivedFilesData = {
  query?: {
    /**
     * Start date for the query in "yyyy-MM-dd'T'HH:mm:ss'Z'" format. The duration for the query defined using the "from" and "to" parameters should not exceed 7 days as this API only provides a week's data at once.
     */
    from?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * Query data type for `from` and `to`.
     */
    query_data_type?: 'meeting_start_time' | 'archive_complete_time';
    /**
     * End date for the query in "yyyy-MM-dd'T'HH:mm:ss'Z'" format.
     */
    to?: string;
  };
};

export type ListArchivedFilesResponse = {
  /**
   * Start date for the query in "yyyy-MM-dd'T'HH:mm:ss'Z'" format. The duration for the query defined using the "from" and "to" parameters should not exceed 7 days as this API only provides a week's data at once.
   */
  from?: string;
  meetings?: Array<{
    archive_files?: Array<{
      /**
       * The URL using which the archived file can be downloaded. To download the archived file of a meeting or a webinar hosted in your account, create a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the access_token query parameter and include this query parameter at the end of the URL as shown in the example.
       *
       * Example: `https://{{base-domain}}/rec/archive/download/xxx?access_token={{Your-JWT}}`
       *
       * If a user has authorized and installed your OAuth app that supports archiving, use the user’s [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the file.
       *
       * Example: `https://{{base-domain}}/rec/archive/download/xxx?access_token={{ OAuth Access Token }}`
       */
      download_url?: string;
      /**
       * Extension of the recording file.
       *
       */
      file_extension?: string;
      /**
       * The recording file size.
       *
       */
      file_size?: number;
      /**
       * Recorded file type. The value of this field could be one of the following:
       *
       * `MP4`: Video file of the recording.<br>
       * `M4A`: Audio-only file of the recording.<br>
       * `TRANSCRIPT`: Transcription file of the recording in VTT format.
       * CHAT: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>
       * `CC`: File containing closed captions of the recording in VTT file format.<br>
       * `CSV`: File containing polling data in csv format.
       */
      file_type?: string;
      /**
       * Unique identifier of the archived file.
       *
       */
      id?: string;
      /**
       * The recording type. The value of this field can be one of the following:
       * * `shared_screen_with_speaker_view(CC)`
       * * `shared_screen_with_speaker_view`
       * * `shared_screen_with_gallery_view`
       * * `speaker_view`
       * * `gallery_view`
       * * `shared_screen`
       * * `audio_only`
       * * `audio_transcript`
       * * `chat_file`,
       * * `active_speaker`
       * * `host_video`
       *
       */
      recording_type?: string;
      /**
       * Status of the archived file.
       *
       */
      status?: string;
    }>;
    /**
     * Scheduled duration of the meeting or the webinar.
     */
    duration?: number;
    /**
     * ID of the user set as the host of meeting or the webinar that was archived.
     *
     */
    host_id?: string;
    /**
     * Unique identifier of the meeting(meetingId) or the webinar(webinarId).
     *
     */
    id?: number;
    /**
     * Number of recording files returned in the response of this API call.
     *
     */
    recording_count?: number;
    /**
     * The time at which the meeting or the webinar started.
     *
     */
    start_time?: string;
    /**
     * Timezone of the host.
     */
    timezone?: string;
    /**
     * Meeting or webinar topic.
     */
    topic?: string;
    /**
     * Total size of the archive.
     *
     */
    total_size?: number;
    /**
     * Type of the meeting or the webinar that was archived.<br>
     * <br>Meeting types:<br>
     * `1` - Instant meeting<br>
     * `2` - Scheduled meeting<br>
     * `3` - Recurring meeting with no fixed time<br>
     * 8 - Recurring meeting with fixed time
     *
     * Webinar types:<br>
     * `5` - Webinar<br>
     * `6` - Recurring webinar with no fixed time<br>
     * `9` - Recurring webinar with a fixed time
     *
     */
    type?: number;
    /**
     * Unique identifier of the meeting instance or the webinar instance during which the archiving took place. Each instance of the meeting will have its own UUID.
     *
     */
    uuid?: string;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * End date for the query in "yyyy-MM-dd'T'HH:mm:ss'Z'" format.
   */
  to?: string;
};

export type ListArchivedFilesError = unknown;

export type DeleteUserLevelChannelData = {
  path: {
    /**
     * Channel ID: Unique Identifier of a channel.
     */
    channelId: string;
  };
};

export type DeleteUserLevelChannelResponse = unknown;

export type DeleteUserLevelChannelError = unknown;

export type GetUserLevelChannelData = {
  path: {
    /**
     * Channel ID: Unique Identifier of a channel.
     */
    channelId: string;
  };
};

export type GetUserLevelChannelResponse = {
  /**
   * Channel Id.
   */
  id?: string;
  /**
   * Name of the channel.
   */
  name?: string;
  /**
   * Type of the channel. The value can be one of the following:<br>
   * `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
   * `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
   * `3`: Public channel. Anyone can search for this channel and join the channel.<br>
   */
  type?: 1 | 2 | 3;
};

export type GetUserLevelChannelError = unknown;

export type UpdateUserLevelChannelData = {
  body?: {
    /**
     * A new name for the channel.
     */
    name: string;
  };
  path: {
    /**
     * Channel Id.
     */
    channelId: string;
  };
};

export type UpdateUserLevelChannelResponse = unknown;

export type UpdateUserLevelChannelError = unknown;

export type LeaveChannelData = {
  path: {
    /**
     * Channel ID: Unique Identifier of a channel.
     */
    channelId: string;
  };
};

export type LeaveChannelResponse = unknown;

export type LeaveChannelError = unknown;

export type JoinChannelData = {
  path: {
    /**
     * Channel Id.
     */
    channelId: string;
  };
};

export type JoinChannelResponse = {
  /**
   * The date and time at which a user joined the channel.
   */
  added_at?: string;
  /**
   * Member Id of the user who joined the public channel.
   */
  id?: string;
};

export type JoinChannelError = unknown;

export type RemoveAuserLevelChannelMemberData = {
  path: {
    /**
     * Unique Identifier of the Channel from where you would like to remove a member. This can be retrieved from the [List Channels API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels).
     */
    channelId: string;
    /**
     * Email address of the member whom you would like to be remove from the channel.
     */
    memberId: string;
  };
};

export type RemoveAuserLevelChannelMemberResponse = unknown;

export type RemoveAuserLevelChannelMemberError = unknown;

export type GetUserContactsData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned with a single API call.
     */
    page_size?: number;
    /**
     * The type of contact. The value can be one of the following:
     * `company`: Contacts from the user's organization.
     * `external`: External contacts.
     */
    type?: string;
  };
};

export type GetUserContactsResponse = {
  /**
   * The contacts object.
   */
  contacts?: Array<{
    /**
     * Contact's email address.
     */
    email?: string;
    /**
     * Contact's first name.
     */
    first_name?: string;
    /**
     * Contact Id.
     */
    id?: string;
    /**
     * Contact's last name.
     */
    last_name?: string;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned with a single API call.
   * Default value: 30.
   */
  page_size?: number;
};

export type GetUserContactsError = unknown;

export type GetUserContactData = {
  path: {
    /**
     * The user's contact Id or email address. The contact can be either a company contact or an external contact.
     */
    contactId: string;
  };
  query?: {
    /**
     * The presence status of the contact.
     * Include this query parameter with a value of `true` to get the presence status of the contact in the response.
     */
    query_presence_status?: boolean;
  };
};

export type GetUserContactResponse = {
  /**
   * Direct number(s) assigned to the contact.
   */
  direct_numbers?: Array<string>;
  /**
   * Contact's email address.
   */
  email?: string;
  /**
   * Extension number of the contact.
   */
  extension_number?: string;
  /**
   * Contact's first name
   */
  first_name?: string;
  /**
   * User ID of the contact.
   */
  id?: string;
  /**
   * Contact's last name
   */
  last_name?: string;
  /**
   * Phone number of the contact.
   */
  phone_number?: string;
  /**
   * Contact's Presence Status in the Zoom Chat Client. The status can be one of the following: <br> `Do_Not_Disturb`<br> `Away`<br> `Available`<br> `Offline`
   */
  presence_status?: 'Do_Not_Disturb' | 'Away' | 'Available' | 'Offline';
};

export type GetUserContactError = unknown;

export type GetChannelsData = {
  path: {
    /**
     * Unique identifier of the user.
     */
    userId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned from a single API call.
     */
    page_size?: number;
  };
};

export type GetChannelsResponse = {
  /**
   * Chat Channel object(s).
   */
  channels?: Array<{
    channels_settings?: {
      allow_to_add_external_users?: number;
      new_members_can_see_previous_messages_files?: boolean;
      posting_permissions?: number;
    };
    /**
     * Channel ID: Unique identifier of the Channel.
     */
    id?: string;
    /**
     * Name of the channel.
     */
    name?: string;
    /**
     * Type of the channel. The value can be one of the following:<br>
     * `1`: **Private channel.** In this type of channel, members must be invited to join a channel.<br>
     * `2`: **Private channel with users that belong to the same Zoom account**. Members in this channel should be invited and the members should be from the same organization.<br>
     * `3`: **Public channel.** Anyone can search for this channel and join the channel. External members cannot be invited.<br>
     * `4`: **New chat**. This is an instant channel which can be created by adding members to a new chat.<br>
     * `5`: **Public channel**, similar to above, except members can invite members of other accounts.
     */
    type?: number;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned with a single API call.
   * Default value: 30.
   */
  page_size?: number;
  /**
   * The total number of records found.
   */
  total_records?: number;
};

export type GetChannelsError = unknown;

export type CreateChannelData = {
  body?: {
    /**
     * Member(s) to include in the channel. A max of 5 members can be added to the channel at once with this API.
     */
    members?: Array<{
      /**
       * Member's email address.
       */
      email: string;
    }>;
    /**
     * Name of the channel.
     */
    name?: string;
    /**
     * Type of the channel. The value can be one of the following:<br>
     * `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
     * `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
     * `3`: Public channel. Anyone can search for this channel and join the channel.<br>
     * `4`: New chat. This is an instant channel which can be created by adding members to a new chat.
     */
    type?: 1 | 2 | 3;
  };
  path: {
    /**
     * Unique identifier of the user.
     */
    userId: string;
  };
};

export type CreateChannelResponse = {
  /**
   * Channel ID: Unique Identifier of the Channel.
   */
  id?: string;
  /**
   * Channel JID.
   */
  jid?: string;
  /**
   * Channel name.
   */
  name?: string;
  /**
   * Channel type.
   */
  type?: number;
};

export type CreateChannelError = unknown;

export type DeleteChannelData = {
  path: {
    /**
     * Channel ID: Unique Identifier of a channel.
     */
    channelId: string;
    userId: string;
  };
};

export type DeleteChannelResponse = unknown;

export type DeleteChannelError = unknown;

export type GetChannelData = {
  path: {
    /**
     * Channel ID: Unique Identifier of a channel.
     */
    channelId: string;
    /**
     * Unique identifier of the user who is the owner of the channel.
     */
    userId: string;
  };
};

export type GetChannelResponse = {
  /**
   * Channel Id.
   */
  id?: string;
  /**
   * Name of the channel.
   */
  name?: string;
  /**
   * Type of the channel. The value can be one of the following:<br>
   * `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
   * `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
   * `3`: Public channel. Anyone can search for this channel and join the channel.<br>
   */
  type?: 1 | 2 | 3;
};

export type GetChannelError = unknown;

export type UpdateChannelData = {
  body?: {
    /**
     * A new name for the channel.
     */
    name: string;
  };
  path: {
    /**
     * Channel Id.
     */
    channelId: string;
    /**
     * Unique Identifier of the Zoom user who is the owner of the channel.
     */
    userId: string;
  };
};

export type UpdateChannelResponse = unknown;

export type UpdateChannelError = unknown;

export type ListChannelMembersData = {
  path: {
    /**
     * Channel Id.
     */
    channelId: string;
    /**
     * Unique identifier of the user who is the owner of this channel.
     */
    userId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned with a single API call.
     */
    page_size?: number;
  };
};

export type ListChannelMembersResponse = {
  /**
   * Members in a channel.
   */
  members?: Array<{
    /**
     * Email address of the member.
     */
    email?: string;
    /**
     * Member's first name.
     */
    first_name?: string;
    /**
     * Member ID: Unique Identifier of the member.
     */
    id?: string;
    /**
     * Member's last name.
     */
    last_name?: string;
    /**
     * The role of the member. The value can be one of these: `owner`, `admin`, `member`.
     */
    role?: 'admin' | 'owner' | 'member';
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of records returned.
   */
  total_records?: number;
};

export type ListChannelMembersError = unknown;

export type InviteChannelMembersData = {
  body?: {
    /**
     * Members of a channel. You can invite up to a max number of 5 members with a single API call.
     */
    members?: Array<{
      /**
       * Email adress of the member.
       */
      email: string;
    }>;
  };
  path: {
    /**
     * Channel ID: Unique Identifier of the channel.
     */
    channelId: string;
    /**
     * Unique identifier of the user who is the owner of this channel.
     */
    userId: string;
  };
};

export type InviteChannelMembersResponse = {
  /**
   * The date and time at which the member(s) are added to the channe.
   */
  added_at?: string;
  /**
   * Member Ids of the members.
   */
  ids?: Array<string>;
};

export type InviteChannelMembersError = unknown;

export type RemoveAchannelMemberData = {
  path: {
    /**
     * Unique Identifier of the Channel from where you would like to remove a member. This can be retrieved from the [List Channels API](https://marketplace.zoom.us/docs/api-reference/zoom-api/chat-channels/getchannels).
     */
    channelId: string;
    /**
     * Email address of the member whom you would like to be remove from the channel.
     */
    memberId: string;
    /**
     * Unique identifier of the channel owner.
     */
    userId: string;
  };
};

export type RemoveAchannelMemberResponse = unknown;

export type RemoveAchannelMemberError = unknown;

export type GetChatMessagesData = {
  path: {
    userId: string;
  };
  query?: {
    /**
     * The query date for which you would like to get the chat messages.
     */
    date?: string;
    /**
     * **Optional** <br>
     * Set the value of this field to `true` to include edited and deleted messages in the response.
     */
    include_deleted_and_edited_message?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned with a single API call.
     */
    page_size?: number;
    /**
     * The channel Id of a channel inside which the current user had chat conversations. Messages that were sent and/or received between the user and the channel is displayed.
     *
     * Note: You must provide either `contact` or `channel` as a query parameter to retrieve messages either from an individual or a chat channel.
     */
    to_channel?: string;
    /**
     * The email address of a chat contact with whom the current user chatted. Messages that were sent and/or received between the user and the contact is displayed.
     *
     * Note: You must provide either `contact` or `channel` as a query parameter to retrieve messages either from an individual or a chat channel.
     */
    to_contact?: string;
  };
};

export type GetChatMessagesResponse = {
  /**
   * The date provided in the query parameter. If a date is not provided, the default value is the **current date**.
   */
  date?: string;
  /**
   * List of message(s).
   */
  messages?: Array<{
    /**
     * The date-time at which the message was sent.
     */
    date_time?: string;
    /**
     * Message ID: Unique Identifier of the message.
     */
    id?: string;
    /**
     * The message content.
     */
    message?: string;
    /**
     * Unique identifier of a reply. This field will only be returned if the message is a reply message.
     */
    reply_main_message_id?: string;
    /**
     * Timestamp of when the reply message was sent. This field will only be returned if the message is a reply message.
     *
     * The value of this field will be in **long** format(int64).
     */
    reply_main_message_timestamp?: number;
    /**
     * The email address of the sender of the message.
     */
    sender?: string;
    /**
     * This field indicates whether a message is an original message(unedited), an edited message or a deleted message.
     *
     * This field is only returned if you set the value of `for include_deleted_and_edited_message` query parameter to `true`.
     */
    status?: 'Deleted' | 'Edited' | 'Normal';
    /**
     * The timestamp of the message in microseconds.
     */
    timestamp?: number;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   *
   */
  next_page_token?: string;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
};

export type GetChatMessagesError = unknown;

export type SendaChatMessageData = {
  body?: {
    /**
     * [Chat mentions](https://support.zoom.us/hc/en-us/articles/360037567431-Using-chat-mentions-and-slash-commands) object. Use this object to include mentions in the message that will be sent to  a channel.
     */
    at_items?: Array<{
      /**
       * This field is required if the value of `at_type` field is set to 1.
       *
       * Email address of the contact.
       *
       *
       */
      at_contact?: string;
      /**
       * Type of mention. You can use one of the following values:<br>
       * * `1`: Mention a contact.
       *
       * * `2`: Mention "all" to notify everyone in the channel.
       */
      at_type?: 1 | 2;
      /**
       * End position of the mention.
       *
       * Example message: "@Shrijana How are you?"
       * In this case, the end position of the mention "@Shrijana" is 8. Hence, the value of this field will be 8.
       */
      end_position?: number;
      /**
       * Start position of the mention("@") in the message string.
       *
       * For example if you want to include the mention at the beginning of the message, the value for this field will be 0.
       *
       * Example message: "@Shrijana How are you?"
       *
       *
       */
      start_position?: number;
    }>;
    /**
     * The message to be sent.
     */
    message: string;
    /**
     * The Channel Id of the channel where you would like to send a message.
     */
    to_channel?: string;
    /**
     * The email address of the contact to whom you would like to send the message.
     */
    to_contact?: string;
  };
  path: {
    userId: string;
  };
};

export type SendaChatMessageResponse = {
  /**
   * Message ID: Unique Identifier of the message.
   */
  id?: string;
};

export type SendaChatMessageError = unknown;

export type DeleteChatMessageData = {
  path: {
    /**
     * Message ID
     */
    messageId: string;
    userId: string;
  };
  query?: {
    /**
     * The channel Id of the channel where you would like to send the message.
     *
     * You must provide either `to_contact` or `to_channel` as a query parameter to delete a message that was previously sent to either an individual or a chat channel
     */
    to_channel?: string;
    /**
     * The userId or email address of a chat contact to whom you previously sent the message.
     *
     * Note: You must provide either `to_contact` or `to_channel` as a query parameter to delete a message that was previously sent to either an individual or a chat channel respectively.
     */
    to_contact?: string;
  };
};

export type DeleteChatMessageResponse = any;

export type DeleteChatMessageError = unknown;

export type EditMessageData = {
  body?: {
    /**
     * The edited message.
     */
    message?: string;
    /**
     * The Channel ID of the channel where you sent the message.<br>You must provide either `to_contact` or `to_channel` parameter in the API request.
     * Channel ID can be retrieved from List User's Channels API.
     */
    to_channel?: string;
    /**
     * The email address of the contact to whom the message was sent.<br>
     * You must provide either `to_contact` or `to_channel` parameter in the API request.
     */
    to_contact?: string;
  };
  path: {
    /**
     * Message ID: Unique Identifier of the message.
     */
    messageId: string;
    userId: string;
  };
};

export type EditMessageResponse = any;

export type EditMessageError = unknown;

export type SearchCompanyContactsData = {
  query: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records to be returned with a single API call.
     */
    page_size?: number;
    /**
     * Set `query_presence_status` to `true` in order to include the presence status of a contact in the response.
     */
    query_presence_status?: string;
    /**
     * Provide the keyword - either first name, last name or email of the contact whom you have to search for.
     */
    search_key: string;
  };
};

export type SearchCompanyContactsResponse = {
  contacts?: Array<{
    /**
     * Department of the contact as provided in the user's Zoom profile.
     */
    dept?: string;
    /**
     * Direct Number(s) of a user who has Zoom Phone license assigned.
     */
    direct_numbers?: Array<string>;
    /**
     * Email address of the contact.
     */
    email?: string;
    /**
     * Extension Number of a user who has Zoom Phone license assigned.
     */
    extension_number?: string;
    /**
     * First name of the contact.
     */
    first_name?: string;
    /**
     * User ID of the contact.
     */
    id?: string;
    /**
     * Unique Identifier of the [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) in which the user has been added. An IM Directory group is not the same as a channel. IM Directory allows administrators to assign users in their account to groups that display within the Contacts list on Zoom clients.
     */
    im_group_id?: string;
    /**
     * Name of the [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) in which the user has been added. An IM Directory group is not the same as a channel. IM Directory allows administrators to assign users in their account to groups that display within the Contacts list on Zoom clients.
     */
    im_group_name?: string;
    /**
     * Department of the user as provided in the user's Zoom profile.
     */
    job_title?: string;
    /**
     * Last name of the contact.
     */
    last_name?: string;
    /**
     * Location of the user as provided in the user's Zoom profile.
     */
    location?: string;
    /**
     * Phone number of the user.
     */
    phone_number?: string;
    /**
     * Presence status of the contact in Zoom Client. The value of this field can be one of the following:
     * `Do_Not_Disturb`<br> `away`<br> `Available`<br> `Offline`
     */
    presence_status?: 'Do_Not_Disturb' | 'Away' | 'Available' | 'Offline';
    /**
     * SIP Phone number of the user. Returned only if user has SIP phone enabled.
     */
    sip_phone_number?: string;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned with a single API call. Default value is `1`.
   */
  page_size?: number;
};

export type SearchCompanyContactsError = unknown;

export type GroupsResponse = {
  /**
   * List of Group objects.
   */
  groups?: Array<
    {
      /**
       * Group ID.
       */
      id?: string;
    } & {
      /**
       * Group name.
       */
      name?: string;
      /**
       * Total number of members in this group.
       */
      total_members?: number;
    }
  >;
  /**
   * Total records.
   */
  total_records?: number;
};

export type GroupsError = unknown;

export type GroupCreateData = {
  body: {
    /**
     * Group name.
     */
    name?: string;
  };
};

export type GroupCreateResponse =
  | unknown
  | {
      /**
       * Group ID.
       */
      id?: string;
      /**
       * Group name.
       */
      name?: string;
      /**
       * Group member count.
       */
      total_members?: number;
    };

export type GroupCreateError = unknown;

export type GroupDeleteData = {
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
  };
};

export type GroupDeleteResponse = unknown | any;

export type GroupDeleteError = unknown;

export type GroupData = {
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
  };
};

export type GroupResponse = {
  /**
   * Group ID.
   */
  id?: string;
  /**
   * Group name.
   */
  name?: string;
  /**
   * Total count of members in the group.
   */
  total_members?: number;
};

export type GroupError = unknown;

export type GroupUpdateData = {
  body: {
    /**
     * Group name. It must be unique to one account and less than 128 characters.
     */
    name?: string;
  };
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
  };
};

export type GroupUpdateResponse = unknown | any;

export type GroupUpdateError = unknown;

export type GetGroupLockSettingsData = {
  path: {
    /**
     * Id of the group.
     */
    groupId: string;
  };
  query?: {
    /**
     * Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
     * {
     * "schedule_meeting": {
     * "host_video": false
     * }
     * }
     * <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
     */
    custom_query_fields?: string;
    /**
     * Specify `meeting_security` as the value of this field if you would like to view security settings applied on a meeting hosted by the users in this group.
     */
    option?: string;
  };
};

export type GetGroupLockSettingsResponse =
  | {
      email_notification?: {
        /**
         * Notify the alternative host who is set or removed.
         */
        alternative_host_reminder?: boolean;
        /**
         * Notify host and participants when the meeting is cancelled.
         */
        cancel_meeting_reminder?: boolean;
        /**
         * Notify host when cloud recording is available.
         */
        cloud_recording_available_reminder?: boolean;
        /**
         * Notify host when participants join the meeting before them.
         */
        jbh_reminder?: boolean;
        /**
         * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
         */
        schedule_for_host_reminder?: boolean;
      };
      in_meeting?: {
        /**
         * Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
         */
        alert_guest_join?: boolean;
        /**
         * Show Zoom windows during screen share.
         */
        allow_show_zoom_windows?: boolean;
        /**
         * Allow participants to use annotation tools to add information to shared screens.
         */
        annotation?: boolean;
        /**
         * Allow host to put attendee on hold.
         *
         * **This field has been deprecated and is no longer supported.**
         */
        attendee_on_hold?: boolean;
        /**
         * Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
         */
        auto_answer?: boolean;
        /**
         * Automatically save all in-meeting chats.
         */
        auto_saving_chat?: boolean;
        /**
         * Allow host to split meeting participants into separate, smaller rooms.
         */
        breakout_room?: boolean;
        /**
         * Allow meeting participants to send chat message visible to all participants.
         */
        chat?: boolean;
        /**
         * Allow host to type closed captions or assign a participant/third party device to add closed captions.
         */
        closed_caption?: boolean;
        /**
         * Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
         */
        co_host?: boolean;
        /**
         * Displays whether or not custom [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) have been selected for meetings/webinars hosted by this group.
         */
        custom_data_center_regions?: boolean;
        /**
         * Require that all meetings are encrypted using AES.
         */
        e2e_encryption?: boolean;
        /**
         * Play sound when participants join or leave.
         */
        entry_exit_chime?: string;
        /**
         * Allow another user to take control of the camera during a meeting.
         */
        far_end_camera_control?: boolean;
        /**
         * Enable users to provide feedback to Zoom at the end of the meeting.
         */
        feedback?: boolean;
        /**
         * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.
         */
        file_transfer?: boolean;
        /**
         * Enable higher quality video for host and participants. This will require more bandwidth.
         */
        group_hd?: boolean;
        /**
         * Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.
         */
        non_verbal_feedback?: boolean;
        /**
         * Allow users to select original sound during a meeting.
         */
        original_audio?: boolean;
        /**
         * Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
         */
        polling?: boolean;
        /**
         * Display end-of-meeting experience feedback survey.
         */
        post_meeting_feedback?: boolean;
        /**
         * Allow meeting participants to send a private 1:1 message to another participant.
         */
        private_chat?: boolean;
        /**
         * During screen sharing, allow the person who is sharing to let others control the shared content.
         */
        remote_control?: boolean;
        /**
         * Allow meeting host to provide 1:1 remote support to another participant.
         */
        remote_support?: boolean;
        /**
         * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled and locked for the group or not.
         */
        request_permission_to_unmute?: boolean;
        /**
         * Allow host and participants to share their screen or content during meetings.
         */
        screen_sharing?: boolean;
        /**
         * Allow users to invite participants by email only by default.
         */
        sending_default_email_invites?: boolean;
        /**
         * Allow participants to join a meeting directly from their browser.
         */
        show_browser_join_link?: boolean;
        /**
         * Always show meeting controls during a meeting.
         */
        show_meeting_control_toolbar?: boolean;
        /**
         * Allow users to select stereo audio during a meeting.
         */
        stereo_audio?: boolean;
        /**
         * Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
         */
        use_html_format_email?: boolean;
        /**
         * Enable virtual background.
         */
        virtual_background?: boolean;
        /**
         * Attendees cannot join a meeting until a host admits them individually from the waiting room.
         */
        waiting_room?: boolean;
        /**
         * Allow participants to share a whiteboard that includes annotation tools.
         */
        whiteboard?: boolean;
      };
      recording?: {
        /**
         * Make cloud recordings accessible to account members only.
         */
        account_user_access_recording?: boolean;
        /**
         * Allow Zoom to automatically delete recordings permanently after a specified number of days.
         */
        auto_delete_cmr?: boolean;
        /**
         * Record meetings automatically as they start.
         */
        auto_recording?: string;
        /**
         * Allow hosts to record and save the meeting / webinar in the cloud.
         */
        cloud_recording?: boolean;
        /**
         * Allow anyone with a link to the cloud recording to download.
         */
        cloud_recording_download?: boolean;
        /**
         * Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.
         */
        host_delete_cloud_recording?: boolean;
        /**
         * Setting to allow cloud recording access only from specific IP address ranges.
         *
         */
        ip_address_access_control?: {
          /**
           * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
           *
           *
           */
          enable?: boolean;
          /**
           * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
           *
           * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
           *
           *
           */
          ip_addresses_or_ranges?: string;
        };
        /**
         * Allow hosts and participants to record the meeting to a local file.
         */
        local_recording?: boolean;
        /**
         * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
         *
         *
         */
        prevent_host_access_recording?: boolean;
        /**
         * Only authenticated users can view cloud recordings
         */
        recording_authentication?: boolean;
      };
      schedule_meeting?: {
        /**
         * Determine how participants can join the audio portion of the meeting.
         */
        audio_type?: boolean;
        /**
         * If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.
         *
         */
        embed_password_in_join_link?: boolean;
        /**
         * If join before host option is enabled for a personal meeting, then enforce password requirement.
         */
        force_pmi_jbh_password?: boolean;
        /**
         * Start meetings with host video on.
         */
        host_video?: boolean;
        /**
         * Allow participants to join the meeting before the host arrives
         */
        join_before_host?: boolean;
        /**
         * Only authenticated users can join meetings
         */
        meeting_authentication?: boolean;
        /**
         * Automatically mute all participants when they join the meeting.
         */
        mute_upon_entry?: boolean;
        /**
         * Start meetings with participant video on.
         */
        participant_video?: boolean;
        /**
         * Generate and send new passwords for newly scheduled or edited meetings.
         */
        pstn_password_protected?: boolean;
        /**
         * Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled.
         */
        require_password_for_instant_meetings?: boolean;
        /**
         * Require participants to enter password for PMI meetings.
         */
        require_password_for_pmi_meetings?: boolean;
        /**
         * This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.
         */
        require_password_for_scheduling_new_meetings?: boolean;
        /**
         * Receive desktop notification for upcoming meetings.
         */
        upcoming_meeting_reminder?: boolean;
      };
      telephony?: {
        telephony_regions?: boolean;
        /**
         * Allow users to join the meeting using the existing 3rd party audio configuration.
         */
        third_party_audio?: boolean;
      };
    }
  | {
      meeting_security?: {
        /**
         * `true`: Require that all meetings are secured with at least one security option.
         *
         * This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
         */
        auto_security?: boolean;
        /**
         * If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
         *
         */
        embed_password_in_join_link?: boolean;
        /**
         * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
         * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
         *
         * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
         */
        encryption_type?: 'enhanced_encryption' | 'e2ee';
        /**
         * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
         */
        end_to_end_encrypted_meetings?: boolean;
        /**
         * If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.
         */
        meeting_password?: boolean;
        /**
         * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
         */
        meeting_password_requirement?: {
          consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
          /**
           * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
           *
           */
          have_letter?: boolean;
          /**
           * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
           */
          have_number?: boolean;
          /**
           * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
           */
          have_special_character?: boolean;
          /**
           * If set to `true`, the passcode must include both uppercase and lowercase characters.
           */
          have_upper_and_lower_characters?: boolean;
          /**
           * The minimum length that the meeting/webinar passcode needs to have.
           */
          length?: number;
          /**
           * If set to `true`, the passcode must only contain numbers and no other characters.
           */
          only_allow_numeric?: boolean;
          /**
           * If set to `true`, users will be informed if the provided passcode is weak.
           */
          weak_enhance_detection?: boolean;
        };
        /**
         * Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.
         */
        phone_password?: boolean;
        /**
         * If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
         *
         */
        pmi_password?: boolean;
        /**
         * Require a passcode for meetings which have already been scheduled.
         *
         */
        require_password_for_scheduled_meeting?: boolean;
        /**
         * Require a passcode for webinars which have already been scheduled.
         *
         */
        require_password_for_scheduled_webinar?: boolean;
        /**
         * When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
         *
         */
        waiting_room?: boolean;
        /**
         * Specify the settings to be applied if waiting room is enabled.
         */
        waiting_room_settings?: {
          /**
           *
           *
           * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
           * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
           */
          participants_to_place_in_waiting_room?: 0 | 1 | 2;
          /**
           * Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
           * `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
           *
           *
           *
           */
          users_who_can_admit_participants_from_waiting_room?: number;
          /**
           * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
           */
          whitelisted_domains_for_waiting_room?: string;
        };
        /**
         * If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
         *
         */
        webinar_password?: boolean;
      };
    };

export type GetGroupLockSettingsError = unknown;

export type GroupLockedSettingsData = {
  body?:
    | {
        email_notification?: {
          /**
           * Notify the alternative host who is set or removed.
           */
          alternative_host_reminder?: boolean;
          /**
           * Notify host and participants when the meeting is cancelled.
           */
          cancel_meeting_reminder?: boolean;
          /**
           * Notify host when cloud recording is available.
           */
          cloud_recording_available_reminder?: boolean;
          /**
           * Notify host when participants join the meeting before them.
           */
          jbh_reminder?: boolean;
          /**
           * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
           */
          schedule_for_host_reminder?: boolean;
        };
        in_meeting?: {
          /**
           * Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
           */
          alert_guest_join?: boolean;
          /**
           * Show Zoom windows during screen share.
           */
          allow_show_zoom_windows?: boolean;
          /**
           * Allow participants to use annotation tools to add information to shared screens.
           */
          annotation?: boolean;
          /**
           * Allow host to put attendee on hold.
           *
           * **This field has been deprecated and is no longer supported.**
           */
          attendee_on_hold?: boolean;
          /**
           * Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
           */
          auto_answer?: boolean;
          /**
           * Automatically save all in-meeting chats.
           */
          auto_saving_chat?: boolean;
          /**
           * Allow host to split meeting participants into separate, smaller rooms.
           */
          breakout_room?: boolean;
          /**
           * Allow meeting participants to send chat message visible to all participants.
           */
          chat?: boolean;
          /**
           * Allow host to type closed captions or assign a participant/third party device to add closed captions.
           */
          closed_caption?: boolean;
          /**
           * Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
           */
          co_host?: boolean;
          /**
           * Displays whether or not custom [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) have been selected for meetings/webinars hosted by this group.
           */
          custom_data_center_regions?: boolean;
          /**
           * Require that all meetings are encrypted using AES.
           */
          e2e_encryption?: boolean;
          /**
           * Play sound when participants join or leave.
           */
          entry_exit_chime?: string;
          /**
           * Allow another user to take control of the camera during a meeting.
           */
          far_end_camera_control?: boolean;
          /**
           * Enable users to provide feedback to Zoom at the end of the meeting.
           */
          feedback?: boolean;
          /**
           * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.
           */
          file_transfer?: boolean;
          /**
           * Enable higher quality video for host and participants. This will require more bandwidth.
           */
          group_hd?: boolean;
          /**
           * Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.
           */
          non_verbal_feedback?: boolean;
          /**
           * Allow users to select original sound during a meeting.
           */
          original_audio?: boolean;
          /**
           * Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
           */
          polling?: boolean;
          /**
           * Display end-of-meeting experience feedback survey.
           */
          post_meeting_feedback?: boolean;
          /**
           * Allow meeting participants to send a private 1:1 message to another participant.
           */
          private_chat?: boolean;
          /**
           * During screen sharing, allow the person who is sharing to let others control the shared content.
           */
          remote_control?: boolean;
          /**
           * Allow meeting host to provide 1:1 remote support to another participant.
           */
          remote_support?: boolean;
          /**
           * Indicate whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option should be enabled and locked for the group or not.
           */
          request_permission_to_unmute?: boolean;
          /**
           * Allow host and participants to share their screen or content during meetings.
           */
          screen_sharing?: boolean;
          /**
           * Allow users to invite participants by email only by default.
           */
          sending_default_email_invites?: boolean;
          /**
           * Allow participants to join a meeting directly from their browser.
           */
          show_browser_join_link?: boolean;
          /**
           * Always show meeting controls during a meeting.
           */
          show_meeting_control_toolbar?: boolean;
          /**
           * Allow users to select stereo audio during a meeting.
           */
          stereo_audio?: boolean;
          /**
           * Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
           */
          use_html_format_email?: boolean;
          /**
           * Enable virtual background.
           */
          virtual_background?: boolean;
          /**
           * Attendees cannot join a meeting until a host admits them individually from the waiting room.
           */
          waiting_room?: boolean;
          /**
           * Allow participants to share a whiteboard that includes annotation tools.
           */
          whiteboard?: boolean;
        };
        recording?: {
          /**
           * Make cloud recordings accessible to account members only.
           */
          account_user_access_recording?: boolean;
          /**
           * Allow Zoom to automatically delete recordings permanently after a specified number of days.
           */
          auto_delete_cmr?: boolean;
          /**
           * Record meetings automatically as they start.
           */
          auto_recording?: string;
          /**
           * Allow hosts to record and save the meeting / webinar in the cloud.
           */
          cloud_recording?: boolean;
          /**
           * Allow anyone with a link to the cloud recording to download.
           */
          cloud_recording_download?: boolean;
          /**
           * Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.
           */
          host_delete_cloud_recording?: boolean;
          /**
           * Setting to allow cloud recording access only from specific IP address ranges.
           *
           */
          ip_address_access_control?: {
            /**
             * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
             *
             *
             */
            enable?: boolean;
            /**
             * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
             *
             * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
             *
             *
             */
            ip_addresses_or_ranges?: string;
          };
          /**
           * Allow hosts and participants to record the meeting to a local file.
           */
          local_recording?: boolean;
          recording_authentication?: string;
        };
        schedule_meeting?: {
          /**
           * Determine how participants can join the audio portion of the meeting.
           */
          audio_type?: boolean;
          /**
           * If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.
           *
           */
          embed_password_in_join_link?: boolean;
          /**
           * If join before host option is enabled for a personal meeting, then enforce password requirement.
           */
          force_pmi_jbh_password?: boolean;
          /**
           * Start meetings with host video on.
           */
          host_video?: boolean;
          /**
           * Allow participants to join the meeting before the host arrives
           */
          join_before_host?: boolean;
          /**
           * Only authenticated users can join meetings
           */
          meeting_authentication?: boolean;
          /**
           * Automatically mute all participants when they join the meeting.
           */
          mute_upon_entry?: boolean;
          /**
           * Start meetings with participant video on.
           */
          participant_video?: boolean;
          /**
           * Turn the lock setting on or off for the **Enable Personal Meeting ID** setting for a group.<br><br>
           * `true`: Turn the **"Enable Personal Meeting ID"** setting **on** for all users in the group. Users can choose to use personal meeting ID for their meetings. <br><br>
           * `false`: Turn **off** the **"Enable Personal Meeting ID"** setting. **If this setting is [disabled](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link?flash_digest=eb7ac62d8c7fb4daf285916e3e15d87537806133#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a), meetings that were scheduled with PMI by this group members will be invalid. Users will have to update previously scheduled PMI meetings.**<br><br>
           * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
           *
           *
           *
           */
          personal_meeting?: boolean;
          /**
           * Generate and send new passwords for newly scheduled or edited meetings.
           */
          pstn_password_protected?: boolean;
          /**
           * Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled.
           */
          require_password_for_instant_meetings?: boolean;
          /**
           * Require participants to enter password for PMI meetings.
           */
          require_password_for_pmi_meetings?: boolean;
          /**
           * This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.
           */
          require_password_for_scheduling_new_meetings?: boolean;
          /**
           * Receive desktop notification for upcoming meetings.
           */
          upcoming_meeting_reminder?: boolean;
        };
        telephony?: {
          telephony_regions?: boolean;
          /**
           * Allow users to join the meeting using the existing 3rd party audio configuration.
           */
          third_party_audio?: boolean;
        };
      }
    | {
        meeting_security?: {
          /**
           * `true`: Require that all meetings are secured with at least one security option.
           *
           * This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
           */
          auto_security?: boolean;
          /**
           * If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
           *
           */
          embed_password_in_join_link?: boolean;
          /**
           * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
           * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
           *
           * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
           */
          encryption_type?: 'enhanced_encryption' | 'e2ee';
          /**
           * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
           */
          end_to_end_encrypted_meetings?: boolean;
          /**
           * If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.
           */
          meeting_password?: boolean;
          /**
           * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
           */
          meeting_password_requirement?: {
            consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
            /**
             * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
             *
             */
            have_letter?: boolean;
            /**
             * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
             */
            have_number?: boolean;
            /**
             * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
             */
            have_special_character?: boolean;
            /**
             * If set to `true`, the passcode must include both uppercase and lowercase characters.
             */
            have_upper_and_lower_characters?: boolean;
            /**
             * The minimum length that the meeting/webinar passcode needs to have.
             */
            length?: number;
            /**
             * If set to `true`, the passcode must only contain numbers and no other characters.
             */
            only_allow_numeric?: boolean;
            /**
             * If set to `true`, users will be informed if the provided passcode is weak.
             */
            weak_enhance_detection?: boolean;
          };
          /**
           * Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.
           */
          phone_password?: boolean;
          /**
           * If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
           *
           */
          pmi_password?: boolean;
          /**
           * Require a passcode for meetings which have already been scheduled.
           *
           */
          require_password_for_scheduled_meeting?: boolean;
          /**
           * Require a passcode for webinars which have already been scheduled.
           *
           */
          require_password_for_scheduled_webinar?: boolean;
          /**
           * When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
           *
           */
          waiting_room?: boolean;
          /**
           * Specify the settings to be applied if waiting room is enabled.
           */
          waiting_room_settings?: {
            /**
             *
             *
             * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
             * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
             */
            participants_to_place_in_waiting_room?: 0 | 1 | 2;
            /**
             * Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
             * `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
             *
             *
             *
             */
            users_who_can_admit_participants_from_waiting_room?: number;
            /**
             * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
             */
            whitelisted_domains_for_waiting_room?: string;
          };
          /**
           * If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
           *
           */
          webinar_password?: boolean;
        };
      };
  path: {
    /**
     * The Id of the group.
     */
    groupId: string;
  };
  query?: {
    /**
     * Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
     * {
     * "schedule_meeting": {
     * "host_video": false
     * }
     * }
     * <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
     */
    custom_query_fields?: string;
    /**
     * Specify `meeting_security` as the value of this field if you would like to view security settings applied on a meeting hosted by the users in this group.
     */
    option?: string;
  };
};

export type GroupLockedSettingsResponse = unknown;

export type GroupLockedSettingsError = unknown;

export type GroupMembersData = {
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     *
     * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
     *
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type GroupMembersResponse = {
  members?: Array<{
    /**
     * User's email address.
     */
    email?: string;
    /**
     * First name of the user.
     */
    first_name?: string;
    /**
     * Unique Identifier of the user.
     */
    id?: string;
    /**
     * Last name of the user.
     */
    last_name?: string;
    /**
     * User type: <br> `1` - Basic<br> `2` - Licensed<br> `3` - On-prem
     */
    type?: number;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned from this request.
   */
  page_count?: number;
  /**
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned from a single API call.
   */
  page_size?: number;
  /**
   * The total number of records available across all pages.
   */
  total_records?: number;
};

export type GroupMembersError = unknown;

export type GroupMembersCreateData = {
  body: {
    /**
     * List of Group members
     */
    members?: Array<{
      /**
       * User email. If the user ID is given then the user email should be ignored.
       */
      email?: string;
      /**
       * User ID.
       */
      id?: string;
    }>;
  };
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
  };
};

export type GroupMembersCreateResponse =
  | unknown
  | {
      added_at?: string;
      ids?: string;
    };

export type GroupMembersCreateError = unknown;

export type GroupMembersDeleteData = {
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
    /**
     * The member ID.
     */
    memberId: string;
  };
};

export type GroupMembersDeleteResponse = unknown | any;

export type GroupMembersDeleteError = unknown;

export type UpdateAgroupMemberData = {
  body?: {
    /**
     * Specify the type of action to be performed:<br><br>
     * `move`: Simultaneously remove a member from one group and move the member to a different group.<br>
     * `set_primary`: Set a primary group for the user.
     *
     */
    action: 'move' | 'set_primary';
    /**
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.<br>
     *
     * To move a user, use this field to specify the groupId of the group where the member is to be moved.<br>
     *
     * To set a primary group for the user, provide the groupId of the group which is going to be the primary group.
     */
    target_group_id?: string;
  };
  path: {
    /**
     * Unique Identifier of the group. Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.<br> To change a member's primary group, provide the groupId of the member's current primary group as the value of this field.<br> To remove a member from one group and move the member to another group, provide the groupId of the group from which the member is to be moved.
     */
    groupId: string;
    /**
     * Unique Identifier of the group member. Can be retrieved by calling the [List Group Members](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groupmembers) API.
     */
    memberId: string;
  };
};

export type UpdateAgroupMemberResponse = unknown;

export type UpdateAgroupMemberError = unknown;

export type GetGroupSettingsData = {
  path: {
    groupId: string;
  };
  query?: {
    /**
     * Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
     * {
     * "schedule_meeting": {
     * "host_video": false
     * }
     * }
     * <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
     */
    custom_query_fields?: string;
    /**
     * `meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the group.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the group.<br>
     * `meeting_security`: Use this query parameter to view meeting security settings applied on the group.<br>
     */
    option?: 'meeting_authentication' | 'recording_authentication';
  };
};

export type GetGroupSettingsResponse =
  | {
      email_notification?: {
        /**
         * Notify the alternative host who is set or removed.
         */
        alternative_host_reminder?: boolean;
        /**
         * Notify host and participants when the meeting is cancelled.
         */
        cancel_meeting_reminder?: boolean;
        /**
         * Notify host when cloud recording is available.
         */
        cloud_recording_available_reminder?: boolean;
        /**
         * Notify host when participants join the meeting before them.
         */
        jbh_reminder?: boolean;
        /**
         * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
         */
        schedule_for_host_reminder?: boolean;
      };
      in_meeting?: {
        /**
         * Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
         */
        alert_guest_join?: boolean;
        /**
         * Show Zoom windows during screen share.
         */
        allow_show_zoom_windows?: boolean;
        /**
         * Allow participants to use annotation tools to add information to shared screens.
         */
        annotation?: boolean;
        /**
         * Allow host to put attendee on hold.
         *
         * **This field has been deprecated and is no longer supported.**
         */
        attendee_on_hold?: boolean;
        /**
         * Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
         */
        auto_answer?: boolean;
        /**
         * Automatically save all in-meeting chats.
         */
        auto_saving_chat?: boolean;
        /**
         * Allow host to split meeting participants into separate, smaller rooms.
         */
        breakout_room?: boolean;
        /**
         * Allow meeting participants to send chat message visible to all participants.
         */
        chat?: boolean;
        /**
         * Allow host to type closed captions or assign a participant/third party device to add closed captions.
         */
        closed_caption?: boolean;
        /**
         * Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
         */
        co_host?: boolean;
        /**
         * If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to be used by this group for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
         */
        custom_data_center_regions?: boolean;
        /**
         * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
         *
         */
        data_center_regions?: 'EU' | 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA';
        /**
         * Require that all meetings are encrypted using AES.
         */
        e2e_encryption?: boolean;
        /**
         * Play sound when participants join or leave.
         */
        entry_exit_chime?: string;
        /**
         * Allow another user to take control of the camera during a meeting.
         */
        far_end_camera_control?: boolean;
        /**
         * Enable users to provide feedback to Zoom at the end of the meeting.
         */
        feedback?: boolean;
        /**
         * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.
         */
        file_transfer?: boolean;
        /**
         * Enable higher quality video for host and participants. This will require more bandwidth.
         */
        group_hd?: boolean;
        /**
         * Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.
         */
        non_verbal_feedback?: boolean;
        /**
         * Show the list of H.323/SIP devices only to the host.
         */
        only_host_view_device_list?: boolean;
        /**
         * Allow users to select original sound during a meeting.
         */
        original_audio?: boolean;
        /**
         * Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
         */
        polling?: boolean;
        /**
         * Display end-of-meeting experience feedback survey.
         */
        post_meeting_feedback?: boolean;
        /**
         * Allow meeting participants to send a private 1:1 message to another participant.
         */
        private_chat?: boolean;
        /**
         * When each participant joins by telephone, allow the option to record and play their own voice as entry and exit chimes.
         */
        record_play_own_voice?: boolean;
        /**
         * During screen sharing, allow the person who is sharing to let others control the shared content.
         */
        remote_control?: boolean;
        /**
         * Allow meeting host to provide 1:1 remote support to another participant.
         */
        remote_support?: boolean;
        /**
         * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the group or not.
         */
        request_permission_to_unmute?: boolean;
        /**
         * Allow host and participants to share their screen or content during meetings.
         */
        screen_sharing?: boolean;
        /**
         * Allow users to invite participants by email only by default.
         */
        sending_default_email_invites?: boolean;
        /**
         * Allow participants to join a meeting directly from their browser.
         */
        show_browser_join_link?: boolean;
        /**
         * Show the list of H.323/SIP devices.
         */
        show_device_list?: boolean;
        /**
         * Always show meeting controls during a meeting.
         */
        show_meeting_control_toolbar?: boolean;
        /**
         * Allow users to select stereo audio during a meeting.
         */
        stereo_audio?: boolean;
        /**
         * Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
         */
        use_html_format_email?: boolean;
        /**
         * Enable virtual background.
         */
        virtual_background?: boolean;
        /**
         * Settings to manage virtual background.
         */
        virtual_background_settings?: {
          /**
           * Allow users to upload custom backgrounds.
           */
          allow_upload_custom?: boolean;
          /**
           * Allow use of videos for virtual backgrounds.
           */
          allow_videos?: boolean;
          /**
           * Enable virtual background.
           */
          enable?: boolean;
          files?: Array<{
            /**
             * Unique identifier of the file.
             */
            id?: string;
            /**
             * Indicates whether or not this file is the default virtual background file.
             */
            is_default?: boolean;
            /**
             * File name.
             */
            name?: string;
            /**
             * File size.
             */
            size?: string;
            /**
             * File type.
             */
            type?: string;
          }>;
        };
        /**
         * Attendees cannot join a meeting until a host admits them individually from the waiting room.
         */
        waiting_room?: boolean;
        /**
         * Allow participants to share a whiteboard that includes annotation tools.
         */
        whiteboard?: boolean;
        /**
         * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
         * `host`: Only host can share the screen.<br>
         * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
         *
         */
        who_can_share_screen?: 'host' | 'all';
        /**
         * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
         * `host`: Only a host can share the screen when someone else is sharing.<br>
         * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
         *
         */
        who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
      };
      profile?: {
        recording_storage_location?: {
          /**
           * Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.
           *
           * Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
           */
          allowed_values?: Array<string>;
          /**
           * Abbreviated country code.
           */
          value?: string;
        };
      };
      recording?: {
        /**
         * Make cloud recordings accessible to account members only.
         */
        account_user_access_recording?: boolean;
        /**
         * [Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted archiving solution access by the Zoom Support team.
         */
        archive?: {
          /**
           * Enable the archiving feature.
           */
          enable?: boolean;
          settings?: {
            /**
             * Include in-meeting and/or in-webinar audio in the archive.
             */
            audio_file?: boolean;
            /**
             * Include closed caption or transcript in the archive.
             */
            cc_transcript_file?: boolean;
            /**
             * Include in-meeting chat in the archive.
             */
            chat_file?: boolean;
            /**
             * Include user email in in-meeting chat file.
             */
            chat_with_sender_email?: boolean;
            /**
             * Include in-meeting and/or in-webinar video in the archive.
             */
            video_file?: boolean;
          };
          /**
           * Archive types:
           *
           * * `1`: Only meetings are archived.<br>
           * * `2`: Only webinars are archived.<br>
           * * `3`: Both meetings and webinars are archived.
           */
          type?: 1 | 2 | 3;
        };
        /**
         * Record meetings automatically as they start.
         */
        auto_recording?: string;
        /**
         * Allow hosts to record and save the meeting / webinar in the cloud.
         */
        cloud_recording?: boolean;
        /**
         * Allow anyone with a link to the cloud recording to download.
         */
        cloud_recording_download?: boolean;
        /**
         * Allow only the host with a link to the cloud recording to download.
         */
        cloud_recording_download_host?: boolean;
        /**
         * Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.
         */
        host_delete_cloud_recording?: boolean;
        /**
         * Setting to allow cloud recording access only from specific IP address ranges.
         *
         */
        ip_address_access_control?: {
          /**
           * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
           *
           *
           */
          enable?: boolean;
          /**
           * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
           *
           * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
           *
           *
           */
          ip_addresses_or_ranges?: string;
        };
        /**
         * Allow hosts and participants to record the meeting to a local file.
         */
        local_recording?: boolean;
        /**
         * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
         *
         *
         */
        prevent_host_access_recording?: boolean;
        /**
         * Record an audio only file.
         */
        record_audio_file?: boolean;
        /**
         * When someone is sharing their screen, active speaker will show on the top right corner of the shared screen.
         */
        record_gallery_view?: boolean;
        /**
         * Record active speaker with shared screen.
         */
        record_speaker_view?: boolean;
        /**
         * Automatically transcribe the audio of a meeting or webinar for cloud recordings.
         */
        recording_audio_transcript?: boolean;
        /**
         * Save chat messages from the meeting / webinar.
         */
        save_chat_text?: boolean;
        /**
         * Add a timestamp to the recording.
         */
        show_timestamp?: boolean;
      };
      schedule_meeting?: {
        /**
         * Determine how participants can join the audio portion of the meeting.
         */
        audio_type?: string;
        /**
         * If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.
         *
         */
        embed_password_in_join_link?: boolean;
        /**
         * If join before host option is enabled for a personal meeting, then enforce password requirement.
         *
         *
         * **This field will be deprecated in near future.** If you would like to enable this setting, we highly encourage you to use the `require_password_for_pmi_meetings` field.
         *
         *
         */
        force_pmi_jbh_password?: boolean;
        /**
         * Start meetings with host video on.
         */
        host_video?: boolean;
        /**
         * Allow participants to join the meeting before the host arrives
         */
        join_before_host?: boolean;
        /**
         * Automatically mute all participants when they join the meeting.
         */
        mute_upon_entry?: boolean;
        /**
         * Start meetings with participant video on.
         */
        participant_video?: boolean;
        /**
         * Personal Meeting Setting.<br><br>
         * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
         * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
         * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
         *
         *
         *
         */
        personal_meeting?: boolean;
        /**
         * Generate and send new passwords for newly scheduled or edited meetings.
         */
        pstn_password_protected?: boolean;
        /**
         * If enabled, a random password will be generated on the user's end who starts the instant meeting. Other participants will have to enter the password to join the meeting. If you use PMI for your instant meetings, this option will be disabled.
         */
        require_password_for_instant_meetings?: boolean;
        /**
         * Indicates whether a password is required for [PMI](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI-) meetings or not. The value can be one of the following:<br>
         * `none`: Do not require password for PMI meetings.<br>
         * `all`: Require participants to enter password for all PMI enabled meetings.<br> `jbh_only`: Require password only for meetings where the **"join before host"** setting is enabled.
         */
        require_password_for_pmi_meetings?: 'all' | 'jbh_only' | 'none';
        /**
         * Require a password for meetings which have already been scheduled
         *
         */
        require_password_for_scheduled_meetings?: boolean;
        /**
         * This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.
         */
        require_password_for_scheduling_new_meetings?: boolean;
        /**
         * Receive desktop notification for upcoming meetings.
         */
        upcoming_meeting_reminder?: boolean;
        /**
         * Indicates whether PMI is enabled for all instant meetings or not.
         */
        use_pmi_for_instant_meetings?: boolean;
        /**
         * Indicates whether PMI is enabled for all scheduled meetings or not.
         */
        use_pmi_for_schedule_meetings?: boolean;
      };
      telephony?: {
        audio_conference_info?: string;
        /**
         * Indicates where most of the participants call into or call from duriing a meeting.
         */
        telephony_regions?: {
          /**
           * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
           */
          selection_values?: Array<string>;
        };
        /**
         * Allow users to join the meeting using the existing 3rd party audio configuration.
         */
        third_party_audio?: boolean;
      };
    }
  | (
      | {
          /**
           * Meeting Authentication Options
           */
          authentication_options?: Array<{
            /**
             * Authentication default option
             */
            default_option?: boolean;
            /**
             * Authentication domains
             */
            domains?: string;
            /**
             * Authentication id
             */
            id?: string;
            /**
             * Authentication name
             */
            name?: string;
            /**
             *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
             * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
             * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
             * * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
             */
            type?: 'enforce_login' | 'enforce_login_with_same_account' | 'enforce_login_with_domains';
            /**
             * Authentication visible
             */
            visible?: boolean;
          }>;
          /**
           * Only authenticated users can join meetings
           */
          meeting_authentication?: boolean;
        }
      | {
          /**
           * Authentication Options
           */
          authentication_options?: Array<{
            /**
             * Authentication default option
             */
            default_option?: boolean;
            /**
             * Authentication domians
             */
            domains?: string;
            /**
             * Authentication id
             */
            id?: string;
            /**
             * Authentication name
             */
            name?: string;
            /**
             * Authentication type
             */
            type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
            /**
             * Authentication visible
             */
            visible?: boolean;
          }>;
          /**
           * Only authenticated users can view cloud recordings
           */
          recording_authentication?: boolean;
        }
    )
  | {
      meeting_security?: {
        /**
         * `true`: Require that all meetings are secured with at least one security option.
         *
         * This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
         */
        auto_security?: boolean;
        /**
         * If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
         *
         */
        embed_password_in_join_link?: boolean;
        /**
         * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
         * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
         *
         * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
         */
        encryption_type?: 'enhanced_encryption' | 'e2ee';
        /**
         * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
         */
        end_to_end_encrypted_meetings?: boolean;
        /**
         * If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.
         */
        meeting_password?: boolean;
        /**
         * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
         */
        meeting_password_requirement?: {
          consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
          /**
           * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
           *
           */
          have_letter?: boolean;
          /**
           * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
           */
          have_number?: boolean;
          /**
           * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
           */
          have_special_character?: boolean;
          /**
           * If set to `true`, the passcode must include both uppercase and lowercase characters.
           */
          have_upper_and_lower_characters?: boolean;
          /**
           * The minimum length that the meeting/webinar passcode needs to have.
           */
          length?: number;
          /**
           * If set to `true`, the passcode must only contain numbers and no other characters.
           */
          only_allow_numeric?: boolean;
          /**
           * If set to `true`, users will be informed if the provided passcode is weak.
           */
          weak_enhance_detection?: boolean;
        };
        /**
         * Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.
         */
        phone_password?: boolean;
        /**
         * If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
         *
         */
        pmi_password?: boolean;
        /**
         * Require a passcode for meetings which have already been scheduled.
         *
         */
        require_password_for_scheduled_meeting?: boolean;
        /**
         * Require a passcode for webinars which have already been scheduled.
         *
         */
        require_password_for_scheduled_webinar?: boolean;
        /**
         * When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
         *
         */
        waiting_room?: boolean;
        /**
         * Specify the settings to be applied if waiting room is enabled.
         */
        waiting_room_settings?: {
          /**
           *
           *
           * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
           * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
           */
          participants_to_place_in_waiting_room?: 0 | 1 | 2;
          /**
           * Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
           * `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
           *
           *
           *
           */
          users_who_can_admit_participants_from_waiting_room?: number;
          /**
           * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
           */
          whitelisted_domains_for_waiting_room?: string;
        };
        /**
         * If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
         *
         */
        webinar_password?: boolean;
      };
    };

export type GetGroupSettingsError = unknown;

export type UpdateGroupSettingsData = {
  body?:
    | {
        email_notification?: {
          /**
           * Notify the alternative host who is set or removed.
           */
          alternative_host_reminder?: boolean;
          /**
           * Notify host and participants when the meeting is cancelled.
           */
          cancel_meeting_reminder?: boolean;
          /**
           * Notify host when cloud recording is available.
           */
          cloud_recording_available_reminder?: boolean;
          /**
           * Notify host when participants join the meeting before them.
           */
          jbh_reminder?: boolean;
          /**
           * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
           */
          schedule_for_host_reminder?: boolean;
        };
        in_meeting?: {
          /**
           * Allow participants who belong to your account to see that a guest (someone who does not belong to your account) is participating in the meeting/webinar.
           */
          alert_guest_join?: boolean;
          /**
           * Show Zoom windows during screen share.
           */
          allow_show_zoom_windows?: boolean;
          /**
           * Allow participants to use annotation tools to add information to shared screens.
           */
          annotation?: boolean;
          /**
           * Allow host to put attendee on hold.
           *
           * **This field has been deprecated and is no longer supported.**
           */
          attendee_on_hold?: boolean;
          /**
           * Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.
           */
          auto_answer?: boolean;
          /**
           * Automatically save all in-meeting chats.
           */
          auto_saving_chat?: boolean;
          /**
           * Allow host to split meeting participants into separate, smaller rooms.
           */
          breakout_room?: boolean;
          /**
           * Allow meeting participants to send chat message visible to all participants.
           */
          chat?: boolean;
          /**
           * Allow host to type closed captions or assign a participant/third party device to add closed captions.
           */
          closed_caption?: boolean;
          /**
           * Allow the host to add co-hosts. Co-hosts have the same in-meeting controls as the host.
           */
          co_host?: boolean;
          /**
           * If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to be used by this group for hosting their real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
           */
          custom_data_center_regions?: boolean;
          /**
           * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
           *
           */
          data_center_regions?: 'EU' | 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA';
          /**
           * Require that all meetings are encrypted using AES.
           */
          e2e_encryption?: boolean;
          /**
           * Play sound when participants join or leave.
           */
          entry_exit_chime?: string;
          /**
           * Allow another user to take control of the camera during a meeting.
           */
          far_end_camera_control?: boolean;
          /**
           * Enable users to provide feedback to Zoom at the end of the meeting.
           */
          feedback?: boolean;
          /**
           * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the users in the group or not.
           */
          file_transfer?: boolean;
          /**
           * Enable higher quality video for host and participants. This will require more bandwidth.
           */
          group_hd?: boolean;
          /**
           * Allow participants in a meeting can provide nonverbal feedback and express opinions by clicking on icons in the Participants panel.
           */
          non_verbal_feedback?: boolean;
          /**
           * Show the list of H.323/SIP devices only to the host.
           */
          only_host_view_device_list?: boolean;
          /**
           * Allow users to select original sound during a meeting.
           */
          original_audio?: boolean;
          /**
           * Add 'Polls' to the meeting controls. This allows the host to survey the attendees.
           */
          polling?: boolean;
          /**
           * Display end-of-meeting experience feedback survey.
           */
          post_meeting_feedback?: boolean;
          /**
           * Allow meeting participants to send a private 1:1 message to another participant.
           */
          private_chat?: boolean;
          /**
           * When each participant joins by telephone, allow the option to record and play their own voice as entry and exit chimes.
           */
          record_play_own_voice?: boolean;
          /**
           * During screen sharing, allow the person who is sharing to let others control the shared content.
           */
          remote_control?: boolean;
          /**
           * Allow meeting host to provide 1:1 remote support to another participant.
           */
          remote_support?: boolean;
          /**
           * Indicate whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option should be enabled for the group or not.
           */
          request_permission_to_unmute?: boolean;
          /**
           * Allow host and participants to share their screen or content during meetings.
           */
          screen_sharing?: boolean;
          /**
           * Allow users to invite participants by email only by default.
           */
          sending_default_email_invites?: boolean;
          /**
           * Allow participants to join a meeting directly from their browser.
           */
          show_browser_join_link?: boolean;
          /**
           * Show the list of H.323/SIP devices.
           */
          show_device_list?: boolean;
          /**
           * Always show meeting controls during a meeting.
           */
          show_meeting_control_toolbar?: boolean;
          /**
           * Allow users to select stereo audio during a meeting.
           */
          stereo_audio?: boolean;
          /**
           * Allow  HTML formatting instead of plain text for meeting invitations scheduled with the Outlook plugin.
           */
          use_html_format_email?: boolean;
          /**
           * Enable virtual background.
           */
          virtual_background?: boolean;
          /**
           * Attendees cannot join a meeting until a host admits them individually from the waiting room.
           */
          waiting_room?: boolean;
          /**
           * Allow participants to share a whiteboard that includes annotation tools.
           */
          whiteboard?: boolean;
          /**
           * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
           * `host`: Only host can share the screen.<br>
           * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
           *
           */
          who_can_share_screen?: 'host' | 'all';
          /**
           * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
           * `host`: Only a host can share the screen when someone else is sharing.<br>
           * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
           *
           */
          who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
        };
        profile?: {
          recording_storage_location?: {
            /**
             * Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.
             *
             * Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
             */
            allowed_values?: Array<string>;
            /**
             * Abbreviated country code.
             */
            value?: string;
          };
        };
        recording?: {
          /**
           * Make cloud recordings accessible to account members only.
           */
          account_user_access_recording?: boolean;
          /**
           * [Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted archiving solution access by the Zoom Support team.
           */
          archive?: {
            /**
             * Enable the archiving feature.
             */
            enable?: boolean;
            settings?: {
              /**
               * Include in-meeting and/or in-webinar audio in the archive.
               */
              audio_file?: boolean;
              /**
               * Include closed caption or transcript in the archive.
               */
              cc_transcript_file?: boolean;
              /**
               * Include in-meeting chat in the archive.
               */
              chat_file?: boolean;
              /**
               * Include user email in in-meeting chat file.
               */
              chat_with_sender_email?: boolean;
              /**
               * Include in-meeting and/or in-webinar video in the archive.
               */
              video_file?: boolean;
            };
            /**
             * Archive types:
             *
             * * `1`: Only meetings are archived.<br>
             * * `2`: Only webinars are archived.<br>
             * * `3`: Both meetings and webinars are archived.
             */
            type?: 1 | 2 | 3;
          };
          /**
           * Record meetings automatically as they start.
           */
          auto_recording?: string;
          /**
           * Allow hosts to record and save the meeting / webinar in the cloud.
           */
          cloud_recording?: boolean;
          /**
           * Allow anyone with a link to the cloud recording to download.
           */
          cloud_recording_download?: boolean;
          /**
           * Allow only the host with a link to the cloud recording to download.
           */
          cloud_recording_download_host?: boolean;
          /**
           * Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.
           */
          host_delete_cloud_recording?: boolean;
          /**
           * Setting to allow cloud recording access only from specific IP address ranges.
           *
           */
          ip_address_access_control?: {
            /**
             * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
             *
             *
             */
            enable?: boolean;
            /**
             * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
             *
             * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
             *
             *
             */
            ip_addresses_or_ranges?: string;
          };
          /**
           * Allow hosts and participants to record the meeting to a local file.
           */
          local_recording?: boolean;
          /**
           * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
           *
           *
           */
          prevent_host_access_recording?: boolean;
          /**
           * Record an audio only file.
           */
          record_audio_file?: boolean;
          /**
           * When someone is sharing their screen, active speaker will show on the top right corner of the shared screen.
           */
          record_gallery_view?: boolean;
          /**
           * Record active speaker with shared screen.
           */
          record_speaker_view?: boolean;
          /**
           * Automatically transcribe the audio of a meeting or webinar for cloud recordings.
           */
          recording_audio_transcript?: boolean;
          /**
           * Save chat messages from the meeting / webinar.
           */
          save_chat_text?: boolean;
          /**
           * Add a timestamp to the recording.
           */
          show_timestamp?: boolean;
        };
        schedule_meeting?: {
          /**
           * Determine how participants can join the audio portion of the meeting.
           */
          audio_type?: string;
          /**
           * If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.
           *
           */
          embed_password_in_join_link?: boolean;
          /**
           * If join before host option is enabled for a personal meeting, then enforce password requirement.
           */
          force_pmi_jbh_password?: boolean;
          /**
           * Start meetings with host video on.
           */
          host_video?: boolean;
          /**
           * Allow participants to join the meeting before the host arrives
           */
          join_before_host?: boolean;
          /**
           * Automatically mute all participants when they join the meeting.
           */
          mute_upon_entry?: boolean;
          /**
           * Start meetings with participant video on.
           */
          participant_video?: boolean;
          /**
           * Generate and send new passwords for newly scheduled or edited meetings.
           */
          pstn_password_protected?: boolean;
          /**
           * Require password from all participants before joining a meeting.
           */
          require_password_for_all_meetings?: boolean;
          /**
           * If enabled, a random password will be generated on the user's end who starts the instant meeting. Other participants will have to enter the password to join the meeting. If you use PMI for your instant meetings, this option will be disabled.
           */
          require_password_for_instant_meetings?: boolean;
          /**
           * Indicates whether a password is required for [PMI](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI-) meetings or not. The value can be one of the following:<br>
           * `none`: Do not require password for PMI meetings.<br>
           * `all`: Require participants to enter password for all PMI enabled meetings.<br> `jbh_only`: Require password only for meetings where the **"join before host"** setting is enabled.
           */
          require_password_for_pmi_meetings?: 'all' | 'jbh_only' | 'none';
          /**
           * Require a password for meetings which have already been scheduled
           *
           */
          require_password_for_scheduled_meetings?: boolean;
          /**
           * This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.
           */
          require_password_for_scheduling_new_meetings?: boolean;
          /**
           * Receive desktop notification for upcoming meetings.
           */
          upcoming_meeting_reminder?: boolean;
        };
        telephony?: {
          audio_conference_info?: string;
          /**
           * Allow users to join the meeting using the existing 3rd party audio configuration.
           */
          third_party_audio?: boolean;
        };
      }
    | (
        | {
            /**
             * Meeting Authentication Options
             */
            authentication_option?: {
              /**
               * Authentication action
               */
              action?: 'update' | 'show' | 'hide';
              /**
               * Authentication default option
               */
              default_option?: boolean;
              /**
               * Authentication domains
               */
              domains?: string;
              /**
               * Authentication id
               */
              id?: string;
              /**
               * Authentication name
               */
              name?: string;
              /**
               *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
               * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
               * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
               * * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
               */
              type?: 'enforce_login' | 'enforce_login_with_same_account' | 'enforce_login_with_domains';
            };
            /**
             * Only authenticated users can join meetings
             */
            meeting_authentication?: boolean;
          }
        | {
            /**
             * Authentication Options
             */
            authentication_option?: {
              /**
               * Authentication action
               */
              action?: 'update' | 'show' | 'hide';
              /**
               * Authentication default option
               */
              default_option?: boolean;
              /**
               * Authentication domians
               */
              domians?: string;
              /**
               * Authentication id
               */
              id?: string;
              /**
               * Authentication name
               */
              name?: string;
              /**
               * Authentication type
               */
              type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
            };
            /**
             * Only authenticated users can view cloud recordings
             */
            recording_authentication?: boolean;
          }
      )
    | {
        meeting_security?: {
          /**
           * `true`: Require that all meetings are secured with at least one security option.
           *
           * This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
           */
          auto_security?: boolean;
          /**
           * If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
           *
           */
          embed_password_in_join_link?: boolean;
          /**
           * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
           * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
           *
           * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
           */
          encryption_type?: 'enhanced_encryption' | 'e2ee';
          /**
           * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
           */
          end_to_end_encrypted_meetings?: boolean;
          /**
           * If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.
           */
          meeting_password?: boolean;
          /**
           * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
           */
          meeting_password_requirement?: {
            consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
            /**
             * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
             *
             */
            have_letter?: boolean;
            /**
             * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
             */
            have_number?: boolean;
            /**
             * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
             */
            have_special_character?: boolean;
            /**
             * If set to `true`, the passcode must include both uppercase and lowercase characters.
             */
            have_upper_and_lower_characters?: boolean;
            /**
             * The minimum length that the meeting/webinar passcode needs to have.
             */
            length?: number;
            /**
             * If set to `true`, the passcode must only contain numbers and no other characters.
             */
            only_allow_numeric?: boolean;
            /**
             * If set to `true`, users will be informed if the provided passcode is weak.
             */
            weak_enhance_detection?: boolean;
          };
          /**
           * Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.
           */
          phone_password?: boolean;
          /**
           * If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
           *
           */
          pmi_password?: boolean;
          /**
           * Require a passcode for meetings which have already been scheduled.
           *
           */
          require_password_for_scheduled_meeting?: boolean;
          /**
           * Require a passcode for webinars which have already been scheduled.
           *
           */
          require_password_for_scheduled_webinar?: boolean;
          /**
           * When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
           *
           */
          waiting_room?: boolean;
          /**
           * Specify the settings to be applied if waiting room is enabled.
           */
          waiting_room_settings?: {
            /**
             *
             *
             * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
             * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
             */
            participants_to_place_in_waiting_room?: 0 | 1 | 2;
            /**
             * Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
             * `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
             *
             *
             *
             */
            users_who_can_admit_participants_from_waiting_room?: number;
            /**
             * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
             */
            whitelisted_domains_for_waiting_room?: string;
          };
          /**
           * If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
           *
           */
          webinar_password?: boolean;
        };
      };
  path: {
    /**
     * Id of the group.
     */
    groupId: string;
  };
  query?: {
    /**
     * Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
     * {
     * "schedule_meeting": {
     * "host_video": false
     * }
     * }
     * <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
     */
    custom_query_fields?: string;
    option?: 'meeting_authentication' | 'recording_authentication' | 'meeting_security';
  };
};

export type UpdateGroupSettingsResponse = unknown;

export type UpdateGroupSettingsError = unknown;

export type DelGroupVbData = {
  path: {
    /**
     * Unique identifier of the group. Retrieve the value for this field by calling the [List groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.
     */
    groupId: string;
  };
  query?: {
    /**
     * Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field.
     */
    file_ids?: string;
  };
};

export type DelGroupVbResponse = any;

export type DelGroupVbError = unknown;

export type UploadGroupVbData = {
  body?: {
    /**
     * Provide the file's path here.
     */
    file?: string;
  };
  path: {
    /**
     * Unique identifier of the group. Retrieve the value for this field by calling the [List groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.
     */
    groupId: string;
  };
  query?: {
    /**
     * Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field.
     */
    file_ids?: string;
  };
};

export type UploadGroupVbResponse = {
  /**
   * Unique identifier of the file.
   */
  id?: string;
  /**
   * Indicate whether or not this file is the default virtual background file.
   */
  is_default?: boolean;
  /**
   * File name.
   */
  name?: string;
  /**
   * File size.
   */
  size?: string;
  /**
   * File type.
   */
  type?: string;
};

export type UploadGroupVbError = unknown;

export type DeviceListData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     *
     * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
     *
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type DeviceListResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of H.323/SIP Device objects.
   */
  devices?: Array<
    {
      /**
       * Device ID.
       */
      id?: string;
    } & {
      /**
       * Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.
       */
      encryption: 'auto' | 'yes' | 'no';
      /**
       * Device IP.
       */
      ip: string;
      /**
       * Device name.
       */
      name: string;
      /**
       * Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.
       */
      protocol: 'H.323' | 'SIP';
    }
  >;
};

export type DeviceListError = unknown;

export type DeviceCreateData = {
  /**
   * H.323/SIP device.
   */
  body: {
    /**
     * Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.
     */
    encryption: 'auto' | 'yes' | 'no';
    /**
     * Device IP.
     */
    ip: string;
    /**
     * Device name.
     */
    name: string;
    /**
     * Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.
     */
    protocol: 'H.323' | 'SIP';
  };
};

export type DeviceCreateResponse =
  | unknown
  | ({
      /**
       * Device ID.
       */
      id?: string;
    } & {
      /**
       * Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.
       */
      encryption: 'auto' | 'yes' | 'no';
      /**
       * Device IP.
       */
      ip: string;
      /**
       * Device name.
       */
      name: string;
      /**
       * Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.
       */
      protocol: 'H.323' | 'SIP';
    });

export type DeviceCreateError = unknown;

export type DeviceDeleteData = {
  path: {
    /**
     * The device ID.
     */
    deviceId: string;
  };
};

export type DeviceDeleteResponse = unknown | any;

export type DeviceDeleteError = unknown;

export type DeviceUpdateData = {
  body: {
    /**
     * Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.
     */
    encryption: 'auto' | 'yes' | 'no';
    /**
     * Device IP.
     */
    ip: string;
    /**
     * Device name.
     */
    name: string;
    /**
     * Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.
     */
    protocol: 'H.323' | 'SIP';
  };
  path: {
    /**
     * The device ID.
     */
    deviceId: string;
  };
};

export type DeviceUpdateResponse = any;

export type DeviceUpdateError = unknown;

export type SendchatbotData = {
  body?: {
    /**
     * Account ID of the authorized account.
     */
    account_id: string;
    /**
     * JSON template describing how the message should be displayed for the user. For more information please see our ["Send Message" templates](https://marketplace.zoom.us/docs/guides/chatbots/sending-messages#example-request).
     */
    content: {
      [key: string]: unknown;
    };
    /**
     * **Optional**<br>
     * Applies the markdown parser to your chatbot message if the value of this field is set to `true`.<br> To learn more, refer to the Chatbot message [markdown reference](https://marketplace.zoom.us/docs/guides/chatbots/customizing-messages/message-with-markdown).
     */
    is_markdown_support?: boolean;
    /**
     * Robot JID created when enabling chatbot features on your marketplace app.
     */
    robot_jid: string;
    /**
     * Unique JID of reciever. Can be a group or user.
     */
    to_jid: string;
    /**
     * **Optional**<br>
     * The UserJID of the user on whose behalf the message is being sent. Use this field to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
     */
    user_jid?: string;
    /**
     * **Optional**<br>Allow a Chatbot to send a message to a group channel, but have only one designated person in that group channel see the message by providing the person's UserID in this field.
     */
    visible_to_user?: string;
  };
};

export type SendchatbotResponse = unknown;

export type SendchatbotError = unknown;

export type DeleteAchatbotMessageData = {
  body?: {
    /**
     * The AccountID of the Zoom account to which the message was sent. Retrieve this from the Chatbot request sent to your server as shown in the example [here]( https://marketplace.zoom.us/docs/guides/chatbots/sending-messages).
     */
    account_id: string;
    /**
     * The BotJID found in the Chat Subscription Section on the Features page of your App Dashboard.
     */
    robot_jid: string;
    /**
     * The UserJID of the user on whose behalf the message is being sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
     */
    user_jid?: string;
  };
  path: {
    message_id: string;
  };
};

export type DeleteAchatbotMessageResponse = {
  /**
   * Unique identifier of the message that was deleted.
   */
  message_id?: string;
  /**
   * The BotJID of the Chatbot app. It can be found in the Chat Subscription Section on the Features page of your App Dashboard
   */
  robot_jid?: string;
  /**
   * The date and time at which the message was deleted.
   */
  sent_time?: string;
  /**
   * The JID of the Channel or User to whom the message was sent.
   */
  to_jid?: string;
  /**
   *  The UserJID of the user on whose behalf the message was sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
   */
  user_jid?: string;
};

export type DeleteAchatbotMessageError = unknown;

export type EditChatbotMessageData = {
  body?: {
    /**
     * The AccountID of the Zoom account to which the message was sent. Retrieve this from the Chatbot request sent to your server as shown in the example [here]( https://marketplace.zoom.us/docs/guides/chatbots/sending-messages).
     */
    account_id: string;
    /**
     * JSON template describing how the edited message should be displayed for the user. For more information please see our ["Send Message" templates](https://marketplace.zoom.us/docs/guides/chatbots/sending-messages#example-request).
     */
    content: {
      [key: string]: unknown;
    };
    /**
     * **Optional**<br>
     * Enable or disable markdown parser to your chatbot message. Applies the markdown parser to your chatbot message if the value of this field is set to `true`.<br> To learn more, refer to the Chatbot message [markdown reference](https://marketplace.zoom.us/docs/guides/chatbots/customizing-messages/message-with-markdown).
     */
    is_markdown_support?: boolean;
    /**
     * Robot JID created when enabling chatbot features on your marketplace app.
     */
    robot_jid: string;
    /**
     * **Optional**<br>
     * The UserJID of the user on whose behalf the message is being sent. Use this field to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
     */
    user_jid?: string;
  };
  path: {
    /**
     * Unique Identifier of the message that needs to be updated. This should be retrieved from the response of [Send Chatbot Message API](https://marketplace.zoom.us/docs/api-reference/zoom-api/im-chat/sendchatbot).
     */
    message_id: string;
  };
};

export type EditChatbotMessageResponse = {
  /**
   * Unique Identifier of the updated message,
   */
  message_id?: string;
  /**
   * The BotJID found in the Chat Subscription Section on the Features page of your App Dashboard.
   */
  robot_jid?: string;
  /**
   * The date and time at which the message was sent.
   */
  sent_time?: string;
  /**
   * The JID of the Channel or User to whom the message was sent.
   */
  to_jid?: string;
  /**
   * The UserJID of the user on whose behalf the message is being sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
   */
  user_jid?: string;
};

export type EditChatbotMessageError = unknown;

export type ImChatSessionsData = {
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
  };
};

export type ImChatSessionsResponse = {
  /**
   * Start date.
   */
  from?: string;
  /**
   * End date.
   */
  to?: string;
} & {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The amount of records returns within a single API call.
   */
  page_size?: number;
} & {
  /**
   * Array of session objects.
   */
  sessions?: Array<{
    /**
     * Last message sent time.
     */
    last_message_sent_time?: string;
    /**
     * Meeting topic.
     */
    name?: string;
    /**
     * IM chat session ID.
     */
    session_id?: string;
    /**
     * IM chat session type.
     */
    type?: 'Group' | '1:1';
  }>;
};

export type ImChatSessionsError = unknown;

export type ImChatMessagesData = {
  path: {
    /**
     * IM chat session ID.
     */
    sessionId: string;
  };
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
  };
};

export type ImChatMessagesResponse = {
  /**
   * Start date.
   */
  from?: string;
  /**
   * IM chat session ID.
   */
  session_id?: string;
  /**
   * End date.
   */
  to?: string;
} & {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The amount of records returns within a single API call.
   */
  page_size?: number;
} & {
  /**
   * Array of session objects.
   */
  messages?: Array<{
    /**
     * IM chat message action.
     */
    action?: string;
    /**
     * Action time.
     */
    action_time?: string;
    /**
     * IM chat message sent time.
     */
    date_time?: string;
    /**
     * IM chat message content.
     */
    message?: string;
    /**
     * IM chat message sender.
     */
    sender?: string;
  }>;
};

export type ImChatMessagesError = unknown;

export type ImGroupsResponse = {
  /**
   * Total number of records returned.
   */
  total_records?: number;
} & {
  /**
   * List of group objects.
   */
  groups?: Array<
    {
      /**
       * IM group ID.
       */
      id?: string;
    } & ({
      /**
       * Group name.
       */
      name?: string;
      /**
       * Total number of members in this group.
       */
      total_members?: number;
    } & {
      /**
       * Members can search for others under same account.
       */
      search_by_account?: boolean;
      /**
       * Members can search for others in the same email domain.
       */
      search_by_domain?: boolean;
      /**
       * Members can search for others under same master account - including all sub accounts.
       */
      search_by_ma_account?: boolean;
      /**
       * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
       */
      type?: 'normal' | 'shared' | 'restricted';
    })
  >;
};

export type ImGroupsError = unknown;

export type ImGroupCreateData = {
  body: {
    /**
     * Group name: must be unique to one account.
     */
    name?: string;
    /**
     * Members can search for others under same account.
     */
    search_by_account?: boolean;
    /**
     * Members can search for others in the same email domain.
     */
    search_by_domain?: boolean;
    /**
     * Members can search for others under same master account, including all sub accounts.
     */
    search_by_ma_account?: boolean;
    /**
     * IM Group types:<br>`normal` - Only members can see automatically see the other members of this group. Other people can search for members within this group. <br>`shared` - Everyone under an account can see the group members automatically.<br>`restricted` - Nobody can see the group or search for members except the members in the group.
     */
    type?: 'normal' | 'shared' | 'restricted';
  };
};

export type ImGroupCreateResponse =
  | unknown
  | {
      /**
       * Group ID.
       */
      id?: string;
      /**
       * Group name.
       */
      name?: string;
      /**
       * Members can search for others under same account.
       */
      search_by_account?: boolean;
      /**
       * Members can search for others in the same email domain.
       */
      search_by_domain?: boolean;
      /**
       * Members can search for others under same master account, including all sub accounts.
       */
      search_by_ma_account?: boolean;
      /**
       * Group member count.
       */
      total_members?: number;
    };

export type ImGroupCreateError = unknown;

export type ImGroupDeleteData = {
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
  };
};

export type ImGroupDeleteResponse = any;

export type ImGroupDeleteError = unknown;

export type ImGroupData = {
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
  };
};

export type ImGroupResponse = {
  /**
   * Group ID.
   */
  id?: string;
} & ({
  /**
   * Group name.
   */
  name?: string;
  /**
   * Total number of members in this group.
   */
  total_members?: number;
} & {
  /**
   * Members can search for others under same account.
   */
  search_by_account?: boolean;
  /**
   * Members can search for others in the same email domain.
   */
  search_by_domain?: boolean;
  /**
   * Members can search for others under same master account - including all sub accounts.
   */
  search_by_ma_account?: boolean;
  /**
   * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
   */
  type?: 'normal' | 'shared' | 'restricted';
});

export type ImGroupError = unknown;

export type ImGroupUpdateData = {
  body: {
    /**
     * Group name: must be unique to one account.
     */
    name?: string;
    /**
     * Members can search for others under same account.
     */
    search_by_account?: boolean;
    /**
     * Members can search for others in the same email domain.
     */
    search_by_domain?: boolean;
    /**
     * Members can search for others under same master account, including all sub accounts.
     */
    search_by_ma_account?: boolean;
    /**
     * IM Group types:<br>`normal` - Only group members can automatically see others in their group. Other people can search for members in the group.<br>`shared` - Everyone under the account can see the group and members automatically.<br>`restricted` - Nobody can see the group or search for members except for the members in the group.
     */
    type?: 'normal' | 'shared' | 'restricted';
  };
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
  };
};

export type ImGroupUpdateResponse = any;

export type ImGroupUpdateError = unknown;

export type ImGroupMembersData = {
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     *
     * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
     *
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type ImGroupMembersResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of Group member objects.
   */
  members?: Array<{
    /**
     * User email.
     */
    email?: string;
    /**
     * User first name.
     */
    first_name?: string;
    /**
     * User ID.
     */
    id?: string;
    /**
     * User last name.
     */
    last_name?: string;
    /**
     * User type.<br>
     * `1` - Basic<br> `2` - Licensed<br>
     * `3` - On-prem
     */
    type?: number;
  }>;
};

export type ImGroupMembersError = unknown;

export type ImGroupMembersCreateData = {
  body: {
    /**
     * List of IM group members.
     */
    members?: Array<{
      /**
       * User email. If the user ID is given then ignore the user email.
       */
      email?: string;
      /**
       * User ID.
       */
      id?: string;
    }>;
  };
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
  };
};

export type ImGroupMembersCreateResponse =
  | unknown
  | {
      added_at?: string;
      ids?: string;
    };

export type ImGroupMembersCreateError = unknown;

export type ImGroupMembersDeleteData = {
  path: {
    /**
     * The group ID.<br>
     * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
     */
    groupId: string;
    /**
     * The member ID.
     */
    memberId: string;
  };
};

export type ImGroupMembersDeleteResponse = unknown | any;

export type ImGroupMembersDeleteError = unknown;

export type SendimmessagesData = {
  body?: {
    /**
     * IM message content.
     */
    message?: string;
  };
  query?: {
    /**
     * The email address (registered with Zoom) or the userId of the chat user.
     */
    chat_user?: string;
  };
};

export type SendimmessagesResponse = {
  /**
   * IM message UUID.
   */
  id?: string;
};

export type SendimmessagesError = unknown;

export type ListimmessagesData = {
  path: {
    /**
     * The user ID or email address.
     */
    userId: string;
  };
  query?: {
    /**
     * IM Channel's ID.
     */
    channel?: string;
    /**
     * Chat user's ID or email address.
     */
    chat_user?: string;
    /**
     * IM message's query date time, format as yyyy-MM-dd.
     */
    date?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type ListimmessagesResponse = {
  /**
   * Query date time, format as yyyy-mm-dd.
   */
  date?: string;
  /**
   * Array of im messages.
   */
  messages?: Array<{
    /**
     * IM message send time.
     */
    date_time?: string;
    /**
     * IM message UUID.
     */
    id?: string;
    /**
     * IM message content.
     */
    message?: string;
    /**
     * IM message sender.
     */
    sender?: string;
    /**
     * IM message send timestamp.
     */
    timstamp?: number;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
};

export type ListimmessagesError = unknown;

export type InMeetingRecordingControlData = {
  body?: {
    /**
     * The method that you would like to control. The value of this field can be one of the following:
     * * `recording.start`: Provide this value if you would like to start the recording.<br><br>
     * * `recording.stop`: Provide this value if you would like to stop the recording.<br><br>
     * * `recording.pause`: Provide this value if you would like to pause the recording.<br><br>
     * * `recording.resume`: Provide this value if you would like to resume the recording that was previously paused.
     *
     *
     *
     *
     */
    method?: string;
  };
  path: {
    /**
     * Unique identifier of the live meeting.
     */
    meetingId: string;
  };
};

export type InMeetingRecordingControlResponse = unknown;

export type InMeetingRecordingControlError = unknown;

export type MeetingDeleteData = {
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
  query?: {
    /**
     * `true`: Notify registrants about the meeting cancellation via email.
     *
     * `false`: Do not send any email notification to meeting registrants.
     *
     * The default value of this field is `false`.
     */
    cancel_meeting_reminder?: string;
    /**
     * The meeting occurrence ID.
     */
    occurrence_id?: string;
    /**
     * `true`: Notify host and alternative host about the meeting cancellation via email.
     * `false`: Do not send any email notification.
     */
    schedule_for_reminder?: boolean;
  };
};

export type MeetingDeleteResponse = any;

export type MeetingDeleteError = unknown;

export type MeetingData = {
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
  query?: {
    /**
     * Meeting Occurrence ID. Provide this field to view meeting details of a particular occurrence of the [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings).
     */
    occurrence_id?: string;
    /**
     * Set the value of this field to `true` if you would like to view meeting details of all previous occurrences of a [recurring meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings).
     */
    show_previous_occurrences?: boolean;
  };
};

export type MeetingResponse = {
  /**
   * Unique identifier of the scheduler who scheduled this meeting on behalf of the host. This field is only returned if you used "schedule_for" option in the [Create a Meeting API request](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate).
   */
  assistant_id?: string;
  /**
   * Email address of the meeting host.
   */
  host_email?: string;
  /**
   * ID of the user who is set as host of meeting.
   */
  host_id?: string;
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  /**
   * Unique meeting ID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). You can retrieve a list of UUIDs from past meeting instances using [this API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/pastmeetings) . Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
   *
   */
  uuid?: string;
} & {
  /**
   * Meeting description
   */
  agenda?: string;
  /**
   * Time of creation.
   */
  created_at?: string;
  /**
   * Meeting duration.
   */
  duration?: number;
  /**
   * Encrypted passcode for third party endpoints (H323/SIP).
   */
  encrypted_password?: string;
  /**
   * H.323/SIP room system passcode.
   */
  h323_password?: string;
  /**
   * URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting.
   */
  join_url?: string;
  /**
   * Array of occurrence objects.
   */
  occurrences?: Array<{
    /**
     * Duration.
     */
    duration?: number;
    /**
     * Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences.
     */
    occurrence_id?: string;
    /**
     * Start time.
     */
    start_time?: string;
    /**
     * Occurrence status.
     */
    status?: string;
  }>;
  /**
   * Meeting passcode.
   */
  password?: string;
  /**
   * Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.
   */
  pmi?: number;
  /**
   * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
   */
  recurrence?: {
    /**
     * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
     *
     * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
     *
     *
     */
    repeat_interval?: number;
    /**
     * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
  };
  /**
   * Meeting settings.
   */
  settings?: {
    /**
     * Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host's emails or IDs: multiple values are separated by a semicolon.
     */
    alternative_hosts?: string;
    /**
     * Flag to determine whether to send email notifications to alternative hosts, default value is true.
     */
    alternative_hosts_email_notification?: boolean;
    /**
     * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
     *
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Approve or block users from specific regions/countries from joining this meeting.
     *
     */
    approved_or_denied_countries_or_regions?: {
      /**
       * List of countries/regions from where participants can join this meeting.
       */
      approved_list?: Array<string>;
      /**
       * List of countries/regions from where participants can not join this meeting.
       */
      denied_list?: Array<string>;
      /**
       * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
       *
       * `false`: Setting disabled.
       */
      enable?: boolean;
      /**
       * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
       * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
       * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
       */
      method?: 'approve' | 'deny';
    };
    /**
     * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * The participants added here will receive unique meeting invite links and bypass authentication.
     */
    authentication_exception?: Array<{
      /**
       * Email address of the participant.
       */
      email?: string;
      /**
       * Name of the participant.
       */
      name?: string;
    }>;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Meeting authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
     */
    breakout_room?: {
      /**
       * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
       */
      enable?: boolean;
      /**
       * Create room(s).
       */
      rooms?: Array<{
        /**
         * Name of the breakout room.
         */
        name?: string;
        /**
         * Email addresses of the participants who are to be assigned to the breakout room.
         */
        participants?: Array<string>;
      }>;
    };
    /**
     * Close registration after event date
     */
    close_registration?: boolean;
    /**
     * Host meeting in China.
     */
    cn_meeting?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Custom keys and values assigned to the meeting.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the user.
       */
      key?: string;
      /**
       * Value of the custom key associated with the user.
       */
      value?: string;
    }>;
    /**
     * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
     * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
     *
     * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
     */
    encryption_type?: 'enhanced_encryption' | 'e2ee';
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login_domains?: string;
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Global Dial-in Countries/Regions
     */
    global_dial_in_numbers?: Array<{
      /**
       * City of the number, if any. For example, Chicago.
       */
      city?: string;
      /**
       * Country code. For example, BR.
       */
      country?: string;
      /**
       * Full name of country. For example, Brazil.
       */
      country_name?: string;
      /**
       * Phone number. For example, +1 2332357613.
       */
      number?: string;
      /**
       * Type of number.
       */
      type?: 'toll' | 'tollfree';
    }>;
    /**
     * Start video when the host joins the meeting.
     */
    host_video?: boolean;
    /**
     * Host meeting in India.
     */
    in_meeting?: boolean;
    /**
     * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
     *
     * *  `0`: Allow participant to join anytime.
     * *  `5`: Allow participant to join 5 minutes before meeting start time.
     * * `10`: Allow participant to join 10 minutes before meeting start time.
     */
    jbh_time?: 0 | 5 | 10;
    /**
     * Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
     */
    join_before_host?: boolean;
    language_interpretation?: {
      enable?: boolean;
      /**
       * Information associated with the interpreter.
       */
      interpreters?: Array<{
        /**
         * Email address of the interpreter.
         */
        email?: string;
        /**
         * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
         *
         * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
         */
        languages?: string;
      }>;
    };
    /**
     * `true`- Only authenticated users can join meetings.
     */
    meeting_authentication?: boolean;
    /**
     * Mute participants upon entry.
     */
    mute_upon_entry?: boolean;
    /**
     * Start video when participants join the meeting.
     */
    participant_video?: boolean;
    /**
     * Send confirmation email to registrants upon successful registration.
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the meeting registration page.
     * This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    show_share_button?: boolean;
    /**
     * Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
     */
    use_pmi?: boolean;
    /**
     * Enable waiting room
     */
    waiting_room?: boolean;
    /**
     * Add watermark when viewing a shared screen.
     */
    watermark?: boolean;
  };
  /**
   * Meeting start time in GMT/UTC. Start time will not be returned if the meeting is an **instant** meeting.
   *
   */
  start_time?: string;
  /**
   * <br><aside>The <code>start_url</code> of a Meeting is a URL using which a host or an alternative host can start the Meeting.
   *
   * The expiration time for the <code>start_url</code> field listed in the response of [Create a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate) is two hours for all regular users.
   *
   * For users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.
   *
   * For security reasons, to retrieve the updated value for the <code>start_url</code> field programmatically (after the expiry time), you must call the [Retrieve a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting) and refer to the value of the <code>start_url</code> field in the response.</aside><br>This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting.
   */
  start_url?: string;
  /**
   * Meeting status
   */
  status?: 'waiting' | 'started';
  /**
   * Timezone to format the meeting start time on the .
   */
  timezone?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Label of the tracking field.
     */
    field?: string;
    /**
     * Value for the field.
     */
    value?: string;
    /**
     * Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.
     *
     * `true`: Tracking field is visible. <br>
     *
     * `false`: Tracking field is not visible to the users when they look at the meeting details in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only.
     */
    visible?: boolean;
  }>;
  /**
   * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`4` - PMI Meeting<br>
   * `8` - Recurring meeting with a fixed time.
   */
  type?: 1 | 2 | 3 | 8;
};

export type MeetingError = unknown;

export type MeetingUpdateData = {
  /**
   * Meeting
   */
  body: {
    /**
     * Email or userId if you want to schedule meeting for another user.
     */
    schedule_for?: string;
  } & {
    /**
     * Meeting description.
     */
    agenda?: string;
    /**
     * Meeting duration (minutes). Used for scheduled meetings only.
     */
    duration?: number;
    /**
     * Meeting passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ *] and can have a maximum of 10 characters.
     *
     * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
     */
    password?: string;
    /**
     * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
     */
    recurrence?: {
      /**
       * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
       */
      end_date_time?: string;
      /**
       * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
       */
      end_times?: number;
      /**
       * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
       *
       * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
       */
      monthly_day?: number;
      /**
       * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
       */
      monthly_week?: -1 | 1 | 2 | 3 | 4;
      /**
       * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
       *
       * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
       */
      monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
      /**
       * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
       *
       * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
       *
       *
       */
      repeat_interval?: number;
      /**
       * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
       */
      type: 1 | 2 | 3;
      /**
       * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
       *
       * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
       */
      weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
    };
    settings?: {
      /**
       * Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
       */
      allow_multiple_devices?: boolean;
      /**
       * Alternative host's emails or IDs: multiple values are separated by a semicolon.
       */
      alternative_hosts?: string;
      /**
       * Flag to determine whether to send email notifications to alternative hosts, default value is true.
       */
      alternative_hosts_email_notification?: boolean;
      /**
       * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
       *
       * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
       */
      approval_type?: 0 | 1 | 2;
      /**
       * Approve or block users from specific regions/countries from joining this meeting.
       *
       */
      approved_or_denied_countries_or_regions?: {
        /**
         * List of countries/regions from where participants can join this meeting.
         */
        approved_list?: Array<string>;
        /**
         * List of countries/regions from where participants can not join this meeting.
         */
        denied_list?: Array<string>;
        /**
         * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
         *
         * `false`: Setting disabled.
         */
        enable?: boolean;
        /**
         * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
         * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
         * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
         */
        method?: 'approve' | 'deny';
      };
      /**
       * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
       */
      audio?: 'both' | 'telephony' | 'voip';
      /**
       * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
       */
      authentication_domains?: string;
      /**
       * The participants added here will receive unique meeting invite links and bypass authentication.
       */
      authentication_exception?: Array<{
        /**
         * Email address of the participant.
         */
        email?: string;
        /**
         * Name of the participant.
         */
        name?: string;
      }>;
      /**
       * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
       */
      authentication_name?: string;
      /**
       * Meeting authentication option id.
       */
      authentication_option?: string;
      /**
       * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
       */
      auto_recording?: 'local' | 'cloud' | 'none';
      /**
       * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
       */
      breakout_room?: {
        /**
         * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
         */
        enable?: boolean;
        /**
         * Create room(s).
         */
        rooms?: Array<{
          /**
           * Name of the breakout room.
           */
          name?: string;
          /**
           * Email addresses of the participants who are to be assigned to the breakout room.
           */
          participants?: Array<string>;
        }>;
      };
      /**
       * Close registration after event date
       */
      close_registration?: boolean;
      /**
       * Host meeting in China.
       */
      cn_meeting?: boolean;
      /**
       * Contact email for registration
       */
      contact_email?: string;
      /**
       * Contact name for registration
       */
      contact_name?: string;
      /**
       * Custom keys and values assigned to the meeting.
       */
      custom_keys?: Array<{
        /**
         * Custom key associated with the user.
         */
        key?: string;
        /**
         * Value of the custom key associated with the user.
         */
        value?: string;
      }>;
      /**
       * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
       * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
       *
       * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
       */
      encryption_type?: 'enhanced_encryption' | 'e2ee';
      /**
       * Only signed in users can join this meeting.
       *
       * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
       */
      enforce_login?: boolean;
      /**
       * Only signed in users with specified domains can join meetings.
       *
       * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
       */
      enforce_login_domains?: string;
      /**
       * List of global dial-in countries
       */
      global_dial_in_countries?: Array<string>;
      /**
       * Global Dial-in Countries/Regions
       */
      global_dial_in_numbers?: Array<{
        /**
         * City of the number, if any. For example, Chicago.
         */
        city?: string;
        /**
         * Country code. For example, BR.
         */
        country?: string;
        /**
         * Full name of country. For example, Brazil.
         */
        country_name?: string;
        /**
         * Phone number. For example, +1 2332357613.
         */
        number?: string;
        /**
         * Type of number.
         */
        type?: 'toll' | 'tollfree';
      }>;
      /**
       * Start video when the host joins the meeting.
       */
      host_video?: boolean;
      /**
       * Host meeting in India.
       */
      in_meeting?: boolean;
      /**
       * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
       *
       * *  `0`: Allow participant to join anytime.
       * *  `5`: Allow participant to join 5 minutes before meeting start time.
       * * `10`: Allow participant to join 10 minutes before meeting start time.
       */
      jbh_time?: 0 | 5 | 10;
      /**
       * Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
       */
      join_before_host?: boolean;
      language_interpretation?: {
        enable?: boolean;
        /**
         * Information associated with the interpreter.
         */
        interpreters?: Array<{
          /**
           * Email address of the interpreter.
           */
          email?: string;
          /**
           * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
           *
           * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
           */
          languages?: string;
        }>;
      };
      /**
       * `true`- Only authenticated users can join meetings.
       */
      meeting_authentication?: boolean;
      /**
       * Mute participants upon entry.
       */
      mute_upon_entry?: boolean;
      /**
       * Start video when participants join the meeting.
       */
      participant_video?: boolean;
      /**
       * Send confirmation email to registrants upon successful registration.
       */
      registrants_confirmation_email?: boolean;
      /**
       * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
       */
      registrants_email_notification?: boolean;
      /**
       * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
       */
      registration_type?: 1 | 2 | 3;
      /**
       * Show social share buttons on the meeting registration page.
       * This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
       */
      show_share_button?: boolean;
      /**
       * Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
       */
      use_pmi?: boolean;
      /**
       * Enable waiting room
       */
      waiting_room?: boolean;
      /**
       * Add watermark when viewing a shared screen.
       */
      watermark?: boolean;
    } & {
      /**
       * Send confirmation Email to Registrants
       */
      registrants_confirmation_email?: boolean;
    };
    /**
     * Meeting start time. When using a format like "yyyy-MM-dd'T'HH:mm:ss'Z'", always use GMT time. When using a format like "yyyy-MM-dd'T'HH:mm:ss", you should use local time and  specify the time zone. Only used for scheduled meetings and recurring meetings with a fixed time.
     */
    start_time?: string;
    /**
     * Unique identifier of the meeting template.
     *
     * Use this field if you would like to [schedule the meeting from a meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb). You can retrieve the value of this field by calling the [List meeting templates]() API.
     */
    template_id?: string;
    /**
     * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.
     */
    timezone?: string;
    /**
     * Meeting topic.
     */
    topic?: string;
    /**
     * Tracking fields
     */
    tracking_fields?: Array<{
      /**
       * Tracking fields type
       */
      field?: string;
      /**
       * Tracking fields value
       */
      value?: string;
    }>;
    /**
     * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with a fixed time.
     */
    type?: 1 | 2 | 3 | 8;
  };
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
  query?: {
    /**
     * Meeting occurrence id. Support change of agenda, start_time, duration, settings: {host_video, participant_video, join_before_host, mute_upon_entry, waiting_room, watermark, auto_recording}
     */
    occurrence_id?: string;
  };
};

export type MeetingUpdateResponse = any;

export type MeetingUpdateError = unknown;

export type CreateBatchPollsData = {
  /**
   * Batch Meeting poll object
   */
  body?: {
    questions?: Array<{
      /**
       * Possible answers for the question.
       */
      answers?: Array<string>;
      /**
       * Name of the question.
       */
      name?: string;
      /**
       * Question type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
       */
      type?: 'single' | 'multiple';
    }>;
    /**
     * Meeting Poll Title.
     */
    title?: string;
  };
  path: {
    meetingId: string;
  };
};

export type CreateBatchPollsResponse = {
  polls?: Array<{
    /**
     * Meeting Poll ID
     */
    id?: string;
    questions?: Array<{
      /**
       * Answers to questons
       */
      answers?: Array<string>;
      /**
       * Name of question.
       */
      name?: string;
      /**
       * Poll question and answer type.
       */
      type?: 'single' | 'multiple';
    }>;
    /**
     * Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
     */
    status?: 'notstart' | 'started' | 'ended' | 'sharing';
    /**
     * Title for the Poll
     */
    title?: string;
  }>;
};

export type CreateBatchPollsError = unknown;

export type MeetingInvitationData = {
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type MeetingInvitationResponse = {
  /**
   * Meeting invitation.
   */
  invitation?: string;
};

export type MeetingInvitationError = unknown;

export type GetLiveStreamDetailsData = {
  path: {
    /**
     * Unique identifier of the meeting.
     */
    meetingId: string;
  };
};

export type GetLiveStreamDetailsResponse = {
  /**
   * Live streaming page URL. This is the URL using which anyone can view the live stream of the meeting.
   */
  page_url?: string;
  /**
   * Stream Key.
   */
  stream_key?: string;
  /**
   * Stream URL.
   */
  stream_url?: string;
};

export type GetLiveStreamDetailsError = unknown;

export type MeetingLiveStreamUpdateData = {
  /**
   * Meeting
   */
  body: {
    /**
     * The livestream page URL.
     */
    page_url?: string;
    /**
     * Stream name and key.
     */
    stream_key: string;
    /**
     * Streaming URL.
     */
    stream_url: string;
  };
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type MeetingLiveStreamUpdateResponse = any;

export type MeetingLiveStreamUpdateError = unknown;

export type MeetingLiveStreamStatusUpdateData = {
  /**
   * Meeting
   */
  body: {
    /**
     * Update the status of a livestream.
     *
     * The value can be one of the following:<br>
     * `start`: Start a live stream. <br>
     * `stop`: Stop an ongoing live stream.
     */
    action?: 'start' | 'stop';
    /**
     * Update the settings of a live streaming session. The settings can only be updated for a live stream that has been stopped. You can not update the settings of an ongoing live stream.
     */
    settings?: {
      /**
       * Display the name of the active speaker during a live stream.
       */
      active_speaker_name?: boolean;
      /**
       * Display name of the live stream.
       */
      display_name?: string;
    };
  };
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type MeetingLiveStreamStatusUpdateResponse = any;

export type MeetingLiveStreamStatusUpdateError = unknown;

export type MeetingPollsData = {
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type MeetingPollsResponse = {
  /**
   * Array of Polls
   */
  polls?: Array<
    {
      /**
       * ID of Poll
       */
      id?: string;
      /**
       * Status of Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
       */
      status?: 'notstart' | 'started' | 'ended' | 'sharing';
    } & {
      /**
       * Array of Polls
       */
      questions?: Array<{
        /**
         * Answers to the questions
         */
        answers?: Array<string>;
        /**
         * Question to be asked to the attendees.
         */
        name?: string;
        /**
         * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
         */
        type?: 'single' | 'multiple';
      }>;
      /**
       * Title for the poll.
       */
      title?: string;
    }
  >;
  /**
   * The number of all records available across pages
   */
  total_records?: number;
};

export type MeetingPollsError = unknown;

export type MeetingPollCreateData = {
  /**
   * Meeting poll object
   */
  body: {
    /**
     * Array of Polls
     */
    questions?: Array<{
      /**
       * Answers to the questions
       */
      answers?: Array<string>;
      /**
       * Question to be asked to the attendees.
       */
      name?: string;
      /**
       * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
       */
      type?: 'single' | 'multiple';
    }>;
    /**
     * Title for the poll.
     */
    title?: string;
  };
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type MeetingPollCreateResponse = {
  /**
   * Meeting Poll ID
   */
  id?: string;
  /**
   * Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
   */
  status?: 'notstart' | 'started' | 'ended' | 'sharing';
} & {
  /**
   * Array of Polls
   */
  questions?: Array<{
    /**
     * Answers to the questions
     */
    answers?: Array<string>;
    /**
     * Question to be asked to the attendees.
     */
    name?: string;
    /**
     * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
     */
    type?: 'single' | 'multiple';
  }>;
  /**
   * Title for the poll.
   */
  title?: string;
};

export type MeetingPollCreateError = unknown;

export type MeetingPollDeleteData = {
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
    /**
     * The poll ID
     */
    pollId: string;
  };
};

export type MeetingPollDeleteResponse = any;

export type MeetingPollDeleteError = unknown;

export type MeetingPollGetData = {
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
    /**
     * The poll ID
     */
    pollId: string;
  };
};

export type MeetingPollGetResponse = {
  /**
   * Meeting Poll ID
   */
  id?: string;
  /**
   * Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
   */
  status?: 'notstart' | 'started' | 'ended' | 'sharing';
} & {
  /**
   * Array of Polls
   */
  questions?: Array<{
    /**
     * Answers to the questions
     */
    answers?: Array<string>;
    /**
     * Question to be asked to the attendees.
     */
    name?: string;
    /**
     * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
     */
    type?: 'single' | 'multiple';
  }>;
  /**
   * Title for the poll.
   */
  title?: string;
};

export type MeetingPollGetError = unknown;

export type MeetingPollUpdateData = {
  /**
   * Meeting Poll
   */
  body: {
    /**
     * Array of Polls
     */
    questions?: Array<{
      /**
       * Answers to the questions
       */
      answers?: Array<string>;
      /**
       * Question to be asked to the attendees.
       */
      name?: string;
      /**
       * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
       */
      type?: 'single' | 'multiple';
    }>;
    /**
     * Title for the poll.
     */
    title?: string;
  };
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
    /**
     * The poll ID
     */
    pollId: string;
  };
};

export type MeetingPollUpdateResponse = any;

export type MeetingPollUpdateError = unknown;

export type RecordingDeleteData = {
  path: {
    /**
     * To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance.
     *
     * To get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
  query?: {
    /**
     * The recording delete actions:<br>`trash` - Move recording to trash.<br>`delete` - Delete recording permanently.
     */
    action?: 'trash' | 'delete';
  };
};

export type RecordingDeleteResponse = unknown | any;

export type RecordingDeleteError = unknown;

export type RecordingGetData = {
  path: {
    /**
     * To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance.
     *
     * To get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
  query?: {
    /**
     * Get the `download_access_token` field for downloading meeting recordings.
     */
    include_fields?: string;
    /**
     * Time to live (TTL) of the `download_access_token`. This is only valid if the `include_fields` query parameter contains `download_access_token`. The range is between 0-604800.
     */
    ttl?: number;
  };
};

export type RecordingGetResponse = ({
  /**
   * Unique Identifier of the user account.
   */
  account_id?: string;
  /**
   * Meeting duration.
   */
  duration?: number;
  /**
   * ID of the user set as host of meeting.
   */
  host_id?: string;
  /**
   * Meeting ID - also known as the meeting number.
   */
  id?: string;
  /**
   * Number of recording files returned in the response of this API call.
   */
  recording_count?: string;
  /**
   * The time at which the meeting started.
   */
  start_time?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Total size of the recording.
   */
  total_size?: string;
  /**
   * Type of the meeting that was recorded.
   *
   * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
   */
  type?: string;
  /**
   * Unique Meeting Identifier. Each instance of the meeting will have its own UUID.
   */
  uuid?: string;
} & {
  /**
   * List of recording file.
   */
  recording_files?: Array<{
    /**
     * The time at which recording was deleted. Returned in the response only for trash query.
     */
    deleted_time?: string;
    /**
     * The URL using which the recording file can be downloaded. **To access a private or password protected cloud recording of a user in your account, you can use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example.**
     * <br>
     * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`
     *
     * **Similarly, if the user has installed your OAuth app that contains recording scope(s), you can also use the user's [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the Cloud Recording.**<br>
     *
     * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ OAuth Access Token }}`
     *
     *
     */
    download_url?: string;
    /**
     * The recording file size.
     */
    file_size?: number;
    /**
     * The recording file type. The value of this field could be one of the following:<br>
     * `MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording in JSON file format. To get a timeline file, the "Add a timestamp to the recording" setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.
     * <br> `TRANSCRIPT`: Transcription file of the recording in VTT format.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording in VTT file format.<br>`CSV`: File containing polling data in csv format.
     *
     * <br>
     *
     * A recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>
     * `id`, `status`, `file_size`, `recording_type`, and `play_url`.
     */
    file_type?: string;
    /**
     * The recording file ID. Included in the response of general query.
     */
    id?: string;
    /**
     * The meeting ID.
     */
    meeting_id?: string;
    /**
     * The URL using which a recording file can be played.
     */
    play_url?: string;
    /**
     * The recording end time. Response in general query.
     */
    recording_end?: string;
    /**
     * The recording start time.
     */
    recording_start?: string;
    /**
     * The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`active_speaker`<br>`poll`
     */
    recording_type?: string;
    /**
     * The recording status.
     */
    status?: 'completed';
  }>;
}) & {
  /**
   * JWT token for downloading the meeting recording.
   * This is only returned if the `include_fields` query parameter contains `download_access_token`.
   */
  download_access_token?: string;
};

export type RecordingGetError = unknown;

export type MeetingRecordingRegistrantsData = {
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     *
     * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
     *
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.
     */
    status?: 'pending' | 'approved' | 'denied';
  };
};

export type MeetingRecordingRegistrantsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of Registrant objects
   */
  registrants?: Array<
    {
      id?: string;
    } & {
      /**
       * Registrant's address.
       */
      address?: string;
      /**
       * Registrant's city.
       */
      city?: string;
      /**
       * A field that allows registrants to provide any questions or comments that they might have.
       */
      comments?: string;
      /**
       * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
       */
      country?: string;
      /**
       * Custom questions.
       */
      custom_questions?: Array<{
        title?: string;
        value?: string;
      }>;
      /**
       * A valid email address of the registrant.
       */
      email: string;
      /**
       * Registrant's first name.
       */
      first_name: string;
      /**
       * Registrant's Industry.
       */
      industry?: string;
      /**
       * Registrant's job title.
       */
      job_title?: string;
      /**
       * Registrant's last name.
       */
      last_name?: string;
      /**
       * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
       */
      no_of_employees?: string;
      /**
       * Registrant's Organization.
       */
      org?: string;
      /**
       * Registrant's Phone number.
       */
      phone?: string;
      /**
       * This field can be included to gauge interest of webinar attendees towards buying your product or service.
       *
       * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
       */
      purchasing_time_frame?: string;
      /**
       * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
       */
      role_in_purchase_process?: string;
      /**
       * Registrant's State/Province.
       */
      state?: string;
      /**
       * Registrant's Zip/Postal Code.
       */
      zip?: string;
    }
  >;
};

export type MeetingRecordingRegistrantsError = unknown;

export type MeetingRecordingRegistrantCreateData = {
  body: {
    /**
     * Registrant's address.
     */
    address?: string;
    /**
     * Registrant's city.
     */
    city?: string;
    /**
     * A field that allows registrants to provide any questions or comments that they might have.
     */
    comments?: string;
    /**
     * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
     */
    country?: string;
    /**
     * Custom questions.
     */
    custom_questions?: Array<{
      title?: string;
      value?: string;
    }>;
    /**
     * A valid email address of the registrant.
     */
    email: string;
    /**
     * Registrant's first name.
     */
    first_name: string;
    /**
     * Registrant's Industry.
     */
    industry?: string;
    /**
     * Registrant's job title.
     */
    job_title?: string;
    /**
     * Registrant's last name.
     */
    last_name?: string;
    /**
     * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
     */
    no_of_employees?: string;
    /**
     * Registrant's Organization.
     */
    org?: string;
    /**
     * Registrant's Phone number.
     */
    phone?: string;
    /**
     * This field can be included to gauge interest of webinar attendees towards buying your product or service.
     *
     * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
     */
    purchasing_time_frame?: string;
    /**
     * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
     */
    role_in_purchase_process?: string;
    /**
     * Registrant's State/Province.
     */
    state?: string;
    /**
     * Registrant's Zip/Postal Code.
     */
    zip?: string;
  };
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type MeetingRecordingRegistrantCreateResponse = {
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  /**
   * Registrant ID
   */
  registrant_id?: string;
  /**
   * Share URL for the on-demand recording. This includes the “tk” token for the registrant. This is similar to the token that Zoom returns in the URL response to join a registered meeting, for example: `url?tk=xxxx`. Except while the meeting registration token can be used to join the meeting, this token can only be used to watch the recording.
   */
  share_url?: string;
  /**
   * Meeting Topic
   */
  topic?: string;
};

export type MeetingRecordingRegistrantCreateError = unknown;

export type RecordingRegistrantsQuestionsGetData = {
  path: {
    /**
     * To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance.
     *
     * To get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
};

export type RecordingRegistrantsQuestionsGetResponse = {
  /**
   * Array of Registrant Custom Questions
   */
  custom_questions?: Array<{
    /**
     * Answer choices for the question. Can not be used with Short answer type.
     */
    answers?: Array<string>;
    /**
     * State whether registrants are required to answer custom questions or not.
     */
    required?: boolean;
    /**
     * Title of the question.
     */
    title?: string;
    /**
     * The type of registration question and answers.
     */
    type?: 'short' | 'single' | 'multiple';
  }>;
  /**
   * Array of Registrant Questions
   */
  questions?: Array<{
    /**
     * Field name.
     */
    field_name?:
      | 'last_name'
      | 'address'
      | 'city'
      | 'country'
      | 'zip'
      | 'state'
      | 'phone'
      | 'industry'
      | 'org'
      | 'job_title'
      | 'purchasing_time_frame'
      | 'role_in_purchase_process'
      | 'no_of_employees'
      | 'comments';
    /**
     * State whether the field is required to be answered by the registrant or not.
     */
    required?: boolean;
  }>;
};

export type RecordingRegistrantsQuestionsGetError = unknown;

export type RecordingRegistrantQuestionUpdateData = {
  /**
   * Recording Registrant Questions
   */
  body: {
    /**
     * Array of Registrant Custom Questions
     */
    custom_questions?: Array<{
      /**
       * Answer choices for the question. Can not be used with Short answer type.
       */
      answers?: Array<string>;
      /**
       * State whether registrants are required to answer custom questions or not.
       */
      required?: boolean;
      /**
       * Title of the question.
       */
      title?: string;
      /**
       * The type of registration question and answers.
       */
      type?: 'short' | 'single' | 'multiple';
    }>;
    /**
     * Array of Registrant Questions
     */
    questions?: Array<{
      /**
       * Field name.
       */
      field_name?:
        | 'last_name'
        | 'address'
        | 'city'
        | 'country'
        | 'zip'
        | 'state'
        | 'phone'
        | 'industry'
        | 'org'
        | 'job_title'
        | 'purchasing_time_frame'
        | 'role_in_purchase_process'
        | 'no_of_employees'
        | 'comments';
      /**
       * State whether the field is required to be answered by the registrant or not.
       */
      required?: boolean;
    }>;
  };
  path: {
    /**
     * To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance.
     *
     * To get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
};

export type RecordingRegistrantQuestionUpdateResponse = any;

export type RecordingRegistrantQuestionUpdateError = unknown;

export type MeetingRecordingRegistrantStatusData = {
  body: {
    action: 'approve' | 'deny';
    /**
     * List of registrants
     */
    registrants?: Array<{
      id?: string;
    }>;
  };
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type MeetingRecordingRegistrantStatusResponse = any;

export type MeetingRecordingRegistrantStatusError = unknown;

export type RecordingSettingUpdateData = {
  path: {
    /**
     * To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance.
     *
     * To get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
};

export type RecordingSettingUpdateResponse = {
  /**
   * Approval type for the registration.<br>
   * `0`- Automatically approve the registration when a user registers.<br>
   * `1` - Manually approve or deny the registration of a user.<br>
   * `2` - No registration required to view the recording.
   */
  approval_type?: 0 | 1 | 2;
  /**
   * Authentication domains.
   */
  authentication_domains?: string;
  /**
   * Authentication Options.
   */
  authentication_option?: string;
  /**
   * Determine whether registration  isrequired to view the recording.
   */
  on_demand?: boolean;
  /**
   * Enable password protection for the recording by setting a password. The password must have a minimum of **eight** characters with a mix of numbers, letters and special characters.<br><br>
   * **Note:** If the account owner or the admin has set minimum password strength requirements for recordings via Account Settings, the password value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
   */
  password?: string;
  /**
   * Only authenticated users can view.
   */
  recording_authentication?: boolean;
  /**
   * Send an email to host when someone registers to view the recording. This applies for On-demand recordings only.
   */
  send_email_to_host?: boolean;
  /**
   * Determine how the meeting recording is shared.
   */
  share_recording?: 'publicly' | 'internally' | 'none';
  /**
   * Show social share buttons on registration page. This applies for On-demand recordings only.
   */
  show_social_share_buttons?: boolean;
  /**
   * Name of the recording.
   */
  topic?: string;
  /**
   * Determine whether a viewer can download the recording file or not.
   */
  viewer_download?: boolean;
};

export type RecordingSettingUpdateError = unknown;

export type RecordingSettingsUpdateData = {
  /**
   * Meeting recording Settings
   */
  body: {
    /**
     * Approval type for the registration.<br>
     * `0`- Automatically approve the registration when a user registers.<br>
     * `1` - Manually approve or deny the registration of a user.<br>
     * `2` - No registration required to view the recording.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Authentication domains.
     */
    authentication_domains?: string;
    /**
     * Authentication Options.
     */
    authentication_option?: string;
    /**
     * Determine whether registration  isrequired to view the recording.
     */
    on_demand?: boolean;
    /**
     * Enable password protection for the recording by setting a password. The password must have a minimum of **eight** characters with a mix of numbers, letters and special characters.<br><br>
     * **Note:** If the account owner or the admin has set minimum password strength requirements for recordings via Account Settings, the password value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
     */
    password?: string;
    /**
     * Only authenticated users can view.
     */
    recording_authentication?: boolean;
    /**
     * Send an email to host when someone registers to view the recording. This applies for On-demand recordings only.
     */
    send_email_to_host?: boolean;
    /**
     * Determine how the meeting recording is shared.
     */
    share_recording?: 'publicly' | 'internally' | 'none';
    /**
     * Show social share buttons on registration page. This applies for On-demand recordings only.
     */
    show_social_share_buttons?: boolean;
    /**
     * Name of the recording.
     */
    topic?: string;
    /**
     * Determine whether a viewer can download the recording file or not.
     */
    viewer_download?: boolean;
  };
  path: {
    /**
     * To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance.
     *
     * To get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
};

export type RecordingSettingsUpdateResponse = any;

export type RecordingSettingsUpdateError = unknown;

export type RecordingStatusUpdateData = {
  body: {
    action?: 'recover';
  };
  path: {
    /**
     * To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance.
     *
     * To get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
};

export type RecordingStatusUpdateResponse = unknown | any;

export type RecordingStatusUpdateError = unknown;

export type RecordingDeleteOneData = {
  path: {
    /**
     * To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance.
     *
     * To get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
    /**
     * The recording ID.
     */
    recordingId: string;
  };
  query?: {
    /**
     * The recording delete actions:<br>`trash` - Move recording to trash.<br>`delete` - Delete recording permanently.
     */
    action?: 'trash' | 'delete';
  };
};

export type RecordingDeleteOneResponse = unknown | any;

export type RecordingDeleteOneError = unknown;

export type RecordingStatusUpdateOneData = {
  body: {
    action?: 'recover';
  };
  path: {
    /**
     * To get Cloud Recordings of a meeting, provide the meeting ID or meeting UUID. If the meeting ID is provided instead of UUID,the response will be for the latest meeting instance.
     *
     * To get Cloud Recordings of a webinar, provide the webinar ID or the webinar UUID. If the webinar ID is provided instead of UUID,the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875=="), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
    /**
     * The recording ID.
     */
    recordingId: string;
  };
};

export type RecordingStatusUpdateOneResponse = any;

export type RecordingStatusUpdateOneError = unknown;

export type MeetingRegistrantsData = {
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The meeting occurrence ID.
     */
    occurrence_id?: string;
    /**
     *
     * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
     *
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.
     */
    status?: 'pending' | 'approved' | 'denied';
  };
};

export type MeetingRegistrantsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of registrant objects.
   */
  registrants?: Array<
    {
      /**
       * Registrant ID.
       */
      id?: string;
    } & {
      /**
       * Registrant's address.
       */
      address?: string;
      /**
       * Registrant's city.
       */
      city?: string;
      /**
       * A field that allows registrants to provide any questions or comments that they might have.
       */
      comments?: string;
      /**
       * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
       */
      country?: string;
      /**
       * Custom questions.
       */
      custom_questions?: Array<{
        title?: string;
        value?: string;
      }>;
      /**
       * A valid email address of the registrant.
       */
      email: string;
      /**
       * Registrant's first name.
       */
      first_name: string;
      /**
       * Registrant's Industry.
       */
      industry?: string;
      /**
       * Registrant's job title.
       */
      job_title?: string;
      /**
       * Registrant's last name.
       */
      last_name?: string;
      /**
       * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
       */
      no_of_employees?: string;
      /**
       * Registrant's Organization.
       */
      org?: string;
      /**
       * Registrant's Phone number.
       */
      phone?: string;
      /**
       * This field can be included to gauge interest of webinar attendees towards buying your product or service.
       *
       * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
       */
      purchasing_time_frame?: string;
      /**
       * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
       */
      role_in_purchase_process?: string;
      /**
       * Registrant's State/Province.
       */
      state?: string;
      /**
       * Registrant's Zip/Postal Code.
       */
      zip?: string;
    } & {
      /**
       * The time at which the registrant registered.
       */
      create_time?: string;
      /**
       * The URL using which an approved registrant can join the webinar.
       */
      join_url?: string;
      /**
       * The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar.
       */
      status?: string;
    }
  >;
};

export type MeetingRegistrantsError = unknown;

export type MeetingRegistrantCreateData = {
  body: {
    /**
     * Registrant's address.
     */
    address?: string;
    /**
     * Registrant's city.
     */
    city?: string;
    /**
     * A field that allows registrants to provide any questions or comments that they might have.
     */
    comments?: string;
    /**
     * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
     */
    country?: string;
    /**
     * Custom questions.
     */
    custom_questions?: Array<{
      title?: string;
      value?: string;
    }>;
    /**
     * A valid email address of the registrant.
     */
    email: string;
    /**
     * Registrant's first name.
     */
    first_name: string;
    /**
     * Registrant's Industry.
     */
    industry?: string;
    /**
     * Registrant's job title.
     */
    job_title?: string;
    /**
     * Registrant's last name.
     */
    last_name?: string;
    /**
     * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
     */
    no_of_employees?: string;
    /**
     * Registrant's Organization.
     */
    org?: string;
    /**
     * Registrant's Phone number.
     */
    phone?: string;
    /**
     * This field can be included to gauge interest of webinar attendees towards buying your product or service.
     *
     * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
     */
    purchasing_time_frame?: string;
    /**
     * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
     */
    role_in_purchase_process?: string;
    /**
     * Registrant's State/Province.
     */
    state?: string;
    /**
     * Registrant's Zip/Postal Code.
     */
    zip?: string;
  } & {
    /**
     * Registrant's language preference for confirmation  emails. The value can be one of the following:
     * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
     */
    language?: string;
  } & {
    auto_approve?: boolean;
  };
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
  query?: {
    /**
     * Occurrence IDs. You can find these with the meeting get API. Multiple values separated by comma.
     */
    occurrence_ids?: string;
  };
};

export type MeetingRegistrantCreateResponse = {
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  /**
   * Unique URL for this registrant to join the meeting. This URL should only be shared with the registrant for whom the API request was made.
   * If the meeting was [created](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate) with manual approval type (`approval_type`: 1), the join URL will not be returned in the response.
   */
  join_url?: string;
  /**
   * Unique identifier of the registrant.
   */
  registrant_id?: string;
  /**
   * The start time for the meeting.
   */
  start_time?: string;
  /**
   * Topic of the meeting.
   */
  topic?: string;
};

export type MeetingRegistrantCreateError = unknown;

export type MeetingRegistrantsQuestionsGetData = {
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type MeetingRegistrantsQuestionsGetResponse = {
  /**
   * Array of Registrant Custom Questions
   */
  custom_questions?: Array<{
    /**
     * Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer.
     */
    answers?: Array<string>;
    /**
     * Indicates whether or not the custom question is required to be answered by participants or not.
     */
    required?: boolean;
    /**
     * Title of the custom question.
     */
    title?: string;
    /**
     * Type of the question being asked.
     */
    type?: 'short' | 'single';
  }>;
  /**
   * Array of Registrant Questions
   */
  questions?: Array<{
    /**
     * Field name of the question.
     */
    field_name?:
      | 'address'
      | 'city'
      | 'country'
      | 'zip'
      | 'state'
      | 'phone'
      | 'industry'
      | 'org'
      | 'job_title'
      | 'purchasing_time_frame'
      | 'role_in_purchase_process'
      | 'no_of_employees'
      | 'comments';
    /**
     * Indicates whether or not the displayed fields are required to be filled out by registrants.
     */
    required?: boolean;
  }>;
};

export type MeetingRegistrantsQuestionsGetError = unknown;

export type MeetingRegistrantQuestionUpdateData = {
  /**
   * Meeting Registrant Questions
   */
  body: {
    /**
     * Array of Registrant Custom Questions
     */
    custom_questions?: Array<{
      /**
       * Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer.
       */
      answers?: Array<string>;
      /**
       * Indicates whether or not the custom question is required to be answered by participants or not.
       */
      required?: boolean;
      /**
       * Title of the custom question.
       */
      title?: string;
      /**
       * Type of the question being asked.
       */
      type?: 'short' | 'single';
    }>;
    /**
     * Array of Registrant Questions
     */
    questions?: Array<{
      /**
       * Field name of the question.
       */
      field_name?:
        | 'address'
        | 'city'
        | 'country'
        | 'zip'
        | 'state'
        | 'phone'
        | 'industry'
        | 'org'
        | 'job_title'
        | 'purchasing_time_frame'
        | 'role_in_purchase_process'
        | 'no_of_employees'
        | 'comments';
      /**
       * Indicates whether or not the displayed fields are required to be filled out by registrants.
       */
      required?: boolean;
    }>;
  };
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type MeetingRegistrantQuestionUpdateResponse = any;

export type MeetingRegistrantQuestionUpdateError = unknown;

export type MeetingRegistrantStatusData = {
  body: {
    /**
     * Registrant Status:<br>`approve` - Approve registrant.<br>`cancel` - Cancel previously approved registrant's registration.<br>`deny` - Deny registrant.
     */
    action: 'approve' | 'cancel' | 'deny';
    /**
     * List of registrants.
     */
    registrants?: Array<{
      email?: string;
      id?: string;
    }>;
  };
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
  query?: {
    /**
     * The meeting occurrence ID.
     */
    occurrence_id?: string;
  };
};

export type MeetingRegistrantStatusResponse = any;

export type MeetingRegistrantStatusError = unknown;

export type MeetingregistrantdeleteData = {
  path: {
    /**
     * The meeting ID.
     */
    meetingId: number;
    /**
     * The meeting registrant ID.
     */
    registrantId: string;
  };
  query?: {
    /**
     * The meeting occurence ID.
     */
    occurrence_id?: string;
  };
};

export type MeetingregistrantdeleteResponse = any;

export type MeetingregistrantdeleteError = unknown;

export type MeetingStatusData = {
  body: {
    /**
     * `end` - End a meeting.<br>
     * `recover` - [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting) a deleted meeting.
     *
     */
    action?: 'end' | 'recover';
  };
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type MeetingStatusResponse = any;

export type MeetingStatusError = unknown;

export type DashboardClientFeedbackData = {
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * End date.
     */
    to: string;
  };
};

export type DashboardClientFeedbackResponse = {
  client_feedbacks?: Array<{
    /**
     * Feedback Id
     */
    feedback_id?: string;
    /**
     * Feedback Name
     */
    feedback_name?: string;
    /**
     * The number of participants that upvoted the feedback.
     */
    participants_count?: number;
  }>;
  /**
   * Start date for this report
   */
  from?: string;
  /**
   * End date for this report
   */
  to?: string;
  /**
   * The number of all records available across pages
   */
  total_records?: number;
};

export type DashboardClientFeedbackError = unknown;

export type DashboardClientFeedbackDetailData = {
  path: {
    /**
     * Feedback Detail Id
     */
    feedbackId: string;
  };
  query?: {
    from?: string;
    next_page_token?: string;
    page_size?: number;
    to?: string;
  };
};

export type DashboardClientFeedbackDetailResponse = {
  /**
   * Start date for this report
   */
  from?: string;
  /**
   * End date for this report
   */
  to?: string;
} & {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The amount of records returns within a single API call.
   */
  page_size?: number;
} & {
  client_feedback_details?: Array<{
    /**
     * Email address of the participant.
     */
    email?: string;
    /**
     * Meeting ID
     */
    meeting_id?: string;
    /**
     * Participant Name
     */
    participant_name?: string;
    /**
     * Time at which the feedback was submitted by the participant.
     */
    time?: string;
  }>;
};

export type DashboardClientFeedbackDetailError = unknown;

export type ListMeetingSatisfactionData = {
  query?: {
    /**
     * The start date for the query in “yyyy-mm-dd” format.
     */
    from?: string;
    /**
     * The end date for the query in “yyyy-mm-dd” format.
     */
    to?: string;
  };
};

export type ListMeetingSatisfactionResponse = {
  client_satisfaction?: Array<{
    /**
     * Date of the report.
     */
    date?: string;
    /**
     * The total number of "thumbs up" received for this meeting.
     */
    good_count?: number;
    /**
     * The total number of attendees who didn't submit any response (neither thumbs up nor thumbs down).
     */
    none_count?: number;
    /**
     * The total number of "thumbs down" received for this meeting.
     */
    not_good_count?: number;
    /**
     * Satisfaction Percentage.
     * The satisfaction percentage is calculated as `(good_count + none_count)` / `total_count`.
     */
    satisfaction_percent?: number;
  }>;
  /**
   * Start date for this report in 'yyyy-mm-dd' format.
   */
  from?: string;
  /**
   * End date for this report in 'yyyy-mm-dd' format.
   */
  to?: string;
  /**
   * The total number of records available across all pages.
   */
  total_records?: number;
};

export type ListMeetingSatisfactionError = unknown;

export type DashboardCrcData = {
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * End date.
     */
    to: string;
  };
};

export type DashboardCrcResponse = {
  /**
   * Start date for this report.
   */
  from?: string;
  /**
   * End date for this report.
   */
  to?: string;
} & {
  crc_ports_usage?: Array<{
    crc_ports_hour_usage?: Array<{
      /**
       * Hour in the day, during which the CRC was used. For example if the CRC was used at 11 pm, the value of this field will be 23.
       */
      hour?: string;
      /**
       * The maximum number of concurrent ports that are being used in that hour.
       */
      max_usage?: number;
      /**
       * The total number of H.323/SIP connections in that hour.
       */
      total_usage?: number;
    }>;
    /**
     * The date and time of the port usage.
     */
    date_time?: string;
  }>;
};

export type DashboardCrcError = unknown;

export type DashboardImData = {
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
  };
};

export type DashboardImResponse = {
  /**
   * Start date for this report.
   */
  from?: string;
  /**
   * End date for this report.
   */
  to?: string;
} & {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  users?: Array<{
    /**
     * Total number of instant meeting calls received by the user.
     */
    calls_receive?: number;
    /**
     * Total number of instant meeting calls made by the user.
     */
    calls_send?: number;
    /**
     * User email.
     */
    email?: string;
    /**
     * Total number of emojis received by the user.
     */
    emoji_receive?: number;
    /**
     * Total number of emojis sent by the user.
     */
    emoji_send?: number;
    /**
     * Total number of files received by the user.
     */
    files_receive?: number;
    /**
     * Total number of files sent by the user.
     */
    files_send?: number;
    /**
     * Total number of messages received by the user in channels.
     */
    group_receive?: number;
    /**
     * Total number of messages sent by the user in channels.
     */
    group_send?: number;
    /**
     * Total number of images received by the user.
     */
    images_receive?: number;
    /**
     * Total number of images sent by the user.
     */
    images_send?: number;
    /**
     * Total number of messages received by the user.
     */
    total_receive?: number;
    /**
     * Total number of messages sent by the user.
     */
    total_send?: number;
    /**
     * User ID.
     */
    user_id?: string;
    /**
     * User display name.
     */
    user_name?: string;
    /**
     * Total number of video files received by the user.
     */
    videos_receive?: number;
    /**
     * Total number of video files sent by the user.
     */
    videos_send?: number;
    /**
     * Total number of voice files received by the user.
     */
    voice_receive?: number;
    /**
     * Total number of voice files sent by the user.
     */
    voice_send?: number;
  }>;
};

export type DashboardImError = unknown;

export type DashboardIssueZoomRoomData = {
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * End date.
     */
    to: string;
  };
};

export type DashboardIssueZoomRoomResponse = {
  /**
   * Start date for this report
   */
  from?: string;
  /**
   * End date for this report
   */
  to?: string;
  /**
   * The number of all records available across pages
   */
  total_records?: number;
} & {
  zoom_rooms?: Array<{
    /**
     * Zoom Room ID
     */
    id?: string;
    /**
     * Issue Count of Zoom Room
     */
    issues_count?: number;
    /**
     * Zoom Room Name
     */
    room_name?: string;
  }>;
};

export type DashboardIssueZoomRoomError = unknown;

export type DashboardIssueDetailZoomRoomData = {
  path: {
    /**
     * The Zoom room ID.
     */
    zoomroomId: string;
  };
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
  };
};

export type DashboardIssueDetailZoomRoomResponse = {
  /**
   * Start date for this report
   */
  from?: string;
  /**
   * End date for this report
   */
  to?: string;
} & {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  issue_details?: Array<{
    /**
     * Zoom Room Issue Detail.<br> The value of the this field could be one of the following:<br>
     * * `Room Controller disconnected`<br>
     * * `Room Controller connected`
     * * `Selected camera has disconnected`
     * * `Selected camera is reconnected`
     * * `Selected microphone has disconnected`
     * * `Selected microphone is reconnected`
     * * `Selected speaker has disconnected`
     * * `Selected speaker is reconnected`
     * * `Zoom room is offline`
     * * `Zoom room is online`
     * * `High CPU usage is detected`
     * * `Low bandwidth network is detected`
     * * `{name} battery is low`
     * * `{name} battery is normal`
     * * `{name} disconnected`
     * * `{name} connected`
     * * `{name} is not charging`
     *
     * Possible values for {name}: <br>
     * * Zoom Rooms Computer
     * * Controller
     * * Scheduling Display
     */
    issue?: string;
    /**
     * Time at which the issue was encountered.
     */
    time?: string;
  }>;
};

export type DashboardIssueDetailZoomRoomError = unknown;

export type DashboardMeetingsData = {
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * Set the value of this field to "tracking_fields" if you would like to include tracking fields of each meeting in the response.
     */
    include_fields?: 'tracking_fields';
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
    /**
     * Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>
     *
     * If you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.
     */
    type?: 'past' | 'pastOne' | 'live';
  };
};

export type DashboardMeetingsResponse = {
  /**
   * Start date for this report in 'yyyy-mm-dd' format.
   */
  from?: string;
  /**
   * End date for this report in 'yyyy-mm-dd' format.
   */
  to?: string;
} & {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of meeting objects.
   */
  meetings?: Array<{
    /**
     * Custom keys and values assigned to the meeting.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the meeting.
       */
      key?: string;
      /**
       * Value of the custom key associated with the meeting.
       */
      value?: string;
    }>;
    /**
     * Department of the host.
     */
    dept?: string;
    /**
     * Meeting duration. Formatted as hh:mm:ss, for example: `16:08` for 16 minutes and 8 seconds.
     */
    duration?: string;
    /**
     * Email address of the host.
     */
    email?: string;
    /**
     * Meeting end time.
     */
    end_time?: string;
    /**
     * Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.
     */
    has_3rd_party_audio?: boolean;
    /**
     * Indicates whether or not the PSTN was used in the meeting.
     */
    has_pstn?: boolean;
    /**
     * Indicates whether or not the recording feature was used in the meeting.
     */
    has_recording?: boolean;
    /**
     * Indicates whether or not screenshare feature was used in the meeting.
     */
    has_screen_share?: boolean;
    /**
     * Indicates whether or not someone joined the meeting using SIP.
     */
    has_sip?: boolean;
    /**
     * Indicates whether or not video was used in the meeting.
     */
    has_video?: boolean;
    /**
     * Indicates whether or not VoIP was used in the meeting.
     */
    has_voip?: boolean;
    /**
     * Host display name.
     */
    host?: string;
    /**
     * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
     */
    id?: number;
    /**
     * The number of Zoom Room participants in the meeting.
     */
    in_room_participants?: number;
    /**
     * Meeting participant count.
     */
    participants?: number;
    /**
     * Meeting start time.
     */
    start_time?: string;
    /**
     * Meeting topic.
     */
    topic?: string;
    /**
     * Tracking fields and values assigned to the meeting.
     */
    tracking_fields?: Array<{
      /**
       * Label of the tracking field.
       */
      field?: string;
      /**
       * Value of the tracking field.
       */
      value?: string;
    }>;
    /**
     * License type of the user.
     */
    user_type?: string;
    /**
     * Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
     */
    uuid?: string;
  }>;
};

export type DashboardMeetingsError = unknown;

export type DashboardMeetingDetailData = {
  path: {
    /**
     * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
  query?: {
    /**
     * The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.<br>`live` - Live meetings.
     */
    type?: 'past' | 'pastOne' | 'live';
  };
};

export type DashboardMeetingDetailResponse = {
  /**
   * Custom keys and values assigned to the meeting.
   */
  custom_keys?: Array<{
    /**
     * Custom key associated with the meetinh.
     */
    key?: string;
    /**
     * Value of the custom key associated with the meeting.
     */
    value?: string;
  }>;
  /**
   * Department of the host.
   */
  dept?: string;
  /**
   * Meeting duration.
   */
  duration?: string;
  /**
   * Email address of the host.
   */
  email?: string;
  /**
   * Meeting end time.
   */
  end_time?: string;
  /**
   * Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.
   */
  has_3rd_party_audio?: boolean;
  /**
   * Indicates whether or not the PSTN was used in the meeting.
   */
  has_pstn?: boolean;
  /**
   * Indicates whether or not the recording feature was used in the meeting.
   */
  has_recording?: boolean;
  /**
   * Indicates whether or not screenshare feature was used in the meeting.
   */
  has_screen_share?: boolean;
  /**
   * Indicates whether or not someone joined the meeting using SIP.
   */
  has_sip?: boolean;
  /**
   * Indicates whether or not video was used in the meeting.
   */
  has_video?: boolean;
  /**
   * Indicates whether or not VoIP was used in the meeting.
   */
  has_voip?: boolean;
  /**
   * Host display name.
   */
  host?: string;
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  /**
   * The number of Zoom Room participants in the meeting.
   */
  in_room_participants?: number;
  /**
   * Meeting participant count.
   */
  participants?: number;
  /**
   * Meeting start time.
   */
  start_time?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * License type of the user.
   */
  user_type?: string;
  /**
   * Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
   */
  uuid?: string;
};

export type DashboardMeetingDetailError = unknown;

export type DashboardMeetingParticipantsData = {
  path: {
    /**
     * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
  query?: {
    /**
     * Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingregistrants). This is not supported for `live` meeting types.
     */
    include_fields?: 'registrant_id';
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.<br>`live` - Live meetings.
     */
    type?: 'past' | 'pastOne' | 'live';
  };
};

export type DashboardMeetingParticipantsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of participant session objects. If a participant left a meeting and rejoined the same meeting, their information will appear multiple times (as many times as they joined the meeting).
   */
  participants?: Array<{
    /**
     * Audio quality of the participant.
     */
    audio_quality?: ' ' | 'good' | 'fair' | 'poor' | 'bad';
    /**
     * The type of camera used by participant during the meeting.
     */
    camera?: string;
    /**
     * Participant connection type.
     */
    connection_type?: string;
    /**
     * Another identifier for the participant. Can be a number or characters, maximum length of 15 characters.
     */
    customer_key?: string;
    /**
     * Data Center where participant's meeting data is stored.
     */
    data_center?: string;
    /**
     * The type of device using which the participant joined the meeting. The possible values for this field are:
     * * `Phone`: Participant joined via PSTN.
     * * `H.323/SIP`: Participant joined via an H.323 or SIP device.
     * * `Windows`: Participant joined via VoIP using a Windows device.
     * * `Mac`: Participant joined via VoIP using a Mac device.
     * * `iOS`: Participant joined via VoIP using an iOS device.
     * * `Android`: Participant joined via VoIP using an Android device.
     */
    device?: string;
    /**
     * Participant's PC domain.
     */
    domain?: string;
    /**
     * Email address of the participant.
     */
    email?: string;
    /**
     * Participant's hard disk ID.
     */
    harddisk_id?: string;
    /**
     * Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.
     */
    id?: string;
    /**
     * The number of participants who joined via Zoom Room.
     */
    in_room_participants?: number;
    /**
     * Participant's IP address.
     */
    ip_address?: string;
    /**
     * The time at which participant joined the meeting.
     */
    join_time?: string;
    /**
     * Possible reasons for why participant left the meeting.
     */
    leave_reason?: string;
    /**
     * The time at which a participant left the meeting. For live meetings, this field will only be returned if a participant has left the ongoing meeting.
     */
    leave_time?: string;
    /**
     * Participant's location.
     */
    location?: string;
    /**
     * Participant's MAC address.
     */
    mac_addr?: string;
    /**
     * The type of Microphone that participant used during the meeting.
     */
    microphone?: string;
    /**
     * Participant's network type.
     */
    network_type?: 'Wired' | 'Wifi' | 'PPP' | 'Cellular (3G and 4G)' | 'Others';
    /**
     * Name of Participant's PC.
     */
    pc_name?: string;
    /**
     * Indicates whether or not recording was used during the meeting.
     */
    recording?: boolean;
    /**
     * Unique identifier of the registrant. This field is only returned if you entered "registrant_id" as the value of `include_fields` query parameter. This is not supported for `live` meeting types.
     */
    registrant_id?: string;
    /**
     * Screen share quality of the participant.
     */
    screen_share_quality?: ' ' | 'good' | 'fair' | 'poor' | 'bad';
    /**
     * Indicates whether or not a user selected to share an iPhone/iPad app during the screenshare.
     */
    share_application?: boolean;
    /**
     * Indicates whether or not a user selected to share their desktop during the screenshare.
     */
    share_desktop?: boolean;
    /**
     * Indicates whether or not a user selected to share their whiteboard during the screenshare.
     */
    share_whiteboard?: boolean;
    /**
     * The type of speaker participant used during the meeting.
     */
    speaker?: string;
    /**
     * Indicates whether the participant is in the waiting room or in the meeting.
     *
     * The value of this field can be `in_meeting` or `in_waiting_room`.
     */
    status?: 'in_meeting' | 'in_waiting_room';
    /**
     * Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
     */
    user_id?: string;
    /**
     * Participant display name.
     */
    user_name?: string;
    /**
     * Participant's Zoom Client version.
     */
    version?: string;
    /**
     * Video quality of the participant.
     */
    video_quality?: ' ' | 'good' | 'fair' | 'poor' | 'bad';
  }>;
};

export type DashboardMeetingParticipantsError = unknown;

export type DashboardMeetingParticipantsQosData = {
  path: {
    /**
     * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of items returned per page.
     */
    page_size?: number;
    /**
     * The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.
     */
    type?: 'past' | 'pastOne' | 'live';
  };
};

export type DashboardMeetingParticipantsQosResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of items per page.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of user objects.
   */
  participants?: Array<{
    /**
     * The type of device using which the participant joined the meeting.
     */
    device?: string;
    /**
     * Participant's PC domain.
     */
    domain?: string;
    /**
     * Participant's hard disk ID.
     */
    harddisk_id?: string;
    /**
     * Participant's IP address.
     */
    ip_address?: string;
    /**
     * The time at which participant joined the meeting.
     */
    join_time?: string;
    /**
     * The time at which participant left the meeting.
     */
    leave_time?: string;
    /**
     * Participant's location.
     */
    location?: string;
    /**
     * Participant's MAC address.
     */
    mac_addr?: string;
    /**
     * Participant's PC name.
     */
    pc_name?: string;
    /**
     * Participant ID.
     */
    user_id?: string;
    /**
     * Participant display name.
     */
    user_name?: string;
    /**
     * Quality of service provided to the user.
     */
    user_qos?: Array<{
      /**
       * QoS metrics on screen shares by a participant who joined the meeting via a Cloud Room Connector.
       */
      as_device_from_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * QoS metrics on screen shares output being received by a participant who joined the meeting via a Cloud Room Connector.
       */
      as_device_to_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of service object.
       */
      as_input?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
      /**
       * Quality of service object.
       */
      as_output?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
      /**
       * QoS metrics on audio being sent by a participant who joined the meeting via a Cloud Room Connector.
       */
      audio_device_from_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * QoS metrics on audio received by a participant who joined the meeting via a Cloud Room Connector.
       */
      audio_device_to_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of Service object.
       */
      audio_input?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of Service object.
       */
      audio_output?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      cpu_usage?: {
        /**
         * System Maximum CPU Usage
         */
        system_max_cpu_usage?: string;
        /**
         * Zoom Average CPU Usage
         */
        zoom_avg_cpu_usage?: string;
        /**
         * Zoom Maximum CPU Usage
         */
        zoom_max_cpu_usage?: string;
        /**
         * Zoom Minimum CPU Usage
         */
        zoom_min_cpu_usage?: string;
      };
      /**
       * Date-time of QOS
       */
      date_time?: string;
      /**
       * QoS metrics on video input being sent from a Cloud Room Connector used by the participant to join the meeting.
       */
      video_device_from_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * QoS metrics on video output received by a participant who joined the meeting via a Cloud Room Connector.
       */
      video_device_to_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of service object.
       */
      video_input?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
      /**
       * Quality of service object.
       */
      video_output?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
    }>;
    /**
     * Participant's Zoom Client version.
     */
    version?: string;
  }>;
};

export type DashboardMeetingParticipantsQosError = unknown;

export type ParticipantFeedbackData = {
  path: {
    /**
     * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>
     *
     * If you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.
     */
    type?: 'past' | 'pastOne' | 'live';
  };
};

export type ParticipantFeedbackResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  participants?: Array<{
    /**
     * Date and time at which the feedback was submitted.
     */
    date_time?: string;
    /**
     * Email address of the participant.
     */
    email?: string;
    /**
     * Feedback submitted by the participant.
     *
     * * `GOOD`: Thumbs up.
     * * `NOT GOOD`: Thumbs down.
     */
    quality?: 'GOOD' | 'NOT GOOD';
    /**
     * User ID of the participant.
     */
    user_id?: string;
  }>;
};

export type ParticipantFeedbackError = unknown;

export type DashboardMeetingParticipantShareData = {
  path: {
    /**
     * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.
     */
    type?: 'past' | 'pastOne' | 'live';
  };
};

export type DashboardMeetingParticipantShareResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of participants.
   */
  participants?: Array<{
    /**
     * Array of sharing and recording details.
     */
    details?: Array<{
      /**
       * Type of content shared.
       */
      content?: string;
      /**
       * End time of sharing.
       */
      end_time?: string;
      /**
       * Start time of sharing.
       */
      start_time?: string;
    }>;
    /**
     * Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.
     */
    id?: string;
    /**
     * Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
     */
    user_id?: string;
    /**
     * Participant display name.
     */
    user_name?: string;
  }>;
};

export type DashboardMeetingParticipantShareError = unknown;

export type DashboardMeetingParticipantQosData = {
  path: {
    /**
     * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
    /**
     * Participant ID.
     */
    participantId: string;
  };
  query?: {
    /**
     * The meeting types: <br>`past` - Past meetings.<br>`live` - Live Meetings.
     */
    type?: 'past' | 'pastOne' | 'live';
  };
};

export type DashboardMeetingParticipantQosResponse = {
  /**
   * The type of device using which the participant joined the meeting.
   */
  device?: string;
  /**
   * Participant's PC domain.
   */
  domain?: string;
  /**
   * Participant's hard disk ID.
   */
  harddisk_id?: string;
  /**
   * Participant's IP address.
   */
  ip_address?: string;
  /**
   * The time at which participant joined the meeting.
   */
  join_time?: string;
  /**
   * The time at which participant left the meeting.
   */
  leave_time?: string;
  /**
   * Participant's location.
   */
  location?: string;
  /**
   * Participant's MAC address.
   */
  mac_addr?: string;
  /**
   * Participant's PC name.
   */
  pc_name?: string;
  /**
   * Participant ID.
   */
  user_id?: string;
  /**
   * Participant display name.
   */
  user_name?: string;
  /**
   * Quality of service provided to the user.
   */
  user_qos?: Array<{
    /**
     * QoS metrics on screen shares by a participant who joined the meeting via a Cloud Room Connector.
     */
    as_device_from_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * QoS metrics on screen shares output being received by a participant who joined the meeting via a Cloud Room Connector.
     */
    as_device_to_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of service object.
     */
    as_input?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
    /**
     * Quality of service object.
     */
    as_output?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
    /**
     * QoS metrics on audio being sent by a participant who joined the meeting via a Cloud Room Connector.
     */
    audio_device_from_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * QoS metrics on audio received by a participant who joined the meeting via a Cloud Room Connector.
     */
    audio_device_to_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of Service object.
     */
    audio_input?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of Service object.
     */
    audio_output?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    cpu_usage?: {
      /**
       * System Maximum CPU Usage
       */
      system_max_cpu_usage?: string;
      /**
       * Zoom Average CPU Usage
       */
      zoom_avg_cpu_usage?: string;
      /**
       * Zoom Maximum CPU Usage
       */
      zoom_max_cpu_usage?: string;
      /**
       * Zoom Minimum CPU Usage
       */
      zoom_min_cpu_usage?: string;
    };
    /**
     * Date-time of QOS
     */
    date_time?: string;
    /**
     * QoS metrics on video input being sent from a Cloud Room Connector used by the participant to join the meeting.
     */
    video_device_from_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * QoS metrics on video output received by a participant who joined the meeting via a Cloud Room Connector.
     */
    video_device_to_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of service object.
     */
    video_input?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
    /**
     * Quality of service object.
     */
    video_output?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
  }>;
  /**
   * Participant's Zoom Client version.
   */
  version?: string;
};

export type DashboardMeetingParticipantQosError = unknown;

export type DashboardWebinarsData = {
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
    /**
     * The webinar type.
     */
    type?: 'past' | 'live';
  };
};

export type DashboardWebinarsResponse = {
  /**
   * Start date for this report in 'yyyy-mm-dd' format.
   */
  from?: string;
  /**
   * End date for this report in 'yyyy-mm-dd' format.
   */
  to?: string;
} & {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of webinar objects.
   */
  webinars?: Array<{
    /**
     * Custom keys and values assigned to the Webinar.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the Webinar.
       */
      key?: string;
      /**
       * Value of the custom key associated with the Webinar.
       */
      value?: string;
    }>;
    /**
     * Department of the host.
     */
    dept?: string;
    /**
     * Webinar duration, formatted as hh:mm:ss, for example: `10:00` for ten minutes.
     */
    duration?: string;
    /**
     * User email.
     */
    email?: string;
    /**
     * Webinar end time.
     */
    end_time?: string;
    /**
     * Indicates whether or not TSP was used for the Webinar.
     */
    has_3rd_party_audio?: boolean;
    /**
     * Indicates whether or not PSTN was used for the Webinar.
     */
    has_pstn?: boolean;
    /**
     * Indicates whether or not recording was used for the Webinar.
     */
    has_recording?: boolean;
    /**
     * Indicates whether or not screen sharing was used for the Webinar.
     */
    has_screen_share?: boolean;
    /**
     * Indicates whether or not SIP was used for the Webinar.
     */
    has_sip?: boolean;
    /**
     * Indicates whether or not video was used for the Webinar.
     */
    has_video?: boolean;
    /**
     * Indicates whether or not VoIP was used for the Webinar.
     */
    has_voip?: boolean;
    /**
     * User display name.
     */
    host?: string;
    /**
     * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
     */
    id?: number;
    /**
     * Webinar participant count.
     */
    participants?: number;
    /**
     * Webinar start time.
     */
    start_time?: string;
    /**
     * Webinar topic.
     */
    topic?: string;
    /**
     * User type.
     */
    user_type?: string;
    /**
     * Webinar UUID.
     */
    uuid?: string;
  }>;
};

export type DashboardWebinarsError = unknown;

export type DashboardWebinarDetailData = {
  path: {
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
  query?: {
    /**
     * The webinar type.
     */
    type?: 'past' | 'live';
  };
};

export type DashboardWebinarDetailResponse = {
  /**
   * Custom keys and values assigned to the Webinar.
   */
  custom_keys?: Array<{
    /**
     * Custom key associated with the Webinar.
     */
    key?: string;
    /**
     * Value of the custom key associated with the Webinar.
     */
    value?: string;
  }>;
  /**
   * Department of the host.
   */
  dept?: string;
  /**
   * Webinar duration, formatted as hh:mm:ss, for example: `10:00` for ten minutes.
   */
  duration?: string;
  /**
   * User email.
   */
  email?: string;
  /**
   * Webinar end time.
   */
  end_time?: string;
  /**
   * Indicates whether or not TSP was used for the Webinar.
   */
  has_3rd_party_audio?: boolean;
  /**
   * Indicates whether or not PSTN was used for the Webinar.
   */
  has_pstn?: boolean;
  /**
   * Indicates whether or not recording was used for the Webinar.
   */
  has_recording?: boolean;
  /**
   * Indicates whether or not screen sharing was used for the Webinar.
   */
  has_screen_share?: boolean;
  /**
   * Indicates whether or not SIP was used for the Webinar.
   */
  has_sip?: boolean;
  /**
   * Indicates whether or not video was used for the Webinar.
   */
  has_video?: boolean;
  /**
   * Indicates whether or not VoIP was used for the Webinar.
   */
  has_voip?: boolean;
  /**
   * User display name.
   */
  host?: string;
  /**
   * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
   */
  id?: number;
  /**
   * Webinar participant count.
   */
  participants?: number;
  /**
   * Webinar start time.
   */
  start_time?: string;
  /**
   * Webinar topic.
   */
  topic?: string;
  /**
   * User type.
   */
  user_type?: string;
  /**
   * Webinar UUID.
   */
  uuid?: string;
};

export type DashboardWebinarDetailError = unknown;

export type DashboardWebinarParticipantsData = {
  path: {
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
  query?: {
    /**
     * Provide 'registrant_id' as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [webinar registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarregistrants).<br>
     *
     *
     */
    include_fields?: 'registrant_id';
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * The webinar type.
     */
    type?: 'past' | 'live';
  };
};

export type DashboardWebinarParticipantsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of user objects.
   */
  participants?: Array<{
    /**
     * Audio quality of the participant.
     */
    audio_quality?: ' ' | 'good' | 'fair' | 'poor' | 'bad';
    /**
     * Participant connection type.
     */
    connection_type?: string;
    /**
     * Another identifier for the participant. Can be a number or characters, maximum length of 15 characters.
     */
    customer_key?: string;
    /**
     * Participant data center.
     */
    data_center?: string;
    /**
     *
     *
     * The type of device using which the participant joined the webinar. The possible values for this field are:
     * * `Phone`: Participant joined via PSTN.
     * * `H.323/SIP`: Participant joined via an H.323 or SIP device.
     * * `Windows`: Participant joined via VoIP using a Windows device.
     * * `Mac`: Participant joined via VoIP using a Mac device.
     * * `iOS`: Participant joined via VoIP using an iOS device.
     * * `Android`: Participant joined via VoIP using an Android device.
     */
    device?: string;
    /**
     * Participant domain.
     */
    domain?: string;
    /**
     * Email address of the participant.
     */
    email?: string;
    /**
     * Participant hard disk ID.
     */
    harddisk_id?: string;
    /**
     * Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.
     */
    id?: string;
    /**
     * Participant IP address.
     */
    ip_address?: string;
    /**
     * Participant join time.
     */
    join_time?: string;
    /**
     * Possible reasons for why a participant left the Webinar.
     *
     */
    leave_reason?: string;
    /**
     * Participant leave time.
     */
    leave_time?: string;
    /**
     * Participant location.
     */
    location?: string;
    /**
     * Participant MAC address.
     */
    mac_addr?: string;
    /**
     * Participant microphone.
     */
    microphone?: string;
    /**
     * Participant network type.
     */
    network_type?: string;
    /**
     * Participant PC name.
     */
    pc_name?: string;
    /**
     * Participant record?
     */
    recording?: boolean;
    /**
     * Unique identifier of the registrant. This field is only returned if you entered "registrant_id" as the value of `include_fields` query parameter.
     */
    registrant_id?: string;
    /**
     * Screen share quality of the participant.
     */
    screen_share_quality?: ' ' | 'good' | 'fair' | 'poor' | 'bad';
    /**
     * Did the participant share an application?
     */
    share_application?: boolean;
    /**
     * Did the participant share their desktop?
     */
    share_desktop?: boolean;
    /**
     * Did the participant share their whiteboard?
     */
    share_whiteboard?: boolean;
    /**
     * Participant speaker.
     */
    speaker?: string;
    /**
     * Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
     */
    user_id?: string;
    /**
     * Participant display name.
     */
    user_name?: string;
    /**
     * Participant version.
     */
    version?: string;
    /**
     * Video quality of the participant.
     */
    video_quality?: ' ' | 'good' | 'fair' | 'poor' | 'bad';
  }>;
};

export type DashboardWebinarParticipantsError = unknown;

export type DashboardWebinarParticipantsQosData = {
  path: {
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of items returned per page.
     */
    page_size?: number;
    /**
     * The webinar type.
     */
    type?: 'past' | 'live';
  };
};

export type DashboardWebinarParticipantsQosResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of items per page.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of user objects.
   */
  participants?: Array<{
    /**
     * The type of device using which the participant joined the meeting.
     */
    device?: string;
    /**
     * Participant's PC domain.
     */
    domain?: string;
    /**
     * Participant's hard disk ID.
     */
    harddisk_id?: string;
    /**
     * Participant's IP address.
     */
    ip_address?: string;
    /**
     * The time at which participant joined the meeting.
     */
    join_time?: string;
    /**
     * The time at which participant left the meeting.
     */
    leave_time?: string;
    /**
     * Participant's location.
     */
    location?: string;
    /**
     * Participant's MAC address.
     */
    mac_addr?: string;
    /**
     * Participant's PC name.
     */
    pc_name?: string;
    /**
     * Participant ID.
     */
    user_id?: string;
    /**
     * Participant display name.
     */
    user_name?: string;
    /**
     * Quality of service provided to the user.
     */
    user_qos?: Array<{
      /**
       * QoS metrics on screen shares by a participant who joined the meeting via a Cloud Room Connector.
       */
      as_device_from_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * QoS metrics on screen shares output being received by a participant who joined the meeting via a Cloud Room Connector.
       */
      as_device_to_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of service object.
       */
      as_input?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
      /**
       * Quality of service object.
       */
      as_output?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
      /**
       * QoS metrics on audio being sent by a participant who joined the meeting via a Cloud Room Connector.
       */
      audio_device_from_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * QoS metrics on audio received by a participant who joined the meeting via a Cloud Room Connector.
       */
      audio_device_to_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of Service object.
       */
      audio_input?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of Service object.
       */
      audio_output?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      cpu_usage?: {
        /**
         * System Maximum CPU Usage
         */
        system_max_cpu_usage?: string;
        /**
         * Zoom Average CPU Usage
         */
        zoom_avg_cpu_usage?: string;
        /**
         * Zoom Maximum CPU Usage
         */
        zoom_max_cpu_usage?: string;
        /**
         * Zoom Minimum CPU Usage
         */
        zoom_min_cpu_usage?: string;
      };
      /**
       * Date-time of QOS
       */
      date_time?: string;
      /**
       * QoS metrics on video input being sent from a Cloud Room Connector used by the participant to join the meeting.
       */
      video_device_from_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * QoS metrics on video output received by a participant who joined the meeting via a Cloud Room Connector.
       */
      video_device_to_crc?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      };
      /**
       * Quality of service object.
       */
      video_input?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
      /**
       * Quality of service object.
       */
      video_output?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
         */
        latency?: string;
        /**
         * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
      } & {
        /**
         * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
         */
        frame_rate?: string;
        /**
         * The number of pixels in each dimension that can be displayed by your video camera.
         */
        resolution?: string;
      };
    }>;
    /**
     * Participant's Zoom Client version.
     */
    version?: string;
  }>;
};

export type DashboardWebinarParticipantsQosError = unknown;

export type ParticipantWebinarFeedbackData = {
  path: {
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>
     *
     * If you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.
     */
    type?: 'past' | 'pastOne' | 'live';
  };
};

export type ParticipantWebinarFeedbackResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  participants?: Array<{
    /**
     * Date and time at which the feedback was submitted.
     */
    date_time?: string;
    /**
     * Email address of the participant.
     */
    email?: string;
    /**
     * Feedback submitted by the participant.
     *
     * * `GOOD`: Thumbs up.
     * * `NOT GOOD`: Thumbs down.
     */
    quality?: 'GOOD' | 'NOT GOOD';
    /**
     * User ID of the participant.
     */
    user_id?: string;
  }>;
};

export type ParticipantWebinarFeedbackError = unknown;

export type DashboardWebinarParticipantShareData = {
  path: {
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * The webinar type.
     */
    type?: 'past' | 'live';
  };
};

export type DashboardWebinarParticipantShareResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of participants.
   */
  participants?: Array<{
    /**
     * Array of sharing and recording details.
     */
    details?: Array<{
      /**
       * Type of content shared.
       */
      content?: string;
      /**
       * End time of sharing.
       */
      end_time?: string;
      /**
       * Start time of sharing.
       */
      start_time?: string;
    }>;
    /**
     * Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.
     */
    id?: string;
    /**
     * Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
     */
    user_id?: string;
    /**
     * Participant display name.
     */
    user_name?: string;
  }>;
};

export type DashboardWebinarParticipantShareError = unknown;

export type DashboardWebinarParticipantQosData = {
  path: {
    /**
     * Participant ID.
     */
    participantId: string;
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
  query?: {
    /**
     * The webinar type.
     */
    type?: 'past' | 'live';
  };
};

export type DashboardWebinarParticipantQosResponse = {
  /**
   * The type of device using which the participant joined the meeting.
   */
  device?: string;
  /**
   * Participant's PC domain.
   */
  domain?: string;
  /**
   * Participant's hard disk ID.
   */
  harddisk_id?: string;
  /**
   * Participant's IP address.
   */
  ip_address?: string;
  /**
   * The time at which participant joined the meeting.
   */
  join_time?: string;
  /**
   * The time at which participant left the meeting.
   */
  leave_time?: string;
  /**
   * Participant's location.
   */
  location?: string;
  /**
   * Participant's MAC address.
   */
  mac_addr?: string;
  /**
   * Participant's PC name.
   */
  pc_name?: string;
  /**
   * Participant ID.
   */
  user_id?: string;
  /**
   * Participant display name.
   */
  user_name?: string;
  /**
   * Quality of service provided to the user.
   */
  user_qos?: Array<{
    /**
     * QoS metrics on screen shares by a participant who joined the meeting via a Cloud Room Connector.
     */
    as_device_from_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * QoS metrics on screen shares output being received by a participant who joined the meeting via a Cloud Room Connector.
     */
    as_device_to_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of service object.
     */
    as_input?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
    /**
     * Quality of service object.
     */
    as_output?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
    /**
     * QoS metrics on audio being sent by a participant who joined the meeting via a Cloud Room Connector.
     */
    audio_device_from_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * QoS metrics on audio received by a participant who joined the meeting via a Cloud Room Connector.
     */
    audio_device_to_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of Service object.
     */
    audio_input?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of Service object.
     */
    audio_output?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    cpu_usage?: {
      /**
       * System Maximum CPU Usage
       */
      system_max_cpu_usage?: string;
      /**
       * Zoom Average CPU Usage
       */
      zoom_avg_cpu_usage?: string;
      /**
       * Zoom Maximum CPU Usage
       */
      zoom_max_cpu_usage?: string;
      /**
       * Zoom Minimum CPU Usage
       */
      zoom_min_cpu_usage?: string;
    };
    /**
     * Date-time of QOS
     */
    date_time?: string;
    /**
     * QoS metrics on video input being sent from a Cloud Room Connector used by the participant to join the meeting.
     */
    video_device_from_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * QoS metrics on video output received by a participant who joined the meeting via a Cloud Room Connector.
     */
    video_device_to_crc?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * The max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    };
    /**
     * Quality of service object.
     */
    video_input?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
    /**
     * Quality of service object.
     */
    video_output?: {
      /**
       * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
       */
      avg_loss?: string;
      /**
       * The number of bits per second that can be transmitted along a digital network. The value of this field is expressed in kbps.
       */
      bitrate?: string;
      /**
       * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
       */
      jitter?: string;
      /**
       * The amount of time it takes for a packet to travel from one point to another. The value of this field is expressed in milliseconds.
       */
      latency?: string;
      /**
       * Max loss: the max amount of packet loss, that is the max percentage of packets that fail to arrive at their destination.
       */
      max_loss?: string;
    } & {
      /**
       * The rate at which your video camera can produce unique images, or frames. Zoom supports a frame rate of up to 30fps.
       */
      frame_rate?: string;
      /**
       * The number of pixels in each dimension that can be displayed by your video camera.
       */
      resolution?: string;
    };
  }>;
  /**
   * Participant's Zoom Client version.
   */
  version?: string;
};

export type DashboardWebinarParticipantQosError = unknown;

export type DashboardZoomRoomsData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type DashboardZoomRoomsResponse = {
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of Zoom Rooms
   */
  zoom_rooms?: Array<{
    /**
     * Zoom room email type.
     */
    account_type?: string;
    /**
     * Zoom calendar name.
     */
    calender_name?: string;
    /**
     * Zoom room camera.
     */
    camera?: string;
    /**
     * Zoom room device IP.
     */
    device_ip?: string;
    /**
     * Zoom room email.
     */
    email?: string;
    health?: string;
    /**
     * Zoom room ID.
     */
    id?: string;
    /**
     * Zoom Room issues.
     */
    issues?: Array<string>;
    /**
     * Zoom room last start time.
     */
    last_start_time?: string;
    /**
     * Zoom room location.
     */
    location?: string;
    /**
     * Zoom room microphone.
     */
    microphone?: string;
    /**
     * Zoom room name.
     */
    room_name?: string;
    /**
     * Zoom room speaker.
     */
    speaker?: string;
    /**
     * Zoom room status.
     */
    status?: string;
  }>;
};

export type DashboardZoomRoomsError = unknown;

export type DashboardZoomRoomIssueData = {
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * End date.
     */
    to: string;
  };
};

export type DashboardZoomRoomIssueResponse = {
  /**
   * Start date for this report
   */
  from?: string;
  /**
   * End date for this report
   */
  to?: string;
  /**
   * The number of all records available across pages
   */
  total_records?: number;
} & {
  issues?: Array<{
    /**
     * Issue Name.<br> The value of the this field could be one of the following:<br>
     * * `Room Controller disconnected`<br>
     * * `Room Controller connected`
     * * `Selected camera has disconnected`
     * * `Selected camera is reconnected`
     * * `Selected microphone has disconnected`
     * * `Selected microphone is reconnected`
     * * `Selected speaker has disconnected`
     * * `Selected speaker is reconnected`
     * * `Zoom room is offline`
     * * `Zoom room is online`
     * * `High CPU usage is detected`
     * * `Low bandwidth network is detected`
     * * `{name} battery is low`
     * * `{name} battery is normal`
     * * `{name} disconnected`
     * * `{name} connected`
     * * `{name} is not charging`
     *
     * Possible values for {name}: <br>
     * * Zoom Rooms Computer
     * * Controller
     * * Scheduling Display
     */
    issue_name?: string;
    /**
     * Zoom Room Count of Issue
     */
    zoom_rooms_count?: number;
  }>;
};

export type DashboardZoomRoomIssueError = unknown;

export type DashboardZoomRoomData = {
  path: {
    /**
     * The Zoom room ID.
     */
    zoomroomId: string;
  };
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
  };
};

export type DashboardZoomRoomResponse = {
  /**
   * Zoom room email type.
   */
  account_type?: string;
  /**
   * Zoom calendar name.
   */
  calender_name?: string;
  /**
   * Zoom room camera.
   */
  camera?: string;
  /**
   * Zoom room device IP.
   */
  device_ip?: string;
  /**
   * Zoom room email.
   */
  email?: string;
  /**
   * Health of the Zoom Room.
   */
  health?: string;
  /**
   * Zoom room ID.
   */
  id?: string;
  /**
   * Issues encountered by the Zoom Room.
   */
  issues?: Array<string>;
  /**
   * Zoom room last start time.
   */
  last_start_time?: string;
  /**
   * Zoom room location.
   */
  location?: string;
  /**
   * Zoom room microphone.
   */
  microphone?: string;
  /**
   * Zoom room name.
   */
  room_name?: string;
  /**
   * Zoom room speaker.
   */
  speaker?: string;
  /**
   * Zoom room status.
   */
  status?: string;
} & {
  /**
   * Meeting metric details.
   */
  live_meeting?: {
    /**
     * Custom keys and values assigned to the meeting.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the meetinh.
       */
      key?: string;
      /**
       * Value of the custom key associated with the meeting.
       */
      value?: string;
    }>;
    /**
     * Department of the host.
     */
    dept?: string;
    /**
     * Meeting duration.
     */
    duration?: string;
    /**
     * Email address of the host.
     */
    email?: string;
    /**
     * Meeting end time.
     */
    end_time?: string;
    /**
     * Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.
     */
    has_3rd_party_audio?: boolean;
    /**
     * Indicates whether or not the PSTN was used in the meeting.
     */
    has_pstn?: boolean;
    /**
     * Indicates whether or not the recording feature was used in the meeting.
     */
    has_recording?: boolean;
    /**
     * Indicates whether or not screenshare feature was used in the meeting.
     */
    has_screen_share?: boolean;
    /**
     * Indicates whether or not someone joined the meeting using SIP.
     */
    has_sip?: boolean;
    /**
     * Indicates whether or not video was used in the meeting.
     */
    has_video?: boolean;
    /**
     * Indicates whether or not VoIP was used in the meeting.
     */
    has_voip?: boolean;
    /**
     * Host display name.
     */
    host?: string;
    /**
     * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
     */
    id?: number;
    /**
     * The number of Zoom Room participants in the meeting.
     */
    in_room_participants?: number;
    /**
     * Meeting participant count.
     */
    participants?: number;
    /**
     * Meeting start time.
     */
    start_time?: string;
    /**
     * Meeting topic.
     */
    topic?: string;
    /**
     * License type of the user.
     */
    user_type?: string;
    /**
     * Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
     */
    uuid?: string;
  };
  past_meetings?: {
    /**
     * Start date for this report in 'yyyy-mm-dd' format.
     */
    from?: string;
    /**
     * End date for this report in 'yyyy-mm-dd' format.
     */
    to?: string;
  } & {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of pages returned for the request made.
     */
    page_count?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * The number of all records available across pages.
     */
    total_records?: number;
  } & {
    /**
     * Array of meeting objects.
     */
    meetings?: Array<{
      /**
       * Custom keys and values assigned to the meeting.
       */
      custom_keys?: Array<{
        /**
         * Custom key associated with the meetinh.
         */
        key?: string;
        /**
         * Value of the custom key associated with the meeting.
         */
        value?: string;
      }>;
      /**
       * Department of the host.
       */
      dept?: string;
      /**
       * Meeting duration.
       */
      duration?: string;
      /**
       * Email address of the host.
       */
      email?: string;
      /**
       * Meeting end time.
       */
      end_time?: string;
      /**
       * Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.
       */
      has_3rd_party_audio?: boolean;
      /**
       * Indicates whether or not the PSTN was used in the meeting.
       */
      has_pstn?: boolean;
      /**
       * Indicates whether or not the recording feature was used in the meeting.
       */
      has_recording?: boolean;
      /**
       * Indicates whether or not screenshare feature was used in the meeting.
       */
      has_screen_share?: boolean;
      /**
       * Indicates whether or not someone joined the meeting using SIP.
       */
      has_sip?: boolean;
      /**
       * Indicates whether or not video was used in the meeting.
       */
      has_video?: boolean;
      /**
       * Indicates whether or not VoIP was used in the meeting.
       */
      has_voip?: boolean;
      /**
       * Host display name.
       */
      host?: string;
      /**
       * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
       */
      id?: number;
      /**
       * The number of Zoom Room participants in the meeting.
       */
      in_room_participants?: number;
      /**
       * Meeting participant count.
       */
      participants?: number;
      /**
       * Meeting start time.
       */
      start_time?: string;
      /**
       * Meeting topic.
       */
      topic?: string;
      /**
       * License type of the user.
       */
      user_type?: string;
      /**
       * Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
       */
      uuid?: string;
    }>;
  };
};

export type DashboardZoomRoomError = unknown;

export type ListPastMeetingFilesData = {
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type ListPastMeetingFilesResponse = {
  in_meeting_files?: Array<{
    /**
     * URL to download the file.
     */
    download_url?: string;
    /**
     * Name of the file.
     */
    file_name?: string;
    /**
     * Size of the file in bytes.
     */
    file_size?: number;
  }>;
  /**
   * The total number of files found.
   */
  total_records?: number;
};

export type ListPastMeetingFilesError = unknown;

export type PastMeetingsData = {
  path: {
    /**
     * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
     *
     * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
     */
    meetingId: number;
  };
};

export type PastMeetingsResponse = {
  /**
   * List of ended meeting instances.
   */
  meetings?: Array<{
    /**
     * Start time
     */
    start_time?: string;
    /**
     * Meeting UUID. Unique meeting ID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
     *
     *
     */
    uuid?: string;
  }>;
};

export type PastMeetingsError = unknown;

export type ListPastMeetingPollsData = {
  path: {
    /**
     * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
};

export type ListPastMeetingPollsResponse = {
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  questions?: Array<{
    /**
     * Email address of the user who submitted answers to the poll.
     */
    email?: string;
    /**
     * Name of the user who submitted answers to the poll. If "anonymous" option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be "Anonymous Attendee".
     */
    name?: string;
    question_details?: Array<{
      /**
       * Answer submitted by the user.
       */
      answer?: string;
      /**
       * Date and time at which the answer to the poll was submitted.
       */
      date_time?: string;
      /**
       * Unique identifier of the poll.
       */
      polling_id?: string;
      /**
       * Question asked during the poll.
       */
      question?: string;
    }>;
  }>;
  /**
   * The start time of the meeting.
   */
  start_time?: string;
  /**
   * Meeting UUID.
   */
  uuid?: string;
};

export type ListPastMeetingPollsError = unknown;

export type PastMeetingDetailsData = {
  path: {
    /**
     * The meeting UUID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it.
     */
    meetingUUID: string;
  };
};

export type PastMeetingDetailsResponse = {
  /**
   * Meeting duration.
   */
  duration?: number;
  /**
   * Meeting end time (GMT).
   */
  end_time?: string;
  /**
   * Host ID.
   */
  host_id?: string;
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  /**
   * Number of meeting participants.
   */
  participants_count?: number;
  /**
   * Meeting start time (GMT).
   */
  start_time?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Sum of meeting minutes from all participants in the meeting.
   */
  total_minutes?: number;
  /**
   * Meeting type.
   */
  type?: number;
  /**
   * User email.
   */
  user_email?: string;
  /**
   * User display name.
   */
  user_name?: string;
  /**
   * Meeting UUID.
   */
  uuid?: string;
};

export type PastMeetingDetailsError = unknown;

export type PastMeetingParticipantsData = {
  path: {
    /**
     * The meeting UUID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it.
     */
    meetingUUID: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type PastMeetingParticipantsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of meeting participant objects.
   */
  participants?: Array<{
    /**
     * Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.
     */
    id?: string;
    /**
     * Participant display name.
     */
    name?: string;
    /**
     * Email address of the user. This field will be returned if the user logged into Zoom to join the meeting.
     */
    user_email?: string;
  }>;
};

export type PastMeetingParticipantsError = unknown;

export type WebinarAbsenteesData = {
  path: {
    /**
     * The Webinar UUID. Each Webinar instance will generate its own Webinar UUID (i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.
     */
    WebinarUUID: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The meeting occurrence ID.
     */
    occurrence_id?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type WebinarAbsenteesResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of registrant objects.
   */
  registrants?: Array<
    {
      /**
       * Registrant ID.
       */
      id?: string;
    } & {
      /**
       * Registrant's address.
       */
      address?: string;
      /**
       * Registrant's city.
       */
      city?: string;
      /**
       * A field that allows registrants to provide any questions or comments that they might have.
       */
      comments?: string;
      /**
       * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
       */
      country?: string;
      /**
       * Custom questions.
       */
      custom_questions?: Array<{
        title?: string;
        value?: string;
      }>;
      /**
       * A valid email address of the registrant.
       */
      email: string;
      /**
       * Registrant's first name.
       */
      first_name: string;
      /**
       * Registrant's Industry.
       */
      industry?: string;
      /**
       * Registrant's job title.
       */
      job_title?: string;
      /**
       * Registrant's last name.
       */
      last_name?: string;
      /**
       * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
       */
      no_of_employees?: string;
      /**
       * Registrant's Organization.
       */
      org?: string;
      /**
       * Registrant's Phone number.
       */
      phone?: string;
      /**
       * This field can be included to gauge interest of webinar attendees towards buying your product or service.
       *
       * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
       */
      purchasing_time_frame?: string;
      /**
       * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
       */
      role_in_purchase_process?: string;
      /**
       * Registrant's State/Province.
       */
      state?: string;
      /**
       * Registrant's Zip/Postal Code.
       */
      zip?: string;
    } & {
      /**
       * The time at which the registrant registered.
       */
      create_time?: string;
      /**
       * The URL using which an approved registrant can join the webinar.
       */
      join_url?: string;
      /**
       * The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar.
       */
      status?: string;
    }
  >;
};

export type WebinarAbsenteesError = unknown;

export type ListPastWebinarFilesData = {
  path: {
    webinarId: string;
  };
};

export type ListPastWebinarFilesResponse = {
  in_meeting_files?: Array<{
    /**
     * URL to download the file.
     */
    download_url?: string;
    /**
     * Name of the file.
     */
    file_name?: string;
    /**
     * Size of the file in bytes.
     */
    file_size?: number;
  }>;
  /**
   * The total number of files found.
   */
  total_records?: number;
};

export type ListPastWebinarFilesError = unknown;

export type PastWebinarsData = {
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type PastWebinarsResponse = {
  /**
   * List of ended webinar instances.
   */
  webinars?: Array<{
    /**
     * Start time.
     */
    start_time?: string;
    /**
     * Webinar UUID.
     */
    uuid?: string;
  }>;
};

export type PastWebinarsError = unknown;

export type ListWebinarParticipantsData = {
  path: {
    /**
     * Unique identifier of the webinar. You can retrieve the value of this field by calling the [list webinars](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinars) API.
     */
    webinarId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type ListWebinarParticipantsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for this request.
   */
  page_count?: number;
  /**
   * The total number of records returned from a single API call.
   */
  page_size?: number;
  participants?: Array<{
    /**
     * Unique identifier of the participant.
     */
    id?: string;
    /**
     * Name of the participant.
     */
    name?: string;
    /**
     * Email address of the participant.
     */
    user_email?: string;
  }>;
  /**
   * The total number of records available across all pages.
   */
  total_records?: number;
};

export type ListWebinarParticipantsError = unknown;

export type ListPastWebinarPollResultsData = {
  path: {
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
};

export type ListPastWebinarPollResultsResponse = {
  /**
   * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
   */
  id?: number;
  questions?: Array<{
    /**
     * Email address of the user who submitted answers to the poll.
     */
    email?: string;
    /**
     * Name of the user who submitted answers to the poll. If "anonymous" option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be "Anonymous Attendee".
     */
    name?: string;
    question_details?: Array<{
      /**
       * Answer submitted by the user.
       */
      answer?: string;
      /**
       * Date and time at which the answer to the poll was submitted.
       */
      date_time?: string;
      /**
       * Unique identifier of the poll.
       */
      polling_id?: string;
      /**
       * Question asked during the poll.
       */
      question?: string;
    }>;
  }>;
  /**
   * The start time of the Webinar.
   */
  start_time?: string;
  /**
   * Webinar UUID.
   */
  uuid?: string;
};

export type ListPastWebinarPollResultsError = unknown;

export type ListPastWebinarQaData = {
  path: {
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
};

export type ListPastWebinarQaResponse = {
  /**
   * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
   */
  id?: number;
  questions?: Array<{
    /**
     * Email address of the user.
     */
    email?: string;
    /**
     * Name of the user. If "anonymous" option is enabled for the Q&A, the participant's  information will be kept anonymous and the value of `name` field will be "Anonymous Attendee".
     */
    name?: string;
    question_details?: Array<{
      /**
       * Answer submitted for the question.
       */
      answer?: string;
      /**
       * Question asked during the Q&A.
       */
      question?: string;
    }>;
  }>;
  /**
   * The start time of the Webinar.
   */
  start_time?: string;
  /**
   * Webinar UUID.
   */
  uuid?: string;
};

export type ListPastWebinarQaError = unknown;

export type AddAutoReceptionistData = {
  body?: {
    /**
     * Provide a name to help identify the auto receptionist.
     */
    name: string;
    /**
     * Unique identifier of the site where the auto receptionist is to be assigned. This field is required only if you have [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) enabled.
     */
    site_id?: string;
  };
};

export type AddAutoReceptionistResponse = {
  /**
   *  Extension number assigned to the auto receptionist.
   */
  extension_number?: number;
  /**
   * Auto receptionist ID. Unique Identifier of the auto receptionist.
   */
  id?: string;
  /**
   *  Name of the auto receptionist.
   */
  name?: string;
};

export type AddAutoReceptionistError = unknown;

export type UpdateAutoReceptionistData = {
  body?: {
    /**
     * Extension number to be assigned to the auto receptionist. If site code is enabled, provide the short extension number instead.
     */
    extension_number?: number;
    /**
     * Display name of the auto receptionist.
     */
    name?: string;
  };
  path: {
    /**
     * Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites).
     */
    autoReceptionistId: string;
  };
};

export type UpdateAutoReceptionistResponse = unknown;

export type UpdateAutoReceptionistError = unknown;

export type UnassignAllPhoneNumsAutoReceptionistData = {
  path: {
    autoReceptionistId: string;
  };
};

export type UnassignAllPhoneNumsAutoReceptionistResponse = unknown;

export type UnassignAllPhoneNumsAutoReceptionistError = unknown;

export type AssignPhoneNumbersAutoReceptionistData = {
  body?: {
    /**
     * Provide either the unique identifier of the Phone Number  in the `id` field or provide the phone number in the `number` field.
     */
    phone_numbers?: Array<{
      /**
       * Unique Identifier of the Phone number.
       */
      id?: string;
      /**
       * Phone number in e164 format.
       */
      number?: string;
    }>;
  };
  path: {
    /**
     * Unique Identifier of the Auto Receptionist. It can be retrieved from the [List Sites API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites).
     */
    autoReceptionistId: string;
  };
};

export type AssignPhoneNumbersAutoReceptionistResponse = unknown;

export type AssignPhoneNumbersAutoReceptionistError = unknown;

export type UnassignAphoneNumAutoReceptionistData = {
  path: {
    /**
     * Unique identifier of the auto receptionist. This can be retrieved from the List Phone Sites API.
     */
    autoReceptionistId: string;
    /**
     * Unique Identifier of the phone number or provide the actual phone number in e164 format (example: +19995550123).
     */
    phoneNumberId: string;
  };
};

export type UnassignAphoneNumAutoReceptionistResponse = unknown;

export type UnassignAphoneNumAutoReceptionistError = unknown;

export type ListBlockedListData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The total number of records returned from a single API call.
     */
    page_size?: number;
  };
};

export type ListBlockedListResponse = {
  blocked_list?: Array<{
    /**
     * Block type.<br>
     * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
     * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
     */
    block_type?: 'inbound' | 'outbound';
    /**
     * Provide a comment to help you identify the blocked number or prefix.
     */
    comment?: string;
    /**
     * Unique identifier of the blocked list.
     */
    id?: string;
    /**
     * Indicates the match type for the blocked list. The values can be one of the following:<br>
     * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
     * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
     */
    match_type?: 'phoneNumber' | 'prefix';
    /**
     * The phone number to be blocked if you passed "phoneNumber" as the value for the `match_type` field. If you passed "prefix" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905.
     */
    phone_number?: string;
    /**
     * Indicates whether the blocking is active or inactive. <br>
     * `active`: The blocked list is active.<br>
     * `inactive`: The blocked list is inactive.
     */
    status?: 'active' | 'inactive';
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The total number of records returned from a single API call.
   */
  page_size?: number;
  /**
   * The total number of records found for this query.
   */
  total_records?: number;
};

export type ListBlockedListError = unknown;

export type AddAnumberToBlockedListData = {
  body?: {
    /**
     * State whether you want the block type to be inbound or outbound.<br>
     * `inbound`: Pass this value to prevent the blocked number or prefix from calling in to phone users.<br>
     * `outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.
     */
    block_type?: 'inbound' | 'outbound';
    /**
     * Provide a comment to help you identify the blocked number or prefix.
     */
    comment?: string;
    /**
     * Specify the match type for the blocked list. The values can be one of the following:<br><br>
     * `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Then, in the `phone_number` field, provide the phone number along with the country code.<br><br>
     * `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country code and area code. Next, in the `phone_number` field, enter a country code as part of the prefix. For example, entering 1907 blocks numbers with country code 1 and area code 907.
     */
    match_type?: 'phoneNumber' | 'prefix';
    /**
     * The phone number to be blocked if you passed "phoneNumber" as the value for the `match_type` field. If you passed "prefix" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905.
     */
    phone_number?: string;
    /**
     * Enable or disable the blocking. One of the following values are allowed:<br>
     * `active`: Keep the blocking active.<br>
     * `inactive`: Disable the blocking.
     */
    status?: 'active' | 'inactive';
  };
};

export type AddAnumberToBlockedListResponse = {
  /**
   * Unique identifier of the blocked list.
   */
  id?: string;
};

export type AddAnumberToBlockedListError = unknown;

export type DeleteAblockedListData = {
  path: {
    /**
     * Unique Identifier of the blocked list. This can be retrieved from the List Blocked List API.
     */
    blockedListId: string;
  };
};

export type DeleteAblockedListResponse = unknown;

export type DeleteAblockedListError = unknown;

export type GetAblockedListData = {
  path: {
    /**
     * Unique Identifier of the blocked list.
     */
    blockedListId: string;
  };
};

export type GetAblockedListResponse = {
  /**
   * Block type.<br>
   * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
   * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
   */
  block_type?: 'inbound' | 'outbound';
  /**
   * Provide a comment to help you identify the blocked number or prefix.
   */
  comment?: string;
  /**
   * Unique identifier of the blocked list.
   */
  id?: string;
  /**
   * Indicates the match type for the blocked list. The values can be one of the following:<br>
   * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
   * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
   */
  match_type?: 'phoneNumber' | 'prefix';
  /**
   * The phone number or the prefix number that is blocked based on the `match_type`.
   */
  phone_number?: string;
  /**
   * Indicates whether the blocking is active or inactive. <br>
   * `active`: The blocked list is active.<br>
   * `inactive`: The blocked list is inactive.
   */
  status?: 'active' | 'inactive';
};

export type GetAblockedListError = unknown;

export type UpdateBlockedListData = {
  body?: {
    /**
     * State whether you want the block type to be inbound or outbound.<br>
     * `inbound`: Pass this value to prevent the blocked number or prefix from calling in to phone users.<br>
     * `outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.
     */
    block_type?: 'inbound' | 'outbound';
    /**
     * Provide a comment to help you identify the blocked number or prefix.
     */
    comment?: string;
    /**
     * Specify the match type for the blocked list. The values can be one of the following:<br><br>
     * `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Then, in the `phone_number` field, provide the phone number along with the country code.<br><br>
     * `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country code and area code. Next, in the `phone_number` field, enter a country code as part of the prefix. For example, entering 1907 blocks numbers with country code 1 and area code 907.
     */
    match_type?: 'phoneNumber' | 'prefix';
    /**
     * The phone number to be blocked if you passed "phoneNumber" as the value for the `match_type` field. If you passed "prefix" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905.
     */
    phone_number?: string;
    /**
     * Enable or disable the blocking. One of the following values are allowed:<br>
     * `active`: Keep the blocking active.<br>
     * `inactive`: Disable the blocking.
     */
    status?: 'active' | 'inactive';
  };
  path: {
    /**
     * Unique Identifier of the blocked list.
     */
    blockedListId: string;
  };
};

export type UpdateBlockedListResponse = unknown;

export type UpdateBlockedListError = unknown;

export type AddByocNumberData = {
  body?: {
    /**
     * Name of the carrier.
     */
    carrier: string;
    /**
     * Phone number(s) to be added to Zoom. The value should be in e164 format.
     */
    phone_numbers: Array<string>;
    /**
     * Unique identifier of the site. This field is only required if you have enabled multiple sites in the account. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) or [Adding a site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15) for details.
     */
    site_id?: string;
  };
};

export type AddByocNumberResponse = {
  phone_numbers?: Array<{
    /**
     * Unique identifier of the phone number.
     */
    id?: string;
    /**
     * Phone number in e164 format.
     */
    number?: string;
  }>;
};

export type AddByocNumberError = unknown;

export type AccountCallLogsData = {
  query?: {
    /**
     * Start date from which you would like to get the call logs. The start date should be within past six months. <br>
     *
     * The API only returns data pertaining to a month. Thus, the date range(defined using "from" and "to" fields) for which the call logs are to be returned must not exceed a month.
     */
    from?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * Filter the API response by [path](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs#h_646b46c6-0623-4ab1-8b8b-ea5b8bcef679) of the call. The value of this field can be one of the following: `voiceMail`, `message`, `forward`, `extension`, `callQueue`, `ivrMenu`, `companyDirectory`, `autoReceptionist`, `contactCenter`, `disconnected`, `commonAreaPhone`,
     * `pstn`, `transfer`, `sharedLines`, `sharedLineGroup`, `tollFreeBilling`, `meetingService`, `parkPickup`,
     * `parkTimeout`, `monitor`, `takeover`, `sipGroup`
     */
    path?: string;
    /**
     * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site.
     */
    site_id?: string;
    /**
     * Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.
     */
    time_type?: 'startTime' | 'endTime';
    /**
     * The end date upto which you would like to get the call logs for. The end date should be within past six months.
     */
    to?: string;
    /**
     * The type of the call logs. The value can be either "all" or "missed".
     */
    type?: string;
  };
};

export type AccountCallLogsResponse = {
  /**
   * Call Log
   */
  call_logs?: Array<{
    /**
     * GMT date and time at which the inbound call was answered. The value of this field is in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
     *
     */
    answer_start_time?: string;
    /**
     * Unique identifier of the phone call.
     */
    call_id?: string;
    /**
     * The type of call:
     * *`voip` (Voice over IP)
     * *`pstn` (Public Switched Telephone Network)
     * *`tollfree`
     * *`international`
     * *`contactCenter`
     */
    call_type?: 'voip' | 'pstn' | 'tollfree' | 'international' | 'contactCenter';
    /**
     * Contact name of callee
     */
    callee_name?: string;
    /**
     * Number of callee
     */
    callee_number?: string;
    /**
     * Type of callee's number. 1 - internal | 2 - external
     */
    callee_number_type?: string;
    /**
     * Contact name of caller
     */
    caller_name?: string;
    /**
     * Number of caller
     */
    caller_number?: string;
    /**
     * Type of caller's number. 1 - internal | 2 - external
     */
    caller_number_type?: string;
    /**
     * Billing charge for the call.
     */
    charge?: string;
    /**
     * Client code.
     */
    client_code?: string;
    /**
     * Start time of the call
     */
    date_time?: string;
    /**
     * Direction of the call. "inbound" | "outbound"
     */
    direction?: string;
    /**
     * Duration of the call in seconds.
     */
    duration?: number;
    /**
     * Call Log ID
     */
    id?: string;
    owner?: {
      /**
       * The owner's extension number.
       */
      extension_number?: number;
      /**
       * The owner ID.
       */
      id?: string;
      /**
       * The owner name.
       */
      name?: string;
      /**
       * The owner type:
       * *`user`
       * *`callQueue`
       * *`autoReceptionist`
       * *`commonAreaPhone`
       * *`sharedLineGroup`
       */
      type?: 'user' | 'callQueue' | 'autoReceptionist' | 'commonAreaPhone' | 'sharedLineGroup';
    };
    /**
     * Path of the call.
     */
    path?: string;
    /**
     * Billing rate for the call.
     */
    rate?: string;
    /**
     * Unique identifier of the call recording.
     */
    recording_id?: string;
    /**
     * Type of call recording:<br>
     * `1` OnDemand<br>
     * `2` Automatic
     */
    recording_type?: 1 | 2;
    /**
     * Result of the call. "call_connected" | "recorded" | "no_answer"
     */
    result?: string;
    site?: {
      /**
       * Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
       */
      id?: string;
      /**
       * Name of the site where the phone number is assigned.
       */
      name?: string;
    };
    /**
     * User ID of the call log owner.
     */
    user_id?: string;
    /**
     * Duration that a  **call queue member** takes to answer a call from the time it started ringing. The value of the duration is in seconds.
     *
     */
    waiting_time?: string;
  }>;
  /**
   * Date from which you would like to view the logs.
   */
  from?: string;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * Total number of pages
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call for each page.
   */
  page_size?: number;
  /**
   * Date up to which you would like to view the phone log.
   */
  to?: string;
  /**
   * The total number of records returned.
   */
  total_records?: number;
};

export type AccountCallLogsError = unknown;

export type ListCallQueuesData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned from a single API call.
     */
    page_size?: number;
  };
};

export type ListCallQueuesResponse = {
  call_queues?: Array<{
    /**
     * Extension number assigned to the queue.
     */
    extension_number?: number;
    /**
     * Unique Identifier of the Call Queue.
     */
    id?: string;
    /**
     * Name of the Call Queue.
     */
    name?: string;
    /**
     * Phone number(s) assigned to the call queue.
     */
    phone_numbers?: Array<{
      /**
       * Unique Identifier of the Phone number assigned.
       */
      id?: string;
      /**
       * Phone number.
       */
      number?: string;
      /**
       * Source
       */
      source?: 'internal' | 'external';
    }>;
    site?: {
      /**
       * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.
       */
      id?: string;
      /**
       * Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
       */
      name?: string;
    };
    /**
     * Status of the Call Queue.<br>`active`: Call queue is enabled and active.<br>`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.
     */
    status?: 'active' | 'inactive';
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned from a single API call.
   */
  page_size?: number;
  /**
   * The total number of records found for this query.
   */
  total_records?: number;
};

export type ListCallQueuesError = unknown;

export type CreateCallQueueData = {
  body?: {
    /**
     * Description for the Call Queue.
     */
    description?: string;
    /**
     * Phone extension number for the site.<br>
     *
     * If a site code has been [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number instead of the original extension number..
     */
    extension_number?: number;
    /**
     * A list of one or more phone users to be included in the call queue. Provide either users or common area phone(s). Provide at least one user in the users object.
     */
    members?: {
      /**
       * **Optional**<br>
       * Unique identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones). This can be retrieved from the List Common Area Phones API.
       */
      common_area_phone_ids?: Array<string>;
      /**
       * Users object. Provide either the id (userId) field or the email address of the user.
       */
      users?: Array<{
        /**
         * Email address of the user. This can be retrieved from the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.
         */
        email?: string;
        /**
         * User Id of the user. This can be retrieved from the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.
         */
        id?: string;
      }>;
    };
    /**
     * Name of the Call Queue.
     */
    name: string;
    /**
     * Unique identifier of the site. Required only if [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) have been enabled. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites) API.
     */
    site_id: string;
  };
};

export type CreateCallQueueResponse = {
  /**
   * Extension number assigned for the Call Queue.
   */
  extension_number?: number;
  /**
   * Unique Identifier of the Call Queue.
   */
  id?: string;
  /**
   * Name of the Call Queue.
   */
  name?: string;
  /**
   * Status of the Call Queue.<br>
   * `active`: Call queue is enabled and active.<br>
   * `inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.
   */
  status?: string;
};

export type CreateCallQueueError = unknown;

export type DeleteAcallQueueData = {
  path: {
    /**
     * Unique Identifier of the call queue.
     */
    callQueueId: string;
  };
};

export type DeleteAcallQueueResponse = unknown;

export type DeleteAcallQueueError = unknown;

export type GetAcallQueueData = {
  path: {
    /**
     * Unique Identifier of the Call Queue. This can be retrieved from [List Call Queues API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-call-queues/listcallqueues).
     */
    callQueueId: string;
  };
};

export type GetAcallQueueResponse = {
  /**
   * Extension number assigned to the Call Queue.
   */
  extension_number?: number;
  /**
   * Unique Identifier of the Call Queue.
   */
  id?: string;
  members?: {
    common_area_phones?: Array<{
      /**
       * Unique Identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).
       */
      id?: string;
      /**
       * Name of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).
       */
      name?: string;
    }>;
    users?: Array<{
      /**
       * User ID: Unique Identifier of the user.
       */
      id?: string;
      /**
       * Level of the user. The value can be one of the following:<br>
       * `manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.<br><br>
       * `user`: Regular user without the privileges of a manager.
       */
      level?: 'manager' | 'user';
      /**
       * Name of the user.
       */
      name?: string;
      /**
       * Determines whether the user can receive calls or not.
       */
      receive_call?: boolean;
    }>;
  };
  /**
   * Name of the Call Queue.
   */
  name?: string;
  phone_numbers?: Array<{
    /**
     * Unique Identifier of the number.
     */
    id?: string;
    /**
     * Phone number.
     */
    number?: string;
    /**
     * Source
     */
    source?: 'internal' | 'external';
  }>;
  site?: {
    /**
     * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.
     */
    id?: string;
    /**
     * Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
     */
    name?: string;
  };
  /**
   * Status of the Call Queue.
   */
  status?: 'active' | 'inactive';
};

export type GetAcallQueueError = unknown;

export type UpdateCallQueueData = {
  body?: {
    /**
     * Description for the Call Queue.
     */
    description?: string;
    /**
     * Phone extension number for the site.<br>
     *
     * If a site code has been [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number instead of the original extension number.
     */
    extension_number?: number;
    /**
     * Name of the Call Queue.
     */
    name?: string;
    /**
     * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.
     */
    site_id?: string;
    /**
     * Status of the Call Queue. Allowed values:<br>
     * `active`<br>
     * `inactive`
     */
    status?: 'active' | 'inactive';
    /**
     * [Timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Call Queue.
     */
    timezone?: string;
  };
  path: {
    /**
     * Unique Identifier of the Call Queue.
     */
    callQueueId: string;
  };
};

export type UpdateCallQueueResponse = unknown;

export type UpdateCallQueueError = unknown;

export type ChangeCallQueueManagerData = {
  body?: {
    /**
     * Unique Identifier (userId) or email address of the user who will be the new call queue manager.
     */
    member_id?: string;
  };
  path: {
    /**
     * Unique Identifier of the Call Queue.
     */
    callQueueId: string;
  };
};

export type ChangeCallQueueManagerResponse = unknown;

export type ChangeCallQueueManagerError = unknown;

export type UnassignAllMembersData = {
  path: {
    callQueueId: string;
  };
};

export type UnassignAllMembersResponse = unknown;

export type UnassignAllMembersError = unknown;

export type AddMembersToCallQueueData = {
  body?: {
    /**
     * A maximum of 10 members can be added at a time.
     */
    members?: {
      /**
       * Array of one or more Common Area Phone Ids of the Common Area Phone(s) that you would like to add to the Call Queue.
       */
      common_area_phone_ids?: Array<string>;
      users?: Array<{
        /**
         * Email address of the user.
         */
        email?: string;
        /**
         * User ID: Unique Identifier of the user.
         */
        id?: string;
      }>;
    };
  };
  path: {
    /**
     * Unique Identifier of the Call Queue.
     */
    callQueueId: string;
  };
};

export type AddMembersToCallQueueResponse = {
  [key: string]: unknown;
};

export type AddMembersToCallQueueError = unknown;

export type UnassignMemberFromCallQueueData = {
  path: {
    /**
     * Unique Identifier of the Call Queue from which the member needs to be unassigned.
     */
    callQueueId: string;
    /**
     * Unique Identifier of the member who needs to be unassigned.
     */
    memberId: string;
  };
};

export type UnassignMemberFromCallQueueResponse = unknown;

export type UnassignMemberFromCallQueueError = unknown;

export type UnassignAphoneNumCallQueueData = {
  path: {
    /**
     * Unique Identifier of the Call Queue. This can be retrieved from List Call Queues API.
     */
    callQueueId: string;
  };
};

export type UnassignAphoneNumCallQueueResponse = {
  [key: string]: unknown;
};

export type UnassignAphoneNumCallQueueError = unknown;

export type AssignPhoneToCallQueueData = {
  body?: {
    /**
     * Provide either the `id` or the `number` field. Only a max of 5 numbers can be assigned to a call queue at a time.
     */
    phone_numbers?: Array<{
      /**
       * Unique Identifier of the phone number.
       */
      id?: string;
      /**
       * Phone number.
       */
      number?: string;
    }>;
  };
  path: {
    /**
     * Unique Identifier of the Call Queue.
     */
    callQueueId: string;
  };
};

export type AssignPhoneToCallQueueResponse = {
  [key: string]: unknown;
};

export type AssignPhoneToCallQueueError = unknown;

export type UnAssignPhoneNumCallQueueData = {
  path: {
    /**
     * Unique Identifier of the Call Queue. This can be retrieved from the List Call Queues API.
     */
    callQueueId: string;
    /**
     * Unique Identifier of the Phone Number.
     */
    phoneNumberId: string;
  };
};

export type UnAssignPhoneNumCallQueueResponse = {
  [key: string]: unknown;
};

export type UnAssignPhoneNumCallQueueError = unknown;

export type GetCallQueueRecordingsData = {
  path: {
    /**
     * Unique Identifier of the Call Queue.
     */
    callQueueId: string;
  };
  query?: {
    /**
     * Start date (within a 6 month range).
     */
    from?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date (within a 6 month range).
     */
    to?: string;
  };
};

export type GetCallQueueRecordingsResponse = {
  /**
   * Start date.
   */
  from?: string;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  recordings?: Array<{
    /**
     * Contact name of the callee.
     */
    callee_name?: string;
    /**
     * Name of the callee.
     */
    callee_number?: string;
    /**
     * Phone number type of the callee.<br>`1`- Internal<br>`2`- External
     */
    callee_number_type?: string;
    /**
     * Name of the caller.
     */
    caller_name?: string;
    /**
     * Phone number of the caller.
     */
    caller_number?: string;
    /**
     * Phone number type of the caller.<br>`1`- Internal<br>`2`- External
     */
    caller_number_type?: string;
    /**
     * Date of the recording.
     */
    date_time?: string;
    /**
     * Direction of call. The value of this field can be either `outbound` or `inbound`.
     */
    direction?: string;
    /**
     * URL using which the recording can be downloaded.
     */
    download_url?: string;
    /**
     * Duration of the call.
     */
    duration?: number;
    /**
     * Unique Identifier of the recording.
     */
    id?: string;
  }>;
  /**
   * End date.
   */
  to?: string;
  /**
   * The total number of records returned for this API call.
   */
  total_records?: string;
};

export type GetCallQueueRecordingsError = unknown;

export type ListCallingPlansResponse = {
  calling_plans?: Array<{
    /**
     * Total number of plan used.
     */
    assigned?: number;
    /**
     * Remaining number of calling plans that can be assigned.
     */
    available?: number;
    /**
     * Name of the plan.
     */
    name?: string;
    /**
     * Total number of plan subscriptions bought.
     */
    subscribed?: number;
    /**
     * Plan type. Refer to the Plan Number section [here](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
     */
    type?: number;
  }>;
};

export type ListCallingPlansError = unknown;

export type ListCommonAreaPhonesData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The total number of records returned from a single API call.
     */
    page_size?: number;
  };
};

export type ListCommonAreaPhonesResponse = {
  common_area_phones?: Array<{
    calling_plans?: Array<{
      /**
       * Plan name.
       */
      name?: string;
      /**
       * [Plan Number](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
       */
      type?: string;
    }>;
    /**
     * Type of device (manufacturer name + model name). Refer to the table here for a list of [supported devices](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice).
     */
    device_type?: string;
    /**
     * Display name of the common area phone.
     */
    display_name?: string;
    /**
     * Unique Identifier of the common area phone.
     */
    id?: string;
    /**
     *  Mac address or serial number.
     */
    mac_address?: string;
    phone_numbers?: Array<{
      /**
       * Unique Identifier of the Phone number.
       */
      id?: string;
      /**
       * Phone number.
       */
      number?: string;
      /**
       * Phone number source. The value can be either `internal` or `external`.
       */
      source?: 'internal' | 'external';
    }>;
    site?: {
      /**
       * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.
       */
      id?: string;
      /**
       * Name of the site.
       */
      name?: string;
    };
    /**
     * Status of the common area phone. It can be either `online` or `offline`.
     */
    status?: string;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * Total number of records returned from a single API call.
   */
  page_size?: number;
  /**
   * Total number of records found for this query.
   */
  total_records?: number;
};

export type ListCommonAreaPhonesError = unknown;

export type AddCommonAreaPhoneData = {
  body?: {
    /**
     * Description for the common area phone.
     */
    description?: string;
    /**
     * Display name of the Common area phone.
     */
    display_name: string;
    /**
     * Extension number assigned to the common area phone. If site code is enabled, provide the short extension number instead.
     */
    extension_number: number;
    /**
     * Mac Address (serial number) of the common area desk phone. These examples show the formats supported: `64-16-7f-37-90-92` or `64167f379092`
     */
    mac_address: string;
    /**
     * Device Model name. Refer to the "Model Name" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice) table.
     */
    model?: string;
    /**
     * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672). This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites) API.
     */
    site_id?: string;
    /**
     * [Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists) for the common area phone.
     */
    time_zone?: string;
    /**
     * Phone device manufacturer name. Refer to the "Manufacturer Name" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice) table.
     */
    type: string;
  };
};

export type AddCommonAreaPhoneResponse = {
  /**
   * Display name of the common area phone.
   */
  display_name?: string;
  /**
   * Unique Identifier of the common area phone.
   */
  id?: string;
};

export type AddCommonAreaPhoneError = unknown;

export type DeleteCommonAreaPhoneData = {
  path: {
    /**
     * Unique Identifier of the common area phone.
     */
    commonAreaPhoneId: string;
  };
};

export type DeleteCommonAreaPhoneResponse = unknown;

export type DeleteCommonAreaPhoneError = unknown;

export type GetAcommonAreaPhoneData = {
  path: {
    /**
     * Unique Identifier of the Common Area Phone. Use the unique identifier or the Mac address of the common area phone. The Mac address can be hyphenated (00-04-f2-5e-ec-3c) or not hyphenated (0004f25eec3c). You can retrieved this from the [List Common Area Phones API](https://marketplace.zoom.us/docs/api-reference/zoom-api/common-area-phones/listcommonareaphones).
     */
    commonAreaPhoneId: string;
  };
};

export type GetAcommonAreaPhoneResponse = {
  /**
   * Type of device (manufacturer name + model name).
   */
  device_type?: string;
  /**
   * Unique Identifier of the common area phone.
   */
  id?: string;
  /**
   *  Mac address or serial number.
   */
  mac_address?: string;
  /**
   * Display name of the common area phone.
   */
  name?: string;
  /**
   * Provisioning information of the common area phone.
   */
  provision?: {
    /**
     * SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device.
     */
    sip_accounts?: Array<{
      /**
       * Authorization ID of the SIP account provided in the provisioning process.
       */
      authorization_id?: string;
      /**
       * Outbound proxy provided in the provisioning process.
       */
      outbound_proxy?: string;
      /**
       * Password entered during the  provisioning process.
       */
      password?: string;
      /**
       * SIP Domain provided in the provisioning process.<br>
       *
       */
      sip_domain?: string;
      /**
       * User name of the SIP account provided in the provisioning process.
       */
      user_name?: string;
    }>;
    /**
     * [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
     *
     * * `ztp` : Zero touch provisioning.
     * * `assisted`: Assisted provisioning.
     * * `manual`: Manual provisioning.
     *
     *
     */
    type?: 'assisted' | 'ztp' | 'manual';
    /**
     * Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type.
     */
    url?: string;
  };
  site?: {
    /**
     * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.
     */
    id?: string;
    /**
     * Name of the site.
     */
    name?: string;
  };
  /**
   * Status of the common area phone. It can be either `online` or `offline`.
   */
  status?: string;
};

export type GetAcommonAreaPhoneError = unknown;

export type UpdateCommonAreaPhoneData = {
  body?: {
    /**
     * Display name of the common area phone.
     */
    display_name?: string;
    /**
     * Extension number of the phone. If site code is enabled, provide short extension number instead.
     */
    extension_number?: number;
    /**
     *  Mac address or serial number of the device. Examples of supported format: "64-16-7f-37-90-92" or "64167f379092".
     */
    mac_address?: string;
    /**
     * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.
     */
    site_id?: string;
  };
  path: {
    commonAreaPhoneId: string;
  };
};

export type UpdateCommonAreaPhoneResponse = unknown;

export type UpdateCommonAreaPhoneError = unknown;

export type ChangeMainCompanyNumberData = {
  body?: {
    /**
     * Provide either the unique identifier of the phone number (id) or the phone number itself in e164 format (e.g: +199955500123).
     */
    phone_number?: string;
  };
};

export type ChangeMainCompanyNumberResponse = unknown;

export type ChangeMainCompanyNumberError = unknown;

export type ListPhoneDevicesData = {
  query: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * State of the device. The value should be either `assigned` to list devices that have been assigned to user(s) or `unassigned` to list devices that have not yet been assigned to any user in the Zoom account.
     */
    type: 'assigned' | 'unassigned';
  };
};

export type ListPhoneDevicesResponse = {
  devices?: Array<{
    assignee?: {
      /**
       * Extension number of the Zoom Phone used by the user.
       */
      extension_number?: number;
      /**
       * User ID of the user to whom the device has been assigned.
       */
      id?: string;
      /**
       * Name of the user.
       */
      name?: string;
    };
    /**
     * Includes manufacturer name and the model name.
     */
    device_type?: string;
    /**
     * Display name of the device.
     */
    display_name?: string;
    /**
     * Device ID - Unique Identifier of the Device.
     */
    id?: string;
    /**
     * MAC address or serial number of the device.
     */
    mac_address?: string;
    site?: {
      /**
       * The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.
       */
      id?: string;
      /**
       * Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).
       */
      name?: string;
    };
    /**
     * Status of the device. The value is either `online` or `offline`.
     */
    status?: 'online' | 'offline';
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of records found for the query across all pages.
   */
  total_records?: string;
};

export type ListPhoneDevicesError = unknown;

export type AddPhoneDeviceData = {
  body?: {
    /**
     * User ID or email address of the user to whom this device is to be assigned. The User ID and the email of the user can be retrieved using the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.
     */
    assigned_to?: string;
    /**
     * Display name of the desk phone.
     */
    display_name: string;
    /**
     * The MAC address of the desk phone.<br>
     * Note: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC address.
     */
    mac_address: string;
    /**
     * Model name of the device.
     */
    model?: string;
    /**
     * Manufacturer (brand) name of the device.
     */
    type?: string;
  };
};

export type AddPhoneDeviceResponse = unknown;

export type AddPhoneDeviceError = unknown;

export type DeleteAdeviceData = {
  path: {
    /**
     * Unique Identifier of the device.
     */
    deviceId: string;
  };
};

export type DeleteAdeviceResponse = unknown;

export type DeleteAdeviceError = unknown;

export type GetAdeviceData = {
  path: {
    /**
     * Unique Identifier of the device.
     */
    deviceId: string;
  };
};

export type GetAdeviceResponse = {
  /**
   * User to whom the device has been assigned.
   */
  assignee?: {
    /**
     * Extension number of the Zoom Phone used by the user.
     */
    extension_number?: number;
    /**
     * User ID of the user to whom the device has been assigned.
     */
    id?: string;
    /**
     * Name of the user.
     */
    name?: string;
  };
  /**
   * Includes manufacturer name and the model name.
   */
  device_type?: string;
  /**
   * Display name of the device.
   */
  display_name?: string;
  /**
   * Device ID - Unique Identifier of the Device.
   */
  id?: string;
  /**
   * MAC address or serial number of the device.
   */
  mac_address?: string;
  /**
   * Provisioning information of a device.
   */
  provision?: {
    /**
     * SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device.
     */
    sip_accounts?: Array<{
      /**
       * Authorization ID of the SIP account provided in the provisioning process.
       */
      authorization_id?: string;
      /**
       * Outbound proxy provided in the provisioning process.
       */
      outbound_proxy?: string;
      /**
       * Password entered during the  provisioning process.
       */
      password?: string;
      /**
       * Return additional provisioning information with generic device SIP credentials.
       */
      shared_line?: {
        /**
         * Alias.
         */
        alias?: string;
        /**
         * Line subscription.
         */
        line_subscription?: {
          /**
           * Display name.
           */
          display_name?: string;
          /**
           * Extension number.
           */
          extension_number?: number;
          /**
           * Phone number.
           */
          phone_number?: string;
        };
        /**
         * Outbound caller ID.
         */
        outbound_caller_id?: string;
      };
      /**
       * SIP Domain provided in the provisioning process.<br>
       *
       */
      sip_domain?: string;
      /**
       * User name of the SIP account provided in the provisioning process.
       */
      user_name?: string;
    }>;
    /**
     * [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
     *
     * * `ztp` : Zero touch provisioning.
     * * `assisted`: Assisted provisioning.
     * * `manual`: Manual provisioning.
     *
     *
     */
    type?: 'assisted' | 'ztp' | 'manual';
    /**
     * Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type.
     */
    url?: string;
  };
  site?: {
    /**
     * The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.
     */
    id?: string;
    /**
     * Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).
     */
    name?: string;
  };
  /**
   * Status of the device. The value is either `online` or `offline`.
   */
  status?: 'online' | 'offline';
};

export type GetAdeviceError = unknown;

export type UpdateAdeviceData = {
  body?: {
    /**
     * User ID or email address of the user to whom this device is to be assigned. The User ID and the email of the user can be retrieved using the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.
     */
    assigned_to?: string;
    /**
     * Display name of the desk phone.
     */
    display_name?: string;
    /**
     * The MAC address of the desk phone.<br>
     * Note: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC address.
     */
    mac_address?: string;
  };
  path: {
    /**
     * Unique Identifier of the Device.
     */
    deviceId: string;
  };
};

export type UpdateAdeviceResponse = unknown;

export type UpdateAdeviceError = unknown;

export type ListCallLogsMetricsData = {
  query?: {
    /**
     * Start date for the report in `yyyy-mm-dd` format. Specify a 30 day range using the `from` and `to` parameters as the response provides a maximum of a month worth of data per API request.
     */
    from?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single call.
     */
    page_size?: number;
    /**
     * Filter call logs by voice quality. Zoom uses MOS of 3.5 as a general baseline to categorize calls by call quality. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality. <br><br>The value of this field can be one of the following:<br>
     * * `good`: Retrieve call logs of the call(s) with good quality of voice.<br>
     * * `bad`: Retrieve call logs of the call(s) with good quality of voice.<br>
     * * `all`: Retrieve all call logs without filtering by voice quality.
     *
     *
     *
     *
     */
    quality_type?: string;
    /**
     * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site.
     */
    site_id?: string;
    /**
     * End date for the report in `yyyy-mm-dd` format.
     */
    to?: string;
  };
};

export type ListCallLogsMetricsResponse = {
  /**
   * Call logs.
   */
  call_logs?: Array<{
    /**
     * Unique identifier of the phone call.
     */
    call_id?: string;
    /**
     * Callee object contains information of the calee.
     */
    callee?: {
      /**
       * Audio codec.
       */
      codec?: string;
      /**
       * Device type.
       */
      device_type?: string;
      /**
       * Full extension number of the callee.
       */
      extension_number?: string;
      /**
       * Headset used for the call by the callee.
       */
      headset?: string;
      /**
       * ISP.
       */
      isp?: string;
      /**
       * Microphone used for the call by the callee.
       */
      microphone?: string;
      /**
       * Phone number of the callee in E164 format.
       */
      phone_number?: string;
      /**
       * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).
       */
      site_id?: string;
    };
    /**
     * Caller object contains information of the caller.
     */
    caller?: {
      /**
       * Audio codec.
       */
      codec?: string;
      /**
       * Device type.
       */
      device_type?: string;
      /**
       * Full extension number of the caller.
       */
      extension_number?: string;
      /**
       * Headset used for the call by the caller.
       */
      headset?: string;
      /**
       * ISP.
       */
      isp?: string;
      /**
       * Microphone used for the call by the caller.
       */
      microphone?: string;
      /**
       * Phone number of the caller in E164 format.
       */
      phone_number?: string;
      /**
       * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).
       */
      site_id?: string;
    };
    /**
     * Date and time at which the call started.
     */
    date_time?: string;
    /**
     * Direction of the call. The value of this field can be either `internal` or `outbound`.
     */
    direction?: string;
    /**
     * Duration of the call in seconds.
     */
    duration?: number;
    /**
     * Zoom uses Mean Opinion Score (MOS) as the main measurement to report on voice quality. MOS measures voice quality on a scale of 1 to 5. A score of 1 indicates unacceptable voice quality for all users. A score of 5 is the best voice quality.
     */
    mos?: string;
  }>;
  /**
   * Start date for the report in `yyyy-mm-dd` format.
   */
  from?: string;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single call.
   */
  page_size?: number;
  /**
   * End date for the report in `yyyy-mm-dd` format.
   */
  to?: string;
  /**
   * The total number of records available across all pages.
   */
  total_records?: number;
};

export type ListCallLogsMetricsError = unknown;

export type GetCallQoSData = {
  path: {
    /**
     * Unique identifier of the call.
     */
    callId: string;
  };
};

export type GetCallQoSResponse = {
  /**
   * Unique identifier of the phone call.
   */
  call_id?: string;
  callee_qos?: {
    /**
     * QoS received by the callee.
     */
    receiving?: Array<{
      /**
       * Date and time at which the QoS was received.
       */
      date_time?: string;
      qos?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second in kbps that can be transmitted along a digital network.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
        /**
         * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
         */
        mos?: string;
        /**
         * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
         */
        network_delay?: string;
      };
    }>;
    /**
     * QoS sent by the callee.
     */
    sending?: Array<{
      /**
       * Date and time at which the QoS was delivered.
       */
      date_time?: string;
      qos?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second expressed in kbps that can be transmitted along a digital network.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
        /**
         * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
         */
        mos?: string;
        /**
         * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
         */
        network_delay?: string;
      };
    }>;
  };
  /**
   * Quality of Service object that represents the call quality data of the caller.
   */
  caller_qos?: {
    /**
     * QoS received by the caller.
     */
    receiving?: Array<{
      /**
       * Date and time at which the QoS was received.
       */
      date_time?: string;
      qos?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second in kbps that can be transmitted along a digital network.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
        /**
         * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
         */
        mos?: string;
        /**
         * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
         */
        network_delay?: string;
      };
    }>;
    /**
     * QoS sent by the caller.
     */
    sending?: Array<{
      /**
       * Date and time at which the QoS was delivered.
       */
      date_time?: string;
      qos?: {
        /**
         * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
         */
        avg_loss?: string;
        /**
         * The number of bits per second in kbps that can be transmitted along a digital network.
         */
        bitrate?: string;
        /**
         * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
         */
        jitter?: string;
        /**
         * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
         */
        max_loss?: string;
        /**
         * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
         */
        mos?: string;
        /**
         * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
         */
        network_delay?: string;
      };
    }>;
  };
};

export type GetCallQoSError = unknown;

export type GetCallLogMetricsDetailsData = {
  path: {
    /**
     * Unique identifier of the phone call. The value of this field can be retrieved from [List Call Logs]() API.
     */
    call_id: string;
  };
};

export type GetCallLogMetricsDetailsResponse = {
  /**
   * Unique identifier of the phone call.
   */
  call_id?: string;
  /**
   * Callee object contains information of the calee.
   */
  callee?: {
    /**
     * Audio codec.
     */
    codec?: string;
    /**
     * Device type.
     */
    device_type?: string;
    /**
     * Full extension number of the callee.
     */
    extension_number?: string;
    /**
     * Headset used for the call by the callee.
     */
    headset?: string;
    /**
     * ISP.
     */
    isp?: string;
    /**
     * Microphone used for the call by the callee.
     */
    microphone?: string;
    /**
     * Phone number of the callee in E164 format.
     */
    phone_number?: string;
    /**
     * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).
     */
    site_id?: string;
  };
  /**
   * Caller object contains information of the caller.
   */
  caller?: {
    /**
     * Audio codec.
     */
    codec?: string;
    /**
     * Device type.
     */
    device_type?: string;
    /**
     * Full extension number of the caller.
     */
    extension_number?: string;
    /**
     * Headset used for the call by the caller.
     */
    headset?: string;
    /**
     * ISP.
     */
    isp?: string;
    /**
     * Microphone used for the call by the caller.
     */
    microphone?: string;
    /**
     * Phone number of the caller in E164 format.
     */
    phone_number?: string;
    /**
     * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).
     */
    site_id?: string;
  };
  /**
   * Date and time at which the call started.
   */
  date_time?: string;
  /**
   * Direction of the call. The value of this field can be either `internal` or `outbound`.
   */
  direction?: string;
  /**
   * Duration of the call in seconds.
   */
  duration?: number;
  /**
   * Zoom uses Mean Opinion Score (MOS) as the main measurement to report on voice quality. MOS measures voice quality on a scale of 1 to 5. A score of 1 indicates unacceptable voice quality for all users. A score of 5 is the best voice quality.
   */
  mos?: string;
};

export type GetCallLogMetricsDetailsError = unknown;

export type ListAccountPhoneNumbersData = {
  query?: {
    /**
     * The type of assignee to whom the number is assigned. The value can be one of the following:<br>
     * `user`<br> `callQueue`<br> `autoReceptionist`<br>
     * `commonAreaPhone`
     */
    extension_type?: 'user' | 'callQueue' | 'autoReceptionist' | 'commonAreaPhone';
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The type of phone number. The value can be either `toll` or `tollfree`.
     */
    number_type?: 'toll' | 'tollfree';
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * Include or exclude pending numbers in the response. The value can be either `true` or `false`.
     */
    pending_numbers?: boolean;
    /**
     * Unique identifier of the site. Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by a specific phone site. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) or [Adding a site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15) for details.
     */
    site_id?: string;
    /**
     * Query response by number assignment. The value can be one of the following:
     * <br>
     * `assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. <br>`unassigned`: The number is not assigned to anyone.<br>
     * `all`: Include both assigned and unassigned numbers in the response.<br>
     * `byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response.
     */
    type?: 'assigned' | 'unassigned' | 'all';
  };
};

export type ListAccountPhoneNumbersResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  phone_numbers?: Array<{
    assignee?: {
      /**
       * Extension number of the Phone.
       */
      extension_number?: number;
      /**
       * Unique Identifier of the user to whom the number has been assigned.
       */
      id?: string;
      /**
       * Name of the user to whom the number has been assigned.
       */
      name?: string;
      /**
       * Indicates who the phone number belongs to.<br>
       * `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
       * `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
       */
      type?: 'user' | 'callQueue' | 'autoReceptionist' | 'commonAreaPhone';
    };
    /**
     * The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.
     */
    capability?: Array<string>;
    /**
     * Displayed when the `type` request parameter is `byoc`.
     */
    carrier?: {
      /**
       * The carrier code.
       */
      code?: string;
      /**
       * Name of the carrier to which the phone number is assigned.
       */
      name?: string;
    };
    /**
     * The display name for the phone number.
     */
    display_name?: string;
    /**
     * Unique Identifier of the Phone Number.
     */
    id?: string;
    /**
     * Location (city, state and country) where the Phone number is assigned.
     */
    location?: string;
    /**
     * Phone number in E164 format.
     */
    number?: string;
    /**
     * The type of number. Values can be one of the following:<br>
     * `toll`, `tollfree`
     */
    number_type?: 'toll' | 'tollfree';
    /**
     * Displayed when the `type` request parameter is `byoc`.
     */
    sip_group?: {
      /**
       * The ID of the SIP group. See the **Creating SIP groups** section in [Creating a shared directory of external contacts](https://support.zoom.us/hc/en-us/articles/360037050092-Creating-a-shared-directory-of-external-contacts) for details.
       */
      id?: string;
      /**
       * Name of the SIP group for which the phone number is assigned.
       */
      name?: string;
    };
    site?: {
      /**
       * Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
       */
      id?: string;
      /**
       * Name of the site where the phone number is assigned.
       */
      name?: string;
    };
    /**
     * Source of phone number.
     */
    source?: 'internal' | 'external';
    /**
     * Status of the number.
     */
    status?: 'pending' | 'available';
  }>;
  /**
   * The total number of records returned.
   */
  total_records?: number;
};

export type ListAccountPhoneNumbersError = unknown;

export type GetPhoneNumberDetailsData = {
  path: {
    /**
     * Unique Identifier of the Phone Number. This can be retrieved from the List Phone Numbers API.
     */
    numberId: string;
  };
};

export type GetPhoneNumberDetailsResponse = {
  assignee?: {
    /**
     * Extension number of the Phone.
     */
    extension_number?: number;
    /**
     * Unique Identifier of the user to whom the number has been assigned.
     */
    id?: string;
    /**
     * Name of the user to whom the number has been assigned.
     */
    name?: string;
    /**
     * Indicates who the phone number belongs to.<br>
     * `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).<br>
     * `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
     */
    type?: 'user' | 'callQueue' | 'autoReceptionist' | 'commonAreaPhone';
  };
  /**
   * The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.
   */
  capability?: Array<string>;
  /**
   * The display name for the phone number.
   */
  display_name?: string;
  /**
   * Unique Identifier of the Phone Number.
   */
  id?: string;
  /**
   * Location (city, state and country) where the Phone number is assigned.
   */
  location?: string;
  /**
   * Phone number in E164 format.
   */
  number?: string;
  /**
   * The type of number. Values can be one of the following:<br>
   * `toll`, `tollfree`
   */
  number_type?: 'toll' | 'tollfree';
  site?: {
    /**
     * Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
     */
    id?: string;
    /**
     * Name of the site where the phone number is assigned.
     */
    name?: string;
  };
  /**
   * Source of phone number.
   */
  source?: 'internal' | 'external';
  /**
   * Status of the number.
   */
  status?: 'pending' | 'available';
};

export type GetPhoneNumberDetailsError = unknown;

export type UpdatePhoneNumberDetailsData = {
  body?: {
    /**
     * Phone number capability. Values: `outgoing` or `incoming`. Add one or both.
     */
    capability?: Array<string>;
    /**
     * Phone number display name.
     */
    display_name?: string;
  };
  path: {
    /**
     * Phone number ID.
     */
    numberId: string;
  };
};

export type UpdatePhoneNumberDetailsResponse = unknown;

export type UpdatePhoneNumberDetailsError = unknown;

export type GetPhoneRecordingsData = {
  query?: {
    /**
     * Start date and time in **yyyy-mm-dd** format or **yyyy-MM-dd’T’HH:mm:ss’Z’** format. The date range defined by the from and to parameters should only be one month as the report includes only one month worth of data at once.
     *
     */
    from?: string;
    /**
     * The current page number of returned records.
     */
    next_page_token?: string;
    /**
     * The owner type. The allowed values are null, `user`, or `callQueue`. The default is null. If null, returns all owner types.
     *
     */
    owner_type?: string;
    /**
     * The number of records returned within a single API call. The default is **30**, and the maximum is **100**.
     */
    page_size?: number;
    /**
     * The recording type. The allowed values are null, `OnDemand`, or `Automatic`. The default is null. If null, returns all recording types.
     *
     */
    recording_type?: string;
    /**
     * The site ID. The default is `All sites`.
     */
    site_id?: string;
    /**
     * End date and time in **yyyy-mm-dd** format or **yyyy-MM-dd’T’HH:mm:ss’Z’** format, the same formats supported by the `from` parameter.
     *
     *
     */
    to?: string;
  };
};

export type GetPhoneRecordingsResponse = {
  /**
   * The current page number of returned records.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call. The default is **30**, and the maximum is **100**.
   */
  page_size?: number;
  recordings?: Array<{
    /**
     * The contact name of the callee.
     */
    callee_name?: string;
    /**
     * The phone number of the callee.
     */
    callee_number?: string;
    /**
     * Specifies the callee' number type.<br>
     * `1` - internal<br>
     * `2` - external<br>
     */
    callee_number_type?: 1 | 2;
    /**
     * The contact name of the caller.
     */
    caller_name?: string;
    /**
     * The phone number associated to the caller.
     */
    caller_number?: string;
    /**
     * Specifies the type of the caller number.<br>
     *
     * `1` - internal<br>
     * `2` - external<br>
     */
    caller_number_type?: 1 | 2;
    /**
     * The date and time when the recording was received.
     */
    date_time?: string;
    /**
     * The direction of the call. Values: `inbound` or `outbound`.
     */
    direction?: 'inbound' | 'outbound';
    /**
     * The download URL for the recording.
     */
    download_url?: string;
    /**
     * The duration of the recording.
     */
    duration?: number;
    /**
     * Unique identifier of the recording.
     */
    id?: string;
    /**
     * The owner of the recording.
     */
    owner?: {
      /**
       * The extension number associated to the call number.
       */
      extension_number?: string;
      /**
       * The owner's ID.
       */
      id?: string;
      /**
       * Name of the owner.
       */
      name?: string;
      /**
       * The owner type: `user` or `call queue`.
       */
      type?: 'user' | 'call queue';
    };
    /**
     * The recording type. The allowed values are `OnDemand` or `Automatic`.
     */
    recording_type?: string;
    site?: {
      /**
       * The site ID.
       */
      id?: string;
      /**
       * The site name.
       */
      name?: string;
    };
  }>;
  /**
   * Total number of records returned.
   */
  total_records?: number;
};

export type GetPhoneRecordingsError = unknown;

export type GetPsOperationLogsData = {
  query?: {
    /**
     * Filter the response by the category of the action performed. By default, the value of this field is "all" and thus, the response will include log of all operations for the defined period.<br><br>To only include response for a specific category type, provide a value for `category_type` from this [table](http://marketplace.zoom.us/docs/phone-operation-categories ).
     */
    category_type?: string;
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report provides only one month worth of data per API request.
     */
    from?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date in 'yyyy-mm-dd' format.
     */
    to?: string;
  };
};

export type GetPsOperationLogsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The amount of records returns within a single API call.
   */
  page_size?: number;
} & {
  /**
   * Array of operation log objects
   */
  operation_logs?: Array<{
    /**
     * Action that was performed.
     */
    action?: string;
    /**
     * Category type of the operation.
     */
    category_type?: string;
    /**
     * Operation detail.
     */
    operation_detail?: string;
    /**
     * The user who performed the operation.
     */
    operator?: string;
    /**
     * The time at which the operation was performed.
     */
    time?: string;
  }>;
};

export type GetPsOperationLogsError = unknown;

export type ListSettingTemplatesData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * Number of records returns within a single API call.
     */
    page_size?: number;
    /**
     * Unique identifier of the site. This field is required only if multiple sites have been enabled.  of the site. Required only when multiple sites are enabled. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) for details. If this is not provided, the response lists the account level setting templates.
     */
    site_id?: string;
  };
};

export type ListSettingTemplatesResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call. The default is **30** and the maximum is **300**.
   */
  page_size?: number;
  templates?: Array<{
    /**
     * Template description.
     */
    description?: string;
    /**
     * Unique identifier of the template.
     */
    id?: string;
    /**
     * Template name.
     */
    name?: string;
    /**
     * Template type.<br>
     * The value of this field can be one of the following:<br>
     * * `user`<br>
     * * `group`<br>
     * * `autReceptionist`<br>
     * * `commonArea`<br>
     * * `zr`<br>
     * * `interop`<br>
     */
    type?: 'user' | 'group' | 'autReceptionist' | 'commonArea' | 'zr' | 'interop';
  }>;
  /**
   * The total number of records returned.
   */
  total_records?: number;
};

export type ListSettingTemplatesError = unknown;

export type AddSettingTemplateData = {
  body?: {
    /**
     * A description of the template.
     */
    description?: string;
    /**
     * The name of the template.
     */
    name: string;
    /**
     * Unique identifier of the site. Required only when multiple sites are enabled. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) for details.
     */
    site_id?: string;
    /**
     * The type of template. Values include `user`, `group`, `autoReceptionist`, `commonarea`, or `interop`.
     */
    type: 'user' | 'group' | 'autoReceptionist' | 'commonarea' | 'interop';
  };
};

export type AddSettingTemplateResponse = {
  /**
   * Template description.
   */
  description?: string;
  /**
   * Template ID.
   */
  id?: string;
  /**
   * Template name.
   */
  name?: string;
  /**
   * The type of template. Values include: `user`, `group`, `autoReceptionist`, `commonArea`, `zr`, or `interop`.
   */
  type?: string;
};

export type AddSettingTemplateError = unknown;

export type GetSettingTemplateData = {
  path: {
    /**
     * Unique identifier of the template.
     */
    templateId: string;
  };
  query?: {
    /**
     * Provide the name of the field to use to filter the response. For example, if you provide "description" as the value of the field, you will get a response similar to the following: {“description”: “template description”}.
     */
    custom_query_fields?: string;
  };
};

export type GetSettingTemplateResponse = {
  /**
   * The description of the template.
   */
  description?: string;
  /**
   * Specify the template ID.
   */
  id?: string;
  /**
   * Specify the name of the template.
   */
  name?: string;
  policy?: {
    ad_hoc_call_recording?: {
      /**
       * Allow current extension to record and save calls in the cloud.
       */
      enable?: boolean;
      /**
       * Play a prompt to call participants when the recording has started.
       */
      recording_start_prompt?: boolean;
      /**
       * Allow call recording transcription.
       */
      recording_transcription?: boolean;
    };
    auto_call_recording?: {
      /**
       * Enable automatic call recording.
       */
      enable?: boolean;
      /**
       * Values: inbound, outbound, both.
       */
      recording_calls?: string;
      /**
       * Play a prompt to call participants when the recording has started.
       */
      recording_start_prompt?: boolean;
      /**
       * Allow call recording transcription.
       */
      recording_transcription?: boolean;
    };
    sms?: {
      /**
       * Allow user to send and receive messages.
       */
      enable?: boolean;
      international_sms?: boolean;
    };
    voicemail?: {
      /**
       * Allow voicemail transcription.
       */
      allow_transcription?: boolean;
      /**
       * Allow current extension to access, receive, or share voicemail.
       */
      enable?: boolean;
    };
  };
  profile?: {
    /**
     * The area code from which the phone account was created.
     */
    area_code?: string;
    /**
     * Name of the country where the template was created.
     */
    country?: string;
  };
  /**
   * The type of template being queried. Values: `user`, `group`, `auto receptionist` `common area`,`zr`, `interop`.
   */
  type?: 'user' | 'group' | 'autoReceptionist' | 'commonArea' | 'zr' | 'interop';
  user_settings?: {
    /**
     * Audio prompt language code.<br> American English: `en-US`<br>
     * British English: `en-GB`<br>
     * Español americano: `es-US`<br>
     * Français canadien: `fr-CA`<br>
     * Dansk: `da-DK`<br>
     * Deutsch: `de-DE`<br>
     * Español: `es-ES`<br>
     * Français: `fr-FR`<br>
     * Italiano: `it-IT`<br>
     * Nederlands: `nl-NL`<br>
     * Portugues portugal: `pt-PT`<br>
     * Japanese: `ja-JP`<br>
     * Korean: `ko-KO`<br>
     * Portugues brasil: `pt-BR`<br>
     * Chinese: `zh-CN`<br>
     * Taiwanese: `zh-TW`<br>
     */
    audio_prompt_language?: string;
    /**
     * Block Calls without Caller ID.
     */
    block_calls_without_caller_id?: boolean;
    call_handling?: {
      business_hours?: {
        /**
         * When a call is not answered:<br>
         * 0-Forward to voicemail;<br>
         * 1-Play a message, then disconnect; <br>
         * 9-Disconnect; <br>
         * 26-Forward to External Contacts; <br>
         * 50-Forward to another extension
         */
        business_hour_action?: 0 | 1 | 9 | 26 | 50;
        /**
         * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
         */
        connect_to_operator?: {
          /**
           * Enable connect to operator.
           */
          enable?: boolean;
          /**
           * Phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup.
           */
          id?: string;
          /**
           * Values:<br>
           * 1-user,<br>
           * 2-callQueue, <br>
           * 3-autoReceptionist,<br>
           * 4-commonAreaPhone,<br>
           * 5-zoomRoom, <br>
           * 7-sharedLineGroup
           */
          type?: 'user' | 'zoomRoom' | 'commonAreaPhone' | 'autoReceptionist' | 'callQueue' | 'sharedLineGroup';
        };
        custom_hours?: Array<{
          /**
           * Values:<br>
           * hh:mm
           */
          from?: string;
          /**
           * Values:<br>
           * hh:mm
           */
          to?: string;
          /**
           * Values:<br>
           * 1-24 Hours,<br>
           * 2-customized hours
           */
          type?: 1 | 2;
          /**
           * Values: 1-7 sun-sat
           */
          weekday?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
        }>;
        /**
         * Call Handling Ring Mode:<br>
         * 0-Simultaneous,<br>
         * 1-Sequential
         */
        ring_type?: 0 | 1;
        /**
         * Ringing Duration for Each Device in seconds. Values:<br>
         * 15,20,25,30,35,40,45,50,55,60
         */
        ringing_duration?: 15 | 20 | 25 | 30 | 35 | 40 | 45 | 50 | 55 | 60;
        /**
         * Values:<br>
         * 1-24 Hours, 7 Days a Week;<br>
         * 2-Custom Hours
         */
        type?: 1 | 2;
      };
      close_hours?: {
        /**
         * Action to take when a call is not answered:<br>
         * 0-Forward to voicemail; <br>
         * 1-Play a message, then disconnect; <br>
         * 9-Disconnect; <br>
         * 26-Forward to External Contacts; <br>
         * 50-Forward to another extension
         *
         */
        close_hour_action?: 0 | 1 | 9 | 26 | 50;
        /**
         * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
         */
        connect_to_operator?: {
          enable?: boolean;
          /**
           * Phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup.
           */
          id?: string;
          /**
           * Values:<br>
           * 1-user,<br>
           * 2-callQueue, <br>
           * 3-autoReceptionist,<br>
           * 4-commonAreaPhone,<br>
           * 5-zoomRoom, <br>
           * 7-sharedLineGroup
           */
          type?: 'user' | 'zoomRoom' | 'commonAreaPhone' | 'autoReceptionist' | 'callQueue' | 'sharedLineGroup';
        };
        /**
         * Max Wait Time in seconds. Values:<br>
         * 15,20,25,30,35,40,45,50,55,60
         */
        max_wait_time?: 15 | 20 | 25 | 30 | 35 | 40 | 45 | 50 | 55 | 60;
      };
    };
    desk_phone?: {
      /**
       * Pin code.
       */
      pin_code?: string;
    };
    /**
     * The value of this field can be either `default` or `disable`.
     *
     * * `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).
     *
     * * `disable`: This means that the hold music is disabled.
     */
    hold_music?: 'default' | 'disable';
  };
};

export type GetSettingTemplateError = unknown;

export type UpdateSettingTemplateData = {
  body?: {
    /**
     * The description of the template.
     */
    description?: string;
    /**
     * Specify the name of the template.
     */
    name?: string;
    policy?: {
      ad_hoc_call_recording?: {
        /**
         * Allow current extension to record and save calls in the cloud.
         */
        enable?: boolean;
        /**
         * Play a prompt to call participants when the recording has started.
         */
        recording_start_prompt?: boolean;
        /**
         * Allow call recording transcription.
         */
        recording_transcription?: boolean;
      };
      auto_call_recording?: {
        /**
         * Automatic call recording.
         */
        enable?: boolean;
        /**
         * Values: inbound, outbound, both.
         */
        recording_calls?: 'inbound' | 'outbound' | 'both';
        /**
         * Play a prompt to call participants when the recording has started.
         */
        recording_start_prompt?: boolean;
        /**
         * Allow call recording transcription.
         */
        recording_transcription?: boolean;
      };
      sms?: {
        /**
         * Allow user to send and receive messages.
         */
        enable?: boolean;
        /**
         * Whether or not SMS is international.
         */
        international_sms?: boolean;
      };
      voicemail?: {
        /**
         * Allow voicemail transcription.
         */
        allow_transcription?: boolean;
        /**
         * Allow current extension to access, receive, or share voicemail.
         */
        enable?: boolean;
      };
    };
    profile?: {
      /**
       * The area code from which the phone account was created.
       */
      area_code?: string;
      /**
       * Name of the country where the template was created.
       */
      country?: string;
    };
    user_settings?: {
      /**
       * Audio prompt language code.<br> American English: `en-US`<br>
       * British English: `en-GB`<br>
       * Español americano: `es-US`<br>
       * Français canadien: `fr-CA`<br>
       * Dansk: `da-DK`<br>
       * Deutsch: `de-DE`<br>
       * Español: `es-ES`<br>
       * Français: `fr-FR`<br>
       * Italiano: `it-IT`<br>
       * Nederlands: `nl-NL`<br>
       * Portugues portugal: `pt-PT`<br>
       * Japanese: `ja-JP`<br>
       * Korean: `ko-KO`<br>
       * Portugues brasil: `pt-BR`<br>
       * Chinese: `zh-CN`<br>
       * Taiwanese: `zh-TW`<br>
       */
      audio_prompt_language?: string;
      /**
       * Block Calls without Caller ID.
       */
      block_calls_without_caller_id?: boolean;
      call_handling?: {
        business_hours?: {
          /**
           * When a call is not answered:<br>
           * 0-Forward to voicemail;<br>
           * 1-Play a message, then disconnect; <br>
           * 9-Disconnect; <br>
           * 26-Forward to External Contacts; <br>
           * 50-Forward to another extension
           */
          business_hour_action?: 0 | 1 | 9 | 26 | 50;
          /**
           * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
           */
          connect_to_operator?: {
            /**
             * Enable connect to operator.
             */
            enable?: boolean;
            /**
             * Extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup. This ID is passed along with the `type` if the `close_hour_action` was not set with a value of *26*.
             */
            id?: string;
            /**
             * Values:<br>
             * 1-user,<br>
             * 2-callQueue, <br>
             * 3-autoReceptionist,<br>
             * 4-commonAreaPhone,<br>
             * 5-zoomRoom, <br>
             * 7-sharedLineGroup
             */
            type?: 'user' | 'zoomRoom' | 'commonAreaPhone' | 'autoReceptionist' | 'callQueue' | 'sharedLineGroup';
          };
          custom_hours?: Array<{
            /**
             * Values:<br>
             * hh:mm
             */
            from?: string;
            /**
             * Values:<br>
             * hh:mm
             */
            to?: string;
            /**
             * Values:<br>
             * 1-24 Hours,<br>
             * 2-customized hours
             */
            type?: 1 | 2;
            /**
             * Values: 1-7 sun-sat
             */
            weekday?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
          }>;
          /**
           * Call Handling Ring Mode:<br>
           * 0-Simultaneous,<br>
           * 1-Sequential
           */
          ring_type?: 0 | 1;
          /**
           * Ringing Duration for Each Device, in seconds. Values:<br>
           * 15,20,25,30,35,40,45,50,55,60
           */
          ringing_duration?: 15 | 20 | 25 | 30 | 35 | 40 | 45 | 50 | 55 | 60;
          /**
           * Values:<br>
           * 1-24 Hours, 7 Days a Week;<br>
           * 2-Custom Hours
           */
          type?: 1 | 2;
        };
        close_hours?: {
          /**
           * Action to take when a call is not answered:<br>
           * 0-Forward to voicemail; <br>
           * 1-Play a message, then disconnect; <br>
           * 9-Disconnect; <br>
           * 26-Forward to External Contacts; <br>
           * 50-Forward to another extension
           *
           */
          close_hour_action?: 0 | 1 | 9 | 26 | 50;
          /**
           * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
           */
          connect_to_operator?: {
            /**
             * Enable connect to operator.
             */
            enable?: boolean;
            /**
             * Extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup. This ID is passed along with the `type` if the `close_hour_action` was not set with a value of *26*.
             */
            id?: string;
            /**
             * Values:<br>
             * 1-user,<br>
             * 2-callQueue, <br>
             * 3-autoReceptionist,<br>
             * 4-commonAreaPhone,<br>
             * 5-zoomRoom, <br>
             * 7-sharedLineGroup
             */
            type?: 'user' | 'zoomRoom' | 'commonAreaPhone' | 'autoReceptionist' | 'callQueue' | 'sharedLineGroup';
          };
          /**
           * Maximum wait time, in seconds. Values:<br>
           * 15,20,25,30,35,40,45,50,55,60
           */
          max_wait_time?: 15 | 20 | 25 | 30 | 35 | 40 | 45 | 50 | 55 | 60;
        };
      };
      desk_phone?: {
        /**
         * Pin code.
         */
        pin_code?: string;
      };
      /**
       * The value of this field can be either `default` or `disable`.
       *
       * * `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).
       *
       * * `disable`: This means that the hold music is disabled.
       */
      hold_music?: 'default' | 'disable';
    };
  };
  path: {
    /**
     * The Template ID.
     */
    templateId: string;
  };
};

export type UpdateSettingTemplateResponse = unknown;

export type UpdateSettingTemplateError = unknown;

export type ListSharedLineGroupsData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type ListSharedLineGroupsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  shared_line_groups?: Array<{
    /**
     * Display Name of the Shared Line Group.
     */
    display_name?: string;
    /**
     * Extension number assigned to the Shared Line Group.
     */
    extension_number?: number;
    /**
     * Unique Identifier of the Shared Line Group.
     */
    id?: string;
    /**
     * Phone Numbers Assigned to the Shared Line Group.
     */
    phone_numbers?: Array<{
      /**
       * Unique identifier of the phone number.
       */
      id?: string;
      /**
       * Phone number in E164 format.
       */
      number?: string;
      /**
       * Status of the number.
       */
      status?: 'pending' | 'available';
    }>;
    site?: {
      /**
       * Unique Identifier of the [Site](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/getasite).
       */
      id?: string;
      /**
       * Name of the Site.
       */
      name?: string;
    };
    /**
     * Status of the Shared Line Group.
     */
    status?: 'active' | 'inactive';
  }>;
  /**
   * Total records found in the response for this request.
   */
  total_records?: number;
};

export type ListSharedLineGroupsError = unknown;

export type CreateAsharedLineGroupData = {
  body?: {
    /**
     * Provide a description for the shared line group.
     */
    description?: string;
    /**
     * Provide a name to help identify the shared line group.
     */
    display_name: string;
    /**
     * Extension number to be assigned to the shared line group. If a [site code has been assigned](https://support.zoom.us/hc/en-us/articles/360020809672#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number
     */
    extension_number?: number;
    /**
     * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the shared line group. You will only be able to add members that belong to this site to the shared line group.
     *
     * This field is required only if the [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account.
     */
    site_id?: string;
  };
};

export type CreateAsharedLineGroupResponse = unknown;

export type CreateAsharedLineGroupError = unknown;

export type DeleteAsharedLineGroupData = {
  path: {
    /**
     * Unique Identifier of the shared line group that you would like to delete.
     */
    sharedLineGroupId: string;
  };
};

export type DeleteAsharedLineGroupResponse = unknown;

export type DeleteAsharedLineGroupError = unknown;

export type GetAsharedLineGroupData = {
  path: {
    /**
     * Unique Identifier of the Shared Line Group.
     */
    sharedLineGroupId: string;
  };
};

export type GetAsharedLineGroupResponse = {
  /**
   * Display Name of the Shared Line Group.
   */
  display_name?: string;
  /**
   * Extension number assigned to the Shared Line Group.
   */
  extension_number?: number;
  /**
   * Unique Identifier of the Shared Line Group.
   */
  id?: string;
  /**
   * View current [members](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups#h_3ffbbb77-a009-4c09-91e4-81fc264b61d6) of the shared line group.
   */
  members?: {
    /**
     * [Common Area Phones](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones) that are members of the shared line group.
     */
    common_area_phones?: Array<{
      /**
       * Unique identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).
       */
      id?: string;
      /**
       * Name of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).
       */
      name?: string;
    }>;
    /**
     * Users who are members of the Shared Line Group.
     */
    users?: Array<{
      /**
       * Unique identifier of the user.
       */
      id?: string;
      /**
       * Name of the user.
       */
      name?: string;
    }>;
  };
  /**
   * Object representing information about phone number(s) assigned to the group.
   */
  phone_numbers?: Array<{
    /**
     * Unique identifier of the phone number.
     */
    id?: string;
    /**
     * Phone number in E164 format.
     */
    number?: string;
  }>;
  /**
   * If you have multiple direct phone numbers assigned to the shared line group, this is the primary number selected for desk phones. The primary number shares the same line as the extension number. This means if a caller is routed to the shared line group through an auto receptionist, the line associated with the primary number will be used.
   */
  primary_number?: string;
  /**
   * Site assigned to the Shared Line Group.
   */
  site?: {
    /**
     * Unique Identifier of the [Site](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/getasite).
     */
    id?: string;
    /**
     * Name of the Site.
     */
    name?: string;
  };
  /**
   * Status of the Shared Line Group.
   */
  status?: 'active' | 'inactive';
  /**
   * Timezone used for the Business Hours.
   */
  timezone?: string;
};

export type GetAsharedLineGroupError = unknown;

export type UpdateAsharedLineGroupData = {
  body?: {
    /**
     * Display Name of the Shared Line Group.
     */
    display_name?: string;
    /**
     * Extension number assigned to the Shared Line Group.
     */
    extension_number?: number;
    /**
     * If you have multiple direct phone numbers assigned to the shared line group, select a number from those numbers as the primary number. The primary number shares the same line as the extension number. This means if a caller is routed to the shared line group through an auto receptionist, the line associated with the primary number will be used. A pending number cannot be used as a Primary Number.
     */
    primary_number?: {
      /**
       * Phone Number ID. Unique Identifier of the Phone Number.
       */
      id?: string;
      /**
       * Phone Number that you would like to assign as the primary number for this Shared Line Group.
       */
      number?: string;
    };
    /**
     * Status of the Shared Line Group.
     */
    status?: 'active' | 'inactive';
    /**
     * Timezone to be used for the Business Hours. A value should be provided from the IDs listed [here](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones).
     */
    timezone?: string;
  };
  path: {
    /**
     * Unique identifier of the shared line group that is to be updated.
     */
    sharedLineGroupId: string;
  };
};

export type UpdateAsharedLineGroupResponse = unknown;

export type UpdateAsharedLineGroupError = unknown;

export type DeleteMembersOfSlgData = {
  path: {
    /**
     * Unique identifier of the Shared Line Group that you would like to delete.
     */
    sharedLineGroupId: string;
  };
};

export type DeleteMembersOfSlgResponse = unknown;

export type DeleteMembersOfSlgError = unknown;

export type AddMembersToSharedLineGroupData = {
  body?: {
    /**
     * Members can comprise of users on the account as well as common area phones. You can add a maximum of 10 members at once.
     */
    members?: {
      /**
       * Unique identifier(s) of the Common Area Phone.
       */
      common_area_phone_ids?: Array<string>;
      /**
       * Zoom Phone users on the account.
       */
      users?: Array<{
        /**
         * Email address of the user.
         */
        email?: string;
        /**
         * Unique identifier of the user.
         */
        id?: string;
      }>;
    };
  };
  path: {
    /**
     * Unique Identifier of the shared line group.
     */
    sharedLineGroupId: string;
  };
};

export type AddMembersToSharedLineGroupResponse = unknown;

export type AddMembersToSharedLineGroupError = unknown;

export type DeleteAmemberSlgData = {
  path: {
    /**
     * Unique identifier of the member who is to be removed.
     */
    memberId: string;
    /**
     * Unique Identifier of the shared line group from which you would like to remove a member.
     */
    sharedLineGroupId: string;
  };
};

export type DeleteAmemberSlgResponse = any;

export type DeleteAmemberSlgError = unknown;

export type AssignPhoneNumbersSlgData = {
  body?: {
    /**
     * Phone number(s) to be assigned to the Shared Line Group.
     */
    phone_numbers?: Array<{
      /**
       * Unique Identifier of the phone number.
       */
      id?: string;
      /**
       * Phone number.
       */
      number?: string;
    }>;
  };
  path: {
    /**
     * Unique Identifier of the Shared Line Group.
     */
    sharedLineGroupId: string;
  };
};

export type AssignPhoneNumbersSlgResponse = unknown;

export type AssignPhoneNumbersSlgError = unknown;

export type DeleteAphoneNumberSlgData = {
  path: {
    /**
     * Unique identifier of the phone number which is to be unassigned. This can be retrieved from Get a Shared Line Group API.
     */
    phoneNumberId: string;
    /**
     * Unique identifier of the shared line group from which you would like to unassign a phone number.
     */
    sharedLineGroupId: string;
  };
};

export type DeleteAphoneNumberSlgResponse = any;

export type DeleteAphoneNumberSlgError = unknown;

export type ListByocsipTrunkData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type ListByocsipTrunkResponse = {
  byoc_sip_trunk?: Array<{
    /**
     * Name of the carrier.
     */
    carrier?: string;
    /**
     * The account associated to the carrier.
     */
    carrier_account?: string;
    /**
     * The unique SIP Trunk ID.
     */
    id?: string;
    /**
     * The display name of the SIP Trunk.
     */
    name?: string;
    /**
     * The region of the carrier.
     */
    region?: string;
    /**
     * The Session Border Controller (SBC) routing label.
     */
    sbc_label?: string;
  }>;
  /**
   * Used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is **15 minutes**.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call. The default is **30**, and the maximum is **100**.
   */
  page_size?: number;
};

export type ListByocsipTrunkError = unknown;

export type ListPhoneSitesData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type ListPhoneSitesResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: string;
  /**
   * List of site(s).
   */
  sites?: Array<{
    /**
     * Site country
     */
    country?: {
      /**
       * Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).
       */
      code?: string;
      /**
       * Name of the country.
       */
      name?: string;
    };
    /**
     * Site ID. Unique Identifier of the site.
     */
    id?: string;
    /**
     * Auto Receptionist for each site.
     */
    main_auto_receptionist?: {
      /**
       * Extension ID
       */
      extension_id?: string;
      /**
       * Extension number
       */
      extension_number?: string;
      /**
       * Identifier of the [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).
       */
      id?: string;
      /**
       * Name of the auto receptionist.
       */
      name?: string;
    };
    /**
     * Name of the Site.
     */
    name?: string;
    /**
     * Site Code
     */
    site_code?: string;
  }>;
  /**
   * Total number of records returned.
   */
  total_records?: string;
};

export type ListPhoneSitesError = unknown;

export type CreatePhoneSiteData = {
  body?: {
    /**
     * Display name of the [auto-receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-) for the site.
     */
    auto_receptionist_name: string;
    default_emergency_address?: {
      /**
       * Address Line 1 of the  [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of house number and street name.
       */
      address_line1: string;
      /**
       * Address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) consisting of Building number, floor number, unit, etc.
       */
      address_line2?: string;
      /**
       * City of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
       */
      city: string;
      /**
       * Two lettered country code (Aplha-2 code in ISO-3166) standard of the Site's [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
       */
      country: string;
      /**
       * State Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
       */
      state_code: string;
      /**
       * Zip Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
       */
      zip: string;
    };
    /**
     * Name of the Site.
     */
    name: string;
    /**
     * Short extension of the phone site.
     */
    short_extension?: {
      /**
       * Specify the length of short extension numbers for the site.
       *
       * Since there is a default 6-digit limit on extensions, the short extension can be 2 to 5 digits and the length of site code added to the length of short extension can not exceed a value of `6` (i.e., length of `site_code`+ length of `short_extension` should always be less than or equal to 6).
       */
      length?: number;
    };
    /**
     * Identifier for a site. If site code is enabled, this field is required.
     *
     *
     */
    site_code?: number;
  };
};

export type CreatePhoneSiteResponse = {
  /**
   * Site ID: Unique Identifier of a site.
   */
  id?: string;
  /**
   * Name of the site.
   */
  name?: string;
};

export type CreatePhoneSiteError = unknown;

export type DeletePhoneSiteData = {
  path: {
    /**
     * Unique Identifier of the Site.
     */
    siteId: string;
  };
  query: {
    /**
     * The Site ID of another site where the assets of the current site (users, numbers and phones) can be transferred to.
     */
    transfer_site_id: string;
  };
};

export type DeletePhoneSiteResponse = unknown;

export type DeletePhoneSiteError = unknown;

export type GetAsiteData = {
  path: {
    /**
     * Unique Identifier of the Site.
     */
    siteId: string;
  };
};

export type GetAsiteResponse = {
  /**
   * Site country
   */
  country?: {
    /**
     * Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).
     */
    code?: string;
    /**
     * Name of the country.
     */
    name?: string;
  };
  /**
   * Site ID. Unique Identifier of the site.
   */
  id?: string;
  /**
   * [Main Auto Receptionist](https://support.zoom.us/hc/en-us/articles/360021121312#h_bc7ff1d5-0e6c-40cd-b889-62010cb98c57) for each site.
   */
  main_auto_receptionist?: {
    /**
     * Extension ID
     */
    extension_id?: string;
    /**
     * Extension number
     */
    extension_number?: number;
    /**
     * Unique Identifier of the Auto Receptionist.
     */
    id?: string;
    /**
     * Name of the auto receptionist.
     */
    name?: string;
  };
  /**
   * Name of the Site.
   */
  name?: string;
  /**
   * Short extension of the phone site.
   */
  short_extension?: {
    /**
     * The length of short extension number for the site.
     */
    length?: number;
  };
  /**
   * [Site Code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b)
   */
  site_code?: number;
};

export type GetAsiteError = unknown;

export type UpdateSiteDetailsData = {
  body?: {
    /**
     * Name of the site.
     */
    name?: string;
    /**
     * [Site Code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b).
     */
    site_code?: number;
  };
  path: {
    /**
     * Unique Identifier of the Site.
     */
    siteId: string;
  };
};

export type UpdateSiteDetailsResponse = unknown;

export type UpdateSiteDetailsError = unknown;

export type ListPhoneUsersData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned from a single API call.
     */
    page_size?: number;
    /**
     * Unique Identifier of the site. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites) API.
     */
    site_id?: string;
  };
};

export type ListPhoneUsersResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned from a single API call.
   */
  page_size?: number;
  /**
   * The total records found for this query.
   */
  total_records?: number;
  users?: Array<{
    calling_plans?: Array<{
      /**
       * Name of the calling plan that user is enrolled in.
       */
      name?: string;
      /**
       * Type of calling plan that user is enrolled in.
       */
      type?: string;
    }>;
    /**
     * Email address of the user.
     */
    email?: string;
    /**
     * Extension number assigned to the user's Zoom phone number.
     */
    extension_number?: number;
    /**
     * Unique Identifier of the user (userId).
     */
    id?: string;
    /**
     * Name of the user.
     */
    name?: string;
    /**
     * Zoom Phone Identifier of the user.
     */
    phone_user_id?: string;
    site?: {
      /**
       * Unique Identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
       */
      id?: string;
      /**
       * Name of the site.
       */
      name?: string;
    };
    /**
     * Displays the status of the user's Zoom Phone license. The value can be either of the following:<br>
     * `activate`: Active Zoom phone user.<br>
     * `deactivate`: User with Zoom phone license disabled. This type of user can't make or receive calls.
     */
    status?: string;
  }>;
};

export type ListPhoneUsersError = unknown;

export type PhoneUserData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type PhoneUserResponse = {
  /**
   * Calling Plan of the user
   */
  calling_plan?: Array<{
    /**
     * The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan.
     */
    type?: number;
  }>;
  /**
   * Email address of the user.
   */
  email?: string;
  /**
   * Extension number
   */
  extension_number?: number;
  /**
   * Zoom User Id.
   */
  id?: string;
  phone_numbers?: Array<{
    /**
     * Phone Number Id
     */
    id?: string;
    /**
     * Phone number
     */
    number?: string;
  }>;
  /**
   * Zoom Phone User Id.
   */
  phone_user_id?: string;
  /**
   * Indicates whether the user is a [site admin](https://support.zoom.us/hc/en-us/articles/360042099012) or not.
   */
  site_admin?: boolean;
  /**
   * Unique Identifier of a [site](https://support.zoom.us/hc/en-us/articles/360020809672).
   */
  site_id?: string;
  /**
   * The status of the user.<br>
   * `activate`: An active user. <br>
   * `deactivate`: User has been deactivated from the ZoomPhone system.
   */
  status?: 'activate' | 'deactivate';
};

export type PhoneUserError = unknown;

export type UpdateUserProfileData = {
  body?: {
    /**
     * The extension number of the user. The number must be complete (i.e. site number + short extension).
     */
    extension_number?: string;
    /**
     * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672) where the user should be moved or assigned.
     */
    site_id?: string;
  };
  path: {
    userId: string;
  };
};

export type UpdateUserProfileResponse = unknown;

export type UpdateUserProfileError = unknown;

export type PhoneUserCallLogsData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * Filter API responses to include call logs of only the phone number defined in this field.
     */
    phone_number?: string;
    /**
     * Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.
     */
    time_type?: 'startTime' | 'endTime';
    /**
     * End date.
     */
    to: string;
    type?: 'all' | 'missed';
  };
};

export type PhoneUserCallLogsResponse = {
  /**
   * Call Log
   */
  call_logs?: Array<{
    /**
     * Indicates who accepted the call.
     */
    accepted_by?: {
      extension_number?: string;
      location?: string;
      name?: string;
      number_type?: string;
      phone_number?: string;
    };
    /**
     * Unique identifier of the phone call.
     */
    call_id?: string;
    /**
     * Contact name of callee
     */
    callee_name?: string;
    /**
     * Number of callee
     */
    callee_number?: string;
    /**
     * Type of callee's number. 1 - internal | 2 - external
     */
    callee_number_type?: string;
    /**
     * Contact name of caller
     */
    caller_name?: string;
    /**
     * Number of caller
     */
    caller_number?: string;
    /**
     * Type of caller's number. 1 - internal | 2 - external
     */
    caller_number_type?: string;
    /**
     * Billing charge for the call.
     */
    charge?: string;
    /**
     * Client code.
     */
    client_code?: string;
    /**
     * Start time of the call
     */
    date_time?: string;
    /**
     * Direction of the call. "inbound" | "outbound"
     */
    direction?: string;
    /**
     * Duration of the call in seconds.
     */
    duration?: number;
    /**
     * Indicates where the call was forwarded from.
     */
    forwarded_by?: {
      extension_number?: string;
      location?: string;
      name?: string;
      number_type?: string;
      phone_number?: string;
    };
    /**
     * Indicates who the call was forwarded to.
     */
    forwarded_to?: {
      extension_number?: string;
      location?: string;
      name?: string;
      number_type?: string;
      phone_number?: string;
    };
    /**
     * Whether the call has a recording or not.
     */
    has_recording?: boolean;
    /**
     * Whether the call has voicemail or not.
     */
    has_voicemail?: boolean;
    /**
     * Call Log ID
     */
    id?: string;
    outgoing_by?: {
      extension_number?: string;
      location?: string;
      name?: string;
      number_type?: string;
      phone_number?: string;
    };
    /**
     * Path of the call log.
     */
    path?: string;
    /**
     * Billing rate for the call.
     */
    rate?: string;
    /**
     * Recording type. <br>
     * * `1` - On-demand recording.<br>
     * * `2` - Automatic recording.
     */
    recording_type?: string;
    /**
     * Result of the call. "call_connected" | "recorded" | "no_answer"
     */
    result?: string;
    site?: {
      /**
       * Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
       */
      id?: string;
      /**
       * Name of the site where the phone number is assigned.
       */
      name?: string;
    };
    /**
     * User ID or user email.
     */
    user_id?: string;
    /**
     * Waiting time for the call, in seconds.
     */
    waiting_time?: number;
  }>;
  /**
   * Date from which you would like to view the logs.
   */
  from?: string;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * Total number of pages
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call for each page.
   */
  page_size?: number;
  /**
   * Date up to which you would like to view the phone log.
   */
  to?: string;
  /**
   * The total number of records returned.
   */
  total_records?: number;
};

export type PhoneUserCallLogsError = unknown;

export type DeleteCallLogData = {
  path: {
    /**
     * Unique identifier of the call log. The value for this field can be retrieved from [account's call logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/accountcalllogs) or [user's call logs](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/phoneusercalllogs).
     */
    callLogId: string;
    /**
     * The user ID or email address of the user.
     */
    userId: string;
  };
};

export type DeleteCallLogResponse = unknown;

export type DeleteCallLogError = unknown;

export type AssignCallingPlanData = {
  body?: {
    calling_plans?: Array<{
      /**
       * [Type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.
       */
      type?: string;
    }>;
  };
  path: {
    userId: string;
  };
};

export type AssignCallingPlanResponse = unknown;

export type AssignCallingPlanError = unknown;

export type UnassignCallingPlanData = {
  path: {
    /**
     * The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan that was assigned to user. (e.g: The value of type would be "200" for Unlimited US/Canada calling plan.)
     *
     */
    type: string;
    userId: string;
  };
};

export type UnassignCallingPlanResponse = unknown;

export type UnassignCallingPlanError = unknown;

export type AssignPhoneNumberData = {
  /**
   * Provide either an id or a number in the request body.
   */
  body?: {
    phone_numbers?: Array<{
      /**
       * ID for phone number
       */
      id?: string;
      /**
       * Phone number in E164 format.
       */
      number?: string;
    }>;
  };
  path: {
    userId: string;
  };
};

export type AssignPhoneNumberResponse = {
  /**
   * Assigned phone number
   */
  phone_numbers?: Array<{
    /**
     * ID of the phone number
     */
    id?: string;
    /**
     * The phone number that is assigned to the user.
     */
    number?: string;
  }>;
};

export type AssignPhoneNumberError = unknown;

export type UnassignPhoneNumberData = {
  path: {
    /**
     * Provide either phone number or phoneNumberId of the user.
     */
    phoneNumberId: string;
    /**
     * Provide either userId or email address of the user.
     */
    userId: string;
  };
};

export type UnassignPhoneNumberResponse = unknown;

export type UnassignPhoneNumberError = unknown;

export type PhoneUserRecordingsData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query: {
    /**
     * Start date for the query in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the response includes only one month worth of recording data. The month defined should fall within the last six months.
     */
    from?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
  };
};

export type PhoneUserRecordingsResponse = {
  /**
   * Start date for the query.
   */
  from?: string;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * Total number of pages.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call for each page.
   */
  page_size?: number;
  /**
   * Recordings
   */
  recordings?: Array<{
    /**
     * Contact name of callee
     */
    callee_name?: string;
    /**
     * Number of callee
     */
    callee_number?: string;
    /**
     * Type of callee's number. 1 - internal | 2 - external
     */
    callee_number_type?: string;
    /**
     * Contact name of caller
     */
    caller_name?: string;
    /**
     * Number of caller
     */
    caller_number?: string;
    /**
     * Type of caller's number. 1 - internal | 2 - external
     */
    caller_number_type?: string;
    /**
     * Date and time at which the record is received
     */
    date_time?: string;
    /**
     * Direction of the call. "inbound" | "outbound"
     */
    direction?: string;
    /**
     * Download url for the recording. For security purposes, you must provide an OAuth access token in the auth header to download the recording file using this url. <br>
     *
     * Example request:<br>
     * ```
     * curl --request GET \
     * --url {download_url} \
     * --header 'authorization: Bearer {access_token} \
     * --header 'content-type: application/json'
     * ```
     *
     */
    download_url?: string;
    /**
     * Duration of the call formatted as hh:mm:ss, for example: `05:01` for five minutes and one second.
     */
    duration?: string;
    /**
     * ID of recording
     */
    id?: string;
  }>;
  /**
   * End date.
   */
  to?: string;
  /**
   * The total number of records returned.
   */
  total_records?: number;
};

export type PhoneUserRecordingsError = unknown;

export type PhoneUserSettingsData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type PhoneUserSettingsResponse = {
  /**
   * Area Code of User
   */
  area_code?: string;
  /**
   * The [company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by external callers to reach your phone users (by dialing the main company number and the user's extension). It can also be used by phone users as their caller ID when making calls.
   */
  company_number?: string;
  /**
   * Contains information on phones or devices provisioned for the user.
   */
  desk_phone?: {
    keys_positions?: {
      /**
       * Primary number of the user.
       */
      primary_number?: string;
    };
  };
  /**
   * Outbound Caller Info
   */
  outbound_caller?: {
    /**
     * Outbound calling number
     */
    number?: string;
  };
  outbound_caller_ids?: {
    /**
     * Whether the outbound caller ID is the default or not. If `true`, the outbound caller ID is the default caller ID.
     */
    is_default?: boolean;
    /**
     * Outbound caller name.
     */
    name?: string;
    /**
     * Outbound caller number.
     */
    number?: string;
  };
  /**
   * [Shared voicemail access](https://support.zoom.us/hc/en-us/articles/360033863991-Sharing-and-controlling-access-to-a-voicemail-inbox) assigned to user.
   */
  voice_mail?: {
    /**
     * The user that is allowed to access voicemail messages for the extension.
     */
    access_user_id?: string;
    /**
     * Specifies whether the user has delete permissions. The default is **false**.
     */
    delete?: boolean;
    /**
     * Specifies whether the user has download permissions. The default is **false**.
     */
    download?: boolean;
    /**
     * Unique identifier of the shared voicemail that the user can access.
     */
    shared_id?: string;
  };
};

export type PhoneUserSettingsError = unknown;

export type DeleteUserSettingData = {
  path: {
    /**
     * Corresponds to the setting item you wish to remove. Allowed values: `voice_mail`
     */
    settingType: string;
    /**
     * Unique identifier of the user.
     */
    userId: string;
  };
  query: {
    /**
     * Required only for voicemail setting type.
     */
    shared_id: string;
  };
};

export type DeleteUserSettingResponse = unknown;

export type DeleteUserSettingError = unknown;

export type UpdateUserSettingData = {
  body?: {
    /**
     * Update the voicemail setting.
     */
    voice_mail?: {
      /**
       * Specify the user ID of the user whose voicemail permissions need to be updated.
       */
      access_user_id?: string;
      /**
       * Specify whether the user has delete permissions. The default is **false**.
       */
      delete?: boolean;
      /**
       * Specify whether the user has download permissions. The default is **false**.
       */
      download?: boolean;
      /**
       *
       * Specify the ID of the voicemail.
       */
      shared_id?: string;
    };
  };
  path: {
    /**
     * Corresponds to the setting item you wish to modify. Allowed values: `voice_mail`
     */
    settingType: string;
    /**
     * Unique identifier of the user.
     */
    userId: string;
  };
};

export type UpdateUserSettingResponse = unknown;

export type UpdateUserSettingError =
  | {
      [key: string]: unknown;
    }
  | unknown;

export type AddUserSettingData = {
  body?: {
    /**
     * Update the voicemail setting.
     */
    voice_mail?: {
      /**
       * Specify the user ID of a user with whom to share voicemail access permissions.
       */
      access_user_id?: string;
      /**
       * Specifies whether the user has delete permissions. The default is **false**.
       */
      delete?: boolean;
      /**
       * Specifies whether the user has download permissions. The default is **false**.
       */
      download?: boolean;
    };
  };
  path: {
    /**
     * Corresponds to the setting item you wish to modify. Allowed values: `voice_mail`
     */
    settingType: string;
    /**
     * Unique identifier of the user.
     */
    userId: string;
  };
};

export type AddUserSettingResponse = {
  voice_mail?: {
    /**
     * The user that is allowed to access voicemail messages for the extension.
     */
    access_user_id?: string;
    /**
     * Specifies whether the user has delete permissions. The default is **false**.
     */
    delete?: boolean;
    /**
     * Specifies whether the user has download permissions. The default is **false**.
     */
    download?: boolean;
    /**
     * Unique identifier of the voicemail that the user can access.
     */
    shared_id?: string;
  };
};

export type AddUserSettingError = unknown;

export type PhoneUserVoiceMailsData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query: {
    /**
     * Start date for the query in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the response includes only one month worth of voicemail data. The month defined should fall within the last six months.
     */
    from?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * Status of the voice mail
     */
    status?: 'all' | 'read' | 'unread';
    /**
     * End date.
     */
    to: string;
  };
};

export type PhoneUserVoiceMailsResponse = {
  /**
   * Start date for the query.
   */
  from?: string;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * Total number of page
   */
  page_count?: number;
  /**
   * Size of each page
   */
  page_size?: number;
  /**
   * End date.
   */
  to?: string;
  /**
   * Total number of records
   */
  total_records?: number;
  /**
   * Voice Mails
   */
  voice_mails?: Array<{
    /**
     * Contact name of callee
     */
    callee_name?: string;
    /**
     * Number of callee
     */
    callee_number?: string;
    /**
     * Type of callee's number. 1 - internal | 2 - external
     */
    callee_number_type?: string;
    /**
     * Contact name of caller
     */
    caller_name?: string;
    /**
     * Number of caller
     */
    caller_number?: string;
    /**
     * Type of caller's number. 1 - internal | 2 - external
     */
    caller_number_type?: string;
    /**
     * Date the voice mail started
     */
    date_time?: string;
    /**
     * Download url of attachment
     */
    download_url?: string;
    /**
     * Duration of the voice mail, formatted as hh:mm:ss, for example: `06:30` for six minutes and thirty seconds.
     */
    duration?: string;
    /**
     * Id of voice mail
     */
    id?: string;
    /**
     * Status of the voice mail. Can be either 'read' or 'unread'
     */
    status?: 'read' | 'unread';
  }>;
};

export type PhoneUserVoiceMailsError = unknown;

export type DeleteVoicemailData = {
  path: {
    /**
     * Unique identifier of the voicemail. Retrieve the value for this field by calling the [Get voicemails](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone/phoneuservoicemails) API.
     */
    voicemailId: string;
  };
};

export type DeleteVoicemailResponse = unknown;

export type DeleteVoicemailError = unknown;

export type ReportSignInSignOutActivitiesData = {
  query?: {
    /**
     * Start date for which you would like to view the activity logs report. Using the `from` and `to` parameters, specify a monthly date range for the report as the API only provides one month worth of data in one request. The specified date range should fall within the last six months.
     */
    from?: string;
    /**
     * Next page token is used to paginate through large result sets
     */
    next_page_token?: string;
    /**
     * The number of records to be returned within a single API call
     */
    page_size?: number;
    /**
     * End date up to which you would like to view the activity logs report.
     */
    to?: string;
  };
};

export type ReportSignInSignOutActivitiesResponse = {
  /**
   * Array of activity logs.
   */
  activity_logs?: Array<{
    /**
     * The client interface type using which the activity was performed.
     */
    client_type?: string;
    /**
     * Email address of the user used for the activity.
     */
    email?: string;
    /**
     * The IP address of the user's device.
     */
    ip_address?: string;
    /**
     * Time during which the activity occurred.
     */
    time?: string;
    /**
     * The type of activity: <br>`Sign in`: Sign in activity by user.<br>`Sign out`: Sign out activity by user.
     */
    type?: string;
    /**
     * Zoom client version of the user.
     */
    version?: string;
  }>;
  /**
   * Start date from which you want the activity logs report to be generated.
   */
  from?: string;
  /**
   * Next page token is used to paginate through large result sets.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: string;
  /**
   * End date until which you want the activity logs report to be generated
   */
  to?: string;
};

export type ReportSignInSignOutActivitiesError = unknown;

export type ReportCloudRecordingData = {
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * End date.
     */
    to: string;
  };
};

export type ReportCloudRecordingResponse = {
  /**
   * Start date for this report
   */
  from?: string;
  /**
   * End date for this report
   */
  to?: string;
} & {
  /**
   * Array of cloud usage objects
   */
  cloud_recording_storage?: Array<{
    /**
     * Date of the usage
     */
    date?: string;
    /**
     * Free storage
     */
    free_usage?: string;
    /**
     * Paid storage
     */
    plan_usage?: string;
    /**
     * Storage used on the date
     */
    usage?: string;
  }>;
};

export type ReportCloudRecordingError = unknown;

export type ReportDailyData = {
  query?: {
    /**
     * Month for this report
     */
    month?: number;
    /**
     * Year for this report
     */
    year?: number;
  };
};

export type ReportDailyResponse = {
  /**
   * Array of date objects.
   */
  dates?: Array<{
    /**
     * Date for this object.
     */
    date?: string;
    /**
     * Number of meeting minutes on this date.
     */
    meeting_minutes?: number;
    /**
     * Number of meetings on this date.
     */
    meetings?: number;
    /**
     * Number of new users on this date.
     */
    new_users?: number;
    /**
     * Number of participants on this date.
     */
    participants?: number;
  }>;
  /**
   * Month for this report.
   */
  month?: number;
  /**
   * Year for this report.
   */
  year?: number;
};

export type ReportDailyError = unknown;

export type ReportMeetingDetailsData = {
  path: {
    /**
     * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
};

export type ReportMeetingDetailsResponse = {
  /**
   * Custom keys and values assigned to the meeting.
   */
  custom_keys?: Array<{
    /**
     * Custom key associated with the user.
     */
    key?: string;
    /**
     * Value of the custom key associated with the user.
     */
    value?: string;
  }>;
  /**
   * Department of the host.
   */
  dept?: string;
  /**
   * Meeting duration.
   */
  duration?: number;
  /**
   * Meeting end time.
   */
  end_time?: string;
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  /**
   * Number of meeting participants.
   */
  participants_count?: number;
  /**
   * Meeting start time.
   */
  start_time?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Number of meeting minutes. This represents the total amount of meeting minutes attended by each participant including the host, for meetings hosted by the user. For instance if there were one host(named A) and one participant(named B) in a meeting, the value of total_minutes would be calculated as below:
   *
   * **total_minutes** = Total Meeting Attendance Minutes of A + Total Meeting Attendance Minutes of B
   */
  total_minutes?: number;
  /**
   * Tracking fields.
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type.
     */
    field?: string;
    /**
     * Tracking fields value.
     */
    value?: string;
  }>;
  /**
   * Meeting type.
   */
  type?: number;
  /**
   * User email.
   */
  user_email?: string;
  /**
   * User display name.
   */
  user_name?: string;
  /**
   * Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.
   */
  uuid?: string;
};

export type ReportMeetingDetailsError = unknown;

export type ReportMeetingParticipantsData = {
  path: {
    /**
     * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
  query?: {
    /**
     * Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingregistrants).<br>
     *
     *
     */
    include_fields?: 'registrant_id';
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type ReportMeetingParticipantsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of meeting participant objects.
   */
  participants?: Array<{
    /**
     * Another identifier for the participant. Can be a number or characters, maximum length of 15 characters.
     */
    customer_key?: string;
    /**
     * Participant duration.
     */
    duration?: number;
    /**
     * Indicates if failover happened during the meeting.
     */
    failover?: boolean;
    /**
     * Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank..
     */
    id?: string;
    /**
     * Participant join time.
     */
    join_time?: string;
    /**
     * Participant leave time.
     */
    leave_time?: string;
    /**
     * Participant display name.
     */
    name?: string;
    /**
     * Unique identifier of the registrant. This field is only returned if you entered "registrant_id" as the value of `include_fields` query parameter.
     */
    registrant_id?: string;
    /**
     * Participant email.
     */
    user_email?: string;
    /**
     * Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
     */
    user_id?: string;
  }>;
};

export type ReportMeetingParticipantsError = unknown;

export type ReportMeetingPollsData = {
  path: {
    /**
     * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    meetingId: string;
  };
};

export type ReportMeetingPollsResponse = {
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  /**
   * Array of meeting question objects.
   */
  questions?: Array<{
    /**
     * Participant email.
     */
    email?: string;
    /**
     * Participant display name.<br> If "anonymous" option is enabled for a [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet), the participant's polling information will be kept anonymous and the value of `name` field will be "Anonymous Attendee".
     */
    name?: string;
    /**
     * Array of questions from user.
     */
    question_details?: Array<{
      /**
       * Given answer.
       */
      answer?: string;
      /**
       * Date and time at which the answer to the poll was submitted.
       */
      date_time?: string;
      /**
       * Unique identifier of the poll.
       */
      polling_id?: string;
      /**
       * Asked question.
       */
      question?: string;
    }>;
  }>;
  /**
   * Meeting start time.
   */
  start_time?: string;
  /**
   * Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.
   */
  uuid?: string;
};

export type ReportMeetingPollsError = unknown;

export type ReportOperationLogsData = {
  query: {
    /**
     * **Optional**<br>
     * Filter your response by a category type to see reports for a specific category.
     * The value for this field can be one of the following:<br> `all`<br>`user`<br>`user_settings`<br>`account`<br>`billing`<br>`im`<br>`recording`<br>`phone_contacts`<br>`webinar`<br>`sub_account`<br>`role`<br>`zoom_rooms`
     */
    category_type?:
      | 'all'
      | 'user'
      | 'user_settings'
      | 'account'
      | 'billing'
      | 'im'
      | 'recording'
      | 'phone_contacts'
      | 'webinar'
      | 'sub_account'
      | 'role'
      | 'zoom_rooms';
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
  };
};

export type ReportOperationLogsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The amount of records returns within a single API call.
   */
  page_size?: number;
} & {
  /**
   * Array of operation log objects
   */
  operation_logs?: Array<{
    /**
     * Action
     */
    action?: string;
    /**
     * Category type
     */
    category_type?: string;
    /**
     * Operation detail
     */
    operation_detail?: string;
    /**
     * The user who performed the operation.
     */
    operator?: string;
    /**
     * The time at which the operation was performed.
     */
    time?: string;
  }>;
};

export type ReportOperationLogsError = unknown;

export type ReportTelephoneData = {
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     *
     * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
     *
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
    /**
     * Audio types:<br>`1` - Toll-free Call-in & Call-out.<br>`2` - Toll <br>
     * `3` - SIP Connected Audio
     */
    type?: 1 | 3;
  };
};

export type ReportTelephoneResponse = {
  /**
   * Start date for this report.
   */
  from?: string;
  /**
   * The page number of the current results.
   */
  next_page_token?: number;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * End date for this report.
   */
  to?: string;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of telephony objects.
   */
  telephony_usage?: Array<{
    /**
     * Caller's call-in number.
     */
    call_in_number?: string;
    /**
     * Country name.
     */
    country_name?: string;
    /**
     * User department.
     */
    dept?: string;
    /**
     * Call leg duration
     */
    duration?: number;
    /**
     * Call leg end time
     */
    end_time?: string;
    /**
     * User email.
     */
    host_email?: string;
    /**
     * The user ID of the meeting host.
     */
    host_id?: string;
    /**
     * User display name.
     */
    host_name?: string;
    /**
     * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
     */
    meeting_id?: number;
    /**
     * Meeting type.
     */
    meeting_type?: string;
    /**
     * Toll-free telephone number.
     */
    phone_number?: string;
    /**
     * Calling rate for the telephone call.
     */
    rate?: number;
    /**
     * The number that is signaled to Zoom.
     */
    signaled_number?: string;
    /**
     * Call leg start time
     */
    start_time?: string;
    /**
     * Total cost (USD) for Call Out. Calculated as plan rate by duration.
     */
    total?: number;
    /**
     * Call type.
     */
    type?:
      | 'toll-free'
      | 'call-out'
      | 'call-in'
      | 'US toll-number'
      | 'global toll-number'
      | 'premium'
      | 'premium call-in';
    /**
     * Meeting UUID.
     */
    uuid?: string;
  }>;
};

export type ReportTelephoneError = unknown;

export type ReportUsersData = {
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
    /**
     * Active or inactive hosts.<br>`active` - Active hosts. <br>`inactive` - Inactive hosts.
     */
    type?: 'active' | 'inactive';
  };
};

export type ReportUsersResponse = {
  /**
   * Start date for this report.
   */
  from?: string;
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * End date for this report.
   */
  to?: string;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Number of meeting minutes for this range.
   */
  total_meeting_minutes?: number;
  /**
   * Number of meetings for this range.
   */
  total_meetings?: number;
  /**
   * Number of participants for this range.
   */
  total_participants?: number;
  /**
   * Array of user objects.
   */
  users?: Array<{
    /**
     * Custom attribute(s) that have been assigned to the user.
     */
    custom_attributes?: {
      /**
       * Identifier for the custom attribute.
       */
      key?: string;
      /**
       * Name of the custom attribute.
       */
      name?: string;
      /**
       * Value of the custom attribute.
       */
      value?: string;
    };
    /**
     * User department.
     */
    dept?: string;
    /**
     * User email.
     */
    email?: string;
    /**
     * User ID.
     */
    id?: string;
    /**
     * Number of meeting minutes for user.
     */
    meeting_minutes?: number;
    /**
     * Number of meetings for user.
     */
    meetings?: number;
    /**
     * Number of participants in meetings for user.
     */
    participants?: number;
    /**
     * User type.
     */
    type?: number;
    /**
     * User display name.
     */
    user_name?: string;
  }>;
};

export type ReportUsersError = unknown;

export type ReportMeetingsData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query: {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    from: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date.
     */
    to: string;
    /**
     * The meeting types: <br>`past` - Past meetings.<br>`pastOne` - Past one user meetings.
     */
    type?: 'past' | 'pastOne';
  };
};

export type ReportMeetingsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Start date for this report.
   */
  from?: string;
  /**
   * Array of meeting objects.
   */
  meetings?: Array<{
    /**
     * Custom keys and values assigned to the meeting.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the user.
       */
      key?: string;
      /**
       * Value of the custom key associated with the user.
       */
      value?: string;
    }>;
    /**
     * Meeting duration.
     */
    duration?: number;
    /**
     * Meeting end time.
     */
    end_time?: string;
    /**
     * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):            Unique identifier of the meeting in "**long**" format(represented as int64
     * data type in JSON), also known as the meeting number.
     *
     */
    id?: number;
    /**
     * Number of meeting participants.
     */
    participants_count?: number;
    /**
     * Indicates whether the meeting was created directly through Zoom or through an API request.
     */
    source?: string;
    /**
     * Meeting start time.
     */
    start_time?: string;
    /**
     * Meeting topic.
     */
    topic?: string;
    /**
     * Sum of meeting minutes from all participants in the meeting.
     */
    total_minutes?: number;
    /**
     *
     * Meeting Type:<br> `1` - Instant Meeting<br> `2` - Scheduled Meeting<br> `3` - Recurring Meeting with no fixed time.<br>
     * `4` - This value is returned if the meeting was started using a Personal Meeting ID. <br>
     * `8` - Recurring Meeting with a fixed time.
     */
    type?: number;
    /**
     * User email.
     */
    user_email?: string;
    /**
     * User display name.
     */
    user_name?: string;
    /**
     * Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.
     */
    uuid?: string;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * End date for this report.
   */
  to?: string;
};

export type ReportMeetingsError = unknown;

export type ReportWebinarDetailsData = {
  path: {
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
};

export type ReportWebinarDetailsResponse = {
  /**
   * Custom keys and values assigned to the meeting.
   */
  custom_keys?: Array<{
    /**
     * Custom key associated with the user.
     */
    key?: string;
    /**
     * Value of the custom key associated with the user.
     */
    value?: string;
  }>;
  /**
   * Department of the host.
   */
  dept?: string;
  /**
   * Meeting duration.
   */
  duration?: number;
  /**
   * Meeting end time.
   */
  end_time?: string;
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  /**
   * Number of meeting participants.
   */
  participants_count?: number;
  /**
   * Meeting start time.
   */
  start_time?: string;
  /**
   * Meeting topic.
   */
  topic?: string;
  /**
   * Number of Webinar minutes. This represents the total amount of Webinar minutes attended by each participant including the host, for a Webinar hosted by the user. For instance if there were one host(named A) and one participant(named B) in a Webinar, the value of total_minutes would be calculated as below:
   *
   * **total_minutes** = Total Webinar Attendance Minutes of A + Total Webinar Attendance Minutes of B
   */
  total_minutes?: number;
  /**
   * Tracking fields.
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type.
     */
    field?: string;
    /**
     * Tracking fields value.
     */
    value?: string;
  }>;
  /**
   * Meeting type.
   */
  type?: number;
  /**
   * User email.
   */
  user_email?: string;
  /**
   * User display name.
   */
  user_name?: string;
  /**
   * Webinar UUID. Each webinar instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated when the next instance of the webinar starts). Double encode the UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.
   */
  uuid?: string;
};

export type ReportWebinarDetailsError = unknown;

export type ReportWebinarParticipantsData = {
  path: {
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
  query?: {
    /**
     * Enter 'registrant_id' as the value for this field if you would like to see the registrant ID attribute included in the response of this API call. A registrant ID is a unique identifier of a [webinar registrant](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarregistrants).<br>
     *
     *
     */
    include_fields?: 'registrant_id';
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type ReportWebinarParticipantsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * Array of webinar participant objects.
   */
  participants?: Array<{
    /**
     * Another identifier for the participant. Can be a number or characters, maximum length of 15 characters.
     */
    customer_key?: string;
    /**
     * Participant duration.
     */
    duration?: number;
    /**
     * Indicates if failover happened during the webinar.
     */
    failover?: boolean;
    /**
     * Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.
     */
    id?: string;
    /**
     * Participant join time.
     */
    join_time?: string;
    /**
     * Participant leave time.
     */
    leave_time?: string;
    /**
     * Participant display name.
     */
    name?: string;
    /**
     * Participant email.
     */
    user_email?: string;
    /**
     * Participant ID. This is a unique ID assigned to the participant joining the webinar and is valid for that webinar only.
     */
    user_id?: string;
  }>;
};

export type ReportWebinarParticipantsError = unknown;

export type ReportWebinarPollsData = {
  path: {
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
};

export type ReportWebinarPollsResponse = {
  /**
   * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
   */
  id?: number;
  /**
   * Array of webinar question objects.
   */
  questions?: Array<{
    /**
     * Participant email.
     */
    email?: string;
    /**
     * Participant display name.<br><br> If the poll was created as an anonymous poll, participant's information will remain anonymous and the value of the `name` field will be "Anonymous Attendee".
     */
    name?: string;
    /**
     * Array of questions from user.
     */
    question_details?: Array<{
      /**
       * Given answer.
       */
      answer?: string;
      /**
       * Date and time at which the answer to the poll was submitted.
       */
      date_time?: string;
      /**
       * Unique identifier of the poll.
       */
      polling_id?: string;
      /**
       * Asked question.
       */
      question?: string;
    }>;
  }>;
  /**
   * Webinar start time.
   */
  start_time?: string;
  /**
   * Webinar UUID. Each webinar instance will generate its own UUID(i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.
   */
  uuid?: string;
};

export type ReportWebinarPollsError = unknown;

export type ReportWebinarQaData = {
  path: {
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     *
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     */
    webinarId: string;
  };
};

export type ReportWebinarQaResponse = {
  /**
   * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
   */
  id?: number;
  /**
   * Array of webinar question objects.
   */
  questions?: Array<{
    /**
     * Participant email.
     */
    email?: string;
    /**
     * Participant display name.<br>
     *
     * If anonymous [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer) option is enabled and if a participant submits the Q&A without providing their name, the value of the `name` field will be "Anonymous Attendee".
     */
    name?: string;
    /**
     * Array of questions from user.
     */
    question_details?: Array<{
      /**
       * Given answer.
       */
      answer?: string;
      /**
       * Asked question.
       */
      question?: string;
    }>;
  }>;
  /**
   * Webinar start time.
   */
  start_time?: string;
  /**
   * Webinar UUID. Each Webinar instance will generate its own UUID(i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.
   */
  uuid?: string;
};

export type ReportWebinarQaError = unknown;

export type RolesResponse = {
  /**
   * List of Roles objects
   */
  roles?: Array<{
    /**
     * Role Description
     */
    description?: string;
    /**
     * Role Id
     */
    id?: string;
    /**
     * Role Name
     */
    name?: string;
    /**
     * Total members in this role
     */
    total_members?: number;
  }>;
  /**
   * The number of all records available across pages
   */
  total_records?: number;
};

export type RolesError = unknown;

export type CreateRoleData = {
  body?: {
    /**
     * Description of the role.
     */
    description?: string;
    /**
     * Name of the role.
     */
    name?: string;
    /**
     * Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).
     */
    privileges?: Array<string>;
  };
};

export type CreateRoleResponse =
  | unknown
  | {
      /**
       * Description of the role.
       */
      description?: string;
      /**
       * Role Id
       */
      id?: string;
      /**
       * Name of the role.
       */
      name?: string;
      /**
       * [Privileges](https://marketplace.zoom.us/docs/api-reference/other-references/privileges) provided to the role.
       */
      privileges?: Array<string>;
      /**
       * Total members assigned to the role.
       */
      total_members?: number;
    };

export type CreateRoleError = unknown;

export type DeleteRoleData = {
  path: {
    /**
     * Role Id.
     */
    roleId: string;
  };
};

export type DeleteRoleResponse =
  | unknown
  | {
      [key: string]: unknown;
    };

export type DeleteRoleError = unknown;

export type GetRoleInformationData = {
  path: {
    /**
     * Role Id.
     */
    roleId: string;
  };
};

export type GetRoleInformationResponse = {
  /**
   * Description of the role.
   */
  description?: string;
  /**
   * Role Id.
   */
  id?: string;
  /**
   * Name of the role.
   */
  name?: string;
  /**
   * Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).
   *
   */
  privileges?: Array<string>;
  /**
   * This field will only be displayed to accounts that are enrolled in a partner plan and follow the master accounts and sub accounts structure.
   */
  sub_account_privileges?: {
    /**
     * Indicates how the account can manage sub accounts. The value can be one of the following:<br>
     * `1`: Manage the sub account as an owner of the account.<br>
     * `2`: Manage the sub account with the same privileges as the current account.<br>
     * `3`: Manage the sub account with specified privileges.
     */
    second_level?: number;
  };
  /**
   * Total members assigned to that role.
   */
  total_members?: number;
};

export type GetRoleInformationError = unknown;

export type UpdateRoleData = {
  body?: {
    /**
     * Description of the role.
     */
    description?: string;
    /**
     * Role Id.
     */
    id?: string;
    /**
     * Name of the role.
     */
    name?: string;
    /**
     * Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).
     *
     */
    privileges?: Array<string>;
    /**
     * This field will only be displayed to accounts that are enrolled in the partner plan and follow master accounts and sub accounts structure.
     */
    sub_account_privileges?: {
      /**
       * Indicates how the account can manage sub accounts. The value can be one of the following:<br>
       * `1`: Manage the sub account as an owner of the account.<br>
       * `2`: Manage the sub account with the same privileges as the current account.<br>
       * `3`: Manage the sub account with specified privileges.
       */
      second_level?: number;
    };
    /**
     * Total members assigned to that role.
     */
    total_members?: number;
  };
  path: {
    /**
     * Role Id
     */
    roleId: string;
  };
};

export type UpdateRoleResponse = unknown | any;

export type UpdateRoleError = unknown;

export type RoleMembersData = {
  path: {
    /**
     * The role ID
     */
    roleId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of pages returned for this request.
     */
    page_count?: string;
    /**
     *
     * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
     *
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type RoleMembersResponse = {
  /**
   * List of a Role Members
   */
  members?: Array<{
    /**
     * Member Department
     */
    department?: string;
    /**
     * Member Email
     */
    email?: string;
    /**
     * Member First Name
     */
    first_name?: string;
    /**
     * Member ID
     */
    id?: string;
    /**
     * Member Last Name
     */
    last_name?: string;
    /**
     * Member Type
     */
    type?: number;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
};

export type RoleMembersError = unknown;

export type AddRoleMembersData = {
  /**
   * Role members
   */
  body: {
    /**
     * Array of userId/user email of users to whom you would like to assign this role. Upto 30 users can be assigned a role at once.
     */
    members?: Array<{
      /**
       * Email address of the user to whom you would like to assign the role. Provide either the userId in the ID field or the email address in the email field. If both fields are provided, only userId is used.
       */
      email?: string;
      /**
       * User ID of the user to whom you would like to assign the role.
       */
      id?: string;
    }>;
  };
  path: {
    /**
     * The role ID
     */
    roleId: string;
  };
};

export type AddRoleMembersResponse = {
  /**
   * Date and time at which the members are assigned to the role.
   */
  add_at?: string;
  /**
   * User ID
   */
  ids?: string;
};

export type AddRoleMembersError = unknown;

export type RoleMemberDeleteData = {
  path: {
    /**
     * Member's ID
     */
    memberId: string;
    /**
     * The role ID
     */
    roleId: string;
  };
};

export type RoleMemberDeleteResponse = any;

export type RoleMemberDeleteError = unknown;

export type ListZoomRoomsData = {
  query?: {
    /**
     * Parent location ID of the Zoom Room.
     */
    location_id?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * The status of the Zoom Room.
     */
    status?: 'Offline' | 'Available' | 'InMeeting' | 'UnderConstruction';
    /**
     * Type of the Zoom Rooms.
     */
    type?: 'ZoomRoom' | 'SchedulingDisplayOnly' | 'DigitalSignageOnly';
    /**
     * Use this query parameter with a value of `true` if you would like to see Zoom Rooms in your account that have not been assigned to anyone yet.
     */
    unassigned_rooms?: boolean;
  };
};

export type ListZoomRoomsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * List of existing Zoom Rooms.
   */
  rooms?: Array<{
    /**
     * Activation Code is the code that is used to complete the setup of the Zoom Room.
     */
    activation_code?: string;
    /**
     * Unique Identifier of the Zoom Room.
     */
    id?: string;
    /**
     * Unique Identifier of the [location](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) of the room.
     */
    location_id?: string;
    /**
     * Name of the Zoom Room.
     */
    name?: string;
    /**
     * Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.
     */
    room_id?: string;
    /**
     * Status of the Zoom Room.
     */
    status?: 'Offline' | 'Available' | 'InMeeting' | 'UnderConstruction';
  }>;
};

export type ListZoomRoomsError = unknown;

export type AddAroomData = {
  body?: {
    /**
     * **Optional**<br>Location ID of the lowest level location in the [location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) where the Zoom Room is to be added. For instance if the structure of the location hierarchy is set up as “country, states, city, campus, building, floor”, a room can only be added under the floor level location.
     *
     * This ID can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.
     */
    location_id?: string;
    /**
     * Name of the Zoom Room.
     */
    name: string;
    /**
     * Type of the Zoom Room.
     */
    type: 'ZoomRoom' | 'SchedulingDisplayOnly' | 'DigitalSignageOnly';
  };
};

export type AddAroomResponse = {
  /**
   * Unique Identifier of the Zoom Room.
   */
  id?: string;
  /**
   * Location ID of the location where the Zoom Room was added.
   */
  location_id?: string;
  /**
   * Name of the Zoom Room.
   */
  name?: string;
  /**
   * Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.
   */
  room_id?: string;
  /**
   * Type of the Zoom Room.
   */
  type?: 'ZoomRoom' | 'SchedulingDisplayOnly' | 'DigitalSignageOnly';
};

export type AddAroomError = unknown;

export type GetZrAccountProfileResponse = {
  basic?: {
    /**
     * Require code to exit out of the Zoom Rooms application to switch between other apps.
     *
     */
    required_code_to_ext?: boolean;
    /**
     * 1-16 digit number or characters used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or to sign out.
     */
    room_passcode?: string;
    /**
     * The email address used for reporting Zoom Room issues.
     */
    support_email?: string;
    /**
     * The phone number used for reporting Zoom room issues.
     */
    support_phone?: string;
  };
};

export type GetZrAccountProfileError = unknown;

export type UpdateZrAccProfileData = {
  body?: {
    basic?: {
      /**
       * Require code to exit out of the Zoom Rooms application to switch between other apps.
       *
       */
      required_code_to_ext?: boolean;
      /**
       * 1-16 digit number or characters used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or to sign out.
       */
      room_passcode?: string;
      /**
       * The email address used for reporting Zoom Room issues.
       */
      support_email?: string;
      /**
       * The phone number used for reporting Zoom room issues.
       */
      support_phone?: string;
    };
  };
};

export type UpdateZrAccProfileResponse = {
  [key: string]: unknown;
};

export type UpdateZrAccProfileError = unknown;

export type GetZrAccountSettingsData = {
  query: {
    /**
     * The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>
     * `meeting`: Meeting settings of the Zoom Rooms Account. <br>
     * `signage`: View digital signage settings of the Zoom Rooms Account.
     */
    setting_type: 'meeting' | 'alert';
  };
};

export type GetZrAccountSettingsResponse =
  | {
      zoom_rooms?: {
        /**
         * Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.
         */
        allow_multiple_content_sharing?: boolean;
        /**
         * Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.
         */
        audio_device_daily_auto_test?: boolean;
        /**
         * Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
         */
        auto_direct_sharing?: boolean;
        /**
         * Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
         */
        auto_start_scheduled_meeting?: boolean;
        /**
         * Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room.
         */
        auto_stop_scheduled_meeting?: boolean;
        /**
         * Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
         *
         */
        count_attendees_number_in_room?: boolean;
        /**
         * Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.
         */
        display_feedback_survey?: boolean;
        /**
         *  Show the same information on the TV that is shown on the controller.
         */
        display_meeting_list?: boolean;
        /**
         * Allow to display room name, time and sharing key on the top portion of TV.
         */
        display_top_banner?: boolean;
        /**
         * Allow in-room participants to input email address where they can recieve the recording before starting a recording if the meeting was created on the Scheduling Display or if it was started using the "Meet Now" option.
         */
        email_address_prompt_before_recording?: boolean;
        /**
         * Encrypt screen and content shared in meetings.
         */
        encrypt_shared_screen_content?: boolean;
        /**
         * If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.
         */
        hide_id_for_private_meeting?: boolean;
        /**
         * Set [Zoom Rooms as the alternative host](https://support.zoom.us/hc/en-us/articles/203614149-Zoom-Rooms-as-Alternative-Host).
         *
         */
        make_room_alternative_host?: boolean;
        /**
         * Enable secure connection between Zoom Rooms computer and controller.
         */
        secure_connection_channel?: boolean;
        /**
         * Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.
         */
        send_whiteboard_to_internal_contact_only?: boolean;
        /**
         * If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field.
         */
        show_alert_before_meeting?: boolean;
        /**
         * Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
         *
         */
        show_call_history_in_room?: boolean;
        /**
         * If enabled, you can invite participants from the contact list during a meeting or when starting a meeting
         */
        show_contact_list_on_controller?: boolean;
        /**
         * When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.
         */
        show_non_video_participants?: boolean;
        /**
         * Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.
         */
        start_airplay_manually?: boolean;
        /**
         * Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms
         */
        start_airplay_mirroring?: boolean;
        /**
         * Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.
         */
        support_join_3rd_party_meeting?: boolean;
        /**
         * If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name's Meeting" instead of the real meeting topic.
         */
        transform_meeting_to_private?: boolean;
        /**
         * If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.
         */
        upcoming_meeting_alert?: boolean;
        /**
         * [Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.
         */
        weekly_system_restart?: boolean;
      };
    }
  | {
      /**
       * The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them.
       */
      client_alert?: {
        /**
         * Display an alert message when an issue is detected with a bluetooth microphone.
         */
        detect_bluetooth_microphone_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with a bluetooth speaker.
         */
        detect_bluetooth_speaker_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with a camera.
         */
        detect_camera_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with microphone.
         */
        detect_microphone_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with a speaker.
         */
        detect_speaker_error_alert?: boolean;
      };
      digital_signage?: {
        /**
         * Specifies the elements that you want to display in the top banner.
         */
        banner?: {
          /**
           * Display or hide banner room name.
           */
          banner_room_name?: boolean;
          /**
           * Display or hide banner sharing key.
           */
          banner_sharing_key?: boolean;
          /**
           * Display or hide time in the banner.
           */
          banner_time?: boolean;
        };
        /**
         * Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
         */
        display_period?: {
          /**
           * Start displaying digital signage content after certain duration after the meeting ends. The value of this field indicates the duration in minutes.
           */
          start_displaying_content?: number;
          /**
           * Stop displaying content {certain_duration} before a meeting is scheduled to begin. The value of this field indicates the duration in minutes.
           */
          stop_displaying_content?: number;
        };
        /**
         * [Indicates whether digital signage is on or off,](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
         * `true`: enable<br> `false`: disable
         */
        enable_digital_signage?: boolean;
        /**
         * Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.
         *
         * `standard`: Standard Center<br>
         * `video_content`: Video + Content
         */
        layout?: string;
        /**
         * Sound of all contents will be muted if the value of this field is set to `true`.
         */
        mute?: boolean;
        /**
         * Content list.
         */
        play_list?: Array<{
          /**
           * Specify an action for the content list. The value can be one of the following:<br>
           * `add`: Add another content list.<br>
           * `update`: Update existing content list.<br>
           * `delete`: Delete content list.
           *
           */
          action?: 'add' | 'update' | 'delete';
          contents?: Array<{
            /**
             * Content Id.
             */
            content_id?: string;
            /**
             * Duration for how long the content will be displayed.
             */
            duration?: number;
            id?: string;
            /**
             * Name of the content.
             */
            name?: string;
            /**
             * Order of the content in the display.
             */
            order?: number;
          }>;
          /**
           * Specify the display end time for the content list in GMT.
           */
          end_time?: string;
          /**
           * Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
           */
          id?: string;
          /**
           * Name of the content list.
           */
          name?: string;
          /**
           * Specify the display start time for the content list in GMT.
           */
          start_time?: string;
        }>;
      };
      /**
       * [Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section.
       */
      notification?: {
        /**
         * Send an alert when the audio echo test result meets usability threshold.
         */
        audio_meet_usability_threshold?: boolean;
        /**
         * Send an alert when the audio echo test result does not meet usability threshold.
         */
        audio_not_meet_usability_threshold?: boolean;
        /**
         * Send an alert when the battery starts charging.
         */
        battery_is_charging?: boolean;
        /**
         * Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
         */
        battery_low_and_not_charging?: boolean;
        /**
         * Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.
         */
        battery_percentage?: string;
        /**
         * Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
         */
        controller_scheduling_disconnected?: boolean;
        /**
         * Send an alert when the Controller or Scheduling Display can be detected again.
         */
        controller_scheduling_reconnected?: boolean;
        /**
         * Send an alert when CPU usage is above 90%.
         */
        cpu_usage_high_detected?: boolean;
        /**
         * Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.
         */
        mic_speaker_camera_disconnected?: boolean;
        /**
         * Send an alert when the mic, speaker or camera is reconnected.
         */
        mic_speaker_camera_reconnected?: boolean;
        /**
         * Send an alert when low bandwidth network is detected
         */
        network_unstable_detected?: boolean;
        /**
         * Send an alert when SIP registration stops working.
         */
        sip_registration_failed?: boolean;
        /**
         * Send an alert after the SIP registration is re-enabled.
         */
        sip_registration_re_enabled?: boolean;
        /**
         * Send an alert when the Zoom Room is online after previously being offline.
         */
        zoom_room_come_back_online?: boolean;
        /**
         * Send an alert when the TV display is disconnected
         */
        zoom_room_display_disconnected?: boolean;
        /**
         * Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
         */
        zoom_room_offline?: boolean;
      };
    };

export type GetZrAccountSettingsError = unknown;

export type UpdateZoomRoomAccSettingsData = {
  body?:
    | {
        zoom_rooms?: {
          /**
           * Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.
           */
          allow_multiple_content_sharing?: boolean;
          /**
           * Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.
           */
          audio_device_daily_auto_test?: boolean;
          /**
           * Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
           */
          auto_direct_sharing?: boolean;
          /**
           * Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
           */
          auto_start_scheduled_meeting?: boolean;
          /**
           * Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room.
           */
          auto_stop_scheduled_meeting?: boolean;
          /**
           * Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
           *
           */
          count_attendees_number_in_room?: boolean;
          /**
           * Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.
           */
          display_feedback_survey?: boolean;
          /**
           *  Show the same information on the TV that is shown on the controller.
           */
          display_meeting_list?: boolean;
          /**
           * Allow to display room name, time and sharing key on the top portion of TV.
           */
          display_top_banner?: boolean;
          /**
           * Allow in-room participants to input email address where they can recieve the recording before starting a recording if the meeting was created on the Scheduling Display or if it was started using the "Meet Now" option.
           */
          email_address_prompt_before_recording?: boolean;
          /**
           * Encrypt screen and content shared in meetings.
           */
          encrypt_shared_screen_content?: boolean;
          /**
           * If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.
           */
          hide_id_for_private_meeting?: boolean;
          /**
           * Set [Zoom Rooms as the alternative host](https://support.zoom.us/hc/en-us/articles/203614149-Zoom-Rooms-as-Alternative-Host).
           *
           */
          make_room_alternative_host?: boolean;
          /**
           * Enable secure connection between Zoom Rooms computer and controller.
           */
          secure_connection_channel?: boolean;
          /**
           * Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.
           */
          send_whiteboard_to_internal_contact_only?: boolean;
          /**
           * If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field.
           */
          show_alert_before_meeting?: boolean;
          /**
           * Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
           *
           */
          show_call_history_in_room?: boolean;
          /**
           * If enabled, you can invite participants from the contact list during a meeting or when starting a meeting
           */
          show_contact_list_on_controller?: boolean;
          /**
           * When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.
           */
          show_non_video_participants?: boolean;
          /**
           * Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.
           */
          start_airplay_manually?: boolean;
          /**
           * Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.
           */
          support_join_3rd_party_meeting?: boolean;
          /**
           * If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name's Meeting" instead of the real meeting topic.
           */
          transform_meeting_to_private?: boolean;
          /**
           * If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.
           */
          upcoming_meeting_alert?: boolean;
          /**
           * [Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.
           */
          weekly_system_restart?: boolean;
        };
      }
    | {
        /**
         * The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them.
         */
        client_alert?: {
          /**
           * Display an alert message when an issue is detected with a bluetooth microphone.
           */
          detect_bluetooth_microphone_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with a bluetooth speaker.
           */
          detect_bluetooth_speaker_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with a camera.
           */
          detect_camera_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with microphone.
           */
          detect_microphone_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with a speaker.
           */
          detect_speaker_error_alert?: boolean;
        };
        digital_signage?: {
          banner?: {
            banner_room_name?: boolean;
            banner_sharing_key?: boolean;
            banner_time?: boolean;
          };
          /**
           * Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
           */
          display_period?: {
            /**
             * Start displaying digital signage content after certain duration after the meeting ends. Specify the value of the duration in minutes in this field.
             */
            start_displaying_content?: number;
            /**
             * Stop displaying content {certain_duration} before a meeting is scheduled to begin. Specify the value of duration in minutes in this field.
             */
            stop_displaying_content?: number;
          };
          /**
           * [Enable or disable digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
           * `true`: enable<br> `false`: disable
           */
          enable_digital_signage?: boolean;
          /**
           * Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.
           *
           * `standard`: Standard Center<br>
           * `video_content`: Video + Content
           */
          layout?: string;
          /**
           * Sound of all contents will be muted if the value of this field is set to `true`.
           */
          mute?: boolean;
          /**
           * Content list.
           */
          play_list?: Array<{
            /**
             * Specify an action for the content list. The value can be one of the following:<br>
             * `add`: Add another content list.<br>
             * `update`: Update existing content list.<br>
             * `delete`: Delete content list.
             *
             */
            action?: 'add' | 'update' | 'delete';
            contents?: Array<{
              /**
               * Specify an action for the content in the content list. The value can be one of the following:<br>
               * `add`: Add another content to the content list.<br>
               * `update`: Update existing content's information in the content list.<br>
               * `delete`: Delete content from the content list.
               *
               *
               */
              action?: string;
              /**
               * Content Id.
               */
              content_id?: string;
              /**
               * By default each content is display for 5 seconds. Using this field, specify how long you would like to display the content.
               */
              duration?: number;
              /**
               * Unique identifier of the content. This field is only required if you would like to remove or update the content information.
               */
              id?: string;
              /**
               * Name of the content.
               */
              name?: string;
              /**
               * Order of the content in the display.
               */
              order?: number;
            }>;
            /**
             * Specify the display end time for the content list in GMT.
             */
            end_time?: string;
            /**
             * Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
             */
            id?: string;
            /**
             * Name of the content list.
             */
            name?: string;
            /**
             * Specify the display start time for the content list in GMT.
             */
            start_time?: string;
          }>;
        };
        /**
         * [Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section.
         */
        notification?: {
          /**
           * Send an alert when the audio echo test result meets usability threshold.
           */
          audio_meet_usability_threshold?: boolean;
          /**
           * Send an alert when the audio echo test result does not meet usability threshold.
           */
          audio_not_meet_usability_threshold?: boolean;
          /**
           * Send an alert when the battery starts charging.
           */
          battery_is_charging?: boolean;
          /**
           * Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
           */
          battery_low_and_not_charging?: boolean;
          /**
           * Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.
           */
          battery_percentage?: string;
          /**
           * Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
           */
          controller_scheduling_disconnected?: boolean;
          /**
           * Send an alert when the Controller or Scheduling Display can be detected again.
           */
          controller_scheduling_reconnected?: boolean;
          /**
           * Send an alert when CPU usage is above 90%.
           */
          cpu_usage_high_detected?: boolean;
          /**
           * Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.
           */
          mic_speaker_camera_disconnected?: boolean;
          /**
           * Send an alert when the mic, speaker or camera is reconnected.
           */
          mic_speaker_camera_reconnected?: boolean;
          /**
           * Send an alert when the network is stable.
           */
          network_stable_detected?: boolean;
          /**
           * Send an alert when low bandwidth network is detected
           */
          network_unstable_detected?: boolean;
          /**
           * Send an alert when SIP registration stops working.
           */
          sip_registration_failed?: boolean;
          /**
           * Send an alert after the SIP registration is re-enabled.
           */
          sip_registration_re_enabled?: boolean;
          /**
           * Send an alert when the Zoom Room is online after previously being offline.
           */
          zoom_room_come_back_online?: boolean;
          /**
           * Send an alert when the TV display is disconnected
           */
          zoom_room_display_disconnected?: boolean;
          /**
           * Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
           */
          zoom_room_offline?: boolean;
        };
      };
  query: {
    /**
     * The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>
     * `meeting`: Meeting settings of the Zoom Rooms Account.<br>
     * `signage`: View digital signage settings of the Zoom Rooms Account.
     */
    setting_type: string;
  };
};

export type UpdateZoomRoomAccSettingsResponse = {
  [key: string]: unknown;
};

export type UpdateZoomRoomAccSettingsError = unknown;

export type ListDigitalSignageContentData = {
  query?: {
    /**
     * Unique identifier of the folder where the content is located. Provide this field if you would like to filter the response by contents that are only available in a specific folder.
     */
    folder_id?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * Specify the type of digital signane resource. The value can be one of the following:
     * * `content`: Returns information about content files.
     * * `folder`: Returns information about the folder where the content files are located.
     */
    type?: string;
  };
};

export type ListDigitalSignageContentResponse = {
  contents?: Array<{
    /**
     * Unique identifier of the content or the folder.
     */
    id?: string;
    /**
     * Name of the content file or the folder.
     */
    name?: string;
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
};

export type ListDigitalSignageContentError = unknown;

export type ManageE911SignageData = {
  body?:
    | {
        /**
         * To display the emergency content on the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_displayed`.
         */
        method?: 'zoomroom.emergency_alert_displayed';
        params?: {
          /**
           * Provide the content to be displayed.
           */
          content?: string;
          /**
           * Provide one of the following IDs associated with the Zoom Room.<br>
           *
           * * `accountId`: Account ID of the Zoom account.<br> Provide account ID as the value of this field to display the alert content on all Zoom Rooms' displays in the account.<br><br>
           * * `locationId`: Location ID. Get the value of this field by calling [List Zoom Rooms Locations API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations).<br>Provide location ID as the value of this field to display the alert content on all Zoom Rooms' displays listed in the specified location.<br><br>
           * * `roomId`: Unique identifier of the Zoom Room. Get the value of this field by calling [List Zoom Rooms API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms). Provide room ID as the value of this field to display the alert content on a specific Zoom Rooms' display.
           */
          target_ids?: Array<string>;
          /**
           * Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
           * * `account`
           * * `location`
           * * `room`
           */
          target_type?: 'account' | 'location' | 'room';
        };
      }
    | {
        /**
         * To remove the emergency content from the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_removed`.
         */
        method?: 'zoomroom.emergency_alert_removed';
        params?: {
          /**
           * Unique identifier of the event.
           */
          event_id?: string;
          /**
           * Provide one of the following IDs associated with the Zoom Room.<br>
           *
           * * `accountId`: Account ID of the Zoom account.<br> Provide account ID as the value of this field to remove the alert content from all Zoom Rooms' displays in the account.<br><br>
           * * `locationId`: Location ID. Get the value of this field by calling [List Zoom Rooms Locations API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations).<br>Provide location ID as the value of this field to remove the alert content from all Zoom Rooms' displays listed in the specified location.<br><br>
           * * `roomId`: Unique identifier of the Zoom Room. Get the value of this field by calling [List Zoom Rooms API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms). Provide room ID as the value of this field to remove the alert content from a specific Zoom Rooms' display.
           */
          target_ids?: Array<string>;
          /**
           * Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
           * * `account`
           * * `location`
           * * `room`
           */
          target_type?: 'account' | 'location' | 'room';
        };
      };
};

export type ManageE911SignageResponse = {
  /**
   * Unique identifier of the event related to the content being displayed. This field is only returned if you provided `zoomroom.emergency_alert_displayed` as the value of the `method` parameter.
   *
   * Save this response value and provide it as the value of the `event_id` request parameter when you need to remove the alert content using `zoomroom.emergency_alert_removed` method.
   */
  event_id?: string;
};

export type ManageE911SignageError = unknown;

export type ListZrLocationsData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * A unique identifier of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1. Use this parameter to filter the response by a specific location hierarchy level.
     */
    parent_location_id?: string;
    /**
     * Use this field to filter the response by the type of location. The value can be one of the following:
     * `country`, `states`, `city`, `campus`, `building`, `floor`.
     */
    type?: string;
  };
};

export type ListZrLocationsResponse = {
  locations?: Array<{
    /**
     * Unique Identifier of the location.
     */
    id?: string;
    /**
     * Name of the location.
     */
    name?: string;
    /**
     * ID (Unique Identifier) of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1 and the parent_location_id of Floor 1 will be the ID of Building A.<br>
     * The value of parent_location_id of the top-level location (country) is the Account ID of the Zoom account.
     */
    parent_location_id?: string;
    /**
     * The type of location. The value can be one of the following:
     * `country`, `states`, `city`, `campus`, `building`, `floor`.
     */
    type?: 'country' | 'states' | 'city' | 'campus' | 'building' | 'floor';
  }>;
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
};

export type ListZrLocationsError = unknown;

export type AddAzrLocationData = {
  body?: {
    /**
     * Name of the location. The name must be unique and shouldn't have already been used in the same account.
     */
    name?: string;
    /**
     * The location ID of the location that is a level higher from the location that is being added.<br><br> For example, to add a City named "City 1" as the child location under a State named "State 1", you must provide the location ID of "State 1". This can be retrieved using the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.
     */
    parent_location_id?: string;
  };
};

export type AddAzrLocationResponse = {
  /**
   * Location ID: Unique Identifier of the location that was added.
   */
  id?: string;
  /**
   * Name of the location.
   */
  name?: string;
  /**
   * Unique Identifier of the parent location.
   */
  parent_location_id?: string;
  /**
   * Type of location. The value should be one of the following:<br>
   * `country`, `states`, `city`, `campus`, `building`, `floor`.
   */
  type?: 'country' | 'states' | 'city' | 'campus' | 'building' | 'floor';
};

export type AddAzrLocationError = unknown;

export type GetZrLocationStructureResponse = {
  /**
   * Hierarchial structure array of the Zoom Rooms location.
   */
  structures?: Array<string>;
};

export type GetZrLocationStructureError = unknown;

export type UpdateZoomRoomsLocationStructureData = {
  body?: {
    /**
     * Location Structure. The value can be either one or a combination of the following strings separated by comma:
     * `country`, `state`, `city`, `campus`, `building`, `floor`
     */
    structures?: Array<string>;
  };
};

export type UpdateZoomRoomsLocationStructureResponse = unknown;

export type UpdateZoomRoomsLocationStructureError = unknown;

export type GetZrLocationProfileData = {
  path: {
    /**
     * Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response).
     */
    locationId: string;
  };
};

export type GetZrLocationProfileResponse = {
  basic?: {
    /**
     * Address
     */
    address?: string;
    /**
     * Description about the location.
     */
    'description '?: string;
    /**
     * Name of the location type.
     */
    name?: string;
    /**
     * Require code to exit out of your Zoom Rooms application to switch between other apps.
     *
     */
    required_code_to_ext?: boolean;
    /**
     * 1-16 digit number or characters that is used to secure your Zoom Rooms application.
     */
    room_passcode?: string;
    /**
     * The email address to be used for reporting Zoom Room issues.
     *
     */
    support_email?: string;
    /**
     * The phone number to be used for reporting Zoom Room issues.
     *
     */
    support_phone?: string;
    /**
     * Timezone (only returned for location type - city).
     */
    timezone?: string;
  };
};

export type GetZrLocationProfileError = unknown;

export type UpdateZrLocationProfileData = {
  body?: {
    basic?: {
      /**
       * Address. Can only be updated for Campus and Building.
       */
      address?: string;
      /**
       * Description about the location.
       */
      'description '?: string;
      /**
       * Name of the location type.
       */
      name?: string;
      /**
       * Require code to exit out of your Zoom Rooms application to switch between other apps.
       *
       */
      required_code_to_ext?: boolean;
      /**
       * 1-16 digit number or characters that is used to secure your Zoom Rooms application.
       */
      room_passcode?: string;
      /**
       * The email address to be used for reporting Zoom Room issues.
       *
       */
      support_email?: string;
      /**
       * The phone number to be used for reporting Zoom Room issues.
       *
       */
      support_phone?: string;
      /**
       * Timezone (can only be updated for location type - city).
       */
      timezone?: string;
    };
  };
  path: {
    /**
     * Unique Identifier of the location. This can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.
     */
    locationId: string;
  };
};

export type UpdateZrLocationProfileResponse = unknown;

export type UpdateZrLocationProfileError = unknown;

export type ChangeParentLocationData = {
  body?: {
    /**
     * Location ID of the new Parent Location under which you the child location will be positioned. This can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.
     */
    parent_location_id?: string;
  };
  path: {
    locationId: string;
  };
};

export type ChangeParentLocationResponse = unknown;

export type ChangeParentLocationError = unknown;

export type GetZrLocationSettingsData = {
  path: {
    /**
     * Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response).
     */
    locationId: string;
  };
  query: {
    /**
     * The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>
     * `meeting`: Meeting settings of the Zoom Rooms Account.<br>
     * `signage`: Digital signage settings of the Zoom Rooms Account.
     */
    setting_type: string;
  };
};

export type GetZrLocationSettingsResponse =
  | {
      meeting_security?: {
        /**
         * Specifies whether enhanced encryption or [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) is being used when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
         * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
         *
         * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
         */
        encryption_type?: 'enhanced_encryption' | 'e2ee';
        /**
         * Allows use of end-to-end encryption for meetings. If set to `true`, the encryption type is specified in `encryption_type` field.
         */
        end_to_end_encrypted_meetings?: boolean;
      };
      zoom_rooms?: {
        /**
         * Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.
         */
        allow_multiple_content_sharing?: boolean;
        /**
         * Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.
         */
        audio_device_daily_auto_test?: boolean;
        /**
         * Automatically accept incoming calls made from other Zoom Rooms or contacts in your account. Enabling this setting will also automatically allow far-end camera control.
         *
         * This setting is returned only for location type - "country".
         */
        auto_accept_incoming_call_and_fecc?: boolean;
        /**
         * Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
         */
        auto_direct_sharing?: boolean;
        /**
         * Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
         */
        auto_start_scheduled_meeting?: boolean;
        /**
         * Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room.
         */
        auto_stop_scheduled_meeting?: boolean;
        /**
         * Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
         *
         */
        count_attendees_number_in_room?: boolean;
        /**
         * Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.
         */
        display_feedback_survey?: boolean;
        /**
         *  Show the same information on the TV that is shown on the controller.
         */
        display_meeting_list?: boolean;
        /**
         * Allow to display room name, time and sharing key on the top portion of TV.
         */
        display_top_banner?: boolean;
        /**
         * Encrypt screen and content shared in meetings.
         */
        encrypt_shared_screen_content?: boolean;
        /**
         * If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.
         */
        hide_id_for_private_meeting?: boolean;
        /**
         * If enabled, you will not see your own video but other people in the meeting can still see your video.
         *
         * This setting is returned only for location type - "country".
         */
        hide_self_view?: boolean;
        /**
         * Lock speaker volume control on controller.
         *
         * This setting is returned only for location type - "country".
         */
        lock_speaker_volume_control?: boolean;
        /**
         * Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.
         */
        send_whiteboard_to_internal_contact_only?: boolean;
        /**
         * If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field.
         */
        show_alert_before_meeting?: boolean;
        /**
         * Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
         *
         */
        show_call_history_in_room?: boolean;
        /**
         * If enabled, you can invite participants from the contact list during a meeting or when starting a meeting
         */
        show_contact_list_on_controller?: boolean;
        /**
         * When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.
         */
        show_non_video_participants?: boolean;
        /**
         * Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.
         */
        start_airplay_manually?: boolean;
        /**
         * Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms
         */
        start_airplay_mirroring?: boolean;
        /**
         * Disable automatic detection and enable manual content sharing from a device to a Zoom Room. Learn more [here](https://support.zoom.us/hc/en-us/articles/201504265-Wired-HDMI-Screen-Share-via-Capture-Device).
         *
         * This setting is returned only for location type - "country".
         */
        start_hdmi_content_share_manualy?: boolean;
        /**
         * Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.
         */
        support_join_3rd_party_meeting?: boolean;
        /**
         * If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name's Meeting" instead of the real meeting topic.
         */
        transform_meeting_to_private?: boolean;
        /**
         * If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.
         */
        upcoming_meeting_alert?: boolean;
        /**
         * Enable [voice commands](https://support.zoom.us/hc/en-us/articles/115000527983-Voice-Command-with-Zoom-Rooms) with Zoom Rooms.
         */
        voice_commands?: boolean;
        /**
         * [Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.
         */
        weekly_system_restart?: boolean;
      };
    }
  | {
      /**
       * The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them.
       */
      client_alert?: {
        /**
         * Display an alert message when an issue is detected with a bluetooth microphone.
         */
        detect_bluetooth_microphone_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with a bluetooth speaker.
         */
        detect_bluetooth_speaker_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with a camera.
         */
        detect_camera_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with microphone.
         */
        detect_microphone_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with a speaker.
         */
        detect_speaker_error_alert?: boolean;
      };
      digital_signage?: {
        /**
         * Specifies the elements that you want to display in the top banner.
         */
        banner?: {
          /**
           * Display or hide banner room name.
           */
          banner_room_name?: boolean;
          /**
           * Display or hide banner sharing key.
           */
          banner_sharing_key?: boolean;
          /**
           * Display or hide time in the banner.
           */
          banner_time?: boolean;
        };
        /**
         * Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
         */
        display_period?: {
          /**
           * Start displaying digital signage content after certain duration after the meeting ends. The value of this field indicates the duration in minutes.
           */
          start_displaying_content?: number;
          /**
           * Stop displaying content {certain_duration} before a meeting is scheduled to begin. The value of this field indicates the duration in minutes.
           */
          stop_displaying_content?: number;
        };
        /**
         * [Indicates whether digital signage is on or off,](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
         * `true`: enable<br> `false`: disable
         */
        enable_digital_signage?: boolean;
        /**
         * Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.
         *
         * `standard`: Standard Center<br>
         * `video_content`: Video + Content
         */
        layout?: string;
        /**
         * Sound of all contents will be muted if the value of this field is set to `true`.
         */
        mute?: boolean;
        /**
         * Content list.
         */
        play_list?: Array<{
          /**
           * Specify an action for the content list. The value can be one of the following:<br>
           * `add`: Add another content list.<br>
           * `update`: Update existing content list.<br>
           * `delete`: Delete content list.
           *
           */
          action?: 'add' | 'update' | 'delete';
          contents?: Array<{
            /**
             * Content Id.
             */
            content_id?: string;
            /**
             * Duration for how long the content will be displayed.
             */
            duration?: number;
            id?: string;
            /**
             * Name of the content.
             */
            name?: string;
            /**
             * Order of the content in the display.
             */
            order?: number;
          }>;
          /**
           * Specify the display end time for the content list in GMT.
           */
          end_time?: string;
          /**
           * Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
           */
          id?: string;
          /**
           * Name of the content list.
           */
          name?: string;
          /**
           * Specify the display start time for the content list in GMT.
           */
          start_time?: string;
        }>;
      };
      /**
       * [Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section.
       */
      notification?: {
        /**
         * Send an alert when the audio echo test result meets usability threshold.
         */
        audio_meet_usability_threshold?: boolean;
        /**
         * Send an alert when the audio echo test result does not meet usability threshold.
         */
        audio_not_meet_usability_threshold?: boolean;
        /**
         * Send an alert when the battery starts charging.
         */
        battery_is_charging?: boolean;
        /**
         * Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
         */
        battery_low_and_not_charging?: boolean;
        /**
         * Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.
         */
        battery_percentage?: string;
        /**
         * Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
         */
        controller_scheduling_disconnected?: boolean;
        /**
         * Send an alert when the Controller or Scheduling Display can be detected again.
         */
        controller_scheduling_reconnected?: boolean;
        /**
         * Send an alert when CPU usage is above 90%.
         */
        cpu_usage_high_detected?: boolean;
        /**
         * Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.
         */
        mic_speaker_camera_disconnected?: boolean;
        /**
         * Send an alert when the mic, speaker or camera is reconnected.
         */
        mic_speaker_camera_reconnected?: boolean;
        /**
         * Send an alert when low bandwidth network is detected
         */
        network_unstable_detected?: boolean;
        /**
         * Send an alert when SIP registration stops working.
         */
        sip_registration_failed?: boolean;
        /**
         * Send an alert after the SIP registration is re-enabled.
         */
        sip_registration_re_enabled?: boolean;
        /**
         * Send an alert when the Zoom Room is online after previously being offline.
         */
        zoom_room_come_back_online?: boolean;
        /**
         * Send an alert when the TV display is disconnected
         */
        zoom_room_display_disconnected?: boolean;
        /**
         * Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
         */
        zoom_room_offline?: boolean;
      };
    };

export type GetZrLocationSettingsError = unknown;

export type UpdateZrLocationSettingsData = {
  body?:
    | {
        meeting_security?: {
          /**
           * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
           * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
           *
           * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
           */
          encryption_type?: 'enhanced_encryption' | 'e2ee';
          /**
           * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
           */
          end_to_end_encrypted_meetings?: boolean;
        };
        zoom_rooms?: {
          /**
           * Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.
           */
          allow_multiple_content_sharing?: boolean;
          /**
           * Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.
           */
          audio_device_daily_auto_test?: boolean;
          /**
           * Automatically accept incoming calls made from other Zoom Rooms or contacts in your account. Enabling this setting will also automatically allow far-end camera control.
           *
           * This setting is returned only for location type - "country".
           */
          auto_accept_incoming_call_and_fecc?: boolean;
          /**
           * Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
           */
          auto_direct_sharing?: boolean;
          /**
           * Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
           */
          auto_start_scheduled_meeting?: boolean;
          /**
           * Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room.
           */
          auto_stop_scheduled_meeting?: boolean;
          /**
           * Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
           *
           */
          count_attendees_number_in_room?: boolean;
          /**
           * Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.
           */
          display_feedback_survey?: boolean;
          /**
           *  Show the same information on the TV that is shown on the controller.
           */
          display_meeting_list?: boolean;
          /**
           * Allow to display room name, time and sharing key on the top portion of TV.
           */
          display_top_banner?: boolean;
          /**
           * Encrypt screen and content shared in meetings.
           */
          encrypt_shared_screen_content?: boolean;
          /**
           * If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.
           */
          hide_id_for_private_meeting?: boolean;
          /**
           * If enabled, you will not see your own video but other people in the meeting can still see your video.
           *
           * This setting is returned only for location type - "country".
           */
          hide_self_view?: boolean;
          /**
           * Lock speaker volume control on controller.
           *
           * This setting is returned only for location type - "country".
           */
          lock_speaker_volume_control?: boolean;
          /**
           * Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.
           */
          send_whiteboard_to_internal_contact_only?: boolean;
          /**
           * If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field.
           */
          show_alert_before_meeting?: boolean;
          /**
           * Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
           *
           */
          show_call_history_in_room?: boolean;
          /**
           * If enabled, you can invite participants from the contact list during a meeting or when starting a meeting
           */
          show_contact_list_on_controller?: boolean;
          /**
           * When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.
           */
          show_non_video_participants?: boolean;
          /**
           * Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.
           */
          start_airplay_manually?: boolean;
          /**
           * Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms
           */
          start_airplay_mirroring?: boolean;
          /**
           * Disable automatic detection and enable manual content sharing from a device to a Zoom Room. Learn more [here](https://support.zoom.us/hc/en-us/articles/201504265-Wired-HDMI-Screen-Share-via-Capture-Device).
           *
           * This setting is returned only for location type - "country".
           */
          start_hdmi_content_share_manualy?: boolean;
          /**
           * Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.
           */
          support_join_3rd_party_meeting?: boolean;
          /**
           * If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name's Meeting" instead of the real meeting topic.
           */
          transform_meeting_to_private?: boolean;
          /**
           * If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.
           */
          upcoming_meeting_alert?: boolean;
          /**
           * Enable [voice commands](https://support.zoom.us/hc/en-us/articles/115000527983-Voice-Command-with-Zoom-Rooms) with Zoom Rooms.
           */
          voice_commands?: boolean;
          /**
           * [Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.
           */
          weekly_system_restart?: boolean;
        };
      }
    | {
        /**
         * The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them.
         */
        client_alert?: {
          /**
           * Display an alert message when an issue is detected with a bluetooth microphone.
           */
          detect_bluetooth_microphone_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with a bluetooth speaker.
           */
          detect_bluetooth_speaker_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with a camera.
           */
          detect_camera_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with microphone.
           */
          detect_microphone_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with a speaker.
           */
          detect_speaker_error_alert?: boolean;
        };
        digital_signage?: {
          banner?: {
            banner_room_name?: boolean;
            banner_sharing_key?: boolean;
            banner_time?: boolean;
          };
          /**
           * Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
           */
          display_period?: {
            /**
             * Start displaying digital signage content after certain duration after the meeting ends. Specify the value of the duration in minutes in this field.
             */
            start_displaying_content?: number;
            /**
             * Stop displaying content {certain_duration} before a meeting is scheduled to begin. Specify the value of duration in minutes in this field.
             */
            stop_displaying_content?: number;
          };
          /**
           * [Enable or disable digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
           * `true`: enable<br> `false`: disable
           */
          enable_digital_signage?: boolean;
          /**
           * Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.
           *
           * `standard`: Standard Center<br>
           * `video_content`: Video + Content
           */
          layout?: string;
          /**
           * Sound of all contents will be muted if the value of this field is set to `true`.
           */
          mute?: boolean;
          /**
           * Content list.
           */
          play_list?: Array<{
            /**
             * Specify an action for the content list. The value can be one of the following:<br>
             * `add`: Add another content list.<br>
             * `update`: Update existing content list.<br>
             * `delete`: Delete content list.
             *
             */
            action?: 'add' | 'update' | 'delete';
            contents?: Array<{
              /**
               * Specify an action for the content in the content list. The value can be one of the following:<br>
               * `add`: Add another content to the content list.<br>
               * `update`: Update existing content's information in the content list.<br>
               * `delete`: Delete content from the content list.
               *
               *
               */
              action?: string;
              /**
               * Content Id.
               */
              content_id?: string;
              /**
               * By default each content is display for 5 seconds. Using this field, specify how long you would like to display the content.
               */
              duration?: number;
              /**
               * Unique identifier of the content. This field is only required if you would like to remove or update the content information.
               */
              id?: string;
              /**
               * Name of the content.
               */
              name?: string;
              /**
               * Order of the content in the display.
               */
              order?: number;
            }>;
            /**
             * Specify the display end time for the content list in GMT.
             */
            end_time?: string;
            /**
             * Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
             */
            id?: string;
            /**
             * Name of the content list.
             */
            name?: string;
            /**
             * Specify the display start time for the content list in GMT.
             */
            start_time?: string;
          }>;
        };
        /**
         * [Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section.
         */
        notification?: {
          /**
           * Send an alert when the audio echo test result meets usability threshold.
           */
          audio_meet_usability_threshold?: boolean;
          /**
           * Send an alert when the audio echo test result does not meet usability threshold.
           */
          audio_not_meet_usability_threshold?: boolean;
          /**
           * Send an alert when the battery starts charging.
           */
          battery_is_charging?: boolean;
          /**
           * Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
           */
          battery_low_and_not_charging?: boolean;
          /**
           * Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.
           */
          battery_percentage?: string;
          /**
           * Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
           */
          controller_scheduling_disconnected?: boolean;
          /**
           * Send an alert when the Controller or Scheduling Display can be detected again.
           */
          controller_scheduling_reconnected?: boolean;
          /**
           * Send an alert when CPU usage is above 90%.
           */
          cpu_usage_high_detected?: boolean;
          /**
           * Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.
           */
          mic_speaker_camera_disconnected?: boolean;
          /**
           * Send an alert when the mic, speaker or camera is reconnected.
           */
          mic_speaker_camera_reconnected?: boolean;
          /**
           * Send an alert when low bandwidth network is detected
           */
          network_unstable_detected?: boolean;
          /**
           * Send an alert when SIP registration stops working.
           */
          sip_registration_failed?: boolean;
          /**
           * Send an alert after the SIP registration is re-enabled.
           */
          sip_registration_re_enabled?: boolean;
          /**
           * Send an alert when the Zoom Room is online after previously being offline.
           */
          zoom_room_come_back_online?: boolean;
          /**
           * Send an alert when the TV display is disconnected
           */
          zoom_room_display_disconnected?: boolean;
          /**
           * Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
           */
          zoom_room_offline?: boolean;
        };
      };
  path: {
    /**
     * Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response).
     */
    locationId: string;
  };
  query: {
    /**
     * The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>
     * `meeting`: Meeting settings of the Zoom Rooms Account.<br>
     * `signage`: Digital signage settings.
     */
    setting_type: string;
  };
};

export type UpdateZrLocationSettingsResponse = unknown;

export type UpdateZrLocationSettingsError = unknown;

export type CheckInRoomsData = {
  body?: {
    /**
     * The value of this field can be one of the following:<br>
     * * zoomroom.check_in
     * * zoomroom.check_out
     */
    method?: string;
    params?: {
      /**
       * This field is only required if Google Calendar is being used for the event associated with the Zoom Room. The value for this field can be retrieved by calling Google's [CalendarList:list API](https://developers.google.com/calendar/v3/reference/events/list) and referring to the "id" field included in the [calendarList resource](https://developers.google.com/calendar/v3/reference/calendarList#resource).
       *
       *
       */
      calendar_id?: string;
      /**
       * This field is required only for Microsoft Exchange or Office 365  calendar. The change key represents the specific version of the calendar item and can be retrieved by using Microsoft's [FindItem Operation](https://docs.microsoft.com/en-us/exchange/client-developer/web-service-reference/finditem-operation) and referring to the ChangeKey field of the ItemId Element included in the operation response.<br>
       */
      change_key?: string;
      /**
       * Unique Identifier of the calendar event associated with the Zoom Room.<br><br>If the calendar integration being used is Microsoft Exchange, the value for this field can be retrieved by using Microsoft's [FindItem Operation](https://docs.microsoft.com/en-us/exchange/client-developer/web-service-reference/finditem-operation) and referring to the Id field of the ItemId Element included in the operation response.<br><br>If the Google calendar integration was used for this event, the event_id can be retrieved by calling Google's [Events:list API](https://developers.google.com/calendar/v3/reference/events/list) and referring to the "id" field included in the [events resource](https://developers.google.com/calendar/v3/reference/events#resource).
       *
       *
       */
      event_id: string;
      /**
       * This field is only required for Microsoft Exchange / Office 365 Calendar. It is the [resource mailbox](https://support.microsoft.com/en-us/help/10063/creating-and-managing-resource-mailboxes-in-office-365) associated with the calendar.
       */
      resource_email?: string;
    };
  };
  path: {
    /**
     * Room ID
     */
    id: string;
  };
};

export type CheckInRoomsResponse = unknown;

export type CheckInRoomsError = unknown;

export type DeleteAzoomRoomData = {
  path: {
    /**
     * Unique Identifier of a Zoom Room.
     */
    roomId: string;
  };
};

export type DeleteAzoomRoomResponse = {
  [key: string]: unknown;
};

export type DeleteAzoomRoomError = unknown;

export type GetZrProfileData = {
  path: {
    /**
     * Unique Identifier of the Zoom Room. This can be retrieved from the response of [List Zoom Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms) API.
     */
    roomId: string;
  };
};

export type GetZrProfileResponse = {
  basic?: {
    /**
     * Activation Code is the code that is used to complete the setup of the Zoom Room.
     */
    activation_code?: string;
    /**
     * Hide this Zoom Room from your Contact List.
     */
    hide_room_in_contacts?: boolean;
    /**
     * Name of the Zoom Room.
     */
    name?: string;
    /**
     * Require code to exit out of Zoom Rooms application to switch between other apps.
     *
     */
    required_code_to_ext?: boolean;
    /**
     * 1-16 digit number or characters that is used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or sign out.
     */
    room_passcode?: string;
    /**
     * The email address to be used for reporting Zoom Room issues.
     */
    support_email?: string;
    /**
     * The phone number to be used for reporting Zoom Room issues.
     *
     */
    support_phone?: string;
  };
};

export type GetZrProfileError = unknown;

export type UpdateRoomProfileData = {
  body?: {
    basic?: {
      /**
       * Hide this Zoom Room from your Contact List.
       */
      hide_room_in_contacts?: boolean;
      /**
       * Name of the Zoom Room.
       */
      name?: string;
      /**
       * Require code to exit out of Zoom Rooms application to switch between other apps.
       *
       */
      required_code_to_ext?: boolean;
      /**
       * 1-16 digit number or characters that is used to secure your Zoom Rooms application. This code must be entered on your Zoom Room Controller to change settings or sign out.
       */
      room_passcode?: string;
      /**
       * The email address to be used for reporting Zoom Room issues.
       */
      support_email?: string;
      /**
       * The phone number to be used for reporting Zoom Room issues.
       *
       */
      support_phone?: string;
    };
  };
  path: {
    /**
     * Unique Identifier of a Zoom Room.
     */
    roomId: string;
  };
};

export type UpdateRoomProfileResponse = {
  [key: string]: unknown;
};

export type UpdateRoomProfileError = unknown;

export type ListZrDevicesData = {
  path: {
    /**
     * Unique Identifier of the Zoom Room. This can be retrieved from the response of [List Zoom Rooms](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms) API.
     */
    roomId: string;
  };
};

export type ListZrDevicesResponse = {
  devices?: Array<{
    /**
     * App version of Zoom Rooms.
     */
    app_version?: string;
    /**
     * Operating system of the device.
     */
    device_system?: string;
    /**
     * Type of the device. The value of this field can be one of the following:<br>`Zoom Rooms Computer`,<br> `Controller`, `Scheduling Display`, `Zoom Rooms Control System`, `Companion Whiteboard`
     */
    device_type?:
      | 'Zoom Rooms Computer'
      | 'Controller'
      | 'Scheduling Display'
      | 'Zoom Rooms Control System'
      | 'Companion Whiteboard';
    /**
     * Unique identifier of the device.
     */
    id?: string;
    /**
     * Name of the Zoom Room.
     */
    room_name?: string;
    /**
     * Status of the device. The value can be either `Online` or `Offline`.
     */
    status?: 'Online' | 'Offline';
  }>;
};

export type ListZrDevicesError = unknown;

export type ChangeZoomRoomsAppVersionData = {
  body?: {
    /**
     * Specify one of the following values for this field:
     *
     * `upgrade`: Upgrade to the latest Zoom Rooms App Version.<br>
     * `downgrade`: Downgrade the Zoom Rooms App Version.<br>
     * `cancel`: Cancel an ongoing upgrade or downgrade process.
     */
    action?: 'upgrade' | 'downgrade' | 'cancel';
  };
  path: {
    /**
     * Unique Identifier of the Mac or the Windows device. The value of this field can be retrieved from the [List Zoom Room Devices API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzrdevices).
     */
    deviceId: string;
    /**
     * Unique Identifier of the Zoom Room.
     */
    roomId: string;
  };
};

export type ChangeZoomRoomsAppVersionResponse = unknown;

export type ChangeZoomRoomsAppVersionError = unknown;

export type ChangeZrLocationData = {
  body?: {
    /**
     * Location ID of the location where Zoom Room is to be assigned. This can be retrieved from the `id` property in the response of [List Zoom Rooms Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.
     */
    location_id?: string;
  };
  path: {
    /**
     * Unique Identifier of the Zoom Room.
     */
    roomId: string;
  };
};

export type ChangeZrLocationResponse = unknown;

export type ChangeZrLocationError = unknown;

export type GetZrSettingsData = {
  path: {
    /**
     * Unique identifier of the Zoom Room.
     */
    roomId: string;
  };
  query: {
    /**
     * The type of setting that you would like to retrieve.<br> `alert`: Alert Settings applied on the Zoom Rooms Account.<br>
     * `meeting`: Meeting settings of the Zoom Rooms Account.
     */
    setting_type: string;
  };
};

export type GetZrSettingsResponse =
  | {
      meeting_security?: {
        /**
         * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
         * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
         *
         * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
         */
        encryption_type?: 'enhanced_encryption' | 'e2ee';
        /**
         * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
         */
        end_to_end_encrypted_meetings?: boolean;
      };
      zoom_rooms?: {
        /**
         * Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.
         */
        allow_multiple_content_sharing?: boolean;
        /**
         * Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.
         */
        audio_device_daily_auto_test?: boolean;
        /**
         * Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
         */
        auto_direct_sharing?: boolean;
        /**
         * Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
         */
        auto_start_scheduled_meeting?: boolean;
        /**
         * Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room.
         */
        auto_stop_scheduled_meeting?: boolean;
        /**
         * Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
         *
         */
        count_attendees_number_in_room?: boolean;
        /**
         * Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.
         */
        display_feedback_survey?: boolean;
        /**
         *  Show the same information on the TV that is shown on the controller.
         */
        display_meeting_list?: boolean;
        /**
         * Allow to display room name, time and sharing key on the top portion of TV.
         */
        display_top_banner?: boolean;
        /**
         * Encrypt screen and content shared in meetings.
         */
        encrypt_shared_screen_content?: boolean;
        /**
         * If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.
         */
        hide_id_for_private_meeting?: boolean;
        /**
         * Hide share instructions from TV.
         */
        hide_share_instruction?: boolean;
        /**
         * Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.
         */
        send_whiteboard_to_internal_contact_only?: boolean;
        /**
         * If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field.
         */
        show_alert_before_meeting?: boolean;
        /**
         * Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
         *
         */
        show_call_history_in_room?: boolean;
        /**
         * If enabled, you can invite participants from the contact list during a meeting or when starting a meeting
         */
        show_contact_list_on_controller?: boolean;
        /**
         * When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.
         */
        show_non_video_participants?: boolean;
        /**
         * Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.
         */
        start_airplay_manually?: boolean;
        /**
         * Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms
         */
        start_airplay_mirroring?: boolean;
        /**
         * Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.
         */
        support_join_3rd_party_meeting?: boolean;
        /**
         * If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name's Meeting" instead of the real meeting topic.
         */
        transform_meeting_to_private?: boolean;
        /**
         * If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.
         */
        upcoming_meeting_alert?: boolean;
        /**
         * [Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.
         */
        weekly_system_restart?: boolean;
      };
    }
  | {
      /**
       * The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them.
       */
      client_alert?: {
        /**
         * Display an alert message when an issue is detected with a bluetooth microphone.
         */
        detect_bluetooth_microphone_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with a bluetooth speaker.
         */
        detect_bluetooth_speaker_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with a camera.
         */
        detect_camera_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with microphone.
         */
        detect_microphone_error_alert?: boolean;
        /**
         * Display an alert message when an issue is detected with a speaker.
         */
        detect_speaker_error_alert?: boolean;
      };
      digital_signage?: {
        /**
         * Specifies the elements that you want to display in the top banner.
         */
        banner?: {
          /**
           * Display or hide banner room name.
           */
          banner_room_name?: boolean;
          /**
           * Display or hide banner sharing key.
           */
          banner_sharing_key?: boolean;
          /**
           * Display or hide time in the banner.
           */
          banner_time?: boolean;
        };
        /**
         * Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
         */
        display_period?: {
          /**
           * Start displaying digital signage content after certain duration after the meeting ends. The value of this field indicates the duration in minutes.
           */
          start_displaying_content?: number;
          /**
           * Stop displaying content {certain_duration} before a meeting is scheduled to begin. The value of this field indicates the duration in minutes.
           */
          stop_displaying_content?: number;
        };
        /**
         * [Indicates whether digital signage is on or off,](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
         * `true`: enable<br> `false`: disable
         */
        enable_digital_signage?: boolean;
        /**
         * Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.
         *
         * `standard`: Standard Center<br>
         * `video_content`: Video + Content
         */
        layout?: string;
        /**
         * Sound of all contents will be muted if the value of this field is set to `true`.
         */
        mute?: boolean;
        /**
         * Content list.
         */
        play_list?: Array<{
          /**
           * Specify an action for the content list. The value can be one of the following:<br>
           * `add`: Add another content list.<br>
           * `update`: Update existing content list.<br>
           * `delete`: Delete content list.
           *
           */
          action?: 'add' | 'update' | 'delete';
          contents?: Array<{
            /**
             * Content Id.
             */
            content_id?: string;
            /**
             * Duration for how long the content will be displayed.
             */
            duration?: number;
            id?: string;
            /**
             * Name of the content.
             */
            name?: string;
            /**
             * Order of the content in the display.
             */
            order?: number;
          }>;
          /**
           * Specify the display end time for the content list in GMT.
           */
          end_time?: string;
          /**
           * Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
           */
          id?: string;
          /**
           * Name of the content list.
           */
          name?: string;
          /**
           * Specify the display start time for the content list in GMT.
           */
          start_time?: string;
        }>;
      };
      /**
       * [Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section.
       */
      notification?: {
        /**
         * Send an alert when the audio echo test result meets usability threshold.
         */
        audio_meet_usability_threshold?: boolean;
        /**
         * Send an alert when the audio echo test result does not meet usability threshold.
         */
        audio_not_meet_usability_threshold?: boolean;
        /**
         * Send an alert when the battery starts charging.
         */
        battery_is_charging?: boolean;
        /**
         * Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
         */
        battery_low_and_not_charging?: boolean;
        /**
         * Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.
         */
        battery_percentage?: string;
        /**
         * Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
         */
        controller_scheduling_disconnected?: boolean;
        /**
         * Send an alert when the Controller or Scheduling Display can be detected again.
         */
        controller_scheduling_reconnected?: boolean;
        /**
         * Send an alert when CPU usage is above 90%.
         */
        cpu_usage_high_detected?: boolean;
        /**
         * Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.
         */
        mic_speaker_camera_disconnected?: boolean;
        /**
         * Send an alert when the mic, speaker or camera is reconnected.
         */
        mic_speaker_camera_reconnected?: boolean;
        /**
         * Send an alert when low bandwidth network is detected
         */
        network_unstable_detected?: boolean;
        /**
         * Send an alert when SIP registration stops working.
         */
        sip_registration_failed?: boolean;
        /**
         * Send an alert after the SIP registration is re-enabled.
         */
        sip_registration_re_enabled?: boolean;
        /**
         * Send an alert when the Zoom Room is online after previously being offline.
         */
        zoom_room_come_back_online?: boolean;
        /**
         * Send an alert when the TV display is disconnected
         */
        zoom_room_display_disconnected?: boolean;
        /**
         * Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
         */
        zoom_room_offline?: boolean;
      };
    };

export type GetZrSettingsError = unknown;

export type UpdateZrSettingsData = {
  body?:
    | {
        meeting_security?: {
          /**
           * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
           * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
           *
           * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
           */
          encryption_type?: 'enhanced_encryption' | 'e2ee';
          /**
           * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
           */
          end_to_end_encrypted_meetings?: boolean;
        };
        zoom_rooms?: {
          /**
           * Enable multiple participants to [share content simultaneously](https://support.zoom.us/hc/en-us/articles/360017767812-Sharing-Multiple-Screens-in-a-Zoom-Room) by default.
           */
          allow_multiple_content_sharing?: boolean;
          /**
           * Enable [automated audio test](https://support.zoom.us/hc/en-us/articles/360000319683-Zoom-Rooms-Daily-Audio-Testing) to ensure high quality audio.
           */
          audio_device_daily_auto_test?: boolean;
          /**
           * Enable participants in a Zoom Room to share their laptop screen on the Zoom Room TV without entering a meeting ID or sharing code.
           */
          auto_direct_sharing?: boolean;
          /**
           * Automatically start scheduled meetings according to the start time listed on the calendar associated with the room. A meeting alert will appear 10 minutes prior to the scheduled time on the TV.
           */
          auto_start_scheduled_meeting?: boolean;
          /**
           * Automatically stop the meeting at the end time as scheduled and listed in the calendar associated with the room.
           */
          auto_stop_scheduled_meeting?: boolean;
          /**
           * Use facial detection technology to [determine and display the attendees count](https://support.zoom.us/hc/en-us/articles/360031027111-Count-Attendees-in-Zoom-Rooms) after meetings on Dashboard.
           *
           */
          count_attendees_number_in_room?: boolean;
          /**
           * Display a [survey](https://support.zoom.us/hc/en-us/articles/214193146-End-of-Meeting-Attendee-Feedback) at the end of each meeting regarding the audio and video quality on the Zoom Rooms Controller.
           */
          display_feedback_survey?: boolean;
          /**
           *  Show the same information on the TV that is shown on the controller.
           */
          display_meeting_list?: boolean;
          /**
           * Allow to display room name, time and sharing key on the top portion of TV.
           */
          display_top_banner?: boolean;
          /**
           * Encrypt screen and content shared in meetings.
           */
          encrypt_shared_screen_content?: boolean;
          /**
           * If enabled, the meeting host and meeting ID (in addition to the meeting topic) are hidden from the Zoom Rooms display for private meetings. This affects meetings that were originally scheduled as private, as well as public meetings that were transformed to private.
           */
          hide_id_for_private_meeting?: boolean;
          /**
           * Hide share instructions from TV.
           */
          hide_share_instruction?: boolean;
          /**
           * Restrict[ sending Whiteboard sessions](https://support.zoom.us/hc/en-us/articles/115004797286-Using-the-Whiteboard-in-Zoom-Rooms-for-Touch#h_781274b3-5237-4320-8826-be2120b00e21) to contacts or internal users only.
           */
          send_whiteboard_to_internal_contact_only?: boolean;
          /**
           * If enabled, the upcoming meeting alert message will be shown on the TV display. The value of the `upcoming_meeting_alert` field should be set to `true` to use this field.
           */
          show_alert_before_meeting?: boolean;
          /**
           * Allow users to see call history of joined meetings and phone calls from the Zoom Rooms controller.
           *
           */
          show_call_history_in_room?: boolean;
          /**
           * If enabled, you can invite participants from the contact list during a meeting or when starting a meeting
           */
          show_contact_list_on_controller?: boolean;
          /**
           * When enabled, meeting participants that are audio only or have their video turned off will also be shown on the Zoom Rooms display by default.
           */
          show_non_video_participants?: boolean;
          /**
           * Require the AirPlay service to be [started by an administrator](https://support.zoom.us/hc/en-us/articles/204726885-Screen-Share-Using-Airplay-Mirroring#h_a342ad38-4e46-47a8-a1d9-cded3b144b39) rather than always being available.
           */
          start_airplay_manually?: boolean;
          /**
           * Allow users to share content via Apple Screen Mirroring (called Airplay on iOS 11 or earlier) in Zoom Rooms
           */
          start_airplay_mirroring?: boolean;
          /**
           * Integrate with Skype for Business, GoToMeeting, or WebEx and show the meeting dial-in button on the meeting list tab for Zoom Rooms Controllers.
           */
          support_join_3rd_party_meeting?: boolean;
          /**
           * If enabled, all meetings in this room will be treated as [private meetings](https://support.zoom.us/hc/en-us/articles/115001051063-Zoom-Rooms-Private-Meetings), and the Zoom Room will display "Your Name's Meeting" instead of the real meeting topic.
           */
          transform_meeting_to_private?: boolean;
          /**
           * If enabled, a reminder will display 10 minutes prior to the next scheduled meeting on the controller.
           */
          upcoming_meeting_alert?: boolean;
          /**
           * [Restart](https://support.zoom.us/hc/en-us/articles/205418949-Zoom-Rooms-Weekly-System-Restart) the Zoom Rooms computer and controller once a week.
           */
          weekly_system_restart?: boolean;
        };
      }
    | {
        /**
         * The Client Alert Settings section includes alerts that display on the TV screen of the Zoom Room. Disable these settings if you have deliberately disconnected one or more peripheral devices or have never enabled them.
         */
        client_alert?: {
          /**
           * Display an alert message when an issue is detected with a bluetooth microphone.
           */
          detect_bluetooth_microphone_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with a bluetooth speaker.
           */
          detect_bluetooth_speaker_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with a camera.
           */
          detect_camera_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with microphone.
           */
          detect_microphone_error_alert?: boolean;
          /**
           * Display an alert message when an issue is detected with a speaker.
           */
          detect_speaker_error_alert?: boolean;
        };
        digital_signage?: {
          banner?: {
            banner_room_name?: boolean;
            banner_sharing_key?: boolean;
            banner_time?: boolean;
          };
          /**
           * Display period object lets you define the number of minutes before or after the scheduled meeting time you would like the content to display.
           */
          display_period?: {
            /**
             * Start displaying digital signage content after certain duration after the meeting ends. Specify the value of the duration in minutes in this field.
             */
            start_displaying_content?: number;
            /**
             * Stop displaying content {certain_duration} before a meeting is scheduled to begin. Specify the value of duration in minutes in this field.
             */
            stop_displaying_content?: number;
          };
          /**
           * [Enable or disable digital signage](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_767fbb33-82a8-45a8-8392-a1bfa9687edd). <br>
           * `true`: enable<br> `false`: disable
           */
          enable_digital_signage?: boolean;
          /**
           * Set the [layout](https://support.zoom.us/hc/en-us/articles/360000030683-Zoom-Rooms-digital-signage#h_4e25ddf3-8f97-4957-8f8b-99725f940fa7). The value of this field can be either `standard` or `video_content`.
           *
           * `standard`: Standard Center<br>
           * `video_content`: Video + Content
           */
          layout?: string;
          /**
           * Sound of all contents will be muted if the value of this field is set to `true`.
           */
          mute?: boolean;
          /**
           * Content list.
           */
          play_list?: Array<{
            /**
             * Specify an action for the content list. The value can be one of the following:<br>
             * `add`: Add another content list.<br>
             * `update`: Update existing content list.<br>
             * `delete`: Delete content list.
             *
             */
            action?: 'add' | 'update' | 'delete';
            contents?: Array<{
              /**
               * Specify an action for the content in the content list. The value can be one of the following:<br>
               * `add`: Add another content to the content list.<br>
               * `update`: Update existing content's information in the content list.<br>
               * `delete`: Delete content from the content list.
               *
               *
               */
              action?: string;
              /**
               * Content Id.
               */
              content_id?: string;
              /**
               * By default each content is display for 5 seconds. Using this field, specify how long you would like to display the content.
               */
              duration?: number;
              /**
               * Unique identifier of the content. This field is only required if you would like to remove or update the content information.
               */
              id?: string;
              /**
               * Name of the content.
               */
              name?: string;
              /**
               * Order of the content in the display.
               */
              order?: number;
            }>;
            /**
             * Specify the display end time for the content list in GMT.
             */
            end_time?: string;
            /**
             * Unique identifier of the content list. This field is only required if you would like to remove or update the content list.
             */
            id?: string;
            /**
             * Name of the content list.
             */
            name?: string;
            /**
             * Specify the display start time for the content list in GMT.
             */
            start_time?: string;
          }>;
        };
        /**
         * [Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section.
         */
        notification?: {
          /**
           * Send an alert when the audio echo test result meets usability threshold.
           */
          audio_meet_usability_threshold?: boolean;
          /**
           * Send an alert when the audio echo test result does not meet usability threshold.
           */
          audio_not_meet_usability_threshold?: boolean;
          /**
           * Send an alert when the battery starts charging.
           */
          battery_is_charging?: boolean;
          /**
           * Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
           */
          battery_low_and_not_charging?: boolean;
          /**
           * Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.
           */
          battery_percentage?: string;
          /**
           * Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
           */
          controller_scheduling_disconnected?: boolean;
          /**
           * Send an alert when the Controller or Scheduling Display can be detected again.
           */
          controller_scheduling_reconnected?: boolean;
          /**
           * Send an alert when CPU usage is above 90%.
           */
          cpu_usage_high_detected?: boolean;
          /**
           * Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.
           */
          mic_speaker_camera_disconnected?: boolean;
          /**
           * Send an alert when the mic, speaker or camera is reconnected.
           */
          mic_speaker_camera_reconnected?: boolean;
          /**
           * Send an alert when low bandwidth network is detected
           */
          network_unstable_detected?: boolean;
          /**
           * Send an alert when SIP registration stops working.
           */
          sip_registration_failed?: boolean;
          /**
           * Send an alert after the SIP registration is re-enabled.
           */
          sip_registration_re_enabled?: boolean;
          /**
           * Send an alert when the Zoom Room is online after previously being offline.
           */
          zoom_room_come_back_online?: boolean;
          /**
           * Send an alert when the TV display is disconnected
           */
          zoom_room_display_disconnected?: boolean;
          /**
           * Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
           */
          zoom_room_offline?: boolean;
        };
      };
  path: {
    /**
     * Unique Identifier of the Zoom Room.
     */
    roomId: string;
  };
  query?: {
    /**
     * The type of setting that you would like to update.<br> `alert`: Alert Settings applied on the Zoom Room.<br>
     * `meeting`: Meeting settings of the Zoom Room.<br>
     * `signage`: Digital signage settings applied on the Zoom Room.
     */
    setting_type?: string;
  };
};

export type UpdateZrSettingsResponse = unknown;

export type UpdateZrSettingsError = unknown;

export type ListSipPhonesData = {
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     *
     * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
     *
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned.
     */
    search_key?: string;
  };
};

export type ListSipPhonesResponse = {
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * SIP phones object.
   */
  phones?: Array<{
    /**
     * Authorization name of the user  registered for SIP Phone.
     */
    authorization_name?: string;
    /**
     * The name or IP address of your provider’s SIP domain. (example: CDC.WEB).
     *
     */
    domain?: string;
    /**
     * Unique Identifier of the SIP Phone.
     */
    id?: string;
    /**
     * The password generated for the user in the SIP account.
     *
     */
    password?: string;
    /**
     * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
     */
    proxy_server?: string;
    /**
     * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
     */
    proxy_server2?: string;
    /**
     * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
     */
    proxy_server3?: string;
    /**
     * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
     */
    register_server?: string;
    /**
     * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
     */
    register_server2?: string;
    /**
     * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
     */
    register_server3?: string;
    /**
     * The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server.
     */
    registration_expire_time?: number;
    /**
     * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
     */
    transport_protocol?: 'UDP' | 'TCP' | 'TLS' | 'AUTO';
    /**
     * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
     */
    transport_protocol2?: 'UDP' | 'TCP' | 'TLS' | 'AUTO';
    /**
     * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
     */
    transport_protocol3?: 'UDP' | 'TCP' | 'TLS' | 'AUTO';
    /**
     * The email address of the user to associate with the SIP Phone. Can add [.win, .mac, .android, .ipad, .iphone, .linux, .pc, .mobile, .pad] at the end of the email (ex. user@test.com.mac) to add accounts for different platforms for the same user.
     */
    user_email?: string;
    /**
     * The phone number associated with the user in the SIP account.
     */
    user_name?: string;
    /**
     * The number to dial for checking voicemail.
     */
    voice_mail?: string;
  }>;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
};

export type ListSipPhonesError = unknown;

export type CreateSipPhoneData = {
  body?: {
    /**
     * Authorization name of the user  registered for SIP Phone.
     */
    authorization_name: string;
    /**
     * The name or IP address of your provider’s SIP domain. (example: CDC.WEB).
     */
    domain: string;
    /**
     * The password generated for the user in the SIP account.
     */
    password: string;
    /**
     * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.
     */
    proxy_server: string;
    /**
     * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
     */
    proxy_server2?: string;
    /**
     * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
     */
    proxy_server3?: string;
    /**
     * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
     */
    register_server: string;
    /**
     * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
     */
    register_server2?: string;
    /**
     * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
     */
    register_server3?: string;
    /**
     * The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server.
     */
    registration_expire_time?: number;
    /**
     * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
     */
    transport_protocol?: 'UDP' | 'TCP' | 'TLS' | 'AUTO';
    /**
     * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
     */
    transport_protocol2?: 'UDP' | 'TCP' | 'TLS' | 'AUTO';
    /**
     * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
     */
    transport_protocol3?: 'UDP' | 'TCP' | 'TLS' | 'AUTO';
    /**
     * The email address of the user to associate with the SIP Phone. Can add [.win, .mac, .android, .ipad, .iphone, .linux, .pc, .mobile, .pad] at the end of the email (ex. user@test.com.mac) to add accounts for different platforms for the same user.
     */
    user_email: string;
    /**
     * The phone number associated with the user in the SIP account.
     */
    user_name: string;
    /**
     * The number to dial for checking voicemail.
     */
    voice_mail: string;
  };
};

export type CreateSipPhoneResponse = unknown;

export type CreateSipPhoneError = unknown;

export type DeleteSipPhoneData = {
  path: {
    /**
     * Unique Identifier of the SIP Phone. It can be retrieved from the List SIP Phones API.
     */
    phoneId: string;
  };
};

export type DeleteSipPhoneResponse =
  | unknown
  | {
      [key: string]: unknown;
    };

export type DeleteSipPhoneError = unknown;

export type UpdateSipPhoneData = {
  body?: {
    /**
     * Authorization name of the user  registered for SIP Phone.
     */
    authorization_name: string;
    /**
     * The name or IP address of your provider’s SIP domain. (example: CDC.WEB).
     */
    domain: string;
    /**
     * The password generated for the user in the SIP account.
     */
    password: string;
    /**
     * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.
     */
    proxy_server: string;
    /**
     * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.
     */
    proxy_server2: string;
    /**
     * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.
     */
    proxy_server3: string;
    /**
     * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
     */
    register_server: string;
    /**
     * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
     */
    register_server2: string;
    /**
     * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
     */
    register_server3: string;
    /**
     * The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server.
     */
    registration_expire_time?: number;
    /**
     * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
     */
    transport_protocol?: 'UDP' | 'TCP' | 'TLS' | 'AUTO';
    /**
     * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
     */
    transport_protocol2?: 'UDP' | 'TCP' | 'TLS' | 'AUTO';
    /**
     * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
     */
    transport_protocol3?: 'UDP' | 'TCP' | 'TLS' | 'AUTO';
    /**
     * The phone number associated with the user in the SIP account.
     */
    user_name: string;
    /**
     * The number to dial for checking voicemail.
     */
    voice_mail: string;
  };
  path: {
    /**
     * Unique Identifier of the SIP Phone. This can be retrieved from the List SIP Phones API.
     */
    phoneId: string;
  };
};

export type UpdateSipPhoneResponse =
  | unknown
  | {
      [key: string]: unknown;
    };

export type UpdateSipPhoneError = unknown;

export type ListSipTrunkNumbersResponse = {
  phone_numbers?: Array<{
    /**
     * Country ID (example: US)
     */
    country?: string;
    /**
     * Phone number
     */
    number?: string;
  }>;
  /**
   * Total number of records returned.
   */
  total_records?: number;
};

export type ListSipTrunkNumbersError = unknown;

export type TrackingfieldListResponse = {
  /**
   * The number of all records available across pages
   */
  total_records?: number;
  /**
   * Array of Tracking Fields
   */
  tracking_fields?: Array<
    {
      /**
       * ID of Tracking Field
       */
      id?: string;
    } & {
      /**
       * Label/ Name for the tracking field.
       */
      field?: string;
      /**
       * Array of recommended values
       */
      recommended_values?: Array<string>;
      /**
       * Tracking Field Required
       */
      required?: boolean;
      /**
       * Tracking Field Visible
       */
      visible?: boolean;
    }
  >;
};

export type TrackingfieldListError = unknown;

export type TrackingfieldCreateData = {
  /**
   * Tracking Field
   */
  body: {
    /**
     * Label/ Name for the tracking field.
     */
    field?: string;
    /**
     * Array of recommended values
     */
    recommended_values?: Array<string>;
    /**
     * Tracking Field Required
     */
    required?: boolean;
    /**
     * Tracking Field Visible
     */
    visible?: boolean;
  };
};

export type TrackingfieldCreateResponse = {
  /**
   * Tracking Field ID
   */
  id?: string;
} & {
  /**
   * Label/ Name for the tracking field.
   */
  field?: string;
  /**
   * Array of recommended values
   */
  recommended_values?: Array<string>;
  /**
   * Tracking Field Required
   */
  required?: boolean;
  /**
   * Tracking Field Visible
   */
  visible?: boolean;
};

export type TrackingfieldCreateError = unknown;

export type TrackingfieldDeleteData = {
  path: {
    /**
     * The Tracking Field ID
     */
    fieldId: string;
  };
};

export type TrackingfieldDeleteResponse = any;

export type TrackingfieldDeleteError = unknown;

export type TrackingfieldGetData = {
  path: {
    /**
     * The Tracking Field ID
     */
    fieldId: string;
  };
};

export type TrackingfieldGetResponse = {
  /**
   * Tracking Field ID
   */
  id?: string;
} & {
  /**
   * Label/ Name for the tracking field.
   */
  field?: string;
  /**
   * Array of recommended values
   */
  recommended_values?: Array<string>;
  /**
   * Tracking Field Required
   */
  required?: boolean;
  /**
   * Tracking Field Visible
   */
  visible?: boolean;
};

export type TrackingfieldGetError = unknown;

export type TrackingfieldUpdateData = {
  body: {
    /**
     * Label/ Name for the tracking field.
     */
    field?: string;
    /**
     * Array of recommended values
     */
    recommended_values?: Array<string>;
    /**
     * Tracking Field Required
     */
    required?: boolean;
    /**
     * Tracking Field Visible
     */
    visible?: boolean;
  };
  path: {
    /**
     * The Tracking Field ID
     */
    fieldId: string;
  };
};

export type TrackingfieldUpdateResponse = any;

export type TrackingfieldUpdateError = unknown;

export type TspResponse = {
  /**
   * Control restriction on account users adding a TSP number outside of account's dial in numbers.
   */
  dial_in_number_unrestricted?: boolean;
  dial_in_numbers?: Array<{
    /**
     * Country Code
     */
    code?: string;
    /**
     * Dial-in number, length is less than 16
     */
    number?: string;
    /**
     * Dial-in number type.
     */
    type?: string;
  }>;
  /**
   * Enable Telephony Service Provider for account users.
   */
  enable?: boolean;
  /**
   * For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account.
   */
  master_account_setting_extended?: boolean;
  /**
   * Control restriction on account users being able to modify their TSP credentials.
   */
  modify_credential_forbidden?: boolean;
  /**
   * Telephony bridge zone
   */
  tsp_bridge?: 'US_TSP_TB' | 'EU_TSP_TB';
  /**
   * Enable TSP feature for account. This has to be enabled to use any other tsp settings/features.
   */
  tsp_enabled?: boolean;
  /**
   * Telephony Service Provider.
   */
  tsp_provider?: string;
};

export type TspError = unknown;

export type TspUpdateData = {
  /**
   * TSP Account
   */
  body: {
    /**
     * Control restriction on account users adding a TSP number outside of account's dial in numbers.
     */
    dial_in_number_unrestricted?: boolean;
    /**
     * Enable 3rd party audio conferencing for account users
     */
    enable?: boolean;
    /**
     * For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account.
     */
    master_account_setting_extended?: boolean;
    /**
     * Control restriction on account users being able to modify their TSP credentials.
     */
    modify_credential_forbidden?: boolean;
    /**
     * Telephony bridge
     */
    tsp_bridge?: 'US_TSP_TB' | 'EU_TSP_TB';
    /**
     * Enable TSP feature for account. This has to be enabled to use any other tsp settings/features.
     */
    tsp_enabled?: boolean;
    /**
     * 3rd party audio conferencing provider
     */
    tsp_provider?: string;
  };
};

export type TspUpdateResponse = any;

export type TspUpdateError = unknown;

export type UsersData = {
  query?: {
    /**
     * Provide a value for this field if you would like to see the following attribute in the response of this API call:<br>
     *
     * `custom_attributes`: Returns custom attributes that are associated with the user.<br>`host_key`: Returns [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key) of the user.
     */
    include_fields?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The page number of the current page in the returned records.
     */
    page_number?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * Unique identifier of the role. Provide this parameter if you would like to filter the response by a specific role. You can retrieve Role IDs from [List Roles](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) API.
     */
    role_id?: string;
    /**
     * User statuses:<br>`active` - Users with an active status.<br>`inactive` - Users who are deactivated.<br>`pending` - Users with a pending status.
     */
    status?: 'active' | 'inactive' | 'pending';
  };
};

export type UsersResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
  /**
   * List of user objects.
   */
  users?: Array<{
    /**
     * The time when user's account was created.
     */
    created_at?: string;
    /**
     * Custom attributes. This field is only returned if users have been assigned custom attributes and if you provided `custom_attributes` as the value of `include_fields` query parameter in the API request.
     */
    custom_attributes?: Array<{
      /**
       * Unique identifier of the custom attribute.
       */
      key?: string;
      /**
       * Name of the custom attribute.
       */
      name?: string;
      /**
       * Value of the custom attribute.
       */
      value?: string;
    }>;
    /**
     * Department, if provided by the user.
     */
    dept?: string;
    /**
     * User's email address.
     */
    email: string;
    /**
     * User's first name.
     */
    first_name?: string;
    /**
     * IDs of groups where the user is a member.
     */
    group_ids?: Array<string>;
    /**
     * The [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key) of the user. This field is only returned if users have been assigned a host key and if you provided `host_key` as the value of `include_fields` query parameter in the API request.
     */
    host_key?: string;
    /**
     * User ID.
     */
    id?: string;
    /**
     * IDs of IM directory groups where the user is a member.
     */
    im_group_ids?: Array<string>;
    /**
     * The last client version that user used to login.
     */
    last_client_version?: string;
    /**
     * User's last login time. There is a three-days buffer period for this field. For example, if user first logged in on 2020-01-01 and then logged out and logged in on 2020-01-02, the value of this field will still reflect the login time of 2020-01-01. However, if the user logs in on 2020-01-04, the value of this field will reflect the corresponding login time since it exceeds the three-day buffer period.
     */
    last_login_time?: string;
    /**
     * User's last name.
     */
    last_name?: string;
    /**
     * This field is returned if the user is enrolled in the [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.
     */
    plan_united_type?: string;
    /**
     * Personal meeting ID of the user.
     */
    pmi?: number;
    /**
     * Unique identifier of the [role](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) assigned to the user.
     */
    role_id?: string;
    /**
     * User's status
     */
    status?: string;
    /**
     * The time zone of the user.
     */
    timezone?: string;
    /**
     * User's plan type.<br>
     * `1` - Basic.<br>
     * `2` - Licensed.<br>
     * `3` - On-prem.<br>
     * `99` - None (this can only be set with `ssoCreate`).
     *
     */
    type: number;
    /**
     * Display whether the user's email address for the Zoom account is verified or not. <br>
     * `1` - Verified user email.<br>
     * `0` - User's email not verified.
     */
    verified?: number;
  }>;
};

export type UsersError = unknown;

export type UserCreateData = {
  /**
   * User
   */
  body: {
    /**
     * Specify how to create the new user: <br>`create` - User will get an email sent from Zoom. There is a confirmation link in this email. The user will then need to use the link to activate their Zoom account. The user can then set or change their password.<br>`autoCreate` - This action is provided for the enterprise customer who has a managed domain. This feature is disabled by default because of the security risk involved in creating a user who does not belong to your domain.<br>`custCreate` - Users created via this option do not have passwords and will not have the ability to log into the Zoom Web Portal or the Zoom Client. These users can still host and join meetings using the `start_url` and `join_url` respectively. To use this option, you must contact the ISV Platform Sales team at isv@zoom.us.<br>`ssoCreate` - This action is provided for the enabled “Pre-provisioning SSO User” option. A user created in this way has no password. If not a basic user, a personal vanity URL using the user name (no domain) of the provisioning email will be generated. If the user name or PMI is invalid or occupied, it will use a random number or random personal vanity URL.
     */
    action: 'create' | 'autoCreate' | 'custCreate' | 'ssoCreate';
    user_info?: {
      /**
       * User email address.
       */
      email: string;
      /**
       * User's first name: cannot contain more than 5 Chinese words.
       */
      first_name?: string;
      /**
       * User's last name: cannot contain more than 5 Chinese words.
       */
      last_name?: string;
      /**
       * User password. Only used for the "autoCreate" function. The password has to have a minimum of 8 characters and maximum of 32 characters. By default (basic requirement), password must have at least one letter (a, b, c..), at least one number (1, 2, 3...) and include both uppercase and lowercase letters. It should not contain only one identical character repeatedly ('11111111' or 'aaaaaaaa') and it cannot contain consecutive characters ('12345678' or 'abcdefgh').
       *
       * **Note:** If the account owner or admin has enabled [enhanced password requirements](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_fa9186e4-6818-4f7a-915c-2e25c19f0acd), the value provided in this field must meet those requirements. These requirements can be retrieved by calling the [Get Account Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) and referring to the `password_requirement` field present in the `security` object.
       */
      password?: string;
      /**
       * User type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
       */
      type: 1 | 2 | 3 | 99;
    };
  };
};

export type UserCreateResponse = {
  /**
   * User email address.
   */
  email?: string;
  /**
   * User's first name.
   */
  first_name?: string;
  /**
   * User ID.
   */
  id?: string;
  /**
   * User's last name.
   */
  last_name?: string;
  /**
   * User type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
   *
   */
  type?: 1 | 2 | 3 | 99;
};

export type UserCreateError = unknown;

export type UserEmailData = {
  query: {
    /**
     * The email address to be verified.
     */
    email: string;
  };
};

export type UserEmailResponse = {
  /**
   * Indicates whether or not the email already exists in Zoom.
   */
  existed_email?: boolean;
};

export type UserEmailError = unknown;

export type UserZakResponse = {
  /**
   * The user's ZAK.
   */
  token?: string;
};

export type UserZakError = unknown;

export type UserVanityNameData = {
  query: {
    /**
     * Personal meeting room name.
     */
    vanity_name: string;
  };
};

export type UserVanityNameResponse = {
  /**
   * If `true`, it indicates that the personal meeting room with the given name exists.<br> `false` - The room name does not exist.
   */
  existed?: boolean;
};

export type UserVanityNameError = unknown;

export type UserDeleteData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query?: {
    /**
     * Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`
     */
    action?: 'disassociate' | 'delete';
    /**
     * Transfer email.
     */
    transfer_email?: string;
    /**
     * Transfer meeting.
     */
    transfer_meeting?: boolean;
    /**
     * Transfer recording.
     */
    transfer_recording?: boolean;
    /**
     * Transfer webinar.
     */
    transfer_webinar?: boolean;
  };
};

export type UserDeleteResponse = any;

export type UserDeleteError = unknown;

export type UserData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query?: {
    /**
     * `0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.
     */
    login_type?: '0' | '1' | '99' | '100' | '101';
  };
};

export type UserResponse = {
  /**
   * User ID.
   */
  id?: string;
} & {
  /**
   * User create time.
   */
  created_at?: string;
  /**
   * Department.
   */
  dept?: string;
  /**
   * User's email address.
   */
  email: string;
  /**
   * User's first name.
   */
  first_name?: string;
  /**
   * User last login client version.
   */
  last_client_version?: string;
  /**
   * User last login time.
   */
  last_login_time?: string;
  /**
   * User's last name.
   */
  last_name?: string;
  /**
   * Personal meeting ID.
   */
  pmi?: number;
  /**
   * User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name.
   */
  role_name?: string;
  /**
   * The time zone of the user.
   */
  timezone?: string;
  /**
   * User's plan type:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
   */
  type: 1 | 2 | 3 | 99;
  /**
   * Use Personal Meeting ID for instant meetings.
   */
  use_pmi?: boolean;
} & {
  /**
   * User's account ID.
   */
  account_id?: string;
  /**
   * CMS ID of user, only enabled for Kaltura integration.
   */
  cms_user_id?: string;
  /**
   * User's company.
   */
  company?: string;
  /**
   * The date and time at which this user was created.
   */
  created_at?: string;
  /**
   * Custom attribute(s) that have been assigned to the user.
   */
  custom_attributes?: {
    /**
     * Identifier for the custom attribute.
     */
    key?: string;
    /**
     * Name of the custom attribute.
     */
    name?: string;
    /**
     * Value of the custom attribute.
     */
    value?: string;
  };
  /**
   * IDs of the web groups user belongs to.
   */
  group_ids?: Array<string>;
  /**
   * User's host key.
   */
  host_key?: string;
  /**
   * IM IDs of the groups user belongs to.
   */
  im_group_ids?: Array<string>;
  jid?: string;
  /**
   * User's job title.
   */
  job_title?: string;
  /**
   * Default language for the Zoom Web Portal.
   */
  language?: string;
  /**
   * User's location.
   */
  location?: string;
  /**
   * Login type.
   *
   * `0` : Facebook
   *
   * `1` : Google
   *
   * `99` : API
   *
   * `100` : ZOOM
   *
   * `101` : SSO
   */
  login_type?: 0 | 1 | 99 | 100 | 101;
  /**
   * The manager for the user.
   */
  manager?: string;
  /**
   * User's personal meeting url.
   */
  personal_meeting_url?: string;
  /**
   * **Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead of this field. <br> User's country for Company Phone Number.
   */
  phone_country?: string;
  /**
   * **Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead of this field. <br> User's phone number.
   */
  phone_number?: string;
  phone_numbers?: {
    /**
     * Country code of the phone number. For example, for United States phone numbers, the value of this field should be "+1".
     */
    code?: string;
    /**
     * [Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `number` field is a Brazil based number, the value of the `country` field should be `BR`.
     */
    country?: string;
    /**
     * Phone number of the user.
     */
    number?: string;
    /**
     * Indicates whether the phone number has been verified by Zoom or not.
     */
    verified?: boolean;
  };
  /**
   * The URL for user's profile picture.
   */
  pic_url?: string;
  /**
   * United plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-united-plans). Only returned if user is enrolled in the Zoom United plan.
   */
  plan_united_type?: string;
  /**
   * Unique identifier of the [role](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) assigned to the user.
   */
  role_id?: string;
  /**
   * Status of user's account.
   */
  status?: 'pending' | 'active' | 'inactive';
  /**
   * Displays `true` if user has enabled PMI for instant meetinsgs, `false` otherwise.
   */
  use_pmi?: boolean;
  /**
   * Personal meeting room URL, if the user has one.
   */
  vanity_url?: string;
  /**
   * Displays whether user is verified or not. <br>
   * `1` - Account verified.<br>
   * `0` - Account not verified.
   */
  verified?: number;
};

export type UserError = unknown;

export type UserUpdateData = {
  /**
   * User
   */
  body: {
    /**
     * Kaltura user ID.
     */
    cms_user_id?: string;
    /**
     * User's company.
     */
    company?: string;
    /**
     * Custom attribute(s) of the user.
     */
    custom_attributes?: {
      /**
       * Identifier for the custom attribute.
       */
      key?: string;
      /**
       * Name of the custom attribute.
       */
      name?: string;
      /**
       * Value of the custom attribute.
       */
      value?: string;
    };
    /**
     * Department for user profile: use for report.
     */
    dept?: string;
    /**
     * User's first name. Cannot contain more than 5 Chinese characters.
     */
    first_name?: string;
    /**
     * Provide unique identifier of the group that you would like to add a [pending user](https://support.zoom.us/hc/en-us/articles/201363183-Managing-users#h_13c87a2a-ecd6-40ad-be61-a9935e660edb) to. The value of this field can be retrieved from [List Groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.
     */
    group_id?: string;
    /**
     * Host key. It should be a 6-10 digit number.
     */
    host_key?: string;
    /**
     * User's job title.
     */
    job_title?: string;
    /**
     * language
     */
    language?: string;
    /**
     * User's last name. Cannot contain more than 5 Chinese characters.
     */
    last_name?: string;
    /**
     * User's location.
     */
    location?: string;
    /**
     * The manager for the user.
     */
    manager?: string;
    /**
     * **Note:** This field has been **deprecated** and will not be supported in the future. Use the **country** field of the **phone_numbers** object instead to select the country for the phone number.
     *
     *
     *
     * [Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `phone_number` field is a Brazil based number, the value of the `phone_country` field should be `BR`.
     */
    phone_country?: string;
    /**
     * **Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead to assign phone number(s) to a user.
     *
     *
     * Phone number of the user. To update a phone number, you must also provide the `phone_country` field.
     */
    phone_number?: string;
    phone_numbers?: {
      /**
       * Country code of the phone number. For example, for United States phone numbers, the value of this field should be "+1".
       */
      code?: string;
      /**
       * [Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `number` field is a Brazil based number, the value of the `country` field should be `BR`.
       */
      country?: string;
      /**
       * Phone number of the user.
       */
      number?: string;
    };
    /**
     * Personal meeting ID: length must be 10.
     */
    pmi?: number;
    /**
     * The time zone ID for a user profile. For this parameter value please refer to the ID value in the [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list.
     */
    timezone?: string;
    /**
     * User types:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
     */
    type?: 1 | 2 | 3 | 99;
    /**
     * Use Personal Meeting ID for instant meetings.
     */
    use_pmi?: boolean;
    /**
     * Personal meeting room name.
     */
    vanity_name?: string;
  };
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query?: {
    /**
     * `0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.
     */
    login_type?: '0' | '1' | '99' | '100' | '101';
  };
};

export type UserUpdateResponse = any;

export type UserUpdateError = unknown;

export type UserAssistantsDeleteData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserAssistantsDeleteResponse = any;

export type UserAssistantsDeleteError = unknown;

export type UserAssistantsData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserAssistantsResponse = {
  /**
   * List of User's assistants.
   */
  assistants?: Array<{
    /**
     * Assistant's email address.
     */
    email?: string;
    /**
     * Assistant's user ID.
     */
    id?: string;
  }>;
};

export type UserAssistantsError = unknown;

export type UserAssistantCreateData = {
  /**
   * User assistant.
   */
  body: {
    /**
     * List of User's assistants.
     */
    assistants?: Array<{
      /**
       * Assistant's email address.
       */
      email?: string;
      /**
       * Assistant's user ID.
       */
      id?: string;
    }>;
  };
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserAssistantCreateResponse = {
  add_at?: string;
  /**
   * User ID.
   */
  ids?: string;
};

export type UserAssistantCreateError = unknown;

export type UserAssistantDeleteData = {
  path: {
    /**
     * Assistant ID.
     */
    assistantId: string;
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserAssistantDeleteResponse = any;

export type UserAssistantDeleteError = unknown;

export type UserEmailUpdateData = {
  /**
   * User email.
   */
  body: {
    /**
     * User’s email. The length should be less than 128 characters.
     */
    email: string;
  };
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserEmailUpdateResponse = any;

export type UserEmailUpdateError = unknown;

export type ListMeetingTemplatesData = {
  path: {
    /**
     * Unique identifier of the user. Retrieve the value of this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.
     */
    userId: string;
  };
};

export type ListMeetingTemplatesResponse = {
  templates?: Array<{
    /**
     * Unique identifier of the template.
     */
    id?: string;
    /**
     * Name of the template.
     */
    name?: string;
    /**
     * Type of the template. The value of this field can be one of the following:<br>
     * `1`: meeting template <br>
     * `2`: admin meeting template
     */
    type?: number;
  }>;
  /**
   * Total records found for this request.
   */
  total_records?: number;
};

export type ListMeetingTemplatesError = unknown;

export type MeetingsData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The page number of the current page in the returned records.
     */
    page_number?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * The meeting types: <br>`scheduled` - This includes all valid past meetings (unexpired), live meetings and upcoming scheduled meetings. It is equivalent to the combined list of "Previous Meetings" and "Upcoming Meetings" displayed in the user's [Meetings page](https://zoom.us/meeting) on the Zoom Web Portal.<br>`live` - All the ongoing meetings.<br>`upcoming` - All upcoming meetings including live meetings.
     */
    type?: 'scheduled' | 'live' | 'upcoming';
  };
};

export type MeetingsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of Meeting objects.
   */
  meetings?: Array<{
    /**
     * Meeting description. The length of agenda gets truncated to 250 characters when you list all meetings for a user. To view the complete agenda of a meeting, retrieve details for a single meeting [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting).
     */
    agenda?: string;
    /**
     * Time of creation.
     */
    created_at?: string;
    /**
     * Meeting duration.
     */
    duration?: number;
    /**
     * ID of the user who is set as the host of the meeting.
     */
    host_id?: string;
    /**
     * Meeting ID - also known as the meeting number in long (int64) format.
     */
    id?: number;
    /**
     * URL using which participants can join a meeting.
     */
    join_url?: string;
    /**
     * [Personal meeting ID](https://support.zoom.us/hc/en-us/articles/201362843-What-is-Personal-Meeting-ID-PMI-and-Personal-Link-). This field is only returned if PMI was used to schedule the meeting.
     */
    pmi?: string;
    /**
     * Meeting start time.
     */
    start_time?: string;
    /**
     * Timezone to format the meeting start time.
     */
    timezone?: string;
    /**
     * Meeting topic.
     */
    topic?: string;
    /**
     * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
     */
    type?: 1 | 2 | 3 | 8;
    /**
     * Unique Meeting ID. Each meeting instance will generate its own Meeting UUID.
     */
    uuid?: string;
  }>;
};

export type MeetingsError = unknown;

export type MeetingCreateData = {
  /**
   * Meeting object.
   */
  body: {
    /**
     * Meeting description.
     */
    agenda?: string;
    /**
     * Meeting duration (minutes). Used for scheduled meetings only.
     */
    duration?: number;
    /**
     * Passcode to join the meeting. By default, passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ *] and can have a maximum of 10 characters.
     *
     * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
     */
    password?: string;
    /**
     * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
     */
    recurrence?: {
      /**
       * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
       */
      end_date_time?: string;
      /**
       * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
       */
      end_times?: number;
      /**
       * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
       *
       * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
       */
      monthly_day?: number;
      /**
       * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
       */
      monthly_week?: -1 | 1 | 2 | 3 | 4;
      /**
       * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
       *
       * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
       */
      monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
      /**
       * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
       *
       * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
       *
       *
       */
      repeat_interval?: number;
      /**
       * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
       */
      type: 1 | 2 | 3;
      /**
       * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
       *
       * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
       */
      weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
    };
    /**
     * If you would like to schedule this meeting for someone else in your account, provide the Zoom user id or email address of the user here.
     */
    schedule_for?: string;
    /**
     * Meeting settings.
     */
    settings?: {
      /**
       * Enable additional [data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) for this meeting. Provide the value in the form of array of country code(s) for the countries which are available as data center regions in the [account settings](https://zoom.us/account/setting) but have been opt out of in the user settings. For instance, let's say that in your account settings, the data center regions that have been selected are Europe, Honkong, Australia, India, Latin America, Japan, China, United States,and Canada. The complete list of available data center regions for your account is: ["EU", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]. In [user settings](https://zoom.us/profile/setting), you have opted out of India(IN) and Japan(TY) for meeting and webinar traffic routing. If you would like, you can still include India and Japan as additional data centers for this meeting using this field. To include India and Japan as additional data center regions, you would provide ["IN", "TY"] as the value.
       */
      additional_data_center_regions?: Array<string>;
      /**
       * If set to `true`, attendees will be allowed to join a meeting from multiple devices.
       *
       * **Note:** This setting is only applied for meetings that have enabled registration.
       */
      allow_multiple_devices?: boolean;
      /**
       * Alternative host's emails or IDs: multiple values separated by a comma.
       */
      alternative_hosts?: string;
      /**
       * Flag to determine whether to send email notifications to alternative hosts, default value is true.
       */
      alternative_hosts_email_notification?: boolean;
      /**
       * The default value is `2`. To enable registration required, set the approval type to `0` or `1`. Values include:<br>
       *
       * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
       */
      approval_type?: 0 | 1 | 2;
      /**
       * Approve or block users from specific regions/countries from joining this meeting.
       *
       */
      approved_or_denied_countries_or_regions?: {
        /**
         * List of countries/regions from where participants can join this meeting.
         */
        approved_list?: Array<string>;
        /**
         * List of countries/regions from where participants can not join this meeting.
         */
        denied_list?: Array<string>;
        /**
         * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
         *
         * `false`: Setting disabled.
         */
        enable?: boolean;
        /**
         * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
         * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
         * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
         */
        method?: 'approve' | 'deny';
      };
      /**
       * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
       */
      audio?: 'both' | 'telephony' | 'voip';
      /**
       * Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the meeting. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains.
       */
      authentication_domains?: string;
      /**
       * Specify the authentication type for users to join a meeting with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings).
       */
      authentication_option?: string;
      /**
       * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
       */
      auto_recording?: 'local' | 'cloud' | 'none';
      /**
       * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
       */
      breakout_room?: {
        /**
         * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
         */
        enable?: boolean;
        /**
         * Create room(s).
         */
        rooms?: Array<{
          /**
           * Name of the breakout room.
           */
          name?: string;
          /**
           * Email addresses of the participants who are to be assigned to the breakout room.
           */
          participants?: Array<string>;
        }>;
      };
      /**
       * Close registration after event date
       */
      close_registration?: boolean;
      /**
       * Host meeting in China.
       */
      cn_meeting?: boolean;
      /**
       * Contact email for registration
       */
      contact_email?: string;
      /**
       * Contact name for registration
       */
      contact_name?: string;
      /**
       * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
       * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
       *
       * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
       */
      encryption_type?: 'enhanced_encryption' | 'e2ee';
      /**
       * List of global dial-in countries
       */
      global_dial_in_countries?: Array<string>;
      /**
       * Start video when the host joins the meeting.
       */
      host_video?: boolean;
      /**
       * Host meeting in India.
       */
      in_meeting?: boolean;
      /**
       * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
       *
       * *  `0`: Allow participant to join anytime.
       * *  `5`: Allow participant to join 5 minutes before meeting start time.
       * * `10`: Allow participant to join 10 minutes before meeting start time.
       */
      jbh_time?: 0 | 5 | 10;
      /**
       * Allow participants to join the meeting before the host starts the meeting. This field can only used for scheduled or recurring meetings.
       *
       * **Note:** If waiting room is enabled, the **join before host** setting will be disabled.
       */
      join_before_host?: boolean;
      /**
       * Language interpretation [settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars#h_01EGGQFD3Q4BST3378SA762MJ1) for meetings.
       *
       * **Note:** This feature is only available on certain Webinar add-on, Education, Business and higher plans. If this feature is not enabled on the host's account, this setting will not be applied for the meeting.
       */
      language_interpretation?: {
        /**
         * Indicate whether or not you would like to enable [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars#h_01EGGQFD3Q4BST3378SA762MJ1) for this meeting.
         */
        enable?: boolean;
        /**
         * Information associated with the interpreter.
         */
        interpreters?: Array<{
          /**
           * Email address of the interpreter.
           */
          email?: string;
          /**
           * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
           *
           * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
           */
          languages?: string;
        }>;
      };
      /**
       * Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`.
       */
      meeting_authentication?: boolean;
      /**
       * Mute participants upon entry.
       */
      mute_upon_entry?: boolean;
      /**
       * Start video when participants join the meeting.
       */
      participant_video?: boolean;
      /**
       * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
       */
      registrants_email_notification?: boolean;
      /**
       * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
       */
      registration_type?: 1 | 2 | 3;
      /**
       * If set to `true`, the registration page for the meeting will include social share buttons.
       *
       * **Note:** This setting is only applied for meetings that have enabled registration.
       */
      show_share_button?: boolean;
      /**
       * Use Personal Meeting ID instead of an automatically generated meeting ID. It can only be used for scheduled meetings, instant meetings and recurring meetings with no fixed time.
       */
      use_pmi?: boolean;
      /**
       * Enable waiting room. Note that if the value of this field is set to `true`, it will override and disable the `join_before_host` setting.
       */
      waiting_room?: boolean;
      /**
       * Add watermark when viewing a shared screen.
       */
      watermark?: boolean;
    };
    /**
     * Meeting start time. We support two formats for `start_time` - local time and GMT.<br>
     *
     * To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`. Example: "2020-03-31T12:02:00Z"
     *
     * To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.
     *
     * The `start_time` should only be used for scheduled and / or recurring webinars with fixed time.
     */
    start_time?: string;
    /**
     * Unique identifier of the **admin meeting template**. To create admin meeting templates, contact the Zoom support team.
     *
     * Use this field if you would like to [schedule the meeting from a admin meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb). You can retrieve the value of this field by calling the [List meeting templates](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/listmeetingtemplates) API.
     */
    template_id?: string;
    /**
     * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats.
     */
    timezone?: string;
    /**
     * Meeting topic.
     */
    topic?: string;
    /**
     * Tracking fields
     */
    tracking_fields?: Array<{
      /**
       * Label of the tracking field.
       */
      field: string;
      /**
       * Tracking fields value
       */
      value?: string;
    }>;
    /**
     * Meeting Type:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
     */
    type?: 1 | 2 | 3 | 8;
  };
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type MeetingCreateResponse = {
  /**
   * Unique identifier of the scheduler who scheduled this meeting on behalf of the host. This field is only returned if you used "schedule_for" option in the [Create a Meeting API request](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate).
   */
  assistant_id?: string;
  /**
   * Email address of the meeting host.
   */
  host_email?: string;
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  id?: number;
  /**
   * URL using which registrants can register for a meeting. This field is only returned for meetings that have enabled registration.
   */
  registration_url?: string;
} & {
  /**
   * Agenda
   */
  agenda?: string;
  /**
   * The date and time at which this meeting was created.
   */
  created_at?: string;
  /**
   * Meeting duration.
   */
  duration?: number;
  /**
   * H.323/SIP room system password
   */
  h323_password?: string;
  /**
   * URL for participants to join the meeting. This URL should only be shared with users that you would like to invite for the meeting.
   */
  join_url?: string;
  /**
   * Array of occurrence objects.
   */
  occurrences?: Array<{
    /**
     * Duration.
     */
    duration?: number;
    /**
     * Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences.
     */
    occurrence_id?: string;
    /**
     * Start time.
     */
    start_time?: string;
    /**
     * Occurrence status.
     */
    status?: string;
  }>;
  /**
   * Meeting password. Password may only contain the following characters: `[a-z A-Z 0-9 @ - _ * !]`
   *
   * If "Require a password when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the password field will be autogenerated in the response even if it is not provided in the API request.
   *
   *
   *
   */
  password?: string;
  /**
   * Personal Meeting Id. Only used for scheduled meetings and recurring meetings with no fixed time.
   */
  pmi?: number;
  /**
   * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
   */
  recurrence?: {
    /**
     * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
     *
     * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
     *
     *
     */
    repeat_interval?: number;
    /**
     * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
  };
  /**
   * Meeting settings.
   */
  settings?: {
    /**
     * Allow attendees to join the meeting from multiple devices. This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host's emails or IDs: multiple values are separated by a semicolon.
     */
    alternative_hosts?: string;
    /**
     * Flag to determine whether to send email notifications to alternative hosts, default value is true.
     */
    alternative_hosts_email_notification?: boolean;
    /**
     * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
     *
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Approve or block users from specific regions/countries from joining this meeting.
     *
     */
    approved_or_denied_countries_or_regions?: {
      /**
       * List of countries/regions from where participants can join this meeting.
       */
      approved_list?: Array<string>;
      /**
       * List of countries/regions from where participants can not join this meeting.
       */
      denied_list?: Array<string>;
      /**
       * `true`: Setting enabled to either allow users or block users from specific regions to join your meetings. <br>
       *
       * `false`: Setting disabled.
       */
      enable?: boolean;
      /**
       * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
       * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
       * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
       */
      method?: 'approve' | 'deny';
    };
    /**
     * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * The participants added here will receive unique meeting invite links and bypass authentication.
     */
    authentication_exception?: Array<{
      /**
       * Email address of the participant.
       */
      email?: string;
      /**
       * Name of the participant.
       */
      name?: string;
    }>;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Meeting authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
     */
    breakout_room?: {
      /**
       * Set the value of this field to `true` if you would like to enable the [breakout room pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4) option.
       */
      enable?: boolean;
      /**
       * Create room(s).
       */
      rooms?: Array<{
        /**
         * Name of the breakout room.
         */
        name?: string;
        /**
         * Email addresses of the participants who are to be assigned to the breakout room.
         */
        participants?: Array<string>;
      }>;
    };
    /**
     * Close registration after event date
     */
    close_registration?: boolean;
    /**
     * Host meeting in China.
     */
    cn_meeting?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Custom keys and values assigned to the meeting.
     */
    custom_keys?: Array<{
      /**
       * Custom key associated with the user.
       */
      key?: string;
      /**
       * Value of the custom key associated with the user.
       */
      value?: string;
    }>;
    /**
     * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
     * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
     *
     * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
     */
    encryption_type?: 'enhanced_encryption' | 'e2ee';
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
     */
    enforce_login_domains?: string;
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Global Dial-in Countries/Regions
     */
    global_dial_in_numbers?: Array<{
      /**
       * City of the number, if any. For example, Chicago.
       */
      city?: string;
      /**
       * Country code. For example, BR.
       */
      country?: string;
      /**
       * Full name of country. For example, Brazil.
       */
      country_name?: string;
      /**
       * Phone number. For example, +1 2332357613.
       */
      number?: string;
      /**
       * Type of number.
       */
      type?: 'toll' | 'tollfree';
    }>;
    /**
     * Start video when the host joins the meeting.
     */
    host_video?: boolean;
    /**
     * Host meeting in India.
     */
    in_meeting?: boolean;
    /**
     * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
     *
     * *  `0`: Allow participant to join anytime.
     * *  `5`: Allow participant to join 5 minutes before meeting start time.
     * * `10`: Allow participant to join 10 minutes before meeting start time.
     */
    jbh_time?: 0 | 5 | 10;
    /**
     * Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.
     */
    join_before_host?: boolean;
    language_interpretation?: {
      enable?: boolean;
      /**
       * Information associated with the interpreter.
       */
      interpreters?: Array<{
        /**
         * Email address of the interpreter.
         */
        email?: string;
        /**
         * Languages for interpretation. The string must contain two [country Ids](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) separated by a comma.
         *
         * For example, if the language is to be interpreted from English to Chinese, the value of this field should be "US,CN".
         */
        languages?: string;
      }>;
    };
    /**
     * `true`- Only authenticated users can join meetings.
     */
    meeting_authentication?: boolean;
    /**
     * Mute participants upon entry.
     */
    mute_upon_entry?: boolean;
    /**
     * Start video when participants join the meeting.
     */
    participant_video?: boolean;
    /**
     * Send confirmation email to registrants upon successful registration.
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the meeting registration page.
     * This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
     */
    show_share_button?: boolean;
    /**
     * Use a personal meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.
     */
    use_pmi?: boolean;
    /**
     * Enable waiting room
     */
    waiting_room?: boolean;
    /**
     * Add watermark when viewing a shared screen.
     */
    watermark?: boolean;
  };
  /**
   * Meeting start date-time in UTC/GMT. Example: "2020-03-31T12:02:00Z"
   */
  start_time?: string;
  /**
   * URL to start the meeting. This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting.
   */
  start_url?: string;
  /**
   * Timezone to format start_time
   */
  timezone?: string;
  /**
   * Meeting topic
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Label of the tracking field.
     */
    field?: string;
    /**
     * Value for the field.
     */
    value?: string;
    /**
     * Indicates whether the [tracking field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields) is visible in the meeting scheduling options in the Zoom Web Portal or not.
     *
     * `true`: Tracking field is visible. <br>
     *
     * `false`: Tracking field is not visible to the users in the meeting options in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only.
     */
    visible?: boolean;
  }>;
  /**
   * Meeting Type
   */
  type?: 1 | 2 | 3 | 8;
};

export type MeetingCreateError = unknown;

export type UserPaCsData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserPaCsResponse = {
  pac_accounts?: Array<{
    /**
     * Conference ID.
     */
    conference_id?: number;
    /**
     * List of dedicated dial-in numbers.
     */
    dedicated_dial_in_number?: Array<{
      /**
       * Country code.
       */
      country?: string;
      /**
       * Dial-in number: length is less than 16.
       */
      number?: string;
    }>;
    /**
     * List of global dial-in numbers.
     */
    global_dial_in_numbers?: Array<{
      /**
       * Country code.
       */
      country?: string;
      /**
       * Dial-in number: length is less than 16.
       */
      number?: string;
    }>;
    /**
     * Listen-Only password: numeric value - length is less than 6.
     */
    listen_only_password?: string;
    /**
     * Participant password: numeric value - length is less than 6.
     */
    participant_password?: string;
  }>;
};

export type UserPaCsError = unknown;

export type UserPasswordData = {
  /**
   * User password.
   */
  body: {
    /**
     * User password. Should be less than 32 characters.
     *
     * **Note:** If the account owner or admin has enabled [enhanced password requirements](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_fa9186e4-6818-4f7a-915c-2e25c19f0acd), the value provided in this field must meet those requirements. These requirements can be retrieved by calling the [Get Account Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) and referring to the `password_requirement` field present in the `security` object.
     */
    password: string;
  };
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserPasswordResponse = any;

export type UserPasswordError = unknown;

export type UserPermissionData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserPermissionResponse = {
  /**
   * List of user permissions.
   */
  permissions?: Array<string>;
};

export type UserPermissionError = unknown;

export type UserPictureData = {
  body: {
    /**
     * The file's path.
     */
    pic_file: Blob | File;
  };
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserPictureResponse = string;

export type UserPictureError = unknown;

export type UpdatePresenceStatusData = {
  body?: {
    /**
     * If you're updating the status to `Do_Not_Disturb`, specify a duration in minutes for which the status should remain as `Do_Not_Disturb`.
     *
     * The default value is 20 minutes and the maximum allowed value is 1440 minutes.
     */
    duration?: number;
    /**
     * Presence status of the user. The value can be set to one of the following:<br>
     * * `Away`
     * * `Do_Not_Disturb`
     * * `Available`
     *
     * Users who are on Zoom Client with a version **lower than 5.3.0** can update the status from:
     * * `Away` to `Do_Not_Disturb`
     * * `Available` to `Do-Not_Disturb`
     *
     * Users who are on **Zoom Client 5.3.0** or higher can update the status from:
     * * `Do_Not_Disturb` to `Away`
     * * `Do_Not_Disturb` to `Available`
     * * `Available` to `Away`
     * * `Away` to `Available`
     */
    status?: 'Do_No_Disturb' | 'Away' | 'Available';
  };
  path: {
    userId: string;
  };
};

export type UpdatePresenceStatusResponse = unknown;

export type UpdatePresenceStatusError = unknown;

export type RecordingsListData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query?: {
    /**
     * The start date in 'yyyy-mm-dd' UTC format for the date range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the “from” and “to” parameters, by default the value of 'from' field will be “2020-06-30” and the value of the 'to' field will be “2020-07-01”.
     *
     * **Note**: The "trash" files cannot be filtered by date range and thus, the "from" and "to" fields should not be used for trash files.
     */
    from?: string;
    /**
     * Query Metadata of Recording if an On-Premise Meeting Connector was used for the meeting.
     */
    mc?: string;
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * End date in 'yyyy-mm-dd' 'yyyy-mm-dd' UTC format.
     */
    to?: string;
    /**
     * Query trash.
     * `true`: List recordings from trash.<br> `false`: Do not list recordings from the trash.<br> The default value is `false`. If you set it to `true`, you can use the `trash_type` property to indicate the type of Cloud recording that you need to retrieve.
     */
    trash?: boolean;
    /**
     * The type of Cloud recording that you would like to retrieve from the trash. The value can be one of the following:<br>
     * `meeting_recordings`: List all meeting recordings from the trash.<br>
     * `recording_file`: List all individual recording files from the trash.
     */
    trash_type?: string;
  };
};

export type RecordingsListResponse = {
  /**
   * Start Date.
   */
  from?: string;
  /**
   * End Date.
   */
  to?: string;
} & {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * The number of records returned within a single API call.
   */
  page_size?: number;
  /**
   * The number of all records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of recordings.
   */
  meetings?: Array<
    {
      /**
       * Unique Identifier of the user account.
       */
      account_id?: string;
      /**
       * Meeting duration.
       */
      duration?: number;
      /**
       * ID of the user set as host of meeting.
       */
      host_id?: string;
      /**
       * Meeting ID - also known as the meeting number.
       */
      id?: string;
      /**
       * Number of recording files returned in the response of this API call.
       */
      recording_count?: string;
      /**
       * The time at which the meeting started.
       */
      start_time?: string;
      /**
       * Meeting topic.
       */
      topic?: string;
      /**
       * Total size of the recording.
       */
      total_size?: string;
      /**
       * Type of the meeting that was recorded.
       *
       * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
       */
      type?: string;
      /**
       * Unique Meeting Identifier. Each instance of the meeting will have its own UUID.
       */
      uuid?: string;
    } & {
      /**
       * List of recording file.
       */
      recording_files?: Array<{
        /**
         * The time at which recording was deleted. Returned in the response only for trash query.
         */
        deleted_time?: string;
        /**
         * The URL using which the recording file can be downloaded. **To access a private or password protected cloud recording of a user in your account, you can use a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the `access_token` query parameter and include this query parameter at the end of the URL as shown in the example.**
         * <br>
         * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ JWT Token }}`
         *
         * **Similarly, if the user has installed your OAuth app that contains recording scope(s), you can also use the user's [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the Cloud Recording.**<br>
         *
         * Example: `https://api.zoom.us/recording/download/{{ Download Path }}?access_token={{ OAuth Access Token }}`
         *
         *
         */
        download_url?: string;
        /**
         * The recording file size.
         */
        file_size?: number;
        /**
         * The recording file type. The value of this field could be one of the following:<br>
         * `MP4`: Video file of the recording.<br>`M4A` Audio-only file of the recording.<br>`TIMELINE`: Timestamp file of the recording in JSON file format. To get a timeline file, the "Add a timestamp to the recording" setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.
         * <br> `TRANSCRIPT`: Transcription file of the recording in VTT format.<br> `CHAT`: A TXT file containing in-meeting chat messages that were sent during the meeting.<br>`CC`: File containing closed captions of the recording in VTT file format.<br>`CSV`: File containing polling data in csv format.
         *
         * <br>
         *
         * A recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:<br>
         * `id`, `status`, `file_size`, `recording_type`, and `play_url`.
         */
        file_type?: string;
        /**
         * The recording file ID. Included in the response of general query.
         */
        id?: string;
        /**
         * The meeting ID.
         */
        meeting_id?: string;
        /**
         * The URL using which a recording file can be played.
         */
        play_url?: string;
        /**
         * The recording end time. Response in general query.
         */
        recording_end?: string;
        /**
         * The recording start time.
         */
        recording_start?: string;
        /**
         * The recording type. The value of this field can be one of the following:<br>`shared_screen_with_speaker_view(CC)`<br>`shared_screen_with_speaker_view`<br>`shared_screen_with_gallery_view`<br>`speaker_view`<br>`gallery_view`<br>`shared_screen`<br>`audio_only`<br>`audio_transcript`<br>`chat_file`<br>`active_speaker`<br>`poll`
         */
        recording_type?: string;
        /**
         * The recording status.
         */
        status?: 'completed';
      }>;
    }
  >;
};

export type RecordingsListError = unknown;

export type UserSchedulersDeleteData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserSchedulersDeleteResponse = any;

export type UserSchedulersDeleteError = unknown;

export type UserSchedulersData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserSchedulersResponse = {
  /**
   * List of users for whom the current user can schedule meetings.
   */
  schedulers?: Array<{
    /**
     * Email address of the scheduler.
     */
    email?: string;
    /**
     * Unique Identifier (User ID) of the Scheduler.
     */
    id?: string;
    /**
     * PMI of the meeting host in long (int64) format.
     */
    pmi?: number;
  }>;
};

export type UserSchedulersError = unknown;

export type UserSchedulerDeleteData = {
  path: {
    /**
     * Scheduler's ID.
     */
    schedulerId: string;
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserSchedulerDeleteResponse = any;

export type UserSchedulerDeleteError = unknown;

export type UserSettingsData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query?: {
    /**
     * Provide the name of the field by which you would like to filter the response. For example, if you provide "host_video" as the value of this field, you will get a response similar to the following:<br>
     * {
     * "schedule_meeting": {
     * "host_video": false
     * }
     * }
     * <br>You can provide multiple values by separating them with commas(example: "host_video,participant_video”).
     */
    custom_query_fields?: string;
    /**
     * `0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.
     */
    login_type?: '0' | '1' | '99' | '100' | '101';
    /**
     * `meeting_authentication`: Use this query parameter to view [meeting authentication configuration](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied on the user's account.<br>`recording_authentication`: Use this query parameter to view [recording authentication configuration](https://support.zoom.us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied on the user's account.<br>
     * `meeting_security`: Use this query parameter to view meeting security settings applied on the user's account.<br>
     */
    option?: 'meeting_authentication' | 'recording_authentication';
  };
};

export type UserSettingsResponse =
  | {
      email_notification?: {
        /**
         * When an alternative host is set or removed from a meeting.
         */
        alternative_host_reminder?: boolean;
        /**
         * When a meeting is cancelled.
         */
        cancel_meeting_reminder?: boolean;
        /**
         * When attendees join meeting before host.
         */
        jbh_reminder?: boolean;
        /**
         * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
         */
        schedule_for_reminder?: boolean;
      };
      feature?: {
        /**
         * Host meeting in China.
         */
        cn_meeting?: boolean;
        /**
         * Host meeting in India.
         */
        in_meeting?: boolean;
        /**
         * Large meeting feature.
         */
        large_meeting?: boolean;
        /**
         * Large meeting capacity: can be 500 or 1000, depending on if the user has a large meeting capacity plan subscription or not.
         */
        large_meeting_capacity?: number;
        /**
         * User’s meeting capacity.
         */
        meeting_capacity?: number;
        /**
         * Webinar feature.
         */
        webinar?: boolean;
        /**
         * Webinar capacity: can be 100, 500, 1000, 3000, 5000 or 10000, depending on if the user has a webinar capacity plan subscription or not.
         */
        webinar_capacity?: number;
        /**
         * Zoom phone feature.
         */
        zoom_phone?: boolean;
      };
      in_meeting?: {
        /**
         * Allow live streaming.
         */
        allow_live_streaming?: boolean;
        /**
         * Allow participants to use annotation tools.
         */
        annotation?: boolean;
        /**
         * Allow host to put attendee on hold.
         *
         * **This field has been deprecated and is no longer supported.**
         */
        attendee_on_hold?: boolean;
        /**
         * Auto save all in-meeting chats.
         */
        auto_saving_chat?: boolean;
        /**
         * Allow host to split meeting participants into separate breakout rooms.
         */
        breakout_room?: boolean;
        /**
         * Enable chat during meeting for all participants.
         */
        chat?: boolean;
        /**
         * Enable closed captions.
         */
        closed_caption?: boolean;
        /**
         * Allow the host to add co-hosts.
         */
        co_host?: boolean;
        /**
         * If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting your real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
         */
        custom_data_center_regions?: boolean;
        /**
         * Allow custom live streaming.
         */
        custom_live_streaming_service?: boolean;
        /**
         * Custom service instructions.
         */
        custom_service_instructions?: string;
        /**
         * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["DE", "NL", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
         *
         */
        data_center_regions?: 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA' | 'DE' | 'NL' | 'LA';
        /**
         * Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).
         */
        e2e_encryption?: boolean;
        /**
         * Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.
         */
        entry_exit_chime?: 'host' | 'all' | 'none';
        /**
         * Allow another user to take control of the camera.
         */
        far_end_camera_control?: boolean;
        /**
         * Enable option to send feedback to Zoom at the end of the meeting.
         */
        feedback?: boolean;
        /**
         * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the user or not.
         */
        file_transfer?: boolean;
        /**
         * Enable group HD video.
         */
        group_hd?: boolean;
        /**
         * Enable non-verbal feedback through screens.
         */
        non_verbal_feedback?: boolean;
        /**
         * Add polls to the meeting controls.
         */
        polling?: boolean;
        /**
         * Enable 1:1 private chat between participants during meetings.
         */
        private_chat?: boolean;
        /**
         * Record and play their own voice.
         */
        record_play_voice?: boolean;
        /**
         * Enable remote control during screensharing.
         */
        remote_control?: boolean;
        /**
         * Allow host to provide 1:1 remote support to a participant.
         */
        remote_support?: boolean;
        /**
         * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the user or not.
         */
        request_permission_to_unmute?: boolean;
        /**
         * Allow host and participants to share their screen or content during meetings
         *
         */
        screen_sharing?: boolean;
        /**
         * Share dual camera (deprecated).
         */
        share_dual_camera?: boolean;
        /**
         * Always show meeting controls during a meeting.
         */
        show_meeting_control_toolbar?: boolean;
        /**
         * Enable virtual background.
         */
        virtual_background?: boolean;
        /**
         * Settings to manage virtual background.
         */
        virtual_background_settings?: {
          /**
           * Allow user to upload custom backgrounds.
           */
          allow_upload_custom?: boolean;
          /**
           * Allow use of videos for virtual backgrounds.
           */
          allow_videos?: boolean;
          /**
           * Enable virtual background.
           */
          enable?: boolean;
          files?: Array<{
            /**
             * Unique identifier of the file.
             */
            id?: string;
            /**
             * Indicates whether or not this file is the default virtual background file.
             */
            is_default?: boolean;
            /**
             * File name.
             */
            name?: string;
            /**
             * File size.
             */
            size?: string;
            /**
             * File type.
             */
            type?: string;
          }>;
        };
        /**
         * Enable Waiting room - if enabled, attendees can only join after host approves.
         */
        waiting_room?: boolean;
        /**
         * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
         * `host`: Only host can share the screen.<br>
         * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
         *
         */
        who_can_share_screen?: 'host' | 'all';
        /**
         * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
         * `host`: Only a host can share the screen when someone else is sharing.<br>
         * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
         *
         */
        who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
        /**
         * Allow livestreaming by host through Workplace by Facebook.
         */
        workplace_by_facebook?: boolean;
      };
      profile?: {
        recording_storage_location?: {
          /**
           * Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.
           *
           * Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
           */
          allowed_values?: Array<string>;
          /**
           * Abbreviated country code.
           */
          value?: string;
        };
      };
      recording?: {
        /**
         * Ask host to confirm the disclaimer.
         */
        ask_host_to_confirm_disclaimer?: boolean;
        /**
         * This field can be used if `recording_disclaimer` is set to true. This field indicates whether or not you would like to ask participants for consent when a recording starts. The value can be one of the following:<br>
         * * `true`: Ask participants for consent when a recording starts. <br>
         * * `false`: Do not ask participants for consent when a recording starts.
         */
        ask_participants_to_consent_disclaimer?: boolean;
        /**
         * Auto delete cloud recordings.
         */
        auto_delete_cmr?: boolean;
        /**
         * A specified number of days of auto delete cloud recordings.
         */
        auto_delete_cmr_days?: number;
        /**
         * Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.
         */
        auto_recording?: 'local' | 'cloud' | 'none';
        /**
         * Cloud recording.
         */
        cloud_recording?: boolean;
        /**
         * Host can pause/stop the auto recording in the cloud.
         */
        host_pause_stop_recording?: boolean;
        /**
         * Setting to allow cloud recording access only from specific IP address ranges.
         *
         */
        ip_address_access_control?: {
          /**
           * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
           *
           *
           */
          enable?: boolean;
          /**
           * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
           *
           * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
           *
           *
           */
          ip_addresses_or_ranges?: string;
        };
        /**
         * Local recording.
         */
        local_recording?: boolean;
        /**
         * Record an audio only file.
         */
        record_audio_file?: boolean;
        /**
         * Record the gallery view.
         */
        record_gallery_view?: boolean;
        /**
         * Record the active speaker view.
         */
        record_speaker_view?: boolean;
        /**
         * Audio transcript.
         */
        recording_audio_transcript?: boolean;
        /**
         * Show a disclaimer to participants before a recording starts
         *
         */
        recording_disclaimer?: boolean;
        /**
         * This object represents the minimum passcode requirements set for recordings via Account Recording Settings.
         */
        recording_password_requirement?: {
          /**
           * Indicates whether or not passcode must contain at least one alphabetical letter (a, b, c..).
           */
          have_letter?: boolean;
          /**
           * Indicates whether or not passcode must contain at least one number(1, 2, 3..).
           */
          have_number?: boolean;
          /**
           * Indicates whether or not passcode must contain at least one special character(!, @, #..).
           */
          have_special_character?: boolean;
          /**
           * Minimum required length for the passcode.
           */
          length?: number;
          /**
           * Indicates whether or not passcode must contain only numeric characters.
           */
          only_allow_numeric?: boolean;
        };
        /**
         * Save chat text from the meeting.
         */
        save_chat_text?: boolean;
        /**
         * Show timestamp on video.
         */
        show_timestamp?: boolean;
      };
      schedule_meeting?: {
        /**
         * Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.
         */
        audio_type?: 'both' | 'telephony' | 'voip' | 'thirdParty';
        /**
         * Passcode for already scheduled meetings
         *
         */
        default_password_for_scheduled_meetings?: string;
        /**
         * If the value is set to `true`, the meeting passcode will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the passcode.
         *
         */
        embed_password_in_join_link?: boolean;
        /**
         * Require a passcode for personal meetings if attendees can join before host.
         */
        force_pmi_jbh_password?: boolean;
        /**
         * Start meetings with host video on.
         */
        host_video?: boolean;
        /**
         * Join the meeting before host arrives.
         */
        join_before_host?: boolean;
        /**
         * Account wide meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
         */
        meeting_password_requirement?: {
          consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
          /**
           * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
           *
           */
          have_letter?: boolean;
          /**
           * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
           */
          have_number?: boolean;
          /**
           * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
           */
          have_special_character?: boolean;
          /**
           * If set to `true`, the passcode must include both uppercase and lowercase characters.
           */
          have_upper_and_lower_characters?: boolean;
          /**
           * The minimum length that the meeting/webinar passcode needs to have.
           */
          length?: number;
          /**
           * If set to `true`, the passcode must only contain numbers and no other characters.
           */
          only_allow_numeric?: boolean;
          /**
           * If set to `true`, users will be informed if the provided passcode is weak.
           */
          weak_enhance_detection?: boolean;
        };
        /**
         * Start meetings with participants video on.
         */
        participants_video?: boolean;
        /**
         * Personal Meeting Setting.<br><br>
         * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
         * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
         * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
         *
         *
         *
         */
        personal_meeting?: boolean;
        /**
         * PMI passcode
         *
         */
        pmi_password?: string;
        /**
         * Generate and require passcode for participants joining by phone.
         */
        pstn_password_protected?: boolean;
        /**
         * Require a passcode for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
         *
         */
        require_password_for_instant_meetings?: boolean;
        /**
         * Require a passcode for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
         *
         */
        require_password_for_pmi_meetings?: 'jbh_only' | 'all' | 'none';
        /**
         * Require a passcode for meetings which have already been scheduled
         *
         */
        require_password_for_scheduled_meetings?: boolean;
        /**
         * Require a passcode when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
         *
         */
        require_password_for_scheduling_new_meetings?: boolean;
        /**
         * Use Personal Meeting ID (PMI) when starting an instant meeting
         *
         */
        use_pmi_for_instant_meetings?: boolean;
        /**
         * Use Personal Meeting ID (PMI) when scheduling a meeting
         *
         */
        use_pmi_for_scheduled_meetings?: boolean;
      };
      telephony?: {
        /**
         * Third party audio conference info.
         */
        audio_conference_info?: string;
        /**
         * Show the international numbers link on the invitation email.
         */
        show_international_numbers_link?: boolean;
        /**
         * Indicates where most of the participants call into or call from duriing a meeting.
         */
        telephony_regions?: {
          /**
           * Telephony region options provided by Zoom to select from.
           */
          allowed_values?: Array<string>;
          /**
           * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
           */
          selection_values?: Array<string>;
        };
        /**
         * Third party audio conference.
         */
        third_party_audio?: boolean;
      };
      /**
       * Account Settings: TSP.
       */
      tsp?: {
        /**
         * Call Out
         */
        call_out?: boolean;
        /**
         * Call Out Countries/Regions
         */
        call_out_countries?: Array<unknown>;
        /**
         * Show international numbers link on the invitation email
         */
        show_international_numbers_link?: boolean;
      };
    }
  | (
      | {
          /**
           * Meeting Authentication Options
           */
          authentication_options?: Array<{
            /**
             * Authentication default option
             */
            default_option?: boolean;
            /**
             * Authentication domains
             */
            domains?: string;
            /**
             * Authentication id
             */
            id?: string;
            /**
             * Authentication name
             */
            name?: string;
            /**
             *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
             * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
             * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
             * * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
             */
            type?: 'enforce_login' | 'enforce_login_with_same_account' | 'enforce_login_with_domains';
            /**
             * Authentication visible
             */
            visible?: boolean;
          }>;
          /**
           * Only authenticated users can join meetings
           */
          meeting_authentication?: boolean;
        }
      | {
          /**
           * Authentication Options
           */
          authentication_options?: Array<{
            /**
             * Authentication default option
             */
            default_option?: boolean;
            /**
             * Authentication domians
             */
            domains?: string;
            /**
             * Authentication id
             */
            id?: string;
            /**
             * Authentication name
             */
            name?: string;
            /**
             * Authentication type
             */
            type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
            /**
             * Authentication visible
             */
            visible?: boolean;
          }>;
          /**
           * Only authenticated users can view cloud recordings
           */
          recording_authentication?: boolean;
        }
    )
  | {
      meeting_security?: {
        /**
         * `true`: Require that all meetings are secured with at least one security option.
         *
         * This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
         */
        auto_security?: boolean;
        /**
         * If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
         *
         */
        embed_password_in_join_link?: boolean;
        /**
         * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
         * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
         *
         * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
         */
        encryption_type?: 'enhanced_encryption' | 'e2ee';
        /**
         * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
         */
        end_to_end_encrypted_meetings?: boolean;
        /**
         * If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.
         */
        meeting_password?: boolean;
        /**
         * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
         */
        meeting_password_requirement?: {
          consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
          /**
           * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
           *
           */
          have_letter?: boolean;
          /**
           * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
           */
          have_number?: boolean;
          /**
           * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
           */
          have_special_character?: boolean;
          /**
           * If set to `true`, the passcode must include both uppercase and lowercase characters.
           */
          have_upper_and_lower_characters?: boolean;
          /**
           * The minimum length that the meeting/webinar passcode needs to have.
           */
          length?: number;
          /**
           * If set to `true`, the passcode must only contain numbers and no other characters.
           */
          only_allow_numeric?: boolean;
          /**
           * If set to `true`, users will be informed if the provided passcode is weak.
           */
          weak_enhance_detection?: boolean;
        };
        /**
         * Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.
         */
        phone_password?: boolean;
        /**
         * If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
         *
         */
        pmi_password?: boolean;
        /**
         * Require a passcode for meetings which have already been scheduled.
         *
         */
        require_password_for_scheduled_meeting?: boolean;
        /**
         * Require a passcode for webinars which have already been scheduled.
         *
         */
        require_password_for_scheduled_webinar?: boolean;
        /**
         * When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
         *
         */
        waiting_room?: boolean;
        /**
         * Specify the settings to be applied if waiting room is enabled.
         */
        waiting_room_settings?: {
          /**
           *
           *
           * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
           * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
           */
          participants_to_place_in_waiting_room?: 0 | 1 | 2;
          /**
           * Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
           * `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
           *
           *
           *
           */
          users_who_can_admit_participants_from_waiting_room?: number;
          /**
           * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
           */
          whitelisted_domains_for_waiting_room?: string;
        };
        /**
         * If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
         *
         */
        webinar_password?: boolean;
      };
    };

export type UserSettingsError = unknown;

export type UserSettingsUpdateData = {
  /**
   * User Settings
   */
  body:
    | {
        email_notification?: {
          /**
           * When an alternative host is set or removed from a meeting.
           */
          alternative_host_reminder?: boolean;
          /**
           * When a meeting is cancelled.
           */
          cancel_meeting_reminder?: boolean;
          /**
           * When attendees join meeting before host.
           */
          jbh_reminder?: boolean;
          /**
           * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
           */
          schedule_for_reminder?: boolean;
        };
        feature?: {
          /**
           * Enable [large meeting](https://support.zoom.us/hc/en-us/articles/201362823-What-is-a-Large-Meeting-) feature for the user.
           */
          large_meeting?: boolean;
          /**
           * Set the meeting capacity for the user if the user has **Large meeting** feature enabled. The value for the field can be either 500 or 1000.
           */
          large_meeting_capacity?: number;
          /**
           * Set a user's meeting capacity. User’s meeting capacity denotes the maximum number of participants that can join a meeting scheduled by the user.
           */
          meeting_capacity?: number;
          /**
           * Enable Webinar feature for the user.
           */
          webinar?: boolean;
          /**
           * Set the Webinar capacity for a user who has the Webinar feature enabled. The value of this field can be 100, 500, 1000, 3000, 5000 or 10000.
           */
          webinar_capacity?: number;
          /**
           * Zoom phone feature.
           */
          zoom_phone?: boolean;
        };
        in_meeting?: {
          /**
           * Allow live streaming.
           */
          allow_live_streaming?: boolean;
          /**
           * Allow participants to use annotation tools.
           */
          annotation?: boolean;
          /**
           * Allow host to put attendee on hold.
           *
           * **This field has been deprecated and is no longer supported.**
           */
          attendee_on_hold?: boolean;
          /**
           * Auto save all in-meeting chats.
           */
          auto_saving_chat?: boolean;
          /**
           * Allow host to split meeting participants into separate breakout rooms.
           */
          breakout_room?: boolean;
          /**
           * Enable chat during meeting for all participants.
           */
          chat?: boolean;
          /**
           * Enable closed captions.
           */
          closed_caption?: boolean;
          /**
           * Allow the host to add co-hosts.
           */
          co_host?: boolean;
          /**
           * If set to `true`, you can [select data center regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars) to use for hosting your real-time meeting and webinar traffic. These regions can be provided in the `data_center_regions` field. If set to `false`, the regions cannot be customized and the default regions will be used.
           */
          custom_data_center_regions?: boolean;
          /**
           * Allow custom live streaming.
           */
          custom_live_streaming_service?: boolean;
          /**
           * Custom service instructions.
           */
          custom_service_instructions?: string;
          /**
           * If you have set the value of `custom_data_center_regions` to `true`, specify the data center regions that you would like to opt in to (country codes from among: ["DE", "NL", "HK", "AU", "IN", "LA", "TY", "CN", "US", "CA"]).
           *
           */
          data_center_regions?: 'HK' | 'AU' | 'IN' | 'TY' | 'CN' | 'US' | 'CA' | 'DE' | 'NL' | 'LA';
          /**
           * Zoom requires encryption for all data between the Zoom cloud, Zoom client, and Zoom Room. Require encryption for 3rd party endpoints (H323/SIP).
           */
          e2e_encryption?: boolean;
          /**
           * Play sound when participants join or leave:<br>`host` - When host joins or leaves.<br>`all` - When any participant joins or leaves.<br>`none` - No join or leave sound.
           */
          entry_exit_chime?: 'host' | 'all' | 'none';
          /**
           * Allow another user to take control of the camera.
           */
          far_end_camera_control?: boolean;
          /**
           * Enable option to send feedback to Zoom at the end of the meeting.
           */
          feedback?: boolean;
          /**
           * Indicates whether [in-meeting file transfer](https://support.zoom.us/hc/en-us/articles/209605493-In-meeting-file-transfer) setting has been enabled for the user or not.
           */
          file_transfer?: boolean;
          /**
           * Enable group HD video.
           */
          group_hd?: boolean;
          /**
           * Enable non-verbal feedback through screens.
           */
          non_verbal_feedback?: boolean;
          /**
           * Add polls to the meeting controls.
           */
          polling?: boolean;
          /**
           * Enable 1:1 private chat between participants during meetings.
           */
          private_chat?: boolean;
          /**
           * Record and play their own voice.
           */
          record_play_voice?: boolean;
          /**
           * Enable remote control during screensharing.
           */
          remote_control?: boolean;
          /**
           * Allow host to provide 1:1 remote support to a participant.
           */
          remote_support?: boolean;
          /**
           * Indicates whether the [**Request permission to unmute participants**](https://support.zoom.us/hc/en-us/articles/203435537-Muting-and-unmuting-participants-in-a-meeting#h_01EGK4XFWS1SJGZ71MYGKF7260) option has been enabled for the user or not.
           */
          request_permission_to_unmute?: boolean;
          /**
           * Allow host and participants to share their screen or content during meetings
           *
           */
          screen_sharing?: boolean;
          /**
           * Share dual camera (deprecated).
           */
          share_dual_camera?: boolean;
          /**
           * Always show meeting controls during a meeting.
           */
          show_meeting_control_toolbar?: boolean;
          /**
           * Enable virtual background.
           */
          virtual_background?: boolean;
          /**
           * Settings to manage virtual background.
           */
          virtual_background_settings?: {
            /**
             * Allow user to upload custom backgrounds.
             */
            allow_upload_custom?: boolean;
            /**
             * Allow use of videos for virtual backgrounds.
             */
            allow_videos?: boolean;
            /**
             * Enable virtual background.
             */
            enable?: boolean;
            files?: Array<{
              /**
               * Unique identifier of the file.
               */
              id?: string;
              /**
               * Indicates whether or not this file is the default virtual background file.
               */
              is_default?: boolean;
              /**
               * File name.
               */
              name?: string;
              /**
               * File size.
               */
              size?: string;
              /**
               * File type.
               */
              type?: string;
            }>;
          };
          /**
           * Enable Waiting room - if enabled, attendees can only join after host approves.
           */
          waiting_room?: boolean;
          /**
           * Indicates who can share their screen or content during meetings. The value can be one of the following: <br>
           * `host`: Only host can share the screen.<br>
           * `all`: Both hosts and attendees can share their screen during meetings. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
           *
           */
          who_can_share_screen?: 'host' | 'all';
          /**
           * Indicates who is allowed to start sharing screen when someone else in the meeting is sharing their screen. The value can be one of the following:<br>
           * `host`: Only a host can share the screen when someone else is sharing.<br>
           * `all`: Anyone in the meeting is allowed to start sharing their screen when someone else is sharing. For Webinar, the hosts and panelists can start screen sharing, but not the attendees.
           *
           */
          who_can_share_screen_when_someone_is_sharing?: 'host' | 'all';
          /**
           * Allow livestreaming by host through Workplace by Facebook.
           */
          workplace_by_facebook?: boolean;
        };
        profile?: {
          recording_storage_location?: {
            /**
             * Users can choose the country to store their recorded content. Content can include meeting, webinar, and phone recordings, as well as voicemail, transcripts, and custom greeting prompts. See [Managing the Communications Content storage location](https://support.zoom.us/hc/en-us/articles/360050781131) for details.
             *
             * Provide abbreviated country codes as the value for this field. See the [Countries abbreviation list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) for details.
             */
            allowed_values?: Array<string>;
            /**
             * Abbreviated country code.
             */
            value?: string;
          };
        };
        recording?: {
          /**
           * Ask host to confirm the disclaimer.
           */
          ask_host_to_confirm_disclaimer?: boolean;
          /**
           * This field can be used if `recording_disclaimer` is set to true. This field indicates whether or not you would like to ask participants for consent when a recording starts. The value can be one of the following:<br>
           * * `true`: Ask participants for consent when a recording starts. <br>
           * * `false`: Do not ask participants for consent when a recording starts.
           */
          ask_participants_to_consent_disclaimer?: boolean;
          /**
           * Auto delete cloud recordings.
           */
          auto_delete_cmr?: boolean;
          /**
           * A specified number of days of auto delete cloud recordings.
           */
          auto_delete_cmr_days?: number;
          /**
           * Automatic recording:<br>`local` - Record on local.<br>`cloud` - Record on cloud.<br>`none` - Disabled.
           */
          auto_recording?: 'local' | 'cloud' | 'none';
          /**
           * Cloud recording.
           */
          cloud_recording?: boolean;
          /**
           * Host can pause/stop the auto recording in the cloud.
           */
          host_pause_stop_recording?: boolean;
          /**
           * Setting to allow cloud recording access only from specific IP address ranges.
           *
           */
          ip_address_access_control?: {
            /**
             * If set to `true`, the cloud recordings of this account can only be accessed by the IP addresses defined in the `ip_addresses_or_ranges` property.
             *
             *
             */
            enable?: boolean;
            /**
             * IP addresses or ranges that have access to the cloud recordings. Separate multiple IP ranges with comma. Use n.n.n.n, n.n.n.n/n or n.n.n.n - n.n.n.n syntax where n is a number.
             *
             * Example: `46.33.24.184, 48.99.100.2/25` or `200.181.108.17 - 220.181.108.157`
             *
             *
             */
            ip_addresses_or_ranges?: string;
          };
          /**
           * Local recording.
           */
          local_recording?: boolean;
          /**
           * Record an audio only file.
           */
          record_audio_file?: boolean;
          /**
           * Record the gallery view.
           */
          record_gallery_view?: boolean;
          /**
           * Record the active speaker view.
           */
          record_speaker_view?: boolean;
          /**
           * Audio transcript.
           */
          recording_audio_transcript?: boolean;
          /**
           * Show a disclaimer to participants before a recording starts
           *
           */
          recording_disclaimer?: boolean;
          /**
           * This object represents the minimum passcode requirements set for recordings via Account Recording Settings.
           */
          recording_password_requirement?: {
            /**
             * Indicates whether or not passcode must contain at least one alphabetical letter (a, b, c..).
             */
            have_letter?: boolean;
            /**
             * Indicates whether or not passcode must contain at least one number(1, 2, 3..).
             */
            have_number?: boolean;
            /**
             * Indicates whether or not passcode must contain at least one special character(!, @, #..).
             */
            have_special_character?: boolean;
            /**
             * Minimum required length for the passcode.
             */
            length?: number;
            /**
             * Indicates whether or not passcode must contain only numeric characters.
             */
            only_allow_numeric?: boolean;
          };
          /**
           * Save chat text from the meeting.
           */
          save_chat_text?: boolean;
          /**
           * Show timestamp on video.
           */
          show_timestamp?: boolean;
        };
        schedule_meeting?: {
          /**
           * Determine how participants can join the audio portion of the meeting:<br>`both` - Telephony and VoIP.<br>`telephony` - Audio PSTN telephony only.<br>`voip` - VoIP only.<br>`thirdParty` - Third party audio conference.
           */
          audio_type?: 'both' | 'telephony' | 'voip' | 'thirdParty';
          /**
           * Passcode for already scheduled meetings
           *
           */
          default_password_for_scheduled_meetings?: string;
          /**
           * If the value is set to `true`, the meeting passcode will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the passcode.
           *
           */
          embed_password_in_join_link?: boolean;
          /**
           * Require a passcode for personal meetings if attendees can join before host.
           */
          force_pmi_jbh_password?: boolean;
          /**
           * Start meetings with host video on.
           */
          host_video?: boolean;
          /**
           * Join the meeting before host arrives.
           */
          join_before_host?: boolean;
          /**
           * Account wide meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
           */
          meeting_password_requirement?: {
            consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
            /**
             * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
             *
             */
            have_letter?: boolean;
            /**
             * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
             */
            have_number?: boolean;
            /**
             * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
             */
            have_special_character?: boolean;
            /**
             * If set to `true`, the passcode must include both uppercase and lowercase characters.
             */
            have_upper_and_lower_characters?: boolean;
            /**
             * The minimum length that the meeting/webinar passcode needs to have.
             */
            length?: number;
            /**
             * If set to `true`, the passcode must only contain numbers and no other characters.
             */
            only_allow_numeric?: boolean;
            /**
             * If set to `true`, users will be informed if the provided passcode is weak.
             */
            weak_enhance_detection?: boolean;
          };
          /**
           * Start meetings with participants video on.
           */
          participants_video?: boolean;
          /**
           * Personal Meeting Setting.<br><br>
           * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. <br><br>
           * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
           * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
           *
           *
           *
           */
          personal_meeting?: boolean;
          /**
           * PMI passcode
           *
           */
          pmi_password?: string;
          /**
           * Generate and require passcode for participants joining by phone.
           */
          pstn_password_protected?: boolean;
          /**
           * Require a passcode for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
           *
           */
          require_password_for_instant_meetings?: boolean;
          /**
           * Require a passcode for Personal Meeting ID (PMI). This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
           *
           */
          require_password_for_pmi_meetings?: 'jbh_only' | 'all' | 'none';
          /**
           * Require a passcode for meetings which have already been scheduled
           *
           */
          require_password_for_scheduled_meetings?: boolean;
          /**
           * Require a passcode when scheduling new meetings.This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
           *
           */
          require_password_for_scheduling_new_meetings?: boolean;
          /**
           * Use Personal Meeting ID (PMI) when starting an instant meeting
           *
           */
          use_pmi_for_instant_meetings?: boolean;
          /**
           * Use Personal Meeting ID (PMI) when scheduling a meeting
           *
           */
          use_pmi_for_scheduled_meetings?: boolean;
        };
        telephony?: {
          /**
           * Third party audio conference info.
           */
          audio_conference_info?: string;
          /**
           * Show the international numbers link on the invitation email.
           */
          show_international_numbers_link?: boolean;
          /**
           * Indicates where most of the participants call into or call from duriing a meeting.
           */
          telephony_regions?: {
            /**
             * Telephony regions selected by the account to indicate where most of the participants call into or call from during a meeting.
             */
            selection_values?: Array<string>;
          };
          /**
           * Third party audio conference.
           */
          third_party_audio?: boolean;
        };
        /**
         * Account Settings: TSP.
         */
        tsp?: {
          /**
           * Call Out
           */
          call_out?: boolean;
          /**
           * Call Out Countries/Regions
           */
          call_out_countries?: Array<unknown>;
          /**
           * Show international numbers link on the invitation email
           */
          show_international_numbers_link?: boolean;
        };
      }
    | (
        | {
            /**
             * Meeting Authentication Options
             */
            authentication_option?: {
              /**
               * Authentication action
               */
              action?: 'update' | 'show' | 'hide';
              /**
               * Authentication default option
               */
              default_option?: boolean;
              /**
               * Authentication domains
               */
              domains?: string;
              /**
               * Authentication id
               */
              id?: string;
              /**
               * Authentication name
               */
              name?: string;
              /**
               *  Authentication type. Specify one of the following authentication types for the authentication profile:<br>
               * * `enforce_login`: This option allows any users to join the meeting or webinar, as long as they are signed into their Zoom account.
               * * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can join the meeting or webinar. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.<br>
               * * `enforce_login_with_same_account`: This option allows users to join the meeting or webinar with the same Zoom account.
               */
              type?: 'enforce_login' | 'enforce_login_with_same_account' | 'enforce_login_with_domains';
            };
            /**
             * Only authenticated users can join meetings
             */
            meeting_authentication?: boolean;
          }
        | {
            /**
             * Authentication Options
             */
            authentication_option?: {
              /**
               * Authentication action
               */
              action?: 'update' | 'show' | 'hide';
              /**
               * Authentication default option
               */
              default_option?: boolean;
              /**
               * Authentication domians
               */
              domians?: string;
              /**
               * Authentication id
               */
              id?: string;
              /**
               * Authentication name
               */
              name?: string;
              /**
               * Authentication type
               */
              type?: 'internally' | 'enforce_login' | 'enforce_login_with_domains';
            };
            /**
             * Only authenticated users can view cloud recordings
             */
            recording_authentication?: boolean;
          }
      )
    | {
        meeting_security?: {
          /**
           * `true`: Require that all meetings are secured with at least one security option.
           *
           * This setting can only be disabled by Enterprise, ISV, Business (with more than 100 licenses), and Education accounts. [Learn more](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#meeting-security).
           */
          auto_security?: boolean;
          /**
           * If set to `true`, meeting passcode will be encrypted and included in the invite link to allow participants to join with just one click without having to enter the passcode.
           *
           */
          embed_password_in_join_link?: boolean;
          /**
           * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
           * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
           *
           * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
           */
          encryption_type?: 'enhanced_encryption' | 'e2ee';
          /**
           * Allow use of end-to-end encryption for meetings. If set to `true`, you can specify the encryption type in `encryption_type` field.
           */
          end_to_end_encrypted_meetings?: boolean;
          /**
           * If set to `true`, all instant, and scheduled meetings that users can join via client, or room systems will be passcode-protected. The Personal Meeting ID (PMI) meetings are not included in this setting.
           */
          meeting_password?: boolean;
          /**
           * Meeting/webinar [passcode requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
           */
          meeting_password_requirement?: {
            consecutive_characters_length?: 0 | 4 | 5 | 6 | 7 | 8;
            /**
             * If set to `true`, the passcode must contain at least 1 letter (such as a,b,c...).
             *
             */
            have_letter?: boolean;
            /**
             * If set to `true`, the passcode must contain at least 1 number (such as 1,2,3...).
             */
            have_number?: boolean;
            /**
             * If set to `true`, the passcode must have at least 1 special character (!,@,#...).
             */
            have_special_character?: boolean;
            /**
             * If set to `true`, the passcode must include both uppercase and lowercase characters.
             */
            have_upper_and_lower_characters?: boolean;
            /**
             * The minimum length that the meeting/webinar passcode needs to have.
             */
            length?: number;
            /**
             * If set to `true`, the passcode must only contain numbers and no other characters.
             */
            only_allow_numeric?: boolean;
            /**
             * If set to `true`, users will be informed if the provided passcode is weak.
             */
            weak_enhance_detection?: boolean;
          };
          /**
           * Require passcode for participants joining by phone. If set to `true`, a numeric passcode will be required for participants joining by phone if your meeting has a passcode. For meeting with an alphanumeric passcode, a numeric version will be generated.
           */
          phone_password?: boolean;
          /**
           * If set to `true`, all Personal Meeting ID (PMI) meetings that users can join via client, or room systems will be passcode-protected.
           *
           */
          pmi_password?: boolean;
          /**
           * Require a passcode for meetings which have already been scheduled.
           *
           */
          require_password_for_scheduled_meeting?: boolean;
          /**
           * Require a passcode for webinars which have already been scheduled.
           *
           */
          require_password_for_scheduled_webinar?: boolean;
          /**
           * When participants join a meeting, place them in a waiting room and require the host to admit them individually. Enabling the waiting room automatically disables the setting for allowing participants to join before host.
           *
           */
          waiting_room?: boolean;
          /**
           * Specify the settings to be applied if waiting room is enabled.
           */
          waiting_room_settings?: {
            /**
             *
             *
             * Specify who should be admitted to the waiting room. The value of this field can be one of the following:<br>
             * `0`: All attendees<br> `1`: Users who are not in your account<br> `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in
             */
            participants_to_place_in_waiting_room?: 0 | 1 | 2;
            /**
             * Specify who can admit participants from the waiting room. The value of this field can be one of the following:<br>
             * `0`: Host and co-hosts only<br> `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
             *
             *
             *
             */
            users_who_can_admit_participants_from_waiting_room?: number;
            /**
             * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
             */
            whitelisted_domains_for_waiting_room?: string;
          };
          /**
           * If set to `true`, a passcode will be generated when scheduling a Webinar and participants require the passcode to join the Webinar.
           *
           */
          webinar_password?: boolean;
        };
      };
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query?: {
    option?: 'meeting_authentication' | 'recording_authentication' | 'meeting_secuirty';
  };
};

export type UserSettingsUpdateResponse = any;

export type UserSettingsUpdateError = unknown;

export type DelUserVbData = {
  path: {
    /**
     * Unique identifier of the user. Retrieve the value of this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.
     */
    userId: string;
  };
  query?: {
    /**
     * Provide the id of the file that is to be deleted. To delete multiple files, provide comma separated values for this field.
     */
    file_ids?: string;
  };
};

export type DelUserVbResponse = any;

export type DelUserVbError = unknown;

export type UploadVbuserData = {
  body?: {
    /**
     * Provide the file's path here.
     */
    file?: string;
  };
  path: {
    /**
     * Unique identifier of the user. Retrieve the value for this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.
     */
    userId: string;
  };
};

export type UploadVbuserResponse = {
  /**
   * Unique identifier of the file.
   */
  id?: string;
  /**
   * Indicate whether or not this file is the default virtual background file.
   */
  is_default?: boolean;
  /**
   * File name.
   */
  name?: string;
  /**
   * File size.
   */
  size?: string;
  /**
   * File type.
   */
  type?: string;
};

export type UploadVbuserError = unknown;

export type UserStatusData = {
  /**
   * User status.
   */
  body: {
    /**
     * The action types:<br>`activate` - Activate a deactivated user.<br>`deactivate` - Deactivate a user.
     */
    action: 'activate' | 'deactivate';
  };
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserStatusResponse = unknown | any;

export type UserStatusError = unknown;

export type UserSsoTokenDeleteData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserSsoTokenDeleteResponse = any;

export type UserSsoTokenDeleteError = unknown;

export type UserTokenData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query?: {
    /**
     * Use this field in conjunction with the `type` field where the value of `type` field is `zak`. The value of this field denotes the expiry time of the `zak` token in seconds. For example, if you would like the zak token to be expired after one hour of the token generation, the value of this field should be `3600`.
     */
    ttl?: number;
    /**
     * User token types:<br>`token` - Used for starting meetings with the client SDK. This token expires in 14 days and a new token will be returned after the expiry.<br>`zak` - Used for generating the start meeting URL. The token expiration time is two hours. For API users, the expiration time is 90 days.
     */
    type?: 'token' | 'zak';
  };
};

export type UserTokenResponse = {
  /**
   * User token.
   */
  token?: string;
};

export type UserTokenError = unknown;

export type UserTsPsData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserTsPsResponse = {
  tsp_accounts?: Array<{
    /**
     * Conference code: numeric value, length is less than 16.
     */
    conference_code: string;
    /**
     * List of dial in numbers.
     */
    dial_in_numbers?: Array<{
      /**
       * Country code.
       */
      code?: string;
      /**
       * Country Label, if passed, will display in place of code.
       */
      country_label?: string;
      /**
       * Dial-in number: length is less than 16.
       */
      number?: string;
      /**
       * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>
       * `media_link` - Media link
       */
      type?: 'toll' | 'tollfree' | 'media_link';
    }>;
    /**
     * The ID of the TSP account.
     */
    id?: 1 | 2;
    /**
     * Leader PIN: numeric value, length is less than 16.
     */
    leader_pin: string;
    /**
     * Telephony bridge
     *
     */
    tsp_bridge?: 'US_TSP_TB' | 'EU_TSP_TB';
  }>;
};

export type UserTsPsError = unknown;

export type UserTspCreateData = {
  /**
   * TSP account.
   */
  body: {
    /**
     * Conference code: numeric value, length is less than 16.
     */
    conference_code: string;
    /**
     * List of dial in numbers.
     */
    dial_in_numbers?: Array<{
      /**
       * Country code.
       */
      code?: string;
      /**
       * Country Label, if passed, will display in place of code.
       */
      country_label?: string;
      /**
       * Dial-in number: length is less than 16.
       */
      number?: string;
      /**
       * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>
       * `media_link` - Media link.
       */
      type?: 'toll' | 'tollfree' | 'media_link';
    }>;
    /**
     * Leader PIN: numeric value, length is less than 16.
     */
    leader_pin: string;
    /**
     * Telephony bridge
     */
    tsp_bridge?: 'US_TSP_TB' | 'EU_TSP_TB';
  };
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserTspCreateResponse = {
  /**
   * Conference code: numeric value, length is less than 16.
   */
  conference_code: string;
  /**
   * List of dial in numbers.
   */
  dial_in_numbers?: Array<{
    /**
     * Country code.
     */
    code?: string;
    /**
     * Country Label, if passed, will display in place of code.
     */
    country_label?: string;
    /**
     * Dial-in number: length is less than 16.
     */
    number?: string;
    /**
     * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>
     * `media_link` - Media link.
     */
    type?: 'toll' | 'tollfree' | 'media_link';
  }>;
  /**
   * Leader PIN: numeric value, length is less than 16.
   */
  leader_pin: string;
  /**
   * Telephony bridge
   */
  tsp_bridge?: 'US_TSP_TB' | 'EU_TSP_TB';
};

export type UserTspCreateError = unknown;

export type TspUrlUpdateData = {
  /**
   * Global dial-in URL of the user.
   */
  body?: {
    /**
     * The global dial-in URL for a TSP enabled account. The URL must be valid with a max-length of 512 characters.
     */
    audio_url?: string;
  };
  path: {
    /**
     * The userId or email address of the user.
     */
    userId: string;
  };
};

export type TspUrlUpdateResponse = any;

export type TspUrlUpdateError = unknown;

export type UserTspDeleteData = {
  path: {
    /**
     * TSP account ID.
     */
    tspId: 1 | 2;
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserTspDeleteResponse = any;

export type UserTspDeleteError = unknown;

export type UserTspData = {
  path: {
    /**
     * TSP account ID.
     */
    tspId: 1 | 2;
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserTspResponse = {
  /**
   * Conference code: numeric value, length is less than 16.
   */
  conference_code: string;
  /**
   * List of dial in numbers.
   */
  dial_in_numbers?: Array<{
    /**
     * Country code.
     */
    code?: string;
    /**
     * Country Label, if passed, will display in place of code.
     */
    country_label?: string;
    /**
     * Dial-in number: length is less than 16.
     */
    number?: string;
    /**
     * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number. <br> `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number.
     */
    type?: 'toll' | 'tollfree' | 'media_link';
  }>;
  /**
   * The ID of the TSP account.
   */
  id?: number;
  /**
   * Leader PIN: numeric value, length is less than 16.
   */
  leader_pin: string;
  /**
   * Telephony bridge
   */
  tsp_bridge?: 'US_TSP_TB' | 'EU_TSP_TB';
};

export type UserTspError = unknown;

export type UserTspUpdateData = {
  /**
   * TSP account.
   */
  body: {
    /**
     * Conference code: numeric value, length is less than 16.
     */
    conference_code: string;
    /**
     * List of dial in numbers.
     */
    dial_in_numbers?: Array<{
      /**
       * Country code.
       */
      code?: string;
      /**
       * Country Label, if passed, will display in place of code.
       */
      country_label?: string;
      /**
       * Dial-in number: length is less than 16.
       */
      number?: string;
      /**
       * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>`media_link` - Media Link Phone Number. It is used for PSTN integration instead of paid bridge number.
       */
      type?: 'toll' | 'tollfree' | 'media_link';
    }>;
    /**
     * Leader PIN: numeric value, length is less than 16.
     */
    leader_pin: string;
    /**
     * Telephony bridge
     */
    tsp_bridge?: 'US_TSP_TB' | 'EU_TSP_TB';
  };
  path: {
    /**
     * TSP account ID.
     */
    tspId: 1 | 2;
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type UserTspUpdateResponse = any;

export type UserTspUpdateError = unknown;

export type ListWebinarTemplatesData = {
  path: {
    userId: string;
  };
};

export type ListWebinarTemplatesResponse = {
  templates?: Array<{
    /**
     * Unique identifier of the template. If you would like to use this template while scheduling a webinar, you can provide the value of this field in `template_id` field of [Create a Webinar](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate) API.
     */
    id?: string;
    /**
     * Name of the template.
     */
    name?: string;
  }>;
  /**
   * Total number of records returned.
   */
  total_records?: number;
};

export type ListWebinarTemplatesError = unknown;

export type WebinarsData = {
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
  query?: {
    /**
     *
     * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
     *
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
  };
};

export type WebinarsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of webinar objects.
   */
  webinars?: Array<{
    /**
     * Webinar Description. The length of agenda gets truncated to 250 characters when you list all webinars for a user. To view the complete agenda, retrieve details for a single webinar [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar).
     */
    agenda?: string;
    /**
     * Time of webinar creation.
     */
    created_at?: string;
    /**
     * Meeting duration.
     */
    duration?: number;
    /**
     * ID of the host of the webinar.
     */
    host_id?: string;
    /**
     * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
     */
    id?: number;
    /**
     * Join URL of the webinar (using which others can join the webinar).
     */
    join_url?: string;
    /**
     * Scheduled start time of the Webinar.
     */
    start_time?: string;
    /**
     * [Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) for the Webinar.
     */
    timezone?: string;
    /**
     * Meeting topic.
     */
    topic?: string;
    /**
     * Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
     */
    type?: string;
    /**
     * Unique identifier of a Webinar. Each webinar instance will generate its own UUID. Once a Webinar ends, the value of uuid for the same webinar will be different from when it was scheduled.
     */
    uuid?: string;
  }>;
};

export type WebinarsError = unknown;

export type WebinarCreateData = {
  body: {
    /**
     * Webinar description.
     */
    agenda?: string;
    /**
     * Webinar duration (minutes). Used for scheduled webinars only.
     */
    duration?: number;
    /**
     * Webinar passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters.
     *
     * If "Require a passcode when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>
     *
     * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
     *
     *
     *
     *
     */
    password?: string;
    /**
     * Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time.
     */
    recurrence?: {
      /**
       * Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
       */
      end_date_time?: string;
      /**
       * Select how many times the webinar will recur before it is canceled. (Cannot be used with "end_date_time".)
       */
      end_times?: number;
      /**
       * Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.
       *
       * For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
       */
      monthly_day?: number;
      /**
       * Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
       */
      monthly_week?: -1 | 1 | 2 | 3 | 4;
      /**
       * Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
       */
      monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
      /**
       * Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
       *
       * For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months.
       */
      repeat_interval?: number;
      /**
       * Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
       */
      type: 1 | 2 | 3;
      /**
       * Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `"1"` as the value of this field.  <br><br> **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
       *
       * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
       *
       *
       */
      weekly_days?: string;
    };
    /**
     * Create Webinar settings.
     */
    settings?: {
      /**
       * Allow attendees to join from multiple devices.
       */
      allow_multiple_devices?: boolean;
      /**
       * Alternative host emails or IDs. Multiple values separated by comma.
       */
      alternative_hosts?: string;
      /**
       * The default value is `2`. To enable registration required, set the approval type to `0` or `1`.  Values include:<br>
       *
       * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
       */
      approval_type?: 0 | 1 | 2;
      /**
       * Send reminder email to attendees and panelists.
       */
      attendees_and_panelists_reminder_email_notification?: {
        /**
         * * `true`: Send reminder email to attendees and panelists.
         *
         * * `false`: Do not send reminder email to attendees and panelists.
         */
        enable?: boolean;
        /**
         * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
         */
        type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
      };
      /**
       * Determine how participants can join the audio portion of the meeting.
       */
      audio?: 'both' | 'telephony' | 'voip';
      /**
       * Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the Webinar. You can either provide multiple domains, using a comma in between and/or use a wildcard for listing domains.
       */
      authentication_domains?: string;
      /**
       * Specify the authentication type for users to join a Webinar with`meeting_authentication` setting set to `true`. The value of this field can be retrieved from the `id` field within `authentication_options` array in the response of [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings).
       */
      authentication_option?: string;
      /**
       * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
       */
      auto_recording?: 'local' | 'cloud' | 'none';
      /**
       * Close registration after event date.
       */
      close_registration?: boolean;
      /**
       * Contact email for registration
       */
      contact_email?: string;
      /**
       * Contact name for registration
       */
      contact_name?: string;
      /**
       * Set the email language to one of the following:
       * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
       */
      email_language?: string;
      /**
       * Only signed-in users can join this meeting.
       *
       * **This field is deprecated and will not be supported in future.** <br><br> Instead of this field, use the "meeting_authentication", "authentication_option" and/or "authentication_domains" fields to establish the authentication mechanism for this Webinar.
       */
      enforce_login?: boolean;
      /**
       * Only signed-in users with specified domains can join meetings.
       *
       * **This field is deprecated and will not be supported in future.** <br><br> Instead of this field, use the "authentication_domains" field for this Webinar.
       */
      enforce_login_domains?: string;
      /**
       * Send follow-up email to absentees.
       */
      follow_up_absentees_email_notification?: {
        /**
         * * `true`: Send follow-up email to absentees.
         *
         * * `false`: Do not send follow-up email to absentees.
         */
        enable?: boolean;
        /**
         * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
         */
        type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
      };
      /**
       * Send follow-up email to attendees.
       */
      follow_up_attendees_email_notification?: {
        /**
         * * `true`: Send follow-up email to attendees.
         *
         * * `false`: Do not send follow-up email to attendees.
         */
        enable?: boolean;
        /**
         * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
         */
        type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
      };
      /**
       * List of global dial-in countries
       */
      global_dial_in_countries?: Array<string>;
      /**
       * Default to HD video.
       */
      hd_video?: boolean;
      /**
       * Start video when host joins webinar.
       */
      host_video?: boolean;
      /**
       * Only [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) users can join meeting if the value of this field is set to `true`.
       */
      meeting_authentication?: boolean;
      /**
       * Make the webinar on-demand
       */
      on_demand?: boolean;
      /**
       * * `true`: Send invitation email to panelists.
       *
       * * `false`: Do not send invitation email to panelists.
       */
      panelists_invitation_email_notification?: boolean;
      /**
       * Start video when panelists join webinar.
       */
      panelists_video?: boolean;
      /**
       * Zoom will open a survey page in attendees' browsers after leaving the webinar
       */
      post_webinar_survey?: boolean;
      /**
       * Enable practice session.
       */
      practice_session?: boolean;
      /**
       * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
       */
      question_and_answer?: {
        /**
         * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
         *
         * * `false`: Do not allow anonymous questions.
         */
        allow_anonymous_questions?: boolean;
        /**
         * Indicate whether you want attendees to be able to view answered questions only or view all questions.
         *
         * * `only`: Attendees are able to view answered questions only.
         *
         * *  `all`: Attendees are able to view all questions submitted in the Q&A.
         */
        answer_questions?: 'only' | 'all';
        /**
         * * `true`: Attendees can answer questions or leave a comment in the question thread.
         *
         * * `false`: Attendees can not answer questions or leave a comment in the question thread
         */
        attendees_can_comment?: boolean;
        /**
         * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
         *
         * * `false`: Attendees can not click the thumbs up butoon on questions.
         */
        attendees_can_upvote?: boolean;
        /**
         * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
         *
         * * `false`: Disable Q&A for webinar.
         */
        enable?: boolean;
      };
      /**
       * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
       */
      registrants_email_notification?: boolean;
      /**
       * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
       */
      registrants_restrict_number?: number;
      /**
       * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
       */
      registration_type?: 1 | 2 | 3;
      /**
       * Show social share buttons on the registration page.
       */
      show_share_button?: boolean;
      /**
       * Survey url for post webinar survey
       */
      survey_url?: string;
    };
    /**
     * Webinar start time. We support two formats for `start_time` - local time and GMT.<br>
     *
     * To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.
     *
     * To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.
     *
     * The `start_time` should only be used for scheduled and / or recurring webinars with fixed time.
     */
    start_time?: string;
    /**
     * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats.
     */
    timezone?: string;
    /**
     * Webinar topic.
     */
    topic?: string;
    /**
     * Tracking fields
     */
    tracking_fields?: Array<{
      /**
       * Tracking fields type
       */
      field: string;
      /**
       * Tracking fields value
       */
      value?: string;
    }>;
    /**
     * Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
     */
    type?: 5 | 6 | 9;
  };
  path: {
    /**
     * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
     */
    userId: string;
  };
};

export type WebinarCreateResponse = {
  /**
   * Email address of the meeting host.
   */
  host_email?: string;
  /**
   * ID of the user set as host of the webinar.
   */
  host_id?: string;
  /**
   * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
   */
  id?: number;
  /**
   * Specify whether or not registrants of this Webinar should receieve confirmation emails.
   */
  registrants_confirmation_email?: boolean;
  /**
   * Unique identifier of the Webinar template. Use this field only if you would like to [schedule the webinar using an existing template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates#schedule). The value of this field can be retrieved from [List Webinar Templates](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/listwebinartemplates) API.
   * You must provide the user ID of the host instead of the email address in the `userId` path parameter in order to use a template for scheduling a Webinar.
   */
  template_id?: string;
  /**
   * Unique identifier of a Webinar. Each Webinar instance will generate its own UUID(i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Once a Webinar ends, the value of uuid for the same webinar will be different from when it was scheduled.
   */
  uuid?: string;
} & {
  /**
   * Webinar agenda.
   */
  agenda?: string;
  /**
   * Create time.
   */
  created_at?: string;
  /**
   * Webinar duration.
   */
  duration?: number;
  /**
   * URL to join the Webinar. This URL should only be shared with the users who should be invited to the Webinar.
   */
  join_url?: string;
  /**
   * Array of occurrence objects.
   */
  occurrences?: Array<{
    /**
     * Duration.
     */
    duration?: number;
    /**
     * Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences.
     */
    occurrence_id?: string;
    /**
     * Start time.
     */
    start_time?: string;
    /**
     * Occurrence status.
     */
    status?: string;
  }>;
  /**
   * Webinar passcode.
   *
   * If "Require a passcode when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>
   * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
   *
   *
   *
   *
   *
   *
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time.
   */
  recurrence?: {
    /**
     * Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the webinar will recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months.
     */
    repeat_interval?: number;
    /**
     * Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `"1"` as the value of this field.  <br><br> **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     *
     *
     */
    weekly_days?: string;
  };
  /**
   * Webinar settings.
   */
  settings?: {
    /**
     * Allow attendees to join from multiple devices.
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host emails or IDs. Multiple values separated by comma.
     */
    alternative_hosts?: string;
    /**
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Send reminder email to attendees and panelists.
     */
    attendees_and_panelists_reminder_email_notification?: {
      /**
       * * `true`: Send reminder email to attendees and panelists.
       *
       * * `false`: Do not send reminder email to attendees and panelists.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Determine how participants can join the audio portion of the webinar.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Webinar authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Close registration after event date.
     */
    close_registration?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Set the email language to one of the following:
     * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
     */
    email_language?: string;
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login_domains?: string;
    /**
     * Send follow-up email to absentees.
     */
    follow_up_absentees_email_notification?: {
      /**
       * * `true`: Send follow-up email to absentees.
       *
       * * `false`: Do not send follow-up email to absentees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Send follow-up email to attendees.
     */
    follow_up_attendees_email_notification?: {
      /**
       * * `true`: Send follow-up email to attendees.
       *
       * * `false`: Do not send follow-up email to attendees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Default to HD video.
     */
    hd_video?: boolean;
    /**
     * Start video when host joins webinar.
     */
    host_video?: boolean;
    /**
     * `true`- Only authenticated users can join Webinar.
     */
    meeting_authentication?: boolean;
    /**
     * Send notification email to registrants when the host updates a webinar.
     */
    notify_registrants?: boolean;
    /**
     * Make the webinar on-demand
     */
    on_demand?: boolean;
    /**
     * * `true`: Send invitation email to panelists.
     *
     * * `false`: Do not send invitation email to panelists.
     */
    panelists_invitation_email_notification?: boolean;
    /**
     * Start video when panelists join webinar.
     */
    panelists_video?: boolean;
    /**
     * Zoom will open a survey page in attendees' browsers after leaving the webinar
     */
    post_webinar_survey?: boolean;
    /**
     * Enable practice session.
     */
    practice_session?: boolean;
    /**
     * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
     */
    question_and_answer?: {
      /**
       * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
       *
       * * `false`: Do not allow anonymous questions.
       */
      allow_anonymous_questions?: boolean;
      /**
       * Indicate whether you want attendees to be able to view answered questions only or view all questions.
       *
       * * `only`: Attendees are able to view answered questions only.
       *
       * *  `all`: Attendees are able to view all questions submitted in the Q&A.
       */
      answer_questions?: 'only' | 'all';
      /**
       * * `true`: Attendees can answer questions or leave a comment in the question thread.
       *
       * * `false`: Attendees can not answer questions or leave a comment in the question thread
       */
      attendees_can_comment?: boolean;
      /**
       * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
       *
       * * `false`: Attendees can not click the thumbs up butoon on questions.
       */
      attendees_can_upvote?: boolean;
      /**
       * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
       *
       * * `false`: Disable Q&A for webinar.
       */
      enable?: boolean;
    };
    /**
     * Send confirmation email to registrants
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
     */
    registrants_restrict_number?: number;
    /**
     * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the registration page.
     */
    show_share_button?: boolean;
    /**
     * Survey url for post webinar survey
     */
    survey_url?: string;
  };
  /**
   * Webinar start time in GMT/UTC.
   */
  start_time?: string;
  /**
   * <br><aside>The <code>start_url</code> of a Webinar is a URL using which a host or an alternative host can start the Webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the Webinar.
   *
   * The expiration time for the <code>start_url</code> field listed in the response of [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate) is two hours for all regular users.
   *
   * For users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.
   *
   * For security reasons, to retrieve the latest value for the <code>start_url</code> field programmatically (after expiry), you must call the [Retrieve a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar) and refer to the value of the <code>start_url</code> field in the response.</aside><br><br><br>
   */
  start_url?: string;
  /**
   * Time zone to format start_time.
   */
  timezone?: string;
  /**
   * Webinar topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field?: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
   */
  type?: 5 | 6 | 9;
};

export type WebinarCreateError = unknown;

export type WebinarDeleteData = {
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
  query?: {
    /**
     * `true`: Notify panelists and registrants about the webinar cancellation via email.
     *
     * `false`: Do not send any email notification to webinar registrants and panelists.
     *
     * The default value of this field is `false`.
     */
    cancel_webinar_reminder?: string;
    /**
     * The meeting occurrence ID.
     */
    occurrence_id?: string;
  };
};

export type WebinarDeleteResponse = unknown | any;

export type WebinarDeleteError = unknown;

export type WebinarData = {
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
  query?: {
    /**
     * Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate), you can retrieve the Occurrence ID from the response of the API call.
     */
    occurrence_id?: string;
    /**
     * Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar.
     */
    show_previous_occurrences?: boolean;
  };
};

export type WebinarResponse = {
  /**
   * Email address of the meeting host.
   */
  host_email?: string;
  /**
   * ID of the user set as host of webinar.
   */
  host_id?: string;
  /**
   * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
   */
  id?: number;
  /**
   * Unique Webinar ID. Each Webinar instance will generate its own Webinar UUID (i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). You can retrieve a list of UUIDs from past Webinar instances using [this API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/pastwebinars). Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
   *
   *
   */
  uuid?: string;
} & {
  /**
   * Webinar agenda.
   */
  agenda?: string;
  /**
   * Create time.
   */
  created_at?: string;
  /**
   * Webinar duration.
   */
  duration?: number;
  /**
   * URL to join the Webinar. This URL should only be shared with the users who should be invited to the Webinar.
   */
  join_url?: string;
  /**
   * Array of occurrence objects.
   */
  occurrences?: Array<{
    /**
     * Duration.
     */
    duration?: number;
    /**
     * Occurrence ID: Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences.
     */
    occurrence_id?: string;
    /**
     * Start time.
     */
    start_time?: string;
    /**
     * Occurrence status.
     */
    status?: string;
  }>;
  /**
   * Webinar passcode.
   *
   * If "Require a passcode when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>
   * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
   *
   *
   *
   *
   *
   *
   */
  password?: string;
  /**
   * Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time.
   */
  recurrence?: {
    /**
     * Select a date when the webinar will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
     */
    end_date_time?: string;
    /**
     * Select how many times the webinar will recur before it is canceled. (Cannot be used with "end_date_time".)
     */
    end_times?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state which day in a month, the webinar should recur. The value range is from 1 to 31.
     *
     * For instance, if you would like the webinar to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the webinar to recur once every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
     */
    monthly_day?: number;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state the week of the month when the webinar should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the webinar should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
     */
    monthly_week?: -1 | 1 | 2 | 3 | 4;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `3` to state a specific day in a week when the monthly webinar should recur. To use this field, you must also use the `monthly_week` field. <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     */
    monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    /**
     * Define the interval at which the webinar should recur. For instance, if you would like to schedule a Webinar that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
     *
     * For a daily webinar, the maximum interval you can set is `90` days. For a weekly webinar, the maximum interval that you can set is `12` weeks. For a monthly webinar, the maximum interval that you can set is `3` months.
     */
    repeat_interval?: number;
    /**
     * Recurrence webinar types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
     */
    type: 1 | 2 | 3;
    /**
     * Use this field **only if you're scheduling a recurring webinar of type** `2` to state which day(s) of the week the webinar should repeat. <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `"1"` as the value of this field.  <br><br> **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
     *
     * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
     *
     *
     */
    weekly_days?: string;
  };
  /**
   * Webinar settings.
   */
  settings?: {
    /**
     * Allow attendees to join from multiple devices.
     */
    allow_multiple_devices?: boolean;
    /**
     * Alternative host emails or IDs. Multiple values separated by comma.
     */
    alternative_hosts?: string;
    /**
     * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
     */
    approval_type?: 0 | 1 | 2;
    /**
     * Send reminder email to attendees and panelists.
     */
    attendees_and_panelists_reminder_email_notification?: {
      /**
       * * `true`: Send reminder email to attendees and panelists.
       *
       * * `false`: Do not send reminder email to attendees and panelists.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Determine how participants can join the audio portion of the webinar.
     */
    audio?: 'both' | 'telephony' | 'voip';
    /**
     * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
     */
    authentication_domains?: string;
    /**
     * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
     */
    authentication_name?: string;
    /**
     * Webinar authentication option id.
     */
    authentication_option?: string;
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     */
    auto_recording?: 'local' | 'cloud' | 'none';
    /**
     * Close registration after event date.
     */
    close_registration?: boolean;
    /**
     * Contact email for registration
     */
    contact_email?: string;
    /**
     * Contact name for registration
     */
    contact_name?: string;
    /**
     * Set the email language to one of the following:
     * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
     */
    email_language?: string;
    /**
     * Only signed in users can join this meeting.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login?: boolean;
    /**
     * Only signed in users with specified domains can join meetings.
     *
     * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
     */
    enforce_login_domains?: string;
    /**
     * Send follow-up email to absentees.
     */
    follow_up_absentees_email_notification?: {
      /**
       * * `true`: Send follow-up email to absentees.
       *
       * * `false`: Do not send follow-up email to absentees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * Send follow-up email to attendees.
     */
    follow_up_attendees_email_notification?: {
      /**
       * * `true`: Send follow-up email to attendees.
       *
       * * `false`: Do not send follow-up email to attendees.
       */
      enable?: boolean;
      /**
       * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
       */
      type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    };
    /**
     * List of global dial-in countries
     */
    global_dial_in_countries?: Array<string>;
    /**
     * Default to HD video.
     */
    hd_video?: boolean;
    /**
     * Start video when host joins webinar.
     */
    host_video?: boolean;
    /**
     * `true`- Only authenticated users can join Webinar.
     */
    meeting_authentication?: boolean;
    /**
     * Send notification email to registrants when the host updates a webinar.
     */
    notify_registrants?: boolean;
    /**
     * Make the webinar on-demand
     */
    on_demand?: boolean;
    /**
     * * `true`: Send invitation email to panelists.
     *
     * * `false`: Do not send invitation email to panelists.
     */
    panelists_invitation_email_notification?: boolean;
    /**
     * Start video when panelists join webinar.
     */
    panelists_video?: boolean;
    /**
     * Zoom will open a survey page in attendees' browsers after leaving the webinar
     */
    post_webinar_survey?: boolean;
    /**
     * Enable practice session.
     */
    practice_session?: boolean;
    /**
     * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
     */
    question_and_answer?: {
      /**
       * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
       *
       * * `false`: Do not allow anonymous questions.
       */
      allow_anonymous_questions?: boolean;
      /**
       * Indicate whether you want attendees to be able to view answered questions only or view all questions.
       *
       * * `only`: Attendees are able to view answered questions only.
       *
       * *  `all`: Attendees are able to view all questions submitted in the Q&A.
       */
      answer_questions?: 'only' | 'all';
      /**
       * * `true`: Attendees can answer questions or leave a comment in the question thread.
       *
       * * `false`: Attendees can not answer questions or leave a comment in the question thread
       */
      attendees_can_comment?: boolean;
      /**
       * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
       *
       * * `false`: Attendees can not click the thumbs up butoon on questions.
       */
      attendees_can_upvote?: boolean;
      /**
       * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
       *
       * * `false`: Disable Q&A for webinar.
       */
      enable?: boolean;
    };
    /**
     * Send confirmation email to registrants
     */
    registrants_confirmation_email?: boolean;
    /**
     * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
     */
    registrants_email_notification?: boolean;
    /**
     * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
     */
    registrants_restrict_number?: number;
    /**
     * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
     */
    registration_type?: 1 | 2 | 3;
    /**
     * Show social share buttons on the registration page.
     */
    show_share_button?: boolean;
    /**
     * Survey url for post webinar survey
     */
    survey_url?: string;
  };
  /**
   * Webinar start time in GMT/UTC.
   */
  start_time?: string;
  /**
   * <br><aside>The <code>start_url</code> of a Webinar is a URL using which a host or an alternative host can start the Webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the Webinar.
   *
   * The expiration time for the <code>start_url</code> field listed in the response of [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate) is two hours for all regular users.
   *
   * For users created using the <code>custCreate</code> option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the <code>start_url</code> field is 90 days.
   *
   * For security reasons, to retrieve the latest value for the <code>start_url</code> field programmatically (after expiry), you must call the [Retrieve a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar) and refer to the value of the <code>start_url</code> field in the response.</aside><br><br><br>
   */
  start_url?: string;
  /**
   * Time zone to format start_time.
   */
  timezone?: string;
  /**
   * Webinar topic.
   */
  topic?: string;
  /**
   * Tracking fields
   */
  tracking_fields?: Array<{
    /**
     * Tracking fields type
     */
    field?: string;
    /**
     * Tracking fields value
     */
    value?: string;
  }>;
  /**
   * Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
   */
  type?: 5 | 6 | 9;
};

export type WebinarError = unknown;

export type WebinarUpdateData = {
  /**
   * Webinar.
   */
  body: {
    /**
     * Webinar description.
     */
    agenda?: string;
    /**
     * Webinar duration (minutes). Used for scheduled webinar only.
     */
    duration?: number;
    /**
     * [Webinar passcode](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords). By default, passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ * !] and can have a maximum of 10 characters.
     *
     * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API.
     *
     * If "**Require a passcode when scheduling new meetings**" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. <br><br>
     *
     *
     *
     *
     *
     *
     *
     *
     */
    password?: string;
    /**
     * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
     */
    recurrence?: {
      /**
       * Select the final date on which the meeting will recur before it is canceled. Should be in UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with "end_times".)
       */
      end_date_time?: string;
      /**
       * Select how many times the meeting should recur before it is canceled. (Cannot be used with "end_date_time".)
       */
      end_times?: number;
      /**
       * Use this field **only if you're scheduling a recurring meeting of type** `3` to state which day in a month, the meeting should recur. The value range is from 1 to 31.
       *
       * For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.
       */
      monthly_day?: number;
      /**
       * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
       */
      monthly_week?: -1 | 1 | 2 | 3 | 4;
      /**
       * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
       *
       * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
       */
      monthly_week_day?: 1 | 2 | 3 | 4 | 5 | 6 | 7;
      /**
       * Define the interval at which the meeting should recur. For instance, if you would like to schedule a meeting that recurs every two months, you must set the value of this field as `2` and the value of the `type` parameter as `3`.
       *
       * For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.
       *
       *
       */
      repeat_interval?: number;
      /**
       * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
       */
      type: 1 | 2 | 3;
      /**
       * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
       *
       * <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
       */
      weekly_days?: '1' | '2' | '3' | '4' | '5' | '6' | '7';
    };
    settings?: {
      /**
       * Allow attendees to join from multiple devices.
       */
      allow_multiple_devices?: boolean;
      /**
       * Alternative host emails or IDs. Multiple values separated by comma.
       */
      alternative_hosts?: string;
      /**
       * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
       */
      approval_type?: 0 | 1 | 2;
      /**
       * Send reminder email to attendees and panelists.
       */
      attendees_and_panelists_reminder_email_notification?: {
        /**
         * * `true`: Send reminder email to attendees and panelists.
         *
         * * `false`: Do not send reminder email to attendees and panelists.
         */
        enable?: boolean;
        /**
         * `0` - No plan.<br>`1` - Send 1 hour before webinar.<br>`2` - Send 1 day before webinar.<br>`3` - Send 1 hour and 1 day before webinar.<br>`4` - Send 1 week before webinar.<br>`5` - Send 1 hour and 1 week before webinar.<br>`6` - Send 1 day and 1 week before webinar.<br>`7` - Send 1 hour, 1 day and 1 week before webinar.
         */
        type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
      };
      /**
       * Determine how participants can join the audio portion of the webinar.
       */
      audio?: 'both' | 'telephony' | 'voip';
      /**
       * If user has configured ["Sign Into Zoom with Specified Domains"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f) option, this will list the domains that are authenticated.
       */
      authentication_domains?: string;
      /**
       * Authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
       */
      authentication_name?: string;
      /**
       * Webinar authentication option id.
       */
      authentication_option?: string;
      /**
       * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
       */
      auto_recording?: 'local' | 'cloud' | 'none';
      /**
       * Close registration after event date.
       */
      close_registration?: boolean;
      /**
       * Contact email for registration
       */
      contact_email?: string;
      /**
       * Contact name for registration
       */
      contact_name?: string;
      /**
       * Set the email language to one of the following:
       * `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
       */
      email_language?: string;
      /**
       * Only signed in users can join this meeting.
       *
       * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
       */
      enforce_login?: boolean;
      /**
       * Only signed in users with specified domains can join meetings.
       *
       * **This field is deprecated and will not be supported in the future.**  <br><br>As an alternative, use the "meeting_authentication", "authentication_option" and "authentication_domains" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
       */
      enforce_login_domains?: string;
      /**
       * Send follow-up email to absentees.
       */
      follow_up_absentees_email_notification?: {
        /**
         * * `true`: Send follow-up email to absentees.
         *
         * * `false`: Do not send follow-up email to absentees.
         */
        enable?: boolean;
        /**
         * `0` - No plan.<br>`1` - Send 1 days after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
         */
        type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
      };
      /**
       * Send follow-up email to attendees.
       */
      follow_up_attendees_email_notification?: {
        /**
         * * `true`: Send follow-up email to attendees.
         *
         * * `false`: Do not send follow-up email to attendees.
         */
        enable?: boolean;
        /**
         * `0` - No plan.<br>`1` - Send 1 day after the scheduled end date.<br>`2` - Send 2 days after the scheduled end date.<br>`3` - Send 3 days after the scheduled end date.<br>`4` - Send 4 days after the scheduled end date.<br>`5` - Send 5 days after the scheduled end date.<br>`6` - Send 6 days after the scheduled end date.<br>`7` - Send 7 days after the scheduled end date.
         */
        type?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
      };
      /**
       * List of global dial-in countries
       */
      global_dial_in_countries?: Array<string>;
      /**
       * Default to HD video.
       */
      hd_video?: boolean;
      /**
       * Start video when host joins webinar.
       */
      host_video?: boolean;
      /**
       * `true`- Only authenticated users can join Webinar.
       */
      meeting_authentication?: boolean;
      /**
       * Send notification email to registrants when the host updates a webinar.
       */
      notify_registrants?: boolean;
      /**
       * Make the webinar on-demand
       */
      on_demand?: boolean;
      /**
       * * `true`: Send invitation email to panelists.
       *
       * * `false`: Do not send invitation email to panelists.
       */
      panelists_invitation_email_notification?: boolean;
      /**
       * Start video when panelists join webinar.
       */
      panelists_video?: boolean;
      /**
       * Zoom will open a survey page in attendees' browsers after leaving the webinar
       */
      post_webinar_survey?: boolean;
      /**
       * Enable practice session.
       */
      practice_session?: boolean;
      /**
       * [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
       */
      question_and_answer?: {
        /**
         * * `true`: Allow participants to send questions without providing their name to the host, co-host, and panelists..
         *
         * * `false`: Do not allow anonymous questions.
         */
        allow_anonymous_questions?: boolean;
        /**
         * Indicate whether you want attendees to be able to view answered questions only or view all questions.
         *
         * * `only`: Attendees are able to view answered questions only.
         *
         * *  `all`: Attendees are able to view all questions submitted in the Q&A.
         */
        answer_questions?: 'only' | 'all';
        /**
         * * `true`: Attendees can answer questions or leave a comment in the question thread.
         *
         * * `false`: Attendees can not answer questions or leave a comment in the question thread
         */
        attendees_can_comment?: boolean;
        /**
         * * `true`: Attendees can click the thumbs up button to bring popular questions to the top of the Q&A window.
         *
         * * `false`: Attendees can not click the thumbs up butoon on questions.
         */
        attendees_can_upvote?: boolean;
        /**
         * * `true`: Enable [Q&A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.) for webinar.
         *
         * * `false`: Disable Q&A for webinar.
         */
        enable?: boolean;
      };
      /**
       * Send confirmation email to registrants
       */
      registrants_confirmation_email?: boolean;
      /**
       * Send email notifications to registrants about approval, cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.
       */
      registrants_email_notification?: boolean;
      /**
       * Restrict number of registrants for a webinar. By default, it is set to `0`. A `0` value means that the restriction option is disabled. Provide a number higher than 0 to restrict the webinar registrants by the that number.
       */
      registrants_restrict_number?: number;
      /**
       * Registration types. Only used for recurring webinars with a fixed time.<br>`1` - Attendees register once and can attend any of the webinar sessions.<br>`2` - Attendees need to register for each session in order to attend.<br>`3` - Attendees register once and can choose one or more sessions to attend.
       */
      registration_type?: 1 | 2 | 3;
      /**
       * Show social share buttons on the registration page.
       */
      show_share_button?: boolean;
      /**
       * Survey url for post webinar survey
       */
      survey_url?: string;
    } & {
      /**
       * Send confirmation email to registrants.
       */
      registrants_confirmation_email?: boolean;
    };
    /**
     * Webinar start time, in the format "yyyy-MM-dd'T'HH:mm:ss'Z'." Should be in GMT time. In the format "yyyy-MM-dd'T'HH:mm:ss." This should be in local time and the timezone should be specified. Only used for scheduled webinars and recurring webinars with a fixed time.
     */
    start_time?: string;
    /**
     * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [time zone](#timezones) list for supported time zones and their formats.
     */
    timezone?: string;
    /**
     * Webinar topic.
     */
    topic?: string;
    /**
     * Tracking fields
     */
    tracking_fields?: Array<{
      /**
       * Tracking fields type
       */
      field?: string;
      /**
       * Tracking fields value
       */
      value?: string;
    }>;
    /**
     * Webinar Types:<br>`5` - webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
     */
    type?: 5 | 6 | 9;
  };
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
  query?: {
    /**
     * Webinar occurrence id. Support change of agenda, start_time, duration, settings: {host_video, panelist_video, hd_video, watermark, auto_recording}
     */
    occurrence_id?: string;
  };
};

export type WebinarUpdateResponse = unknown | any;

export type WebinarUpdateError = unknown;

export type AddBatchWebinarRegistrantsData = {
  body?: {
    /**
     * If a meeting was scheduled with approval_type `1` (manual approval), but you would like to automatically approve the registrants that are added via this API, you can set the value of this field to `true`.
     *
     * You **cannot** use this field to change approval setting for a meeting  that was originally scheduled with approval_type `0` (automatic approval).
     */
    auto_approve?: boolean;
    registrants?: Array<{
      /**
       * Email address of the registrant.
       */
      email: string;
      /**
       * First name of the registrant.
       */
      first_name: string;
      /**
       * Last name of the registrant.
       */
      last_name?: string;
    }>;
  };
  path: {
    /**
     * Unique identifier of the webinar.
     */
    webinarId: string;
  };
};

export type AddBatchWebinarRegistrantsResponse = {
  registrants?: Array<{
    /**
     * Email address of the registrant.
     */
    email?: string;
    /**
     * Unique URL using which registrant can join the webinar.
     */
    join_url?: string;
    /**
     * Unique identifier of the registrant.
     */
    registrant_id?: string;
  }>;
};

export type AddBatchWebinarRegistrantsError = unknown;

export type WebinarPanelistsDeleteData = {
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarPanelistsDeleteResponse = any;

export type WebinarPanelistsDeleteError = unknown;

export type WebinarPanelistsData = {
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarPanelistsResponse = {
  /**
   * List of panelist objects.
   */
  panelists?: Array<
    {
      /**
       * Panelist's ID.
       */
      id?: string;
    } & {
      /**
       * Panelist's email.
       */
      email?: string;
      /**
       * Panelist's full name.
       */
      name?: string;
    } & {
      /**
       * Join URL.
       */
      join_url?: string;
    }
  >;
  /**
   * Total records.
   */
  total_records?: number;
};

export type WebinarPanelistsError = unknown;

export type WebinarPanelistCreateData = {
  body: {
    /**
     * List of panelist objects.
     */
    panelists?: Array<{
      /**
       * Panelist's email.
       */
      email?: string;
      /**
       * Panelist's full name.
       */
      name?: string;
    }>;
  };
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarPanelistCreateResponse =
  | unknown
  | {
      /**
       * Webinar Id.
       */
      id?: string;
      /**
       * The time at which the panelist was added.
       */
      updated_at?: string;
    };

export type WebinarPanelistCreateError = unknown;

export type WebinarPanelistDeleteData = {
  path: {
    /**
     * The panelist ID or panelist email.
     */
    panelistId: number;
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarPanelistDeleteResponse = unknown | any;

export type WebinarPanelistDeleteError = unknown;

export type WebinarPollsData = {
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarPollsResponse = {
  /**
   * Array of Polls
   */
  polls?: Array<
    {
      /**
       * ID of Poll
       */
      id?: string;
      /**
       * Status of Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
       */
      status?: 'notstart' | 'started' | 'ended' | 'sharing';
    } & {
      /**
       * Array of Polls
       */
      questions?: Array<{
        /**
         * Answers to the questions
         */
        answers?: Array<string>;
        /**
         * Question to be asked to the attendees.
         */
        name?: string;
        /**
         * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
         */
        type?: 'single' | 'multiple';
      }>;
      /**
       * Title for the poll.
       */
      title?: string;
    }
  >;
  /**
   * The number of all records available across pages
   */
  total_records?: number;
};

export type WebinarPollsError = unknown;

export type WebinarPollCreateData = {
  /**
   * Webinar poll object
   */
  body: {
    /**
     * Array of Polls
     */
    questions?: Array<{
      /**
       * Answers to the questions
       */
      answers?: Array<string>;
      /**
       * Question to be asked to the attendees.
       */
      name?: string;
      /**
       * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
       */
      type?: 'single' | 'multiple';
    }>;
    /**
     * Title for the poll.
     */
    title?: string;
  };
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarPollCreateResponse = {
  /**
   * Webinar Poll ID
   */
  id?: string;
  /**
   * Status of the Webinar Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
   */
  status?: 'notstart' | 'started' | 'ended' | 'sharing';
} & {
  /**
   * Array of Polls
   */
  questions?: Array<{
    /**
     * Answers to the questions
     */
    answers?: Array<string>;
    /**
     * Question to be asked to the attendees.
     */
    name?: string;
    /**
     * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
     */
    type?: 'single' | 'multiple';
  }>;
  /**
   * Title for the poll.
   */
  title?: string;
};

export type WebinarPollCreateError = unknown;

export type WebinarPollDeleteData = {
  path: {
    /**
     * The poll ID
     */
    pollId: string;
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarPollDeleteResponse = any;

export type WebinarPollDeleteError = unknown;

export type WebinarPollGetData = {
  path: {
    /**
     * The poll ID
     */
    pollId: string;
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarPollGetResponse = {
  /**
   * Webinar Poll ID
   */
  id?: string;
  /**
   * Status of the Webinar Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
   */
  status?: 'notstart' | 'started' | 'ended' | 'sharing';
} & {
  /**
   * Array of Polls
   */
  questions?: Array<{
    /**
     * Answers to the questions
     */
    answers?: Array<string>;
    /**
     * Question to be asked to the attendees.
     */
    name?: string;
    /**
     * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
     */
    type?: 'single' | 'multiple';
  }>;
  /**
   * Title for the poll.
   */
  title?: string;
};

export type WebinarPollGetError = unknown;

export type WebinarPollUpdateData = {
  /**
   * Webinar Poll
   */
  body: {
    /**
     * Array of Polls
     */
    questions?: Array<{
      /**
       * Answers to the questions
       */
      answers?: Array<string>;
      /**
       * Question to be asked to the attendees.
       */
      name?: string;
      /**
       * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
       */
      type?: 'single' | 'multiple';
    }>;
    /**
     * Title for the poll.
     */
    title?: string;
  };
  path: {
    /**
     * The poll ID
     */
    pollId: string;
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarPollUpdateResponse = any;

export type WebinarPollUpdateError = unknown;

export type WebinarRegistrantsData = {
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
  query?: {
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    next_page_token?: string;
    /**
     * The meeting occurrence ID.
     */
    occurrence_id?: string;
    /**
     *
     * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
     *
     * The page number of the current page in the returned records.
     */
    page_number?: number;
    /**
     * The number of records returned within a single API call.
     */
    page_size?: number;
    /**
     * The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.
     */
    status?: 'pending' | 'approved' | 'denied';
    /**
     * The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details.
     */
    tracking_source_id?: string;
  };
};

export type WebinarRegistrantsResponse = {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  next_page_token?: string;
  /**
   * The number of pages returned for the request made.
   */
  page_count?: number;
  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * The page number of the current results.
   */
  page_number?: number;
  /**
   * The number of records returned with a single API call.
   */
  page_size?: number;
  /**
   * The total number of all the records available across pages.
   */
  total_records?: number;
} & {
  /**
   * List of registrant objects.
   */
  registrants?: Array<
    {
      /**
       * Registrant ID.
       */
      id?: string;
    } & {
      /**
       * Registrant's address.
       */
      address?: string;
      /**
       * Registrant's city.
       */
      city?: string;
      /**
       * A field that allows registrants to provide any questions or comments that they might have.
       */
      comments?: string;
      /**
       * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
       */
      country?: string;
      /**
       * Custom questions.
       */
      custom_questions?: Array<{
        title?: string;
        value?: string;
      }>;
      /**
       * A valid email address of the registrant.
       */
      email: string;
      /**
       * Registrant's first name.
       */
      first_name: string;
      /**
       * Registrant's Industry.
       */
      industry?: string;
      /**
       * Registrant's job title.
       */
      job_title?: string;
      /**
       * Registrant's last name.
       */
      last_name?: string;
      /**
       * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
       */
      no_of_employees?: string;
      /**
       * Registrant's Organization.
       */
      org?: string;
      /**
       * Registrant's Phone number.
       */
      phone?: string;
      /**
       * This field can be included to gauge interest of webinar attendees towards buying your product or service.
       *
       * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
       */
      purchasing_time_frame?: string;
      /**
       * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
       */
      role_in_purchase_process?: string;
      /**
       * Registrant's State/Province.
       */
      state?: string;
      /**
       * Registrant's Zip/Postal Code.
       */
      zip?: string;
    } & {
      /**
       * The time at which the registrant registered.
       */
      create_time?: string;
      /**
       * The URL using which an approved registrant can join the webinar.
       */
      join_url?: string;
      /**
       * The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar.
       */
      status?: string;
    }
  >;
};

export type WebinarRegistrantsError = unknown;

export type WebinarRegistrantCreateData = {
  body: {
    /**
     * Registrant's address.
     */
    address?: string;
    /**
     * Registrant's city.
     */
    city?: string;
    /**
     * A field that allows registrants to provide any questions or comments that they might have.
     */
    comments?: string;
    /**
     * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
     */
    country?: string;
    /**
     * Custom questions.
     */
    custom_questions?: Array<{
      title?: string;
      value?: string;
    }>;
    /**
     * A valid email address of the registrant.
     */
    email: string;
    /**
     * Registrant's first name.
     */
    first_name: string;
    /**
     * Registrant's Industry.
     */
    industry?: string;
    /**
     * Registrant's job title.
     */
    job_title?: string;
    /**
     * Registrant's last name.
     */
    last_name?: string;
    /**
     * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
     */
    no_of_employees?: string;
    /**
     * Registrant's Organization.
     */
    org?: string;
    /**
     * Registrant's Phone number.
     */
    phone?: string;
    /**
     * This field can be included to gauge interest of webinar attendees towards buying your product or service.
     *
     * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
     */
    purchasing_time_frame?: string;
    /**
     * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
     */
    role_in_purchase_process?: string;
    /**
     * Registrant's State/Province.
     */
    state?: string;
    /**
     * Registrant's Zip/Postal Code.
     */
    zip?: string;
  };
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
  query?: {
    /**
     * Occurrence ID. Get this value from the webinar get API. Multiple values separated by a comma.
     */
    occurrence_ids?: string;
  };
};

export type WebinarRegistrantCreateResponse = {
  /**
   * Webinar ID
   */
  id?: string;
  /**
   * Unique URL for this registrant to join the Webinar. This URL should only be shared with the registrant for whom the API request was made.
   */
  join_url?: string;
  /**
   * Registrant ID
   */
  registrant_id?: string;
  /**
   * Start time
   */
  start_time?: string;
  /**
   * Topic
   */
  topic?: string;
};

export type WebinarRegistrantCreateError = unknown;

export type WebinarRegistrantsQuestionsGetData = {
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarRegistrantsQuestionsGetResponse = {
  /**
   * Array of Registrant Custom Questions.
   */
  custom_questions?: Array<{
    /**
     * An array of answer choices. Can't be used for short answer type.
     */
    answers?: Array<string>;
    /**
     * State whether or not the custom question is required to be answered by a registrant.
     */
    required?: boolean;
    /**
     * Custom question.
     */
    title?: string;
    /**
     * The question-answer type.
     */
    type?: 'short' | 'single_radio' | 'single_dropdown' | 'multiple';
  }>;
  /**
   * Array of registration fields whose values should be provided by registrants during registration.
   */
  questions?: Array<{
    /**
     * Field name
     */
    field_name?:
      | 'last_name'
      | 'address'
      | 'city'
      | 'country'
      | 'zip'
      | 'state'
      | 'phone'
      | 'industry'
      | 'org'
      | 'job_title'
      | 'purchasing_time_frame'
      | 'role_in_purchase_process'
      | 'no_of_employees'
      | 'comments';
    /**
     * State whether the selected fields are required or optional.
     */
    required?: boolean;
  }>;
};

export type WebinarRegistrantsQuestionsGetError = unknown;

export type WebinarRegistrantQuestionUpdateData = {
  /**
   * Webinar Registrant Questions
   */
  body: {
    /**
     * Array of Registrant Custom Questions.
     */
    custom_questions?: Array<{
      /**
       * An array of answer choices. Can't be used for short answer type.
       */
      answers?: Array<string>;
      /**
       * State whether or not the custom question is required to be answered by a registrant.
       */
      required?: boolean;
      /**
       * Custom question.
       */
      title?: string;
      /**
       * The question-answer type.
       */
      type?: 'short' | 'single_radio' | 'single_dropdown' | 'multiple';
    }>;
    /**
     * Array of registration fields whose values should be provided by registrants during registration.
     */
    questions?: Array<{
      /**
       * Field name
       */
      field_name?:
        | 'last_name'
        | 'address'
        | 'city'
        | 'country'
        | 'zip'
        | 'state'
        | 'phone'
        | 'industry'
        | 'org'
        | 'job_title'
        | 'purchasing_time_frame'
        | 'role_in_purchase_process'
        | 'no_of_employees'
        | 'comments';
      /**
       * State whether the selected fields are required or optional.
       */
      required?: boolean;
    }>;
  };
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarRegistrantQuestionUpdateResponse = any;

export type WebinarRegistrantQuestionUpdateError = unknown;

export type WebinarRegistrantStatusData = {
  body: {
    /**
     * Used to approve a registrant, deny a registrant, or cancel a previously approved registrant.
     */
    action: 'approve' | 'cancel' | 'deny';
    /**
     * List of registrants.
     */
    registrants?: Array<{
      /**
       * Registrant's email address.
       */
      email?: string;
      /**
       * Registrant ID
       */
      id?: string;
    }>;
  };
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
  query?: {
    /**
     * The meeting occurrence ID.
     */
    occurrence_id?: string;
  };
};

export type WebinarRegistrantStatusResponse = unknown;

export type WebinarRegistrantStatusError = unknown;

export type DeleteWebinarRegistrantData = {
  path: {
    /**
     * The registrant ID.
     */
    registrantId: string;
    /**
     * The webinar ID.
     */
    webinarId: number;
  };
  query?: {
    /**
     * The webinar occurence ID.
     */
    occurrence_id?: string;
  };
};

export type DeleteWebinarRegistrantResponse = any;

export type DeleteWebinarRegistrantError = unknown;

export type WebinarRegistrantGetData = {
  path: {
    /**
     * The registrant ID.
     */
    registrantId: string;
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
  query?: {
    /**
     * The meeting occurrence ID.
     */
    occurrence_id?: string;
  };
};

export type WebinarRegistrantGetResponse = {
  id?: string;
} & {
  /**
   * Registrant's address.
   */
  address?: string;
  /**
   * Registrant's city.
   */
  city?: string;
  /**
   * A field that allows registrants to provide any questions or comments that they might have.
   */
  comments?: string;
  /**
   * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
   */
  country?: string;
  /**
   * Custom questions.
   */
  custom_questions?: Array<{
    title?: string;
    value?: string;
  }>;
  /**
   * A valid email address of the registrant.
   */
  email: string;
  /**
   * Registrant's first name.
   */
  first_name: string;
  /**
   * Registrant's Industry.
   */
  industry?: string;
  /**
   * Registrant's job title.
   */
  job_title?: string;
  /**
   * Registrant's last name.
   */
  last_name?: string;
  /**
   * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
   */
  no_of_employees?: string;
  /**
   * Registrant's Organization.
   */
  org?: string;
  /**
   * Registrant's Phone number.
   */
  phone?: string;
  /**
   * This field can be included to gauge interest of webinar attendees towards buying your product or service.
   *
   * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
   */
  purchasing_time_frame?: string;
  /**
   * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
   */
  role_in_purchase_process?: string;
  /**
   * Registrant's State/Province.
   */
  state?: string;
  /**
   * Registrant's Zip/Postal Code.
   */
  zip?: string;
} & {
  create_time?: string;
  join_url?: string;
  status?: string;
};

export type WebinarRegistrantGetError = unknown;

export type WebinarStatusData = {
  body: {
    action?: 'end';
  };
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type WebinarStatusResponse = unknown | any;

export type WebinarStatusError = unknown;

export type GetTrackingSourcesData = {
  path: {
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON).
     */
    webinarId: number;
  };
};

export type GetTrackingSourcesResponse = {
  /**
   * The total number of registration records for this Webinar.
   */
  total_records?: number;
  /**
   * Tracking Sources object.
   */
  tracking_sources?: Array<{
    /**
     * Unique Identifier of the tracking source.
     */
    id?: string;
    /**
     * Number of registrations made from this source.
     */
    registration_count?: number;
    /**
     * Name of the source (platform) where the registration URL was shared.
     */
    source_name?: string;
    /**
     * Tracking URL. The URL that was shared for the registration.
     */
    tracking_url?: string;
    /**
     * Number of visitors who visited the registration page from this source.
     */
    visitor_count?: number;
  }>;
};

export type GetTrackingSourcesError = unknown;
