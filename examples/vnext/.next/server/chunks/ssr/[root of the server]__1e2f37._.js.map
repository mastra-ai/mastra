{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/Desktop/code/kepler/future/examples/vnext/examples/vnext/src/app/actions.ts"],"sourcesContent":["'use server';\n\nimport { mastra } from '@/mastra';\n\nexport async function testText(messages: string[]) {\n  const agent = mastra.getAgent('Agent One');\n  console.log({ messages });\n\n  const streamResult = await agent?.text({\n    messages,\n    onStepFinish: step => {\n      console.log({ step });\n    },\n  });\n\n  console.log({ streamResult: JSON.stringify(streamResult) });\n\n  return streamResult?.text;\n}\n\nexport async function testStructuredOutput() {\n  const testAgent = mastra.getAgent('Lasanga agent');\n\n  const recipe = await testAgent.textObject({\n    messages: ['Generate a lasagna recipe for me'],\n    structuredOutput: {\n      recipe: {\n        type: 'object',\n        items: {\n          name: {\n            type: 'string',\n          },\n          ingredients: {\n            type: 'array',\n            items: {\n              type: 'object',\n              items: {\n                name: {\n                  type: 'string',\n                },\n                amount: {\n                  type: 'number',\n                },\n              },\n            },\n          },\n          steps: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    },\n  });\n\n  return recipe?.object;\n}\n\nexport async function testSync() {\n  const syncResult = await mastra.sync('mySync', {\n    name: 'John Doe',\n    foo: 'bar',\n    createdAt: new Date(),\n  });\n\n  console.log({ syncResult });\n  return syncResult;\n}\n\nexport async function testTool() {\n  const tesTool = mastra.getTool('testTool');\n\n  const res = await tesTool.execute({\n    name: 'test',\n    message: 'hello',\n  });\n\n  console.log({\n    res,\n  });\n\n  return res;\n}\n"],"names":[],"mappings":";;;;;;;;IAIsB;IAgBA;IAwCA;IAWA"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/Desktop/code/kepler/future/examples/vnext/examples/vnext/src/components/result.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\nimport { testStructuredOutput, testSync, testText, testTool } from '@/app/actions';\n\nfunction testStream(messages: string[]) {\n  return fetch('/api/chat', {\n    method: 'POST',\n    body: JSON.stringify({ messages }),\n  });\n}\n\nexport default function Result() {\n  const [result, setResult] = useState<string[]>([]);\n  const [objResult, setObjResult] = useState<{ [key: string]: any } | null>(null);\n  const [objSteam, setObjStream] = useState<string[]>([]);\n  const [input, setInput] = useState<string>('');\n  const [textResult, setTextResult] = useState<string | undefined>(undefined);\n\n  async function fetchStream() {\n    const response = await fetch('/api/chat', {\n      method: 'POST',\n      body: JSON.stringify({ messages: [input] }),\n    });\n    const reader = response.body?.getReader();\n    const decoder = new TextDecoder();\n\n    if (!reader) return;\n\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) break;\n\n      const text = decoder.decode(value);\n      setResult(prev => [...prev, text]);\n    }\n  }\n\n  async function fetchObjectStream() {\n    const response: any = await fetch('/api/object-stream', {\n      method: 'GET',\n    });\n    console.log({ response });\n    const reader = response.body?.getReader();\n    const decoder = new TextDecoder();\n\n    if (!reader) return;\n\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) break;\n\n      const text = decoder.decode(value);\n      setObjStream(prev => [...prev, text]);\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <p>Test Text</p>\n        <button className=\"bg-blue-500 text-white p-2 rounded\" onClick={() => testText([input]).then(setTextResult)}>\n          Test Text\n        </button>\n        <p>{textResult}</p>\n\n        <input\n          className=\"border text-black border-gray-300 rounded p-2\"\n          type=\"text\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n        />\n        <button\n          className=\"bg-blue-500 ml-4 text-white p-2 rounded\"\n          onClick={() => {\n            fetchStream();\n          }}\n        >\n          Test Stream\n        </button>\n        <div>\n          {result.map((message, index) => (\n            <div key={index}>{message}</div>\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <p>Test structured output with a lasagna agent that returns ingredients and steps</p>\n        <button\n          className=\"bg-blue-500 text-white p-2 rounded\"\n          onClick={async () => {\n            const obj = await testStructuredOutput();\n            setObjResult(obj);\n          }}\n        >\n          Test strucured output\n        </button>\n        <button\n          className=\"bg-blue-500 ml-4 text-white p-2 rounded\"\n          onClick={() => {\n            fetchObjectStream();\n          }}\n        >\n          Test stream structured output\n        </button>\n        <p>Result:</p>\n        {objResult ? (\n          <pre>\n            <code>{JSON.stringify(objResult, null, 2)}</code>\n          </pre>\n        ) : null}\n        <div>\n          {objSteam.map((message, index) => (\n            <div key={index}>{message}</div>\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <p>Test Sync {`-->`} check logs</p>\n        <button className=\"bg-blue-500 text-white p-2 rounded\" onClick={async () => await testSync()}>\n          Test Sync\n        </button>\n      </div>\n\n      <div>\n        <p>Test Tool {`-->`} check logs</p>\n        <button className=\"bg-blue-500 text-white p-2 rounded\" onClick={async () => await testTool()}>\n          Test Tool\n        </button>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}